#!/bin/bash

set -e

start_configure() {
    local current_controller=$(su "$username" -c "juju controllers --format json | jq -r '.\"current-controller\"'")
    local show_controller=$(su "$username" -c "current_controller=\$(juju controllers --format json | jq -r '.\"current-controller\"'); juju show-controller \$current_controller --show-password --format=json")
    local maas_apikey=$(su "$username" -c "juju show-credentials --show-secrets --client | grep maas-oauth | awk '{print \$2}'")
    local current_cert=$(echo $show_controller | jq -r '."'"$current_controller"'"."details"."ca-cert"')

    local config_content="
# Auto-generated by start_configure
OPENHDC_MAAS_API_URL=\"http://localhost:5240/MAAS\"
OPENHDC_MAAS_API_KEY=\"$maas_apikey\"
OPENHDC_MAAS_API_VERSION=\"2.0\"
OPENHDC_JUJU_CONTROLLER_ADDRESSES=\"$(echo $show_controller | jq -r '."'"$current_controller"'"."details"."api-endpoints"[0]')\"
OPENHDC_JUJU_USERNAME=\"$(echo $show_controller | jq -r '."'"$current_controller"'"."account"."user"')\"
OPENHDC_JUJU_PASSWORD=\"$(echo $show_controller | jq -r '."'"$current_controller"'"."account"."password"')\"
OPENHDC_JUJU_CACERT_PATH=\"/etc/ottersacle/juju.crt\"
OPENHDC_HELM_REPOSITORY_URLS=\"https://charts.bitnami.com/bitnami\"
"
    echo -e "$current_cert" | tee /etc/ottersacle/juju.crt > /dev/null
    echo "$config_content" | tee /etc/ottersacle/ottersacle.conf > /dev/null
    chmod 644 /etc/ottersacle/ottersacle.conf
    chmod 644 /etc/ottersacle/juju.crt
}

main() {
    #if ! command -v juju &> /dev/null; then
    #    echo "Error, can not found juju command line."
    #    exit 1
    #fi

    local juju_dirs=$(find /home/*/.local/share/ -name juju -type d)
    if [ -z juju_dirs ]; then
        echo "Can not found any juju directory."
        exit 1
    fi

    for dir in $juju_dirs; do
        username=$(echo "$dir" | cut -d'/' -f3)
        if id "$username" &>/dev/null; then
            start_configure
            break
        fi
    done

    exit 0
}

main "$@"

# Reload systemd and enable service
systemctl daemon-reload
systemctl enable ottersacle.service

exit 0
