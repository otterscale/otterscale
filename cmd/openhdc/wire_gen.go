// Code generated by Wire. DO NOT EDIT.

//go:generate go run -mod=mod github.com/google/wire/cmd/wire
//go:build !wireinject
// +build !wireinject

package main

import (
	"github.com/openhdc/openhdc"
	"github.com/openhdc/openhdc/internal/app"
	"github.com/openhdc/openhdc/internal/cmd"
	"github.com/openhdc/openhdc/internal/data/juju"
	"github.com/openhdc/openhdc/internal/data/kube"
	"github.com/openhdc/openhdc/internal/data/maas"
	"github.com/openhdc/openhdc/internal/domain/service"
	"github.com/spf13/cobra"
)

// Injectors from wire.go:

func wireApp(string2 string, arg []openhdc.ServerOption) (*cobra.Command, func(), error) {
	kubeMap, err := kube.NewKubeMap()
	if err != nil {
		return nil, nil, err
	}
	kubeClient := kube.NewClient(kubeMap)
	kubeApps := kube.NewApps(kubeMap)
	kubeBatch := kube.NewBatch(kubeMap)
	kubeCore := kube.NewCore(kubeMap)
	kubeStorage := kube.NewStorage(kubeMap)
	helmMap, err := kube.NewHelmMap()
	if err != nil {
		return nil, nil, err
	}
	kubeHelm, err := kube.NewHelm(helmMap)
	if err != nil {
		return nil, nil, err
	}
	jujuMap, err := juju.NewJujuMap()
	if err != nil {
		return nil, nil, err
	}
	jujuModel := juju.NewModel(jujuMap)
	jujuClient := juju.NewClient(jujuMap)
	jujuApplication := juju.NewApplication(jujuMap)
	kubeService := service.NewKubeService(kubeClient, kubeApps, kubeBatch, kubeCore, kubeStorage, kubeHelm, jujuModel, jujuClient, jujuApplication)
	kubeApp := app.NewKubeApp(kubeService)
	v, err := maas.New()
	if err != nil {
		return nil, nil, err
	}
	maasServer := maas.NewServer(v)
	maasPackageRepository := maas.NewPackageRepository(v)
	maasBootResource := maas.NewBootResource(v)
	maasFabric := maas.NewFabric(v)
	maasvlan := maas.NewVLAN(v)
	maasSubnet := maas.NewSubnet(v)
	maasipRange := maas.NewIPRange(v)
	maasMachine := maas.NewMachine(v)
	jujuMachine := juju.NewMachine(jujuMap)
	jujuModelConfig := juju.NewModelConfig(jujuMap)
	jujuAction := juju.NewAction(jujuMap)
	nexusService := service.NewNexusService(maasServer, maasPackageRepository, maasBootResource, maasFabric, maasvlan, maasSubnet, maasipRange, maasMachine, jujuClient, jujuMachine, jujuModel, jujuModelConfig, jujuApplication, jujuAction, kubeClient, kubeApps, kubeBatch, kubeCore, kubeStorage, kubeHelm)
	nexusApp := app.NewNexusApp(nexusService)
	command := cmd.New(string2, kubeApp, nexusApp)
	return command, func() {
	}, nil
}
