// Code generated by Wire. DO NOT EDIT.

//go:generate go run -mod=mod github.com/google/wire/cmd/wire
//go:build !wireinject
// +build !wireinject

package main

import (
	"github.com/openhdc/openhdc"
	"github.com/openhdc/openhdc/internal/app"
	"github.com/openhdc/openhdc/internal/cmd"
	"github.com/openhdc/openhdc/internal/data/juju"
	"github.com/openhdc/openhdc/internal/data/maas"
	"github.com/openhdc/openhdc/internal/domain/service"
	"github.com/spf13/cobra"
)

// Injectors from wire.go:

func wireApp(string2 string, arg []openhdc.ServerOption) (*cobra.Command, func(), error) {
	config := maas.NewConfig()
	v, err := maas.New(config)
	if err != nil {
		return nil, nil, err
	}
	maasServer := maas.NewServer(v)
	maasPackageRepository := maas.NewPackageRepository(v)
	maasFabric := maas.NewFabric(v)
	maasvlan := maas.NewVLAN(v)
	maasSubnet := maas.NewSubnet(v)
	maasipRange := maas.NewIPRange(v)
	maasBootResource := maas.NewBootResource(v)
	jujuMachine := juju.NewMachine()
	maasMachine := maas.NewMachine(v)
	simpleConfig, err := juju.NewConfig()
	if err != nil {
		return nil, nil, err
	}
	v2, err := juju.New(simpleConfig)
	if err != nil {
		return nil, nil, err
	}
	jujuModel := juju.NewModel(v2)
	jujuModelConfig := juju.NewModelConfig()
	stackService := service.NewStackService(maasServer, maasPackageRepository, maasFabric, maasvlan, maasSubnet, maasipRange, maasBootResource, jujuMachine, maasMachine, jujuModel, jujuModelConfig)
	stackApp := app.NewStackApp(stackService)
	command := cmd.New(string2, stackApp)
	return command, func() {
	}, nil
}
