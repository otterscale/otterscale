// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.8
// 	protoc        v6.32.0
// source: api/virtual_machine/v1/virtual_machine.proto

package pb

import (
	v1 "github.com/otterscale/otterscale/api/application/v1"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	emptypb "google.golang.org/protobuf/types/known/emptypb"
	timestamppb "google.golang.org/protobuf/types/known/timestamppb"
	reflect "reflect"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

//	enum Type {
//	  UNSPECIFIED = 0;
//	  DATA_VOLUME = 1;
//	  CLOUD_INIT_NO_CLOUD = 2;
//	}
type VirtualMachine_Disk_Bus int32

const (
	VirtualMachine_Disk_VIRTIO VirtualMachine_Disk_Bus = 0
	VirtualMachine_Disk_SATA   VirtualMachine_Disk_Bus = 1
	VirtualMachine_Disk_SCSI   VirtualMachine_Disk_Bus = 2
	VirtualMachine_Disk_USB    VirtualMachine_Disk_Bus = 3
)

// Enum value maps for VirtualMachine_Disk_Bus.
var (
	VirtualMachine_Disk_Bus_name = map[int32]string{
		0: "VIRTIO",
		1: "SATA",
		2: "SCSI",
		3: "USB",
	}
	VirtualMachine_Disk_Bus_value = map[string]int32{
		"VIRTIO": 0,
		"SATA":   1,
		"SCSI":   2,
		"USB":    3,
	}
)

func (x VirtualMachine_Disk_Bus) Enum() *VirtualMachine_Disk_Bus {
	p := new(VirtualMachine_Disk_Bus)
	*p = x
	return p
}

func (x VirtualMachine_Disk_Bus) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (VirtualMachine_Disk_Bus) Descriptor() protoreflect.EnumDescriptor {
	return file_api_virtual_machine_v1_virtual_machine_proto_enumTypes[0].Descriptor()
}

func (VirtualMachine_Disk_Bus) Type() protoreflect.EnumType {
	return &file_api_virtual_machine_v1_virtual_machine_proto_enumTypes[0]
}

func (x VirtualMachine_Disk_Bus) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

type DataVolume_Source_Type int32

const (
	DataVolume_Source_BLANK_IMAGE                      DataVolume_Source_Type = 0
	DataVolume_Source_HTTP_URL                         DataVolume_Source_Type = 1
	DataVolume_Source_EXISTING_PERSISTENT_VOLUME_CLAIM DataVolume_Source_Type = 2
)

// Enum value maps for DataVolume_Source_Type.
var (
	DataVolume_Source_Type_name = map[int32]string{
		0: "BLANK_IMAGE",
		1: "HTTP_URL",
		2: "EXISTING_PERSISTENT_VOLUME_CLAIM",
	}
	DataVolume_Source_Type_value = map[string]int32{
		"BLANK_IMAGE":                      0,
		"HTTP_URL":                         1,
		"EXISTING_PERSISTENT_VOLUME_CLAIM": 2,
	}
)

func (x DataVolume_Source_Type) Enum() *DataVolume_Source_Type {
	p := new(DataVolume_Source_Type)
	*p = x
	return p
}

func (x DataVolume_Source_Type) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (DataVolume_Source_Type) Descriptor() protoreflect.EnumDescriptor {
	return file_api_virtual_machine_v1_virtual_machine_proto_enumTypes[1].Descriptor()
}

func (DataVolume_Source_Type) Type() protoreflect.EnumType {
	return &file_api_virtual_machine_v1_virtual_machine_proto_enumTypes[1]
}

func (x DataVolume_Source_Type) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

type VirtualMachine struct {
	state         protoimpl.MessageState `protogen:"opaque.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *VirtualMachine) Reset() {
	*x = VirtualMachine{}
	mi := &file_api_virtual_machine_v1_virtual_machine_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *VirtualMachine) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*VirtualMachine) ProtoMessage() {}

func (x *VirtualMachine) ProtoReflect() protoreflect.Message {
	mi := &file_api_virtual_machine_v1_virtual_machine_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

type VirtualMachine_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

}

func (b0 VirtualMachine_builder) Build() *VirtualMachine {
	m0 := &VirtualMachine{}
	b, x := &b0, m0
	_, _ = b, x
	return m0
}

type DataVolume struct {
	state                            protoimpl.MessageState                `protogen:"opaque.v1"`
	xxx_hidden_Name                  *string                               `protobuf:"bytes,1,opt,name=name"`
	xxx_hidden_Namespace             *string                               `protobuf:"bytes,2,opt,name=namespace"`
	xxx_hidden_Source                *DataVolume_Source                    `protobuf:"bytes,11,opt,name=source"`
	xxx_hidden_BootImage             bool                                  `protobuf:"varint,12,opt,name=boot_image,json=bootImage"`
	xxx_hidden_Phase                 *string                               `protobuf:"bytes,21,opt,name=phase"`
	xxx_hidden_Progress              *string                               `protobuf:"bytes,22,opt,name=progress"`
	xxx_hidden_SizeBytes             int64                                 `protobuf:"varint,31,opt,name=size_bytes,json=sizeBytes"`
	xxx_hidden_PersistentVolumeClaim *v1.Application_PersistentVolumeClaim `protobuf:"bytes,32,opt,name=PersistentVolumeClaim"`
	xxx_hidden_LastCondition         *DataVolume_Condition                 `protobuf:"bytes,41,opt,name=last_condition,json=lastCondition"`
	XXX_raceDetectHookData           protoimpl.RaceDetectHookData
	XXX_presence                     [1]uint32
	unknownFields                    protoimpl.UnknownFields
	sizeCache                        protoimpl.SizeCache
}

func (x *DataVolume) Reset() {
	*x = DataVolume{}
	mi := &file_api_virtual_machine_v1_virtual_machine_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DataVolume) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DataVolume) ProtoMessage() {}

func (x *DataVolume) ProtoReflect() protoreflect.Message {
	mi := &file_api_virtual_machine_v1_virtual_machine_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *DataVolume) GetName() string {
	if x != nil {
		if x.xxx_hidden_Name != nil {
			return *x.xxx_hidden_Name
		}
		return ""
	}
	return ""
}

func (x *DataVolume) GetNamespace() string {
	if x != nil {
		if x.xxx_hidden_Namespace != nil {
			return *x.xxx_hidden_Namespace
		}
		return ""
	}
	return ""
}

func (x *DataVolume) GetSource() *DataVolume_Source {
	if x != nil {
		return x.xxx_hidden_Source
	}
	return nil
}

func (x *DataVolume) GetBootImage() bool {
	if x != nil {
		return x.xxx_hidden_BootImage
	}
	return false
}

func (x *DataVolume) GetPhase() string {
	if x != nil {
		if x.xxx_hidden_Phase != nil {
			return *x.xxx_hidden_Phase
		}
		return ""
	}
	return ""
}

func (x *DataVolume) GetProgress() string {
	if x != nil {
		if x.xxx_hidden_Progress != nil {
			return *x.xxx_hidden_Progress
		}
		return ""
	}
	return ""
}

func (x *DataVolume) GetSizeBytes() int64 {
	if x != nil {
		return x.xxx_hidden_SizeBytes
	}
	return 0
}

func (x *DataVolume) GetPersistentVolumeClaim() *v1.Application_PersistentVolumeClaim {
	if x != nil {
		return x.xxx_hidden_PersistentVolumeClaim
	}
	return nil
}

func (x *DataVolume) GetLastCondition() *DataVolume_Condition {
	if x != nil {
		return x.xxx_hidden_LastCondition
	}
	return nil
}

func (x *DataVolume) SetName(v string) {
	x.xxx_hidden_Name = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 0, 9)
}

func (x *DataVolume) SetNamespace(v string) {
	x.xxx_hidden_Namespace = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 1, 9)
}

func (x *DataVolume) SetSource(v *DataVolume_Source) {
	x.xxx_hidden_Source = v
}

func (x *DataVolume) SetBootImage(v bool) {
	x.xxx_hidden_BootImage = v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 3, 9)
}

func (x *DataVolume) SetPhase(v string) {
	x.xxx_hidden_Phase = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 4, 9)
}

func (x *DataVolume) SetProgress(v string) {
	x.xxx_hidden_Progress = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 5, 9)
}

func (x *DataVolume) SetSizeBytes(v int64) {
	x.xxx_hidden_SizeBytes = v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 6, 9)
}

func (x *DataVolume) SetPersistentVolumeClaim(v *v1.Application_PersistentVolumeClaim) {
	x.xxx_hidden_PersistentVolumeClaim = v
}

func (x *DataVolume) SetLastCondition(v *DataVolume_Condition) {
	x.xxx_hidden_LastCondition = v
}

func (x *DataVolume) HasName() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 0)
}

func (x *DataVolume) HasNamespace() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 1)
}

func (x *DataVolume) HasSource() bool {
	if x == nil {
		return false
	}
	return x.xxx_hidden_Source != nil
}

func (x *DataVolume) HasBootImage() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 3)
}

func (x *DataVolume) HasPhase() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 4)
}

func (x *DataVolume) HasProgress() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 5)
}

func (x *DataVolume) HasSizeBytes() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 6)
}

func (x *DataVolume) HasPersistentVolumeClaim() bool {
	if x == nil {
		return false
	}
	return x.xxx_hidden_PersistentVolumeClaim != nil
}

func (x *DataVolume) HasLastCondition() bool {
	if x == nil {
		return false
	}
	return x.xxx_hidden_LastCondition != nil
}

func (x *DataVolume) ClearName() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 0)
	x.xxx_hidden_Name = nil
}

func (x *DataVolume) ClearNamespace() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 1)
	x.xxx_hidden_Namespace = nil
}

func (x *DataVolume) ClearSource() {
	x.xxx_hidden_Source = nil
}

func (x *DataVolume) ClearBootImage() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 3)
	x.xxx_hidden_BootImage = false
}

func (x *DataVolume) ClearPhase() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 4)
	x.xxx_hidden_Phase = nil
}

func (x *DataVolume) ClearProgress() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 5)
	x.xxx_hidden_Progress = nil
}

func (x *DataVolume) ClearSizeBytes() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 6)
	x.xxx_hidden_SizeBytes = 0
}

func (x *DataVolume) ClearPersistentVolumeClaim() {
	x.xxx_hidden_PersistentVolumeClaim = nil
}

func (x *DataVolume) ClearLastCondition() {
	x.xxx_hidden_LastCondition = nil
}

type DataVolume_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	Name                  *string
	Namespace             *string
	Source                *DataVolume_Source
	BootImage             *bool
	Phase                 *string
	Progress              *string
	SizeBytes             *int64
	PersistentVolumeClaim *v1.Application_PersistentVolumeClaim
	LastCondition         *DataVolume_Condition
}

func (b0 DataVolume_builder) Build() *DataVolume {
	m0 := &DataVolume{}
	b, x := &b0, m0
	_, _ = b, x
	if b.Name != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 0, 9)
		x.xxx_hidden_Name = b.Name
	}
	if b.Namespace != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 1, 9)
		x.xxx_hidden_Namespace = b.Namespace
	}
	x.xxx_hidden_Source = b.Source
	if b.BootImage != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 3, 9)
		x.xxx_hidden_BootImage = *b.BootImage
	}
	if b.Phase != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 4, 9)
		x.xxx_hidden_Phase = b.Phase
	}
	if b.Progress != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 5, 9)
		x.xxx_hidden_Progress = b.Progress
	}
	if b.SizeBytes != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 6, 9)
		x.xxx_hidden_SizeBytes = *b.SizeBytes
	}
	x.xxx_hidden_PersistentVolumeClaim = b.PersistentVolumeClaim
	x.xxx_hidden_LastCondition = b.LastCondition
	return m0
}

type InstanceType struct {
	state                  protoimpl.MessageState `protogen:"opaque.v1"`
	xxx_hidden_Name        *string                `protobuf:"bytes,1,opt,name=name"`
	xxx_hidden_Namespace   *string                `protobuf:"bytes,2,opt,name=namespace"`
	xxx_hidden_CpuCores    uint32                 `protobuf:"varint,3,opt,name=cpu_cores,json=cpuCores"`
	xxx_hidden_MemoryBytes int64                  `protobuf:"varint,4,opt,name=memory_bytes,json=memoryBytes"`
	XXX_raceDetectHookData protoimpl.RaceDetectHookData
	XXX_presence           [1]uint32
	unknownFields          protoimpl.UnknownFields
	sizeCache              protoimpl.SizeCache
}

func (x *InstanceType) Reset() {
	*x = InstanceType{}
	mi := &file_api_virtual_machine_v1_virtual_machine_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *InstanceType) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*InstanceType) ProtoMessage() {}

func (x *InstanceType) ProtoReflect() protoreflect.Message {
	mi := &file_api_virtual_machine_v1_virtual_machine_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *InstanceType) GetName() string {
	if x != nil {
		if x.xxx_hidden_Name != nil {
			return *x.xxx_hidden_Name
		}
		return ""
	}
	return ""
}

func (x *InstanceType) GetNamespace() string {
	if x != nil {
		if x.xxx_hidden_Namespace != nil {
			return *x.xxx_hidden_Namespace
		}
		return ""
	}
	return ""
}

func (x *InstanceType) GetCpuCores() uint32 {
	if x != nil {
		return x.xxx_hidden_CpuCores
	}
	return 0
}

func (x *InstanceType) GetMemoryBytes() int64 {
	if x != nil {
		return x.xxx_hidden_MemoryBytes
	}
	return 0
}

func (x *InstanceType) SetName(v string) {
	x.xxx_hidden_Name = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 0, 4)
}

func (x *InstanceType) SetNamespace(v string) {
	x.xxx_hidden_Namespace = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 1, 4)
}

func (x *InstanceType) SetCpuCores(v uint32) {
	x.xxx_hidden_CpuCores = v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 2, 4)
}

func (x *InstanceType) SetMemoryBytes(v int64) {
	x.xxx_hidden_MemoryBytes = v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 3, 4)
}

func (x *InstanceType) HasName() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 0)
}

func (x *InstanceType) HasNamespace() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 1)
}

func (x *InstanceType) HasCpuCores() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 2)
}

func (x *InstanceType) HasMemoryBytes() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 3)
}

func (x *InstanceType) ClearName() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 0)
	x.xxx_hidden_Name = nil
}

func (x *InstanceType) ClearNamespace() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 1)
	x.xxx_hidden_Namespace = nil
}

func (x *InstanceType) ClearCpuCores() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 2)
	x.xxx_hidden_CpuCores = 0
}

func (x *InstanceType) ClearMemoryBytes() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 3)
	x.xxx_hidden_MemoryBytes = 0
}

type InstanceType_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	Name        *string
	Namespace   *string
	CpuCores    *uint32
	MemoryBytes *int64
}

func (b0 InstanceType_builder) Build() *InstanceType {
	m0 := &InstanceType{}
	b, x := &b0, m0
	_, _ = b, x
	if b.Name != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 0, 4)
		x.xxx_hidden_Name = b.Name
	}
	if b.Namespace != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 1, 4)
		x.xxx_hidden_Namespace = b.Namespace
	}
	if b.CpuCores != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 2, 4)
		x.xxx_hidden_CpuCores = *b.CpuCores
	}
	if b.MemoryBytes != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 3, 4)
		x.xxx_hidden_MemoryBytes = *b.MemoryBytes
	}
	return m0
}

type ListVirtualMachinesRequest struct {
	state                   protoimpl.MessageState `protogen:"opaque.v1"`
	xxx_hidden_ScopeUuid    *string                `protobuf:"bytes,1,opt,name=scope_uuid,json=scopeUuid"`
	xxx_hidden_FacilityName *string                `protobuf:"bytes,2,opt,name=facility_name,json=facilityName"`
	xxx_hidden_Namespace    *string                `protobuf:"bytes,3,opt,name=namespace"`
	XXX_raceDetectHookData  protoimpl.RaceDetectHookData
	XXX_presence            [1]uint32
	unknownFields           protoimpl.UnknownFields
	sizeCache               protoimpl.SizeCache
}

func (x *ListVirtualMachinesRequest) Reset() {
	*x = ListVirtualMachinesRequest{}
	mi := &file_api_virtual_machine_v1_virtual_machine_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListVirtualMachinesRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListVirtualMachinesRequest) ProtoMessage() {}

func (x *ListVirtualMachinesRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_virtual_machine_v1_virtual_machine_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *ListVirtualMachinesRequest) GetScopeUuid() string {
	if x != nil {
		if x.xxx_hidden_ScopeUuid != nil {
			return *x.xxx_hidden_ScopeUuid
		}
		return ""
	}
	return ""
}

func (x *ListVirtualMachinesRequest) GetFacilityName() string {
	if x != nil {
		if x.xxx_hidden_FacilityName != nil {
			return *x.xxx_hidden_FacilityName
		}
		return ""
	}
	return ""
}

func (x *ListVirtualMachinesRequest) GetNamespace() string {
	if x != nil {
		if x.xxx_hidden_Namespace != nil {
			return *x.xxx_hidden_Namespace
		}
		return ""
	}
	return ""
}

func (x *ListVirtualMachinesRequest) SetScopeUuid(v string) {
	x.xxx_hidden_ScopeUuid = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 0, 3)
}

func (x *ListVirtualMachinesRequest) SetFacilityName(v string) {
	x.xxx_hidden_FacilityName = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 1, 3)
}

func (x *ListVirtualMachinesRequest) SetNamespace(v string) {
	x.xxx_hidden_Namespace = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 2, 3)
}

func (x *ListVirtualMachinesRequest) HasScopeUuid() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 0)
}

func (x *ListVirtualMachinesRequest) HasFacilityName() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 1)
}

func (x *ListVirtualMachinesRequest) HasNamespace() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 2)
}

func (x *ListVirtualMachinesRequest) ClearScopeUuid() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 0)
	x.xxx_hidden_ScopeUuid = nil
}

func (x *ListVirtualMachinesRequest) ClearFacilityName() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 1)
	x.xxx_hidden_FacilityName = nil
}

func (x *ListVirtualMachinesRequest) ClearNamespace() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 2)
	x.xxx_hidden_Namespace = nil
}

type ListVirtualMachinesRequest_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	ScopeUuid    *string
	FacilityName *string
	Namespace    *string
}

func (b0 ListVirtualMachinesRequest_builder) Build() *ListVirtualMachinesRequest {
	m0 := &ListVirtualMachinesRequest{}
	b, x := &b0, m0
	_, _ = b, x
	if b.ScopeUuid != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 0, 3)
		x.xxx_hidden_ScopeUuid = b.ScopeUuid
	}
	if b.FacilityName != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 1, 3)
		x.xxx_hidden_FacilityName = b.FacilityName
	}
	if b.Namespace != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 2, 3)
		x.xxx_hidden_Namespace = b.Namespace
	}
	return m0
}

type ListVirtualMachinesResponse struct {
	state                      protoimpl.MessageState `protogen:"opaque.v1"`
	xxx_hidden_VirtualMachines *[]*VirtualMachine     `protobuf:"bytes,1,rep,name=virtual_machines,json=virtualMachines"`
	unknownFields              protoimpl.UnknownFields
	sizeCache                  protoimpl.SizeCache
}

func (x *ListVirtualMachinesResponse) Reset() {
	*x = ListVirtualMachinesResponse{}
	mi := &file_api_virtual_machine_v1_virtual_machine_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListVirtualMachinesResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListVirtualMachinesResponse) ProtoMessage() {}

func (x *ListVirtualMachinesResponse) ProtoReflect() protoreflect.Message {
	mi := &file_api_virtual_machine_v1_virtual_machine_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *ListVirtualMachinesResponse) GetVirtualMachines() []*VirtualMachine {
	if x != nil {
		if x.xxx_hidden_VirtualMachines != nil {
			return *x.xxx_hidden_VirtualMachines
		}
	}
	return nil
}

func (x *ListVirtualMachinesResponse) SetVirtualMachines(v []*VirtualMachine) {
	x.xxx_hidden_VirtualMachines = &v
}

type ListVirtualMachinesResponse_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	VirtualMachines []*VirtualMachine
}

func (b0 ListVirtualMachinesResponse_builder) Build() *ListVirtualMachinesResponse {
	m0 := &ListVirtualMachinesResponse{}
	b, x := &b0, m0
	_, _ = b, x
	x.xxx_hidden_VirtualMachines = &b.VirtualMachines
	return m0
}

type GetVirtualMachineRequest struct {
	state                   protoimpl.MessageState `protogen:"opaque.v1"`
	xxx_hidden_ScopeUuid    *string                `protobuf:"bytes,1,opt,name=scope_uuid,json=scopeUuid"`
	xxx_hidden_FacilityName *string                `protobuf:"bytes,2,opt,name=facility_name,json=facilityName"`
	xxx_hidden_Namespace    *string                `protobuf:"bytes,3,opt,name=namespace"`
	xxx_hidden_Name         *string                `protobuf:"bytes,4,opt,name=name"`
	XXX_raceDetectHookData  protoimpl.RaceDetectHookData
	XXX_presence            [1]uint32
	unknownFields           protoimpl.UnknownFields
	sizeCache               protoimpl.SizeCache
}

func (x *GetVirtualMachineRequest) Reset() {
	*x = GetVirtualMachineRequest{}
	mi := &file_api_virtual_machine_v1_virtual_machine_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetVirtualMachineRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetVirtualMachineRequest) ProtoMessage() {}

func (x *GetVirtualMachineRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_virtual_machine_v1_virtual_machine_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *GetVirtualMachineRequest) GetScopeUuid() string {
	if x != nil {
		if x.xxx_hidden_ScopeUuid != nil {
			return *x.xxx_hidden_ScopeUuid
		}
		return ""
	}
	return ""
}

func (x *GetVirtualMachineRequest) GetFacilityName() string {
	if x != nil {
		if x.xxx_hidden_FacilityName != nil {
			return *x.xxx_hidden_FacilityName
		}
		return ""
	}
	return ""
}

func (x *GetVirtualMachineRequest) GetNamespace() string {
	if x != nil {
		if x.xxx_hidden_Namespace != nil {
			return *x.xxx_hidden_Namespace
		}
		return ""
	}
	return ""
}

func (x *GetVirtualMachineRequest) GetName() string {
	if x != nil {
		if x.xxx_hidden_Name != nil {
			return *x.xxx_hidden_Name
		}
		return ""
	}
	return ""
}

func (x *GetVirtualMachineRequest) SetScopeUuid(v string) {
	x.xxx_hidden_ScopeUuid = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 0, 4)
}

func (x *GetVirtualMachineRequest) SetFacilityName(v string) {
	x.xxx_hidden_FacilityName = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 1, 4)
}

func (x *GetVirtualMachineRequest) SetNamespace(v string) {
	x.xxx_hidden_Namespace = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 2, 4)
}

func (x *GetVirtualMachineRequest) SetName(v string) {
	x.xxx_hidden_Name = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 3, 4)
}

func (x *GetVirtualMachineRequest) HasScopeUuid() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 0)
}

func (x *GetVirtualMachineRequest) HasFacilityName() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 1)
}

func (x *GetVirtualMachineRequest) HasNamespace() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 2)
}

func (x *GetVirtualMachineRequest) HasName() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 3)
}

func (x *GetVirtualMachineRequest) ClearScopeUuid() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 0)
	x.xxx_hidden_ScopeUuid = nil
}

func (x *GetVirtualMachineRequest) ClearFacilityName() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 1)
	x.xxx_hidden_FacilityName = nil
}

func (x *GetVirtualMachineRequest) ClearNamespace() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 2)
	x.xxx_hidden_Namespace = nil
}

func (x *GetVirtualMachineRequest) ClearName() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 3)
	x.xxx_hidden_Name = nil
}

type GetVirtualMachineRequest_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	ScopeUuid    *string
	FacilityName *string
	Namespace    *string
	Name         *string
}

func (b0 GetVirtualMachineRequest_builder) Build() *GetVirtualMachineRequest {
	m0 := &GetVirtualMachineRequest{}
	b, x := &b0, m0
	_, _ = b, x
	if b.ScopeUuid != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 0, 4)
		x.xxx_hidden_ScopeUuid = b.ScopeUuid
	}
	if b.FacilityName != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 1, 4)
		x.xxx_hidden_FacilityName = b.FacilityName
	}
	if b.Namespace != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 2, 4)
		x.xxx_hidden_Namespace = b.Namespace
	}
	if b.Name != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 3, 4)
		x.xxx_hidden_Name = b.Name
	}
	return m0
}

type CreateVirtualMachineRequest struct {
	state                         protoimpl.MessageState `protogen:"opaque.v1"`
	xxx_hidden_ScopeUuid          *string                `protobuf:"bytes,1,opt,name=scope_uuid,json=scopeUuid"`
	xxx_hidden_FacilityName       *string                `protobuf:"bytes,2,opt,name=facility_name,json=facilityName"`
	xxx_hidden_Name               *string                `protobuf:"bytes,11,opt,name=name"`
	xxx_hidden_Namespace          *string                `protobuf:"bytes,12,opt,name=namespace"`
	xxx_hidden_InstanceTypeName   *string                `protobuf:"bytes,21,opt,name=instance_type_name,json=instanceTypeName"`
	xxx_hidden_BootDataVolumeName *string                `protobuf:"bytes,22,opt,name=boot_data_volume_name,json=bootDataVolumeName"`
	xxx_hidden_StartupScript      *string                `protobuf:"bytes,31,opt,name=startup_script,json=startupScript"`
	XXX_raceDetectHookData        protoimpl.RaceDetectHookData
	XXX_presence                  [1]uint32
	unknownFields                 protoimpl.UnknownFields
	sizeCache                     protoimpl.SizeCache
}

func (x *CreateVirtualMachineRequest) Reset() {
	*x = CreateVirtualMachineRequest{}
	mi := &file_api_virtual_machine_v1_virtual_machine_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CreateVirtualMachineRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateVirtualMachineRequest) ProtoMessage() {}

func (x *CreateVirtualMachineRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_virtual_machine_v1_virtual_machine_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *CreateVirtualMachineRequest) GetScopeUuid() string {
	if x != nil {
		if x.xxx_hidden_ScopeUuid != nil {
			return *x.xxx_hidden_ScopeUuid
		}
		return ""
	}
	return ""
}

func (x *CreateVirtualMachineRequest) GetFacilityName() string {
	if x != nil {
		if x.xxx_hidden_FacilityName != nil {
			return *x.xxx_hidden_FacilityName
		}
		return ""
	}
	return ""
}

func (x *CreateVirtualMachineRequest) GetName() string {
	if x != nil {
		if x.xxx_hidden_Name != nil {
			return *x.xxx_hidden_Name
		}
		return ""
	}
	return ""
}

func (x *CreateVirtualMachineRequest) GetNamespace() string {
	if x != nil {
		if x.xxx_hidden_Namespace != nil {
			return *x.xxx_hidden_Namespace
		}
		return ""
	}
	return ""
}

func (x *CreateVirtualMachineRequest) GetInstanceTypeName() string {
	if x != nil {
		if x.xxx_hidden_InstanceTypeName != nil {
			return *x.xxx_hidden_InstanceTypeName
		}
		return ""
	}
	return ""
}

func (x *CreateVirtualMachineRequest) GetBootDataVolumeName() string {
	if x != nil {
		if x.xxx_hidden_BootDataVolumeName != nil {
			return *x.xxx_hidden_BootDataVolumeName
		}
		return ""
	}
	return ""
}

func (x *CreateVirtualMachineRequest) GetStartupScript() string {
	if x != nil {
		if x.xxx_hidden_StartupScript != nil {
			return *x.xxx_hidden_StartupScript
		}
		return ""
	}
	return ""
}

func (x *CreateVirtualMachineRequest) SetScopeUuid(v string) {
	x.xxx_hidden_ScopeUuid = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 0, 7)
}

func (x *CreateVirtualMachineRequest) SetFacilityName(v string) {
	x.xxx_hidden_FacilityName = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 1, 7)
}

func (x *CreateVirtualMachineRequest) SetName(v string) {
	x.xxx_hidden_Name = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 2, 7)
}

func (x *CreateVirtualMachineRequest) SetNamespace(v string) {
	x.xxx_hidden_Namespace = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 3, 7)
}

func (x *CreateVirtualMachineRequest) SetInstanceTypeName(v string) {
	x.xxx_hidden_InstanceTypeName = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 4, 7)
}

func (x *CreateVirtualMachineRequest) SetBootDataVolumeName(v string) {
	x.xxx_hidden_BootDataVolumeName = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 5, 7)
}

func (x *CreateVirtualMachineRequest) SetStartupScript(v string) {
	x.xxx_hidden_StartupScript = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 6, 7)
}

func (x *CreateVirtualMachineRequest) HasScopeUuid() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 0)
}

func (x *CreateVirtualMachineRequest) HasFacilityName() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 1)
}

func (x *CreateVirtualMachineRequest) HasName() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 2)
}

func (x *CreateVirtualMachineRequest) HasNamespace() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 3)
}

func (x *CreateVirtualMachineRequest) HasInstanceTypeName() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 4)
}

func (x *CreateVirtualMachineRequest) HasBootDataVolumeName() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 5)
}

func (x *CreateVirtualMachineRequest) HasStartupScript() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 6)
}

func (x *CreateVirtualMachineRequest) ClearScopeUuid() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 0)
	x.xxx_hidden_ScopeUuid = nil
}

func (x *CreateVirtualMachineRequest) ClearFacilityName() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 1)
	x.xxx_hidden_FacilityName = nil
}

func (x *CreateVirtualMachineRequest) ClearName() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 2)
	x.xxx_hidden_Name = nil
}

func (x *CreateVirtualMachineRequest) ClearNamespace() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 3)
	x.xxx_hidden_Namespace = nil
}

func (x *CreateVirtualMachineRequest) ClearInstanceTypeName() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 4)
	x.xxx_hidden_InstanceTypeName = nil
}

func (x *CreateVirtualMachineRequest) ClearBootDataVolumeName() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 5)
	x.xxx_hidden_BootDataVolumeName = nil
}

func (x *CreateVirtualMachineRequest) ClearStartupScript() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 6)
	x.xxx_hidden_StartupScript = nil
}

type CreateVirtualMachineRequest_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	ScopeUuid          *string
	FacilityName       *string
	Name               *string
	Namespace          *string
	InstanceTypeName   *string
	BootDataVolumeName *string
	StartupScript      *string
}

func (b0 CreateVirtualMachineRequest_builder) Build() *CreateVirtualMachineRequest {
	m0 := &CreateVirtualMachineRequest{}
	b, x := &b0, m0
	_, _ = b, x
	if b.ScopeUuid != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 0, 7)
		x.xxx_hidden_ScopeUuid = b.ScopeUuid
	}
	if b.FacilityName != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 1, 7)
		x.xxx_hidden_FacilityName = b.FacilityName
	}
	if b.Name != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 2, 7)
		x.xxx_hidden_Name = b.Name
	}
	if b.Namespace != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 3, 7)
		x.xxx_hidden_Namespace = b.Namespace
	}
	if b.InstanceTypeName != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 4, 7)
		x.xxx_hidden_InstanceTypeName = b.InstanceTypeName
	}
	if b.BootDataVolumeName != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 5, 7)
		x.xxx_hidden_BootDataVolumeName = b.BootDataVolumeName
	}
	if b.StartupScript != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 6, 7)
		x.xxx_hidden_StartupScript = b.StartupScript
	}
	return m0
}

type DeleteVirtualMachineRequest struct {
	state                   protoimpl.MessageState `protogen:"opaque.v1"`
	xxx_hidden_ScopeUuid    *string                `protobuf:"bytes,1,opt,name=scope_uuid,json=scopeUuid"`
	xxx_hidden_FacilityName *string                `protobuf:"bytes,2,opt,name=facility_name,json=facilityName"`
	xxx_hidden_Namespace    *string                `protobuf:"bytes,3,opt,name=namespace"`
	xxx_hidden_Name         *string                `protobuf:"bytes,4,opt,name=name"`
	XXX_raceDetectHookData  protoimpl.RaceDetectHookData
	XXX_presence            [1]uint32
	unknownFields           protoimpl.UnknownFields
	sizeCache               protoimpl.SizeCache
}

func (x *DeleteVirtualMachineRequest) Reset() {
	*x = DeleteVirtualMachineRequest{}
	mi := &file_api_virtual_machine_v1_virtual_machine_proto_msgTypes[7]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DeleteVirtualMachineRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteVirtualMachineRequest) ProtoMessage() {}

func (x *DeleteVirtualMachineRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_virtual_machine_v1_virtual_machine_proto_msgTypes[7]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *DeleteVirtualMachineRequest) GetScopeUuid() string {
	if x != nil {
		if x.xxx_hidden_ScopeUuid != nil {
			return *x.xxx_hidden_ScopeUuid
		}
		return ""
	}
	return ""
}

func (x *DeleteVirtualMachineRequest) GetFacilityName() string {
	if x != nil {
		if x.xxx_hidden_FacilityName != nil {
			return *x.xxx_hidden_FacilityName
		}
		return ""
	}
	return ""
}

func (x *DeleteVirtualMachineRequest) GetNamespace() string {
	if x != nil {
		if x.xxx_hidden_Namespace != nil {
			return *x.xxx_hidden_Namespace
		}
		return ""
	}
	return ""
}

func (x *DeleteVirtualMachineRequest) GetName() string {
	if x != nil {
		if x.xxx_hidden_Name != nil {
			return *x.xxx_hidden_Name
		}
		return ""
	}
	return ""
}

func (x *DeleteVirtualMachineRequest) SetScopeUuid(v string) {
	x.xxx_hidden_ScopeUuid = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 0, 4)
}

func (x *DeleteVirtualMachineRequest) SetFacilityName(v string) {
	x.xxx_hidden_FacilityName = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 1, 4)
}

func (x *DeleteVirtualMachineRequest) SetNamespace(v string) {
	x.xxx_hidden_Namespace = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 2, 4)
}

func (x *DeleteVirtualMachineRequest) SetName(v string) {
	x.xxx_hidden_Name = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 3, 4)
}

func (x *DeleteVirtualMachineRequest) HasScopeUuid() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 0)
}

func (x *DeleteVirtualMachineRequest) HasFacilityName() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 1)
}

func (x *DeleteVirtualMachineRequest) HasNamespace() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 2)
}

func (x *DeleteVirtualMachineRequest) HasName() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 3)
}

func (x *DeleteVirtualMachineRequest) ClearScopeUuid() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 0)
	x.xxx_hidden_ScopeUuid = nil
}

func (x *DeleteVirtualMachineRequest) ClearFacilityName() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 1)
	x.xxx_hidden_FacilityName = nil
}

func (x *DeleteVirtualMachineRequest) ClearNamespace() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 2)
	x.xxx_hidden_Namespace = nil
}

func (x *DeleteVirtualMachineRequest) ClearName() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 3)
	x.xxx_hidden_Name = nil
}

type DeleteVirtualMachineRequest_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	ScopeUuid    *string
	FacilityName *string
	Namespace    *string
	Name         *string
}

func (b0 DeleteVirtualMachineRequest_builder) Build() *DeleteVirtualMachineRequest {
	m0 := &DeleteVirtualMachineRequest{}
	b, x := &b0, m0
	_, _ = b, x
	if b.ScopeUuid != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 0, 4)
		x.xxx_hidden_ScopeUuid = b.ScopeUuid
	}
	if b.FacilityName != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 1, 4)
		x.xxx_hidden_FacilityName = b.FacilityName
	}
	if b.Namespace != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 2, 4)
		x.xxx_hidden_Namespace = b.Namespace
	}
	if b.Name != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 3, 4)
		x.xxx_hidden_Name = b.Name
	}
	return m0
}

type CloneVirtualMachineRequest struct {
	state                   protoimpl.MessageState `protogen:"opaque.v1"`
	xxx_hidden_ScopeUuid    *string                `protobuf:"bytes,1,opt,name=scope_uuid,json=scopeUuid"`
	xxx_hidden_FacilityName *string                `protobuf:"bytes,2,opt,name=facility_name,json=facilityName"`
	xxx_hidden_Namespace    *string                `protobuf:"bytes,3,opt,name=namespace"`
	xxx_hidden_Name         *string                `protobuf:"bytes,4,opt,name=name"`
	xxx_hidden_TargetName   *string                `protobuf:"bytes,5,opt,name=target_name,json=targetName"`
	XXX_raceDetectHookData  protoimpl.RaceDetectHookData
	XXX_presence            [1]uint32
	unknownFields           protoimpl.UnknownFields
	sizeCache               protoimpl.SizeCache
}

func (x *CloneVirtualMachineRequest) Reset() {
	*x = CloneVirtualMachineRequest{}
	mi := &file_api_virtual_machine_v1_virtual_machine_proto_msgTypes[8]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CloneVirtualMachineRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CloneVirtualMachineRequest) ProtoMessage() {}

func (x *CloneVirtualMachineRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_virtual_machine_v1_virtual_machine_proto_msgTypes[8]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *CloneVirtualMachineRequest) GetScopeUuid() string {
	if x != nil {
		if x.xxx_hidden_ScopeUuid != nil {
			return *x.xxx_hidden_ScopeUuid
		}
		return ""
	}
	return ""
}

func (x *CloneVirtualMachineRequest) GetFacilityName() string {
	if x != nil {
		if x.xxx_hidden_FacilityName != nil {
			return *x.xxx_hidden_FacilityName
		}
		return ""
	}
	return ""
}

func (x *CloneVirtualMachineRequest) GetNamespace() string {
	if x != nil {
		if x.xxx_hidden_Namespace != nil {
			return *x.xxx_hidden_Namespace
		}
		return ""
	}
	return ""
}

func (x *CloneVirtualMachineRequest) GetName() string {
	if x != nil {
		if x.xxx_hidden_Name != nil {
			return *x.xxx_hidden_Name
		}
		return ""
	}
	return ""
}

func (x *CloneVirtualMachineRequest) GetTargetName() string {
	if x != nil {
		if x.xxx_hidden_TargetName != nil {
			return *x.xxx_hidden_TargetName
		}
		return ""
	}
	return ""
}

func (x *CloneVirtualMachineRequest) SetScopeUuid(v string) {
	x.xxx_hidden_ScopeUuid = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 0, 5)
}

func (x *CloneVirtualMachineRequest) SetFacilityName(v string) {
	x.xxx_hidden_FacilityName = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 1, 5)
}

func (x *CloneVirtualMachineRequest) SetNamespace(v string) {
	x.xxx_hidden_Namespace = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 2, 5)
}

func (x *CloneVirtualMachineRequest) SetName(v string) {
	x.xxx_hidden_Name = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 3, 5)
}

func (x *CloneVirtualMachineRequest) SetTargetName(v string) {
	x.xxx_hidden_TargetName = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 4, 5)
}

func (x *CloneVirtualMachineRequest) HasScopeUuid() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 0)
}

func (x *CloneVirtualMachineRequest) HasFacilityName() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 1)
}

func (x *CloneVirtualMachineRequest) HasNamespace() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 2)
}

func (x *CloneVirtualMachineRequest) HasName() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 3)
}

func (x *CloneVirtualMachineRequest) HasTargetName() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 4)
}

func (x *CloneVirtualMachineRequest) ClearScopeUuid() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 0)
	x.xxx_hidden_ScopeUuid = nil
}

func (x *CloneVirtualMachineRequest) ClearFacilityName() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 1)
	x.xxx_hidden_FacilityName = nil
}

func (x *CloneVirtualMachineRequest) ClearNamespace() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 2)
	x.xxx_hidden_Namespace = nil
}

func (x *CloneVirtualMachineRequest) ClearName() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 3)
	x.xxx_hidden_Name = nil
}

func (x *CloneVirtualMachineRequest) ClearTargetName() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 4)
	x.xxx_hidden_TargetName = nil
}

type CloneVirtualMachineRequest_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	ScopeUuid    *string
	FacilityName *string
	Namespace    *string
	Name         *string
	TargetName   *string
}

func (b0 CloneVirtualMachineRequest_builder) Build() *CloneVirtualMachineRequest {
	m0 := &CloneVirtualMachineRequest{}
	b, x := &b0, m0
	_, _ = b, x
	if b.ScopeUuid != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 0, 5)
		x.xxx_hidden_ScopeUuid = b.ScopeUuid
	}
	if b.FacilityName != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 1, 5)
		x.xxx_hidden_FacilityName = b.FacilityName
	}
	if b.Namespace != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 2, 5)
		x.xxx_hidden_Namespace = b.Namespace
	}
	if b.Name != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 3, 5)
		x.xxx_hidden_Name = b.Name
	}
	if b.TargetName != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 4, 5)
		x.xxx_hidden_TargetName = b.TargetName
	}
	return m0
}

type StartInstanceRequest struct {
	state                   protoimpl.MessageState `protogen:"opaque.v1"`
	xxx_hidden_ScopeUuid    *string                `protobuf:"bytes,1,opt,name=scope_uuid,json=scopeUuid"`
	xxx_hidden_FacilityName *string                `protobuf:"bytes,2,opt,name=facility_name,json=facilityName"`
	xxx_hidden_Namespace    *string                `protobuf:"bytes,3,opt,name=namespace"`
	xxx_hidden_Name         *string                `protobuf:"bytes,4,opt,name=name"`
	XXX_raceDetectHookData  protoimpl.RaceDetectHookData
	XXX_presence            [1]uint32
	unknownFields           protoimpl.UnknownFields
	sizeCache               protoimpl.SizeCache
}

func (x *StartInstanceRequest) Reset() {
	*x = StartInstanceRequest{}
	mi := &file_api_virtual_machine_v1_virtual_machine_proto_msgTypes[9]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *StartInstanceRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StartInstanceRequest) ProtoMessage() {}

func (x *StartInstanceRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_virtual_machine_v1_virtual_machine_proto_msgTypes[9]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *StartInstanceRequest) GetScopeUuid() string {
	if x != nil {
		if x.xxx_hidden_ScopeUuid != nil {
			return *x.xxx_hidden_ScopeUuid
		}
		return ""
	}
	return ""
}

func (x *StartInstanceRequest) GetFacilityName() string {
	if x != nil {
		if x.xxx_hidden_FacilityName != nil {
			return *x.xxx_hidden_FacilityName
		}
		return ""
	}
	return ""
}

func (x *StartInstanceRequest) GetNamespace() string {
	if x != nil {
		if x.xxx_hidden_Namespace != nil {
			return *x.xxx_hidden_Namespace
		}
		return ""
	}
	return ""
}

func (x *StartInstanceRequest) GetName() string {
	if x != nil {
		if x.xxx_hidden_Name != nil {
			return *x.xxx_hidden_Name
		}
		return ""
	}
	return ""
}

func (x *StartInstanceRequest) SetScopeUuid(v string) {
	x.xxx_hidden_ScopeUuid = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 0, 4)
}

func (x *StartInstanceRequest) SetFacilityName(v string) {
	x.xxx_hidden_FacilityName = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 1, 4)
}

func (x *StartInstanceRequest) SetNamespace(v string) {
	x.xxx_hidden_Namespace = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 2, 4)
}

func (x *StartInstanceRequest) SetName(v string) {
	x.xxx_hidden_Name = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 3, 4)
}

func (x *StartInstanceRequest) HasScopeUuid() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 0)
}

func (x *StartInstanceRequest) HasFacilityName() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 1)
}

func (x *StartInstanceRequest) HasNamespace() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 2)
}

func (x *StartInstanceRequest) HasName() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 3)
}

func (x *StartInstanceRequest) ClearScopeUuid() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 0)
	x.xxx_hidden_ScopeUuid = nil
}

func (x *StartInstanceRequest) ClearFacilityName() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 1)
	x.xxx_hidden_FacilityName = nil
}

func (x *StartInstanceRequest) ClearNamespace() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 2)
	x.xxx_hidden_Namespace = nil
}

func (x *StartInstanceRequest) ClearName() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 3)
	x.xxx_hidden_Name = nil
}

type StartInstanceRequest_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	ScopeUuid    *string
	FacilityName *string
	Namespace    *string
	Name         *string
}

func (b0 StartInstanceRequest_builder) Build() *StartInstanceRequest {
	m0 := &StartInstanceRequest{}
	b, x := &b0, m0
	_, _ = b, x
	if b.ScopeUuid != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 0, 4)
		x.xxx_hidden_ScopeUuid = b.ScopeUuid
	}
	if b.FacilityName != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 1, 4)
		x.xxx_hidden_FacilityName = b.FacilityName
	}
	if b.Namespace != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 2, 4)
		x.xxx_hidden_Namespace = b.Namespace
	}
	if b.Name != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 3, 4)
		x.xxx_hidden_Name = b.Name
	}
	return m0
}

type StopInstanceRequest struct {
	state                   protoimpl.MessageState `protogen:"opaque.v1"`
	xxx_hidden_ScopeUuid    *string                `protobuf:"bytes,1,opt,name=scope_uuid,json=scopeUuid"`
	xxx_hidden_FacilityName *string                `protobuf:"bytes,2,opt,name=facility_name,json=facilityName"`
	xxx_hidden_Namespace    *string                `protobuf:"bytes,3,opt,name=namespace"`
	xxx_hidden_Name         *string                `protobuf:"bytes,4,opt,name=name"`
	XXX_raceDetectHookData  protoimpl.RaceDetectHookData
	XXX_presence            [1]uint32
	unknownFields           protoimpl.UnknownFields
	sizeCache               protoimpl.SizeCache
}

func (x *StopInstanceRequest) Reset() {
	*x = StopInstanceRequest{}
	mi := &file_api_virtual_machine_v1_virtual_machine_proto_msgTypes[10]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *StopInstanceRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StopInstanceRequest) ProtoMessage() {}

func (x *StopInstanceRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_virtual_machine_v1_virtual_machine_proto_msgTypes[10]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *StopInstanceRequest) GetScopeUuid() string {
	if x != nil {
		if x.xxx_hidden_ScopeUuid != nil {
			return *x.xxx_hidden_ScopeUuid
		}
		return ""
	}
	return ""
}

func (x *StopInstanceRequest) GetFacilityName() string {
	if x != nil {
		if x.xxx_hidden_FacilityName != nil {
			return *x.xxx_hidden_FacilityName
		}
		return ""
	}
	return ""
}

func (x *StopInstanceRequest) GetNamespace() string {
	if x != nil {
		if x.xxx_hidden_Namespace != nil {
			return *x.xxx_hidden_Namespace
		}
		return ""
	}
	return ""
}

func (x *StopInstanceRequest) GetName() string {
	if x != nil {
		if x.xxx_hidden_Name != nil {
			return *x.xxx_hidden_Name
		}
		return ""
	}
	return ""
}

func (x *StopInstanceRequest) SetScopeUuid(v string) {
	x.xxx_hidden_ScopeUuid = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 0, 4)
}

func (x *StopInstanceRequest) SetFacilityName(v string) {
	x.xxx_hidden_FacilityName = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 1, 4)
}

func (x *StopInstanceRequest) SetNamespace(v string) {
	x.xxx_hidden_Namespace = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 2, 4)
}

func (x *StopInstanceRequest) SetName(v string) {
	x.xxx_hidden_Name = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 3, 4)
}

func (x *StopInstanceRequest) HasScopeUuid() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 0)
}

func (x *StopInstanceRequest) HasFacilityName() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 1)
}

func (x *StopInstanceRequest) HasNamespace() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 2)
}

func (x *StopInstanceRequest) HasName() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 3)
}

func (x *StopInstanceRequest) ClearScopeUuid() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 0)
	x.xxx_hidden_ScopeUuid = nil
}

func (x *StopInstanceRequest) ClearFacilityName() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 1)
	x.xxx_hidden_FacilityName = nil
}

func (x *StopInstanceRequest) ClearNamespace() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 2)
	x.xxx_hidden_Namespace = nil
}

func (x *StopInstanceRequest) ClearName() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 3)
	x.xxx_hidden_Name = nil
}

type StopInstanceRequest_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	ScopeUuid    *string
	FacilityName *string
	Namespace    *string
	Name         *string
}

func (b0 StopInstanceRequest_builder) Build() *StopInstanceRequest {
	m0 := &StopInstanceRequest{}
	b, x := &b0, m0
	_, _ = b, x
	if b.ScopeUuid != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 0, 4)
		x.xxx_hidden_ScopeUuid = b.ScopeUuid
	}
	if b.FacilityName != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 1, 4)
		x.xxx_hidden_FacilityName = b.FacilityName
	}
	if b.Namespace != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 2, 4)
		x.xxx_hidden_Namespace = b.Namespace
	}
	if b.Name != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 3, 4)
		x.xxx_hidden_Name = b.Name
	}
	return m0
}

type RestartInstanceRequest struct {
	state                   protoimpl.MessageState `protogen:"opaque.v1"`
	xxx_hidden_ScopeUuid    *string                `protobuf:"bytes,1,opt,name=scope_uuid,json=scopeUuid"`
	xxx_hidden_FacilityName *string                `protobuf:"bytes,2,opt,name=facility_name,json=facilityName"`
	xxx_hidden_Namespace    *string                `protobuf:"bytes,3,opt,name=namespace"`
	xxx_hidden_Name         *string                `protobuf:"bytes,4,opt,name=name"`
	XXX_raceDetectHookData  protoimpl.RaceDetectHookData
	XXX_presence            [1]uint32
	unknownFields           protoimpl.UnknownFields
	sizeCache               protoimpl.SizeCache
}

func (x *RestartInstanceRequest) Reset() {
	*x = RestartInstanceRequest{}
	mi := &file_api_virtual_machine_v1_virtual_machine_proto_msgTypes[11]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RestartInstanceRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RestartInstanceRequest) ProtoMessage() {}

func (x *RestartInstanceRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_virtual_machine_v1_virtual_machine_proto_msgTypes[11]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *RestartInstanceRequest) GetScopeUuid() string {
	if x != nil {
		if x.xxx_hidden_ScopeUuid != nil {
			return *x.xxx_hidden_ScopeUuid
		}
		return ""
	}
	return ""
}

func (x *RestartInstanceRequest) GetFacilityName() string {
	if x != nil {
		if x.xxx_hidden_FacilityName != nil {
			return *x.xxx_hidden_FacilityName
		}
		return ""
	}
	return ""
}

func (x *RestartInstanceRequest) GetNamespace() string {
	if x != nil {
		if x.xxx_hidden_Namespace != nil {
			return *x.xxx_hidden_Namespace
		}
		return ""
	}
	return ""
}

func (x *RestartInstanceRequest) GetName() string {
	if x != nil {
		if x.xxx_hidden_Name != nil {
			return *x.xxx_hidden_Name
		}
		return ""
	}
	return ""
}

func (x *RestartInstanceRequest) SetScopeUuid(v string) {
	x.xxx_hidden_ScopeUuid = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 0, 4)
}

func (x *RestartInstanceRequest) SetFacilityName(v string) {
	x.xxx_hidden_FacilityName = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 1, 4)
}

func (x *RestartInstanceRequest) SetNamespace(v string) {
	x.xxx_hidden_Namespace = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 2, 4)
}

func (x *RestartInstanceRequest) SetName(v string) {
	x.xxx_hidden_Name = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 3, 4)
}

func (x *RestartInstanceRequest) HasScopeUuid() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 0)
}

func (x *RestartInstanceRequest) HasFacilityName() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 1)
}

func (x *RestartInstanceRequest) HasNamespace() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 2)
}

func (x *RestartInstanceRequest) HasName() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 3)
}

func (x *RestartInstanceRequest) ClearScopeUuid() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 0)
	x.xxx_hidden_ScopeUuid = nil
}

func (x *RestartInstanceRequest) ClearFacilityName() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 1)
	x.xxx_hidden_FacilityName = nil
}

func (x *RestartInstanceRequest) ClearNamespace() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 2)
	x.xxx_hidden_Namespace = nil
}

func (x *RestartInstanceRequest) ClearName() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 3)
	x.xxx_hidden_Name = nil
}

type RestartInstanceRequest_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	ScopeUuid    *string
	FacilityName *string
	Namespace    *string
	Name         *string
}

func (b0 RestartInstanceRequest_builder) Build() *RestartInstanceRequest {
	m0 := &RestartInstanceRequest{}
	b, x := &b0, m0
	_, _ = b, x
	if b.ScopeUuid != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 0, 4)
		x.xxx_hidden_ScopeUuid = b.ScopeUuid
	}
	if b.FacilityName != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 1, 4)
		x.xxx_hidden_FacilityName = b.FacilityName
	}
	if b.Namespace != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 2, 4)
		x.xxx_hidden_Namespace = b.Namespace
	}
	if b.Name != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 3, 4)
		x.xxx_hidden_Name = b.Name
	}
	return m0
}

type PauseInstanceRequest struct {
	state                   protoimpl.MessageState `protogen:"opaque.v1"`
	xxx_hidden_ScopeUuid    *string                `protobuf:"bytes,1,opt,name=scope_uuid,json=scopeUuid"`
	xxx_hidden_FacilityName *string                `protobuf:"bytes,2,opt,name=facility_name,json=facilityName"`
	xxx_hidden_Namespace    *string                `protobuf:"bytes,3,opt,name=namespace"`
	xxx_hidden_Name         *string                `protobuf:"bytes,4,opt,name=name"`
	XXX_raceDetectHookData  protoimpl.RaceDetectHookData
	XXX_presence            [1]uint32
	unknownFields           protoimpl.UnknownFields
	sizeCache               protoimpl.SizeCache
}

func (x *PauseInstanceRequest) Reset() {
	*x = PauseInstanceRequest{}
	mi := &file_api_virtual_machine_v1_virtual_machine_proto_msgTypes[12]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *PauseInstanceRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PauseInstanceRequest) ProtoMessage() {}

func (x *PauseInstanceRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_virtual_machine_v1_virtual_machine_proto_msgTypes[12]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *PauseInstanceRequest) GetScopeUuid() string {
	if x != nil {
		if x.xxx_hidden_ScopeUuid != nil {
			return *x.xxx_hidden_ScopeUuid
		}
		return ""
	}
	return ""
}

func (x *PauseInstanceRequest) GetFacilityName() string {
	if x != nil {
		if x.xxx_hidden_FacilityName != nil {
			return *x.xxx_hidden_FacilityName
		}
		return ""
	}
	return ""
}

func (x *PauseInstanceRequest) GetNamespace() string {
	if x != nil {
		if x.xxx_hidden_Namespace != nil {
			return *x.xxx_hidden_Namespace
		}
		return ""
	}
	return ""
}

func (x *PauseInstanceRequest) GetName() string {
	if x != nil {
		if x.xxx_hidden_Name != nil {
			return *x.xxx_hidden_Name
		}
		return ""
	}
	return ""
}

func (x *PauseInstanceRequest) SetScopeUuid(v string) {
	x.xxx_hidden_ScopeUuid = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 0, 4)
}

func (x *PauseInstanceRequest) SetFacilityName(v string) {
	x.xxx_hidden_FacilityName = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 1, 4)
}

func (x *PauseInstanceRequest) SetNamespace(v string) {
	x.xxx_hidden_Namespace = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 2, 4)
}

func (x *PauseInstanceRequest) SetName(v string) {
	x.xxx_hidden_Name = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 3, 4)
}

func (x *PauseInstanceRequest) HasScopeUuid() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 0)
}

func (x *PauseInstanceRequest) HasFacilityName() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 1)
}

func (x *PauseInstanceRequest) HasNamespace() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 2)
}

func (x *PauseInstanceRequest) HasName() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 3)
}

func (x *PauseInstanceRequest) ClearScopeUuid() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 0)
	x.xxx_hidden_ScopeUuid = nil
}

func (x *PauseInstanceRequest) ClearFacilityName() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 1)
	x.xxx_hidden_FacilityName = nil
}

func (x *PauseInstanceRequest) ClearNamespace() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 2)
	x.xxx_hidden_Namespace = nil
}

func (x *PauseInstanceRequest) ClearName() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 3)
	x.xxx_hidden_Name = nil
}

type PauseInstanceRequest_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	ScopeUuid    *string
	FacilityName *string
	Namespace    *string
	Name         *string
}

func (b0 PauseInstanceRequest_builder) Build() *PauseInstanceRequest {
	m0 := &PauseInstanceRequest{}
	b, x := &b0, m0
	_, _ = b, x
	if b.ScopeUuid != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 0, 4)
		x.xxx_hidden_ScopeUuid = b.ScopeUuid
	}
	if b.FacilityName != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 1, 4)
		x.xxx_hidden_FacilityName = b.FacilityName
	}
	if b.Namespace != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 2, 4)
		x.xxx_hidden_Namespace = b.Namespace
	}
	if b.Name != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 3, 4)
		x.xxx_hidden_Name = b.Name
	}
	return m0
}

type ResumeInstanceRequest struct {
	state                   protoimpl.MessageState `protogen:"opaque.v1"`
	xxx_hidden_ScopeUuid    *string                `protobuf:"bytes,1,opt,name=scope_uuid,json=scopeUuid"`
	xxx_hidden_FacilityName *string                `protobuf:"bytes,2,opt,name=facility_name,json=facilityName"`
	xxx_hidden_Namespace    *string                `protobuf:"bytes,3,opt,name=namespace"`
	xxx_hidden_Name         *string                `protobuf:"bytes,4,opt,name=name"`
	XXX_raceDetectHookData  protoimpl.RaceDetectHookData
	XXX_presence            [1]uint32
	unknownFields           protoimpl.UnknownFields
	sizeCache               protoimpl.SizeCache
}

func (x *ResumeInstanceRequest) Reset() {
	*x = ResumeInstanceRequest{}
	mi := &file_api_virtual_machine_v1_virtual_machine_proto_msgTypes[13]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ResumeInstanceRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ResumeInstanceRequest) ProtoMessage() {}

func (x *ResumeInstanceRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_virtual_machine_v1_virtual_machine_proto_msgTypes[13]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *ResumeInstanceRequest) GetScopeUuid() string {
	if x != nil {
		if x.xxx_hidden_ScopeUuid != nil {
			return *x.xxx_hidden_ScopeUuid
		}
		return ""
	}
	return ""
}

func (x *ResumeInstanceRequest) GetFacilityName() string {
	if x != nil {
		if x.xxx_hidden_FacilityName != nil {
			return *x.xxx_hidden_FacilityName
		}
		return ""
	}
	return ""
}

func (x *ResumeInstanceRequest) GetNamespace() string {
	if x != nil {
		if x.xxx_hidden_Namespace != nil {
			return *x.xxx_hidden_Namespace
		}
		return ""
	}
	return ""
}

func (x *ResumeInstanceRequest) GetName() string {
	if x != nil {
		if x.xxx_hidden_Name != nil {
			return *x.xxx_hidden_Name
		}
		return ""
	}
	return ""
}

func (x *ResumeInstanceRequest) SetScopeUuid(v string) {
	x.xxx_hidden_ScopeUuid = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 0, 4)
}

func (x *ResumeInstanceRequest) SetFacilityName(v string) {
	x.xxx_hidden_FacilityName = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 1, 4)
}

func (x *ResumeInstanceRequest) SetNamespace(v string) {
	x.xxx_hidden_Namespace = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 2, 4)
}

func (x *ResumeInstanceRequest) SetName(v string) {
	x.xxx_hidden_Name = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 3, 4)
}

func (x *ResumeInstanceRequest) HasScopeUuid() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 0)
}

func (x *ResumeInstanceRequest) HasFacilityName() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 1)
}

func (x *ResumeInstanceRequest) HasNamespace() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 2)
}

func (x *ResumeInstanceRequest) HasName() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 3)
}

func (x *ResumeInstanceRequest) ClearScopeUuid() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 0)
	x.xxx_hidden_ScopeUuid = nil
}

func (x *ResumeInstanceRequest) ClearFacilityName() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 1)
	x.xxx_hidden_FacilityName = nil
}

func (x *ResumeInstanceRequest) ClearNamespace() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 2)
	x.xxx_hidden_Namespace = nil
}

func (x *ResumeInstanceRequest) ClearName() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 3)
	x.xxx_hidden_Name = nil
}

type ResumeInstanceRequest_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	ScopeUuid    *string
	FacilityName *string
	Namespace    *string
	Name         *string
}

func (b0 ResumeInstanceRequest_builder) Build() *ResumeInstanceRequest {
	m0 := &ResumeInstanceRequest{}
	b, x := &b0, m0
	_, _ = b, x
	if b.ScopeUuid != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 0, 4)
		x.xxx_hidden_ScopeUuid = b.ScopeUuid
	}
	if b.FacilityName != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 1, 4)
		x.xxx_hidden_FacilityName = b.FacilityName
	}
	if b.Namespace != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 2, 4)
		x.xxx_hidden_Namespace = b.Namespace
	}
	if b.Name != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 3, 4)
		x.xxx_hidden_Name = b.Name
	}
	return m0
}

type MigrateInstanceRequest struct {
	state                     protoimpl.MessageState `protogen:"opaque.v1"`
	xxx_hidden_ScopeUuid      *string                `protobuf:"bytes,1,opt,name=scope_uuid,json=scopeUuid"`
	xxx_hidden_FacilityName   *string                `protobuf:"bytes,2,opt,name=facility_name,json=facilityName"`
	xxx_hidden_Namespace      *string                `protobuf:"bytes,3,opt,name=namespace"`
	xxx_hidden_Name           *string                `protobuf:"bytes,4,opt,name=name"`
	xxx_hidden_TargetHostname *string                `protobuf:"bytes,11,opt,name=target_hostname,json=targetHostname"`
	XXX_raceDetectHookData    protoimpl.RaceDetectHookData
	XXX_presence              [1]uint32
	unknownFields             protoimpl.UnknownFields
	sizeCache                 protoimpl.SizeCache
}

func (x *MigrateInstanceRequest) Reset() {
	*x = MigrateInstanceRequest{}
	mi := &file_api_virtual_machine_v1_virtual_machine_proto_msgTypes[14]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *MigrateInstanceRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MigrateInstanceRequest) ProtoMessage() {}

func (x *MigrateInstanceRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_virtual_machine_v1_virtual_machine_proto_msgTypes[14]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *MigrateInstanceRequest) GetScopeUuid() string {
	if x != nil {
		if x.xxx_hidden_ScopeUuid != nil {
			return *x.xxx_hidden_ScopeUuid
		}
		return ""
	}
	return ""
}

func (x *MigrateInstanceRequest) GetFacilityName() string {
	if x != nil {
		if x.xxx_hidden_FacilityName != nil {
			return *x.xxx_hidden_FacilityName
		}
		return ""
	}
	return ""
}

func (x *MigrateInstanceRequest) GetNamespace() string {
	if x != nil {
		if x.xxx_hidden_Namespace != nil {
			return *x.xxx_hidden_Namespace
		}
		return ""
	}
	return ""
}

func (x *MigrateInstanceRequest) GetName() string {
	if x != nil {
		if x.xxx_hidden_Name != nil {
			return *x.xxx_hidden_Name
		}
		return ""
	}
	return ""
}

func (x *MigrateInstanceRequest) GetTargetHostname() string {
	if x != nil {
		if x.xxx_hidden_TargetHostname != nil {
			return *x.xxx_hidden_TargetHostname
		}
		return ""
	}
	return ""
}

func (x *MigrateInstanceRequest) SetScopeUuid(v string) {
	x.xxx_hidden_ScopeUuid = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 0, 5)
}

func (x *MigrateInstanceRequest) SetFacilityName(v string) {
	x.xxx_hidden_FacilityName = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 1, 5)
}

func (x *MigrateInstanceRequest) SetNamespace(v string) {
	x.xxx_hidden_Namespace = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 2, 5)
}

func (x *MigrateInstanceRequest) SetName(v string) {
	x.xxx_hidden_Name = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 3, 5)
}

func (x *MigrateInstanceRequest) SetTargetHostname(v string) {
	x.xxx_hidden_TargetHostname = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 4, 5)
}

func (x *MigrateInstanceRequest) HasScopeUuid() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 0)
}

func (x *MigrateInstanceRequest) HasFacilityName() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 1)
}

func (x *MigrateInstanceRequest) HasNamespace() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 2)
}

func (x *MigrateInstanceRequest) HasName() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 3)
}

func (x *MigrateInstanceRequest) HasTargetHostname() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 4)
}

func (x *MigrateInstanceRequest) ClearScopeUuid() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 0)
	x.xxx_hidden_ScopeUuid = nil
}

func (x *MigrateInstanceRequest) ClearFacilityName() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 1)
	x.xxx_hidden_FacilityName = nil
}

func (x *MigrateInstanceRequest) ClearNamespace() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 2)
	x.xxx_hidden_Namespace = nil
}

func (x *MigrateInstanceRequest) ClearName() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 3)
	x.xxx_hidden_Name = nil
}

func (x *MigrateInstanceRequest) ClearTargetHostname() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 4)
	x.xxx_hidden_TargetHostname = nil
}

type MigrateInstanceRequest_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	ScopeUuid      *string
	FacilityName   *string
	Namespace      *string
	Name           *string
	TargetHostname *string
}

func (b0 MigrateInstanceRequest_builder) Build() *MigrateInstanceRequest {
	m0 := &MigrateInstanceRequest{}
	b, x := &b0, m0
	_, _ = b, x
	if b.ScopeUuid != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 0, 5)
		x.xxx_hidden_ScopeUuid = b.ScopeUuid
	}
	if b.FacilityName != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 1, 5)
		x.xxx_hidden_FacilityName = b.FacilityName
	}
	if b.Namespace != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 2, 5)
		x.xxx_hidden_Namespace = b.Namespace
	}
	if b.Name != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 3, 5)
		x.xxx_hidden_Name = b.Name
	}
	if b.TargetHostname != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 4, 5)
		x.xxx_hidden_TargetHostname = b.TargetHostname
	}
	return m0
}

type CreateServiceRequest struct {
	state                   protoimpl.MessageState          `protogen:"opaque.v1"`
	xxx_hidden_ScopeUuid    *string                         `protobuf:"bytes,1,opt,name=scope_uuid,json=scopeUuid"`
	xxx_hidden_FacilityName *string                         `protobuf:"bytes,2,opt,name=facility_name,json=facilityName"`
	xxx_hidden_Namespace    *string                         `protobuf:"bytes,3,opt,name=namespace"`
	xxx_hidden_Name         *string                         `protobuf:"bytes,4,opt,name=name"`
	xxx_hidden_Ports        *[]*v1.Application_Service_Port `protobuf:"bytes,11,rep,name=ports"`
	XXX_raceDetectHookData  protoimpl.RaceDetectHookData
	XXX_presence            [1]uint32
	unknownFields           protoimpl.UnknownFields
	sizeCache               protoimpl.SizeCache
}

func (x *CreateServiceRequest) Reset() {
	*x = CreateServiceRequest{}
	mi := &file_api_virtual_machine_v1_virtual_machine_proto_msgTypes[15]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CreateServiceRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateServiceRequest) ProtoMessage() {}

func (x *CreateServiceRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_virtual_machine_v1_virtual_machine_proto_msgTypes[15]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *CreateServiceRequest) GetScopeUuid() string {
	if x != nil {
		if x.xxx_hidden_ScopeUuid != nil {
			return *x.xxx_hidden_ScopeUuid
		}
		return ""
	}
	return ""
}

func (x *CreateServiceRequest) GetFacilityName() string {
	if x != nil {
		if x.xxx_hidden_FacilityName != nil {
			return *x.xxx_hidden_FacilityName
		}
		return ""
	}
	return ""
}

func (x *CreateServiceRequest) GetNamespace() string {
	if x != nil {
		if x.xxx_hidden_Namespace != nil {
			return *x.xxx_hidden_Namespace
		}
		return ""
	}
	return ""
}

func (x *CreateServiceRequest) GetName() string {
	if x != nil {
		if x.xxx_hidden_Name != nil {
			return *x.xxx_hidden_Name
		}
		return ""
	}
	return ""
}

func (x *CreateServiceRequest) GetPorts() []*v1.Application_Service_Port {
	if x != nil {
		if x.xxx_hidden_Ports != nil {
			return *x.xxx_hidden_Ports
		}
	}
	return nil
}

func (x *CreateServiceRequest) SetScopeUuid(v string) {
	x.xxx_hidden_ScopeUuid = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 0, 5)
}

func (x *CreateServiceRequest) SetFacilityName(v string) {
	x.xxx_hidden_FacilityName = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 1, 5)
}

func (x *CreateServiceRequest) SetNamespace(v string) {
	x.xxx_hidden_Namespace = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 2, 5)
}

func (x *CreateServiceRequest) SetName(v string) {
	x.xxx_hidden_Name = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 3, 5)
}

func (x *CreateServiceRequest) SetPorts(v []*v1.Application_Service_Port) {
	x.xxx_hidden_Ports = &v
}

func (x *CreateServiceRequest) HasScopeUuid() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 0)
}

func (x *CreateServiceRequest) HasFacilityName() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 1)
}

func (x *CreateServiceRequest) HasNamespace() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 2)
}

func (x *CreateServiceRequest) HasName() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 3)
}

func (x *CreateServiceRequest) ClearScopeUuid() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 0)
	x.xxx_hidden_ScopeUuid = nil
}

func (x *CreateServiceRequest) ClearFacilityName() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 1)
	x.xxx_hidden_FacilityName = nil
}

func (x *CreateServiceRequest) ClearNamespace() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 2)
	x.xxx_hidden_Namespace = nil
}

func (x *CreateServiceRequest) ClearName() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 3)
	x.xxx_hidden_Name = nil
}

type CreateServiceRequest_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	ScopeUuid    *string
	FacilityName *string
	Namespace    *string
	Name         *string
	Ports        []*v1.Application_Service_Port
}

func (b0 CreateServiceRequest_builder) Build() *CreateServiceRequest {
	m0 := &CreateServiceRequest{}
	b, x := &b0, m0
	_, _ = b, x
	if b.ScopeUuid != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 0, 5)
		x.xxx_hidden_ScopeUuid = b.ScopeUuid
	}
	if b.FacilityName != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 1, 5)
		x.xxx_hidden_FacilityName = b.FacilityName
	}
	if b.Namespace != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 2, 5)
		x.xxx_hidden_Namespace = b.Namespace
	}
	if b.Name != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 3, 5)
		x.xxx_hidden_Name = b.Name
	}
	x.xxx_hidden_Ports = &b.Ports
	return m0
}

type UpdateServiceRequest struct {
	state                   protoimpl.MessageState          `protogen:"opaque.v1"`
	xxx_hidden_ScopeUuid    *string                         `protobuf:"bytes,1,opt,name=scope_uuid,json=scopeUuid"`
	xxx_hidden_FacilityName *string                         `protobuf:"bytes,2,opt,name=facility_name,json=facilityName"`
	xxx_hidden_Namespace    *string                         `protobuf:"bytes,3,opt,name=namespace"`
	xxx_hidden_Name         *string                         `protobuf:"bytes,4,opt,name=name"`
	xxx_hidden_Ports        *[]*v1.Application_Service_Port `protobuf:"bytes,11,rep,name=ports"`
	XXX_raceDetectHookData  protoimpl.RaceDetectHookData
	XXX_presence            [1]uint32
	unknownFields           protoimpl.UnknownFields
	sizeCache               protoimpl.SizeCache
}

func (x *UpdateServiceRequest) Reset() {
	*x = UpdateServiceRequest{}
	mi := &file_api_virtual_machine_v1_virtual_machine_proto_msgTypes[16]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UpdateServiceRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateServiceRequest) ProtoMessage() {}

func (x *UpdateServiceRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_virtual_machine_v1_virtual_machine_proto_msgTypes[16]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *UpdateServiceRequest) GetScopeUuid() string {
	if x != nil {
		if x.xxx_hidden_ScopeUuid != nil {
			return *x.xxx_hidden_ScopeUuid
		}
		return ""
	}
	return ""
}

func (x *UpdateServiceRequest) GetFacilityName() string {
	if x != nil {
		if x.xxx_hidden_FacilityName != nil {
			return *x.xxx_hidden_FacilityName
		}
		return ""
	}
	return ""
}

func (x *UpdateServiceRequest) GetNamespace() string {
	if x != nil {
		if x.xxx_hidden_Namespace != nil {
			return *x.xxx_hidden_Namespace
		}
		return ""
	}
	return ""
}

func (x *UpdateServiceRequest) GetName() string {
	if x != nil {
		if x.xxx_hidden_Name != nil {
			return *x.xxx_hidden_Name
		}
		return ""
	}
	return ""
}

func (x *UpdateServiceRequest) GetPorts() []*v1.Application_Service_Port {
	if x != nil {
		if x.xxx_hidden_Ports != nil {
			return *x.xxx_hidden_Ports
		}
	}
	return nil
}

func (x *UpdateServiceRequest) SetScopeUuid(v string) {
	x.xxx_hidden_ScopeUuid = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 0, 5)
}

func (x *UpdateServiceRequest) SetFacilityName(v string) {
	x.xxx_hidden_FacilityName = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 1, 5)
}

func (x *UpdateServiceRequest) SetNamespace(v string) {
	x.xxx_hidden_Namespace = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 2, 5)
}

func (x *UpdateServiceRequest) SetName(v string) {
	x.xxx_hidden_Name = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 3, 5)
}

func (x *UpdateServiceRequest) SetPorts(v []*v1.Application_Service_Port) {
	x.xxx_hidden_Ports = &v
}

func (x *UpdateServiceRequest) HasScopeUuid() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 0)
}

func (x *UpdateServiceRequest) HasFacilityName() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 1)
}

func (x *UpdateServiceRequest) HasNamespace() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 2)
}

func (x *UpdateServiceRequest) HasName() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 3)
}

func (x *UpdateServiceRequest) ClearScopeUuid() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 0)
	x.xxx_hidden_ScopeUuid = nil
}

func (x *UpdateServiceRequest) ClearFacilityName() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 1)
	x.xxx_hidden_FacilityName = nil
}

func (x *UpdateServiceRequest) ClearNamespace() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 2)
	x.xxx_hidden_Namespace = nil
}

func (x *UpdateServiceRequest) ClearName() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 3)
	x.xxx_hidden_Name = nil
}

type UpdateServiceRequest_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	ScopeUuid    *string
	FacilityName *string
	Namespace    *string
	Name         *string
	Ports        []*v1.Application_Service_Port
}

func (b0 UpdateServiceRequest_builder) Build() *UpdateServiceRequest {
	m0 := &UpdateServiceRequest{}
	b, x := &b0, m0
	_, _ = b, x
	if b.ScopeUuid != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 0, 5)
		x.xxx_hidden_ScopeUuid = b.ScopeUuid
	}
	if b.FacilityName != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 1, 5)
		x.xxx_hidden_FacilityName = b.FacilityName
	}
	if b.Namespace != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 2, 5)
		x.xxx_hidden_Namespace = b.Namespace
	}
	if b.Name != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 3, 5)
		x.xxx_hidden_Name = b.Name
	}
	x.xxx_hidden_Ports = &b.Ports
	return m0
}

type DeleteServiceRequest struct {
	state                   protoimpl.MessageState `protogen:"opaque.v1"`
	xxx_hidden_ScopeUuid    *string                `protobuf:"bytes,1,opt,name=scope_uuid,json=scopeUuid"`
	xxx_hidden_FacilityName *string                `protobuf:"bytes,2,opt,name=facility_name,json=facilityName"`
	xxx_hidden_Namespace    *string                `protobuf:"bytes,3,opt,name=namespace"`
	xxx_hidden_Name         *string                `protobuf:"bytes,4,opt,name=name"`
	XXX_raceDetectHookData  protoimpl.RaceDetectHookData
	XXX_presence            [1]uint32
	unknownFields           protoimpl.UnknownFields
	sizeCache               protoimpl.SizeCache
}

func (x *DeleteServiceRequest) Reset() {
	*x = DeleteServiceRequest{}
	mi := &file_api_virtual_machine_v1_virtual_machine_proto_msgTypes[17]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DeleteServiceRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteServiceRequest) ProtoMessage() {}

func (x *DeleteServiceRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_virtual_machine_v1_virtual_machine_proto_msgTypes[17]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *DeleteServiceRequest) GetScopeUuid() string {
	if x != nil {
		if x.xxx_hidden_ScopeUuid != nil {
			return *x.xxx_hidden_ScopeUuid
		}
		return ""
	}
	return ""
}

func (x *DeleteServiceRequest) GetFacilityName() string {
	if x != nil {
		if x.xxx_hidden_FacilityName != nil {
			return *x.xxx_hidden_FacilityName
		}
		return ""
	}
	return ""
}

func (x *DeleteServiceRequest) GetNamespace() string {
	if x != nil {
		if x.xxx_hidden_Namespace != nil {
			return *x.xxx_hidden_Namespace
		}
		return ""
	}
	return ""
}

func (x *DeleteServiceRequest) GetName() string {
	if x != nil {
		if x.xxx_hidden_Name != nil {
			return *x.xxx_hidden_Name
		}
		return ""
	}
	return ""
}

func (x *DeleteServiceRequest) SetScopeUuid(v string) {
	x.xxx_hidden_ScopeUuid = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 0, 4)
}

func (x *DeleteServiceRequest) SetFacilityName(v string) {
	x.xxx_hidden_FacilityName = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 1, 4)
}

func (x *DeleteServiceRequest) SetNamespace(v string) {
	x.xxx_hidden_Namespace = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 2, 4)
}

func (x *DeleteServiceRequest) SetName(v string) {
	x.xxx_hidden_Name = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 3, 4)
}

func (x *DeleteServiceRequest) HasScopeUuid() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 0)
}

func (x *DeleteServiceRequest) HasFacilityName() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 1)
}

func (x *DeleteServiceRequest) HasNamespace() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 2)
}

func (x *DeleteServiceRequest) HasName() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 3)
}

func (x *DeleteServiceRequest) ClearScopeUuid() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 0)
	x.xxx_hidden_ScopeUuid = nil
}

func (x *DeleteServiceRequest) ClearFacilityName() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 1)
	x.xxx_hidden_FacilityName = nil
}

func (x *DeleteServiceRequest) ClearNamespace() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 2)
	x.xxx_hidden_Namespace = nil
}

func (x *DeleteServiceRequest) ClearName() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 3)
	x.xxx_hidden_Name = nil
}

type DeleteServiceRequest_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	ScopeUuid    *string
	FacilityName *string
	Namespace    *string
	Name         *string
}

func (b0 DeleteServiceRequest_builder) Build() *DeleteServiceRequest {
	m0 := &DeleteServiceRequest{}
	b, x := &b0, m0
	_, _ = b, x
	if b.ScopeUuid != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 0, 4)
		x.xxx_hidden_ScopeUuid = b.ScopeUuid
	}
	if b.FacilityName != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 1, 4)
		x.xxx_hidden_FacilityName = b.FacilityName
	}
	if b.Namespace != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 2, 4)
		x.xxx_hidden_Namespace = b.Namespace
	}
	if b.Name != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 3, 4)
		x.xxx_hidden_Name = b.Name
	}
	return m0
}

type CreateSnapshotRequest struct {
	state                         protoimpl.MessageState `protogen:"opaque.v1"`
	xxx_hidden_ScopeUuid          *string                `protobuf:"bytes,1,opt,name=scope_uuid,json=scopeUuid"`
	xxx_hidden_FacilityName       *string                `protobuf:"bytes,2,opt,name=facility_name,json=facilityName"`
	xxx_hidden_Namespace          *string                `protobuf:"bytes,3,opt,name=namespace"`
	xxx_hidden_Name               *string                `protobuf:"bytes,4,opt,name=name"`
	xxx_hidden_Description        *string                `protobuf:"bytes,5,opt,name=description"`
	xxx_hidden_VirtualMachineName *string                `protobuf:"bytes,11,opt,name=virtual_machine_name,json=virtualMachineName"`
	XXX_raceDetectHookData        protoimpl.RaceDetectHookData
	XXX_presence                  [1]uint32
	unknownFields                 protoimpl.UnknownFields
	sizeCache                     protoimpl.SizeCache
}

func (x *CreateSnapshotRequest) Reset() {
	*x = CreateSnapshotRequest{}
	mi := &file_api_virtual_machine_v1_virtual_machine_proto_msgTypes[18]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CreateSnapshotRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateSnapshotRequest) ProtoMessage() {}

func (x *CreateSnapshotRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_virtual_machine_v1_virtual_machine_proto_msgTypes[18]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *CreateSnapshotRequest) GetScopeUuid() string {
	if x != nil {
		if x.xxx_hidden_ScopeUuid != nil {
			return *x.xxx_hidden_ScopeUuid
		}
		return ""
	}
	return ""
}

func (x *CreateSnapshotRequest) GetFacilityName() string {
	if x != nil {
		if x.xxx_hidden_FacilityName != nil {
			return *x.xxx_hidden_FacilityName
		}
		return ""
	}
	return ""
}

func (x *CreateSnapshotRequest) GetNamespace() string {
	if x != nil {
		if x.xxx_hidden_Namespace != nil {
			return *x.xxx_hidden_Namespace
		}
		return ""
	}
	return ""
}

func (x *CreateSnapshotRequest) GetName() string {
	if x != nil {
		if x.xxx_hidden_Name != nil {
			return *x.xxx_hidden_Name
		}
		return ""
	}
	return ""
}

func (x *CreateSnapshotRequest) GetDescription() string {
	if x != nil {
		if x.xxx_hidden_Description != nil {
			return *x.xxx_hidden_Description
		}
		return ""
	}
	return ""
}

func (x *CreateSnapshotRequest) GetVirtualMachineName() string {
	if x != nil {
		if x.xxx_hidden_VirtualMachineName != nil {
			return *x.xxx_hidden_VirtualMachineName
		}
		return ""
	}
	return ""
}

func (x *CreateSnapshotRequest) SetScopeUuid(v string) {
	x.xxx_hidden_ScopeUuid = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 0, 6)
}

func (x *CreateSnapshotRequest) SetFacilityName(v string) {
	x.xxx_hidden_FacilityName = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 1, 6)
}

func (x *CreateSnapshotRequest) SetNamespace(v string) {
	x.xxx_hidden_Namespace = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 2, 6)
}

func (x *CreateSnapshotRequest) SetName(v string) {
	x.xxx_hidden_Name = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 3, 6)
}

func (x *CreateSnapshotRequest) SetDescription(v string) {
	x.xxx_hidden_Description = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 4, 6)
}

func (x *CreateSnapshotRequest) SetVirtualMachineName(v string) {
	x.xxx_hidden_VirtualMachineName = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 5, 6)
}

func (x *CreateSnapshotRequest) HasScopeUuid() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 0)
}

func (x *CreateSnapshotRequest) HasFacilityName() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 1)
}

func (x *CreateSnapshotRequest) HasNamespace() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 2)
}

func (x *CreateSnapshotRequest) HasName() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 3)
}

func (x *CreateSnapshotRequest) HasDescription() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 4)
}

func (x *CreateSnapshotRequest) HasVirtualMachineName() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 5)
}

func (x *CreateSnapshotRequest) ClearScopeUuid() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 0)
	x.xxx_hidden_ScopeUuid = nil
}

func (x *CreateSnapshotRequest) ClearFacilityName() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 1)
	x.xxx_hidden_FacilityName = nil
}

func (x *CreateSnapshotRequest) ClearNamespace() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 2)
	x.xxx_hidden_Namespace = nil
}

func (x *CreateSnapshotRequest) ClearName() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 3)
	x.xxx_hidden_Name = nil
}

func (x *CreateSnapshotRequest) ClearDescription() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 4)
	x.xxx_hidden_Description = nil
}

func (x *CreateSnapshotRequest) ClearVirtualMachineName() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 5)
	x.xxx_hidden_VirtualMachineName = nil
}

type CreateSnapshotRequest_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	ScopeUuid          *string
	FacilityName       *string
	Namespace          *string
	Name               *string
	Description        *string
	VirtualMachineName *string
}

func (b0 CreateSnapshotRequest_builder) Build() *CreateSnapshotRequest {
	m0 := &CreateSnapshotRequest{}
	b, x := &b0, m0
	_, _ = b, x
	if b.ScopeUuid != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 0, 6)
		x.xxx_hidden_ScopeUuid = b.ScopeUuid
	}
	if b.FacilityName != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 1, 6)
		x.xxx_hidden_FacilityName = b.FacilityName
	}
	if b.Namespace != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 2, 6)
		x.xxx_hidden_Namespace = b.Namespace
	}
	if b.Name != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 3, 6)
		x.xxx_hidden_Name = b.Name
	}
	if b.Description != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 4, 6)
		x.xxx_hidden_Description = b.Description
	}
	if b.VirtualMachineName != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 5, 6)
		x.xxx_hidden_VirtualMachineName = b.VirtualMachineName
	}
	return m0
}

type DeleteSnapshotRequest struct {
	state                   protoimpl.MessageState `protogen:"opaque.v1"`
	xxx_hidden_ScopeUuid    *string                `protobuf:"bytes,1,opt,name=scope_uuid,json=scopeUuid"`
	xxx_hidden_FacilityName *string                `protobuf:"bytes,2,opt,name=facility_name,json=facilityName"`
	xxx_hidden_Namespace    *string                `protobuf:"bytes,3,opt,name=namespace"`
	xxx_hidden_Name         *string                `protobuf:"bytes,4,opt,name=name"`
	XXX_raceDetectHookData  protoimpl.RaceDetectHookData
	XXX_presence            [1]uint32
	unknownFields           protoimpl.UnknownFields
	sizeCache               protoimpl.SizeCache
}

func (x *DeleteSnapshotRequest) Reset() {
	*x = DeleteSnapshotRequest{}
	mi := &file_api_virtual_machine_v1_virtual_machine_proto_msgTypes[19]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DeleteSnapshotRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteSnapshotRequest) ProtoMessage() {}

func (x *DeleteSnapshotRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_virtual_machine_v1_virtual_machine_proto_msgTypes[19]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *DeleteSnapshotRequest) GetScopeUuid() string {
	if x != nil {
		if x.xxx_hidden_ScopeUuid != nil {
			return *x.xxx_hidden_ScopeUuid
		}
		return ""
	}
	return ""
}

func (x *DeleteSnapshotRequest) GetFacilityName() string {
	if x != nil {
		if x.xxx_hidden_FacilityName != nil {
			return *x.xxx_hidden_FacilityName
		}
		return ""
	}
	return ""
}

func (x *DeleteSnapshotRequest) GetNamespace() string {
	if x != nil {
		if x.xxx_hidden_Namespace != nil {
			return *x.xxx_hidden_Namespace
		}
		return ""
	}
	return ""
}

func (x *DeleteSnapshotRequest) GetName() string {
	if x != nil {
		if x.xxx_hidden_Name != nil {
			return *x.xxx_hidden_Name
		}
		return ""
	}
	return ""
}

func (x *DeleteSnapshotRequest) SetScopeUuid(v string) {
	x.xxx_hidden_ScopeUuid = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 0, 4)
}

func (x *DeleteSnapshotRequest) SetFacilityName(v string) {
	x.xxx_hidden_FacilityName = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 1, 4)
}

func (x *DeleteSnapshotRequest) SetNamespace(v string) {
	x.xxx_hidden_Namespace = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 2, 4)
}

func (x *DeleteSnapshotRequest) SetName(v string) {
	x.xxx_hidden_Name = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 3, 4)
}

func (x *DeleteSnapshotRequest) HasScopeUuid() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 0)
}

func (x *DeleteSnapshotRequest) HasFacilityName() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 1)
}

func (x *DeleteSnapshotRequest) HasNamespace() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 2)
}

func (x *DeleteSnapshotRequest) HasName() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 3)
}

func (x *DeleteSnapshotRequest) ClearScopeUuid() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 0)
	x.xxx_hidden_ScopeUuid = nil
}

func (x *DeleteSnapshotRequest) ClearFacilityName() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 1)
	x.xxx_hidden_FacilityName = nil
}

func (x *DeleteSnapshotRequest) ClearNamespace() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 2)
	x.xxx_hidden_Namespace = nil
}

func (x *DeleteSnapshotRequest) ClearName() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 3)
	x.xxx_hidden_Name = nil
}

type DeleteSnapshotRequest_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	ScopeUuid    *string
	FacilityName *string
	Namespace    *string
	Name         *string
}

func (b0 DeleteSnapshotRequest_builder) Build() *DeleteSnapshotRequest {
	m0 := &DeleteSnapshotRequest{}
	b, x := &b0, m0
	_, _ = b, x
	if b.ScopeUuid != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 0, 4)
		x.xxx_hidden_ScopeUuid = b.ScopeUuid
	}
	if b.FacilityName != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 1, 4)
		x.xxx_hidden_FacilityName = b.FacilityName
	}
	if b.Namespace != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 2, 4)
		x.xxx_hidden_Namespace = b.Namespace
	}
	if b.Name != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 3, 4)
		x.xxx_hidden_Name = b.Name
	}
	return m0
}

type CreateRestoreRequest struct {
	state                         protoimpl.MessageState `protogen:"opaque.v1"`
	xxx_hidden_ScopeUuid          *string                `protobuf:"bytes,1,opt,name=scope_uuid,json=scopeUuid"`
	xxx_hidden_FacilityName       *string                `protobuf:"bytes,2,opt,name=facility_name,json=facilityName"`
	xxx_hidden_Namespace          *string                `protobuf:"bytes,3,opt,name=namespace"`
	xxx_hidden_Name               *string                `protobuf:"bytes,4,opt,name=name"`
	xxx_hidden_VirtualMachineName *string                `protobuf:"bytes,11,opt,name=virtual_machine_name,json=virtualMachineName"`
	xxx_hidden_SnapshotName       *string                `protobuf:"bytes,12,opt,name=snapshot_name,json=snapshotName"`
	XXX_raceDetectHookData        protoimpl.RaceDetectHookData
	XXX_presence                  [1]uint32
	unknownFields                 protoimpl.UnknownFields
	sizeCache                     protoimpl.SizeCache
}

func (x *CreateRestoreRequest) Reset() {
	*x = CreateRestoreRequest{}
	mi := &file_api_virtual_machine_v1_virtual_machine_proto_msgTypes[20]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CreateRestoreRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateRestoreRequest) ProtoMessage() {}

func (x *CreateRestoreRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_virtual_machine_v1_virtual_machine_proto_msgTypes[20]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *CreateRestoreRequest) GetScopeUuid() string {
	if x != nil {
		if x.xxx_hidden_ScopeUuid != nil {
			return *x.xxx_hidden_ScopeUuid
		}
		return ""
	}
	return ""
}

func (x *CreateRestoreRequest) GetFacilityName() string {
	if x != nil {
		if x.xxx_hidden_FacilityName != nil {
			return *x.xxx_hidden_FacilityName
		}
		return ""
	}
	return ""
}

func (x *CreateRestoreRequest) GetNamespace() string {
	if x != nil {
		if x.xxx_hidden_Namespace != nil {
			return *x.xxx_hidden_Namespace
		}
		return ""
	}
	return ""
}

func (x *CreateRestoreRequest) GetName() string {
	if x != nil {
		if x.xxx_hidden_Name != nil {
			return *x.xxx_hidden_Name
		}
		return ""
	}
	return ""
}

func (x *CreateRestoreRequest) GetVirtualMachineName() string {
	if x != nil {
		if x.xxx_hidden_VirtualMachineName != nil {
			return *x.xxx_hidden_VirtualMachineName
		}
		return ""
	}
	return ""
}

func (x *CreateRestoreRequest) GetSnapshotName() string {
	if x != nil {
		if x.xxx_hidden_SnapshotName != nil {
			return *x.xxx_hidden_SnapshotName
		}
		return ""
	}
	return ""
}

func (x *CreateRestoreRequest) SetScopeUuid(v string) {
	x.xxx_hidden_ScopeUuid = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 0, 6)
}

func (x *CreateRestoreRequest) SetFacilityName(v string) {
	x.xxx_hidden_FacilityName = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 1, 6)
}

func (x *CreateRestoreRequest) SetNamespace(v string) {
	x.xxx_hidden_Namespace = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 2, 6)
}

func (x *CreateRestoreRequest) SetName(v string) {
	x.xxx_hidden_Name = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 3, 6)
}

func (x *CreateRestoreRequest) SetVirtualMachineName(v string) {
	x.xxx_hidden_VirtualMachineName = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 4, 6)
}

func (x *CreateRestoreRequest) SetSnapshotName(v string) {
	x.xxx_hidden_SnapshotName = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 5, 6)
}

func (x *CreateRestoreRequest) HasScopeUuid() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 0)
}

func (x *CreateRestoreRequest) HasFacilityName() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 1)
}

func (x *CreateRestoreRequest) HasNamespace() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 2)
}

func (x *CreateRestoreRequest) HasName() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 3)
}

func (x *CreateRestoreRequest) HasVirtualMachineName() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 4)
}

func (x *CreateRestoreRequest) HasSnapshotName() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 5)
}

func (x *CreateRestoreRequest) ClearScopeUuid() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 0)
	x.xxx_hidden_ScopeUuid = nil
}

func (x *CreateRestoreRequest) ClearFacilityName() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 1)
	x.xxx_hidden_FacilityName = nil
}

func (x *CreateRestoreRequest) ClearNamespace() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 2)
	x.xxx_hidden_Namespace = nil
}

func (x *CreateRestoreRequest) ClearName() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 3)
	x.xxx_hidden_Name = nil
}

func (x *CreateRestoreRequest) ClearVirtualMachineName() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 4)
	x.xxx_hidden_VirtualMachineName = nil
}

func (x *CreateRestoreRequest) ClearSnapshotName() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 5)
	x.xxx_hidden_SnapshotName = nil
}

type CreateRestoreRequest_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	ScopeUuid          *string
	FacilityName       *string
	Namespace          *string
	Name               *string
	VirtualMachineName *string
	SnapshotName       *string
}

func (b0 CreateRestoreRequest_builder) Build() *CreateRestoreRequest {
	m0 := &CreateRestoreRequest{}
	b, x := &b0, m0
	_, _ = b, x
	if b.ScopeUuid != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 0, 6)
		x.xxx_hidden_ScopeUuid = b.ScopeUuid
	}
	if b.FacilityName != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 1, 6)
		x.xxx_hidden_FacilityName = b.FacilityName
	}
	if b.Namespace != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 2, 6)
		x.xxx_hidden_Namespace = b.Namespace
	}
	if b.Name != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 3, 6)
		x.xxx_hidden_Name = b.Name
	}
	if b.VirtualMachineName != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 4, 6)
		x.xxx_hidden_VirtualMachineName = b.VirtualMachineName
	}
	if b.SnapshotName != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 5, 6)
		x.xxx_hidden_SnapshotName = b.SnapshotName
	}
	return m0
}

type DeleteRestoreRequest struct {
	state                   protoimpl.MessageState `protogen:"opaque.v1"`
	xxx_hidden_ScopeUuid    *string                `protobuf:"bytes,1,opt,name=scope_uuid,json=scopeUuid"`
	xxx_hidden_FacilityName *string                `protobuf:"bytes,2,opt,name=facility_name,json=facilityName"`
	xxx_hidden_Namespace    *string                `protobuf:"bytes,3,opt,name=namespace"`
	xxx_hidden_Name         *string                `protobuf:"bytes,4,opt,name=name"`
	XXX_raceDetectHookData  protoimpl.RaceDetectHookData
	XXX_presence            [1]uint32
	unknownFields           protoimpl.UnknownFields
	sizeCache               protoimpl.SizeCache
}

func (x *DeleteRestoreRequest) Reset() {
	*x = DeleteRestoreRequest{}
	mi := &file_api_virtual_machine_v1_virtual_machine_proto_msgTypes[21]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DeleteRestoreRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteRestoreRequest) ProtoMessage() {}

func (x *DeleteRestoreRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_virtual_machine_v1_virtual_machine_proto_msgTypes[21]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *DeleteRestoreRequest) GetScopeUuid() string {
	if x != nil {
		if x.xxx_hidden_ScopeUuid != nil {
			return *x.xxx_hidden_ScopeUuid
		}
		return ""
	}
	return ""
}

func (x *DeleteRestoreRequest) GetFacilityName() string {
	if x != nil {
		if x.xxx_hidden_FacilityName != nil {
			return *x.xxx_hidden_FacilityName
		}
		return ""
	}
	return ""
}

func (x *DeleteRestoreRequest) GetNamespace() string {
	if x != nil {
		if x.xxx_hidden_Namespace != nil {
			return *x.xxx_hidden_Namespace
		}
		return ""
	}
	return ""
}

func (x *DeleteRestoreRequest) GetName() string {
	if x != nil {
		if x.xxx_hidden_Name != nil {
			return *x.xxx_hidden_Name
		}
		return ""
	}
	return ""
}

func (x *DeleteRestoreRequest) SetScopeUuid(v string) {
	x.xxx_hidden_ScopeUuid = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 0, 4)
}

func (x *DeleteRestoreRequest) SetFacilityName(v string) {
	x.xxx_hidden_FacilityName = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 1, 4)
}

func (x *DeleteRestoreRequest) SetNamespace(v string) {
	x.xxx_hidden_Namespace = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 2, 4)
}

func (x *DeleteRestoreRequest) SetName(v string) {
	x.xxx_hidden_Name = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 3, 4)
}

func (x *DeleteRestoreRequest) HasScopeUuid() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 0)
}

func (x *DeleteRestoreRequest) HasFacilityName() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 1)
}

func (x *DeleteRestoreRequest) HasNamespace() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 2)
}

func (x *DeleteRestoreRequest) HasName() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 3)
}

func (x *DeleteRestoreRequest) ClearScopeUuid() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 0)
	x.xxx_hidden_ScopeUuid = nil
}

func (x *DeleteRestoreRequest) ClearFacilityName() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 1)
	x.xxx_hidden_FacilityName = nil
}

func (x *DeleteRestoreRequest) ClearNamespace() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 2)
	x.xxx_hidden_Namespace = nil
}

func (x *DeleteRestoreRequest) ClearName() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 3)
	x.xxx_hidden_Name = nil
}

type DeleteRestoreRequest_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	ScopeUuid    *string
	FacilityName *string
	Namespace    *string
	Name         *string
}

func (b0 DeleteRestoreRequest_builder) Build() *DeleteRestoreRequest {
	m0 := &DeleteRestoreRequest{}
	b, x := &b0, m0
	_, _ = b, x
	if b.ScopeUuid != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 0, 4)
		x.xxx_hidden_ScopeUuid = b.ScopeUuid
	}
	if b.FacilityName != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 1, 4)
		x.xxx_hidden_FacilityName = b.FacilityName
	}
	if b.Namespace != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 2, 4)
		x.xxx_hidden_Namespace = b.Namespace
	}
	if b.Name != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 3, 4)
		x.xxx_hidden_Name = b.Name
	}
	return m0
}

type CreateDiskRequest struct {
	state                     protoimpl.MessageState `protogen:"opaque.v1"`
	xxx_hidden_ScopeUuid      *string                `protobuf:"bytes,1,opt,name=scope_uuid,json=scopeUuid"`
	xxx_hidden_FacilityName   *string                `protobuf:"bytes,2,opt,name=facility_name,json=facilityName"`
	xxx_hidden_Namespace      *string                `protobuf:"bytes,3,opt,name=namespace"`
	xxx_hidden_Name           *string                `protobuf:"bytes,4,opt,name=name"`
	xxx_hidden_DataVolumeName *string                `protobuf:"bytes,11,opt,name=data_volume_name,json=dataVolumeName"`
	XXX_raceDetectHookData    protoimpl.RaceDetectHookData
	XXX_presence              [1]uint32
	unknownFields             protoimpl.UnknownFields
	sizeCache                 protoimpl.SizeCache
}

func (x *CreateDiskRequest) Reset() {
	*x = CreateDiskRequest{}
	mi := &file_api_virtual_machine_v1_virtual_machine_proto_msgTypes[22]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CreateDiskRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateDiskRequest) ProtoMessage() {}

func (x *CreateDiskRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_virtual_machine_v1_virtual_machine_proto_msgTypes[22]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *CreateDiskRequest) GetScopeUuid() string {
	if x != nil {
		if x.xxx_hidden_ScopeUuid != nil {
			return *x.xxx_hidden_ScopeUuid
		}
		return ""
	}
	return ""
}

func (x *CreateDiskRequest) GetFacilityName() string {
	if x != nil {
		if x.xxx_hidden_FacilityName != nil {
			return *x.xxx_hidden_FacilityName
		}
		return ""
	}
	return ""
}

func (x *CreateDiskRequest) GetNamespace() string {
	if x != nil {
		if x.xxx_hidden_Namespace != nil {
			return *x.xxx_hidden_Namespace
		}
		return ""
	}
	return ""
}

func (x *CreateDiskRequest) GetName() string {
	if x != nil {
		if x.xxx_hidden_Name != nil {
			return *x.xxx_hidden_Name
		}
		return ""
	}
	return ""
}

func (x *CreateDiskRequest) GetDataVolumeName() string {
	if x != nil {
		if x.xxx_hidden_DataVolumeName != nil {
			return *x.xxx_hidden_DataVolumeName
		}
		return ""
	}
	return ""
}

func (x *CreateDiskRequest) SetScopeUuid(v string) {
	x.xxx_hidden_ScopeUuid = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 0, 5)
}

func (x *CreateDiskRequest) SetFacilityName(v string) {
	x.xxx_hidden_FacilityName = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 1, 5)
}

func (x *CreateDiskRequest) SetNamespace(v string) {
	x.xxx_hidden_Namespace = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 2, 5)
}

func (x *CreateDiskRequest) SetName(v string) {
	x.xxx_hidden_Name = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 3, 5)
}

func (x *CreateDiskRequest) SetDataVolumeName(v string) {
	x.xxx_hidden_DataVolumeName = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 4, 5)
}

func (x *CreateDiskRequest) HasScopeUuid() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 0)
}

func (x *CreateDiskRequest) HasFacilityName() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 1)
}

func (x *CreateDiskRequest) HasNamespace() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 2)
}

func (x *CreateDiskRequest) HasName() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 3)
}

func (x *CreateDiskRequest) HasDataVolumeName() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 4)
}

func (x *CreateDiskRequest) ClearScopeUuid() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 0)
	x.xxx_hidden_ScopeUuid = nil
}

func (x *CreateDiskRequest) ClearFacilityName() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 1)
	x.xxx_hidden_FacilityName = nil
}

func (x *CreateDiskRequest) ClearNamespace() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 2)
	x.xxx_hidden_Namespace = nil
}

func (x *CreateDiskRequest) ClearName() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 3)
	x.xxx_hidden_Name = nil
}

func (x *CreateDiskRequest) ClearDataVolumeName() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 4)
	x.xxx_hidden_DataVolumeName = nil
}

type CreateDiskRequest_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	ScopeUuid      *string
	FacilityName   *string
	Namespace      *string
	Name           *string
	DataVolumeName *string
}

func (b0 CreateDiskRequest_builder) Build() *CreateDiskRequest {
	m0 := &CreateDiskRequest{}
	b, x := &b0, m0
	_, _ = b, x
	if b.ScopeUuid != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 0, 5)
		x.xxx_hidden_ScopeUuid = b.ScopeUuid
	}
	if b.FacilityName != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 1, 5)
		x.xxx_hidden_FacilityName = b.FacilityName
	}
	if b.Namespace != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 2, 5)
		x.xxx_hidden_Namespace = b.Namespace
	}
	if b.Name != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 3, 5)
		x.xxx_hidden_Name = b.Name
	}
	if b.DataVolumeName != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 4, 5)
		x.xxx_hidden_DataVolumeName = b.DataVolumeName
	}
	return m0
}

type DeleteDiskRequest struct {
	state                   protoimpl.MessageState `protogen:"opaque.v1"`
	xxx_hidden_ScopeUuid    *string                `protobuf:"bytes,1,opt,name=scope_uuid,json=scopeUuid"`
	xxx_hidden_FacilityName *string                `protobuf:"bytes,2,opt,name=facility_name,json=facilityName"`
	xxx_hidden_Namespace    *string                `protobuf:"bytes,3,opt,name=namespace"`
	xxx_hidden_Name         *string                `protobuf:"bytes,4,opt,name=name"`
	XXX_raceDetectHookData  protoimpl.RaceDetectHookData
	XXX_presence            [1]uint32
	unknownFields           protoimpl.UnknownFields
	sizeCache               protoimpl.SizeCache
}

func (x *DeleteDiskRequest) Reset() {
	*x = DeleteDiskRequest{}
	mi := &file_api_virtual_machine_v1_virtual_machine_proto_msgTypes[23]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DeleteDiskRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteDiskRequest) ProtoMessage() {}

func (x *DeleteDiskRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_virtual_machine_v1_virtual_machine_proto_msgTypes[23]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *DeleteDiskRequest) GetScopeUuid() string {
	if x != nil {
		if x.xxx_hidden_ScopeUuid != nil {
			return *x.xxx_hidden_ScopeUuid
		}
		return ""
	}
	return ""
}

func (x *DeleteDiskRequest) GetFacilityName() string {
	if x != nil {
		if x.xxx_hidden_FacilityName != nil {
			return *x.xxx_hidden_FacilityName
		}
		return ""
	}
	return ""
}

func (x *DeleteDiskRequest) GetNamespace() string {
	if x != nil {
		if x.xxx_hidden_Namespace != nil {
			return *x.xxx_hidden_Namespace
		}
		return ""
	}
	return ""
}

func (x *DeleteDiskRequest) GetName() string {
	if x != nil {
		if x.xxx_hidden_Name != nil {
			return *x.xxx_hidden_Name
		}
		return ""
	}
	return ""
}

func (x *DeleteDiskRequest) SetScopeUuid(v string) {
	x.xxx_hidden_ScopeUuid = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 0, 4)
}

func (x *DeleteDiskRequest) SetFacilityName(v string) {
	x.xxx_hidden_FacilityName = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 1, 4)
}

func (x *DeleteDiskRequest) SetNamespace(v string) {
	x.xxx_hidden_Namespace = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 2, 4)
}

func (x *DeleteDiskRequest) SetName(v string) {
	x.xxx_hidden_Name = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 3, 4)
}

func (x *DeleteDiskRequest) HasScopeUuid() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 0)
}

func (x *DeleteDiskRequest) HasFacilityName() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 1)
}

func (x *DeleteDiskRequest) HasNamespace() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 2)
}

func (x *DeleteDiskRequest) HasName() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 3)
}

func (x *DeleteDiskRequest) ClearScopeUuid() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 0)
	x.xxx_hidden_ScopeUuid = nil
}

func (x *DeleteDiskRequest) ClearFacilityName() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 1)
	x.xxx_hidden_FacilityName = nil
}

func (x *DeleteDiskRequest) ClearNamespace() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 2)
	x.xxx_hidden_Namespace = nil
}

func (x *DeleteDiskRequest) ClearName() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 3)
	x.xxx_hidden_Name = nil
}

type DeleteDiskRequest_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	ScopeUuid    *string
	FacilityName *string
	Namespace    *string
	Name         *string
}

func (b0 DeleteDiskRequest_builder) Build() *DeleteDiskRequest {
	m0 := &DeleteDiskRequest{}
	b, x := &b0, m0
	_, _ = b, x
	if b.ScopeUuid != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 0, 4)
		x.xxx_hidden_ScopeUuid = b.ScopeUuid
	}
	if b.FacilityName != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 1, 4)
		x.xxx_hidden_FacilityName = b.FacilityName
	}
	if b.Namespace != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 2, 4)
		x.xxx_hidden_Namespace = b.Namespace
	}
	if b.Name != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 3, 4)
		x.xxx_hidden_Name = b.Name
	}
	return m0
}

type AttachDiskRequest struct {
	state                         protoimpl.MessageState `protogen:"opaque.v1"`
	xxx_hidden_ScopeUuid          *string                `protobuf:"bytes,1,opt,name=scope_uuid,json=scopeUuid"`
	xxx_hidden_FacilityName       *string                `protobuf:"bytes,2,opt,name=facility_name,json=facilityName"`
	xxx_hidden_Namespace          *string                `protobuf:"bytes,3,opt,name=namespace"`
	xxx_hidden_Name               *string                `protobuf:"bytes,4,opt,name=name"`
	xxx_hidden_VirtualMachineName *string                `protobuf:"bytes,11,opt,name=virtual_machine_name,json=virtualMachineName"`
	XXX_raceDetectHookData        protoimpl.RaceDetectHookData
	XXX_presence                  [1]uint32
	unknownFields                 protoimpl.UnknownFields
	sizeCache                     protoimpl.SizeCache
}

func (x *AttachDiskRequest) Reset() {
	*x = AttachDiskRequest{}
	mi := &file_api_virtual_machine_v1_virtual_machine_proto_msgTypes[24]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *AttachDiskRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AttachDiskRequest) ProtoMessage() {}

func (x *AttachDiskRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_virtual_machine_v1_virtual_machine_proto_msgTypes[24]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *AttachDiskRequest) GetScopeUuid() string {
	if x != nil {
		if x.xxx_hidden_ScopeUuid != nil {
			return *x.xxx_hidden_ScopeUuid
		}
		return ""
	}
	return ""
}

func (x *AttachDiskRequest) GetFacilityName() string {
	if x != nil {
		if x.xxx_hidden_FacilityName != nil {
			return *x.xxx_hidden_FacilityName
		}
		return ""
	}
	return ""
}

func (x *AttachDiskRequest) GetNamespace() string {
	if x != nil {
		if x.xxx_hidden_Namespace != nil {
			return *x.xxx_hidden_Namespace
		}
		return ""
	}
	return ""
}

func (x *AttachDiskRequest) GetName() string {
	if x != nil {
		if x.xxx_hidden_Name != nil {
			return *x.xxx_hidden_Name
		}
		return ""
	}
	return ""
}

func (x *AttachDiskRequest) GetVirtualMachineName() string {
	if x != nil {
		if x.xxx_hidden_VirtualMachineName != nil {
			return *x.xxx_hidden_VirtualMachineName
		}
		return ""
	}
	return ""
}

func (x *AttachDiskRequest) SetScopeUuid(v string) {
	x.xxx_hidden_ScopeUuid = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 0, 5)
}

func (x *AttachDiskRequest) SetFacilityName(v string) {
	x.xxx_hidden_FacilityName = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 1, 5)
}

func (x *AttachDiskRequest) SetNamespace(v string) {
	x.xxx_hidden_Namespace = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 2, 5)
}

func (x *AttachDiskRequest) SetName(v string) {
	x.xxx_hidden_Name = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 3, 5)
}

func (x *AttachDiskRequest) SetVirtualMachineName(v string) {
	x.xxx_hidden_VirtualMachineName = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 4, 5)
}

func (x *AttachDiskRequest) HasScopeUuid() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 0)
}

func (x *AttachDiskRequest) HasFacilityName() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 1)
}

func (x *AttachDiskRequest) HasNamespace() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 2)
}

func (x *AttachDiskRequest) HasName() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 3)
}

func (x *AttachDiskRequest) HasVirtualMachineName() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 4)
}

func (x *AttachDiskRequest) ClearScopeUuid() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 0)
	x.xxx_hidden_ScopeUuid = nil
}

func (x *AttachDiskRequest) ClearFacilityName() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 1)
	x.xxx_hidden_FacilityName = nil
}

func (x *AttachDiskRequest) ClearNamespace() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 2)
	x.xxx_hidden_Namespace = nil
}

func (x *AttachDiskRequest) ClearName() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 3)
	x.xxx_hidden_Name = nil
}

func (x *AttachDiskRequest) ClearVirtualMachineName() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 4)
	x.xxx_hidden_VirtualMachineName = nil
}

type AttachDiskRequest_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	ScopeUuid          *string
	FacilityName       *string
	Namespace          *string
	Name               *string
	VirtualMachineName *string
}

func (b0 AttachDiskRequest_builder) Build() *AttachDiskRequest {
	m0 := &AttachDiskRequest{}
	b, x := &b0, m0
	_, _ = b, x
	if b.ScopeUuid != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 0, 5)
		x.xxx_hidden_ScopeUuid = b.ScopeUuid
	}
	if b.FacilityName != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 1, 5)
		x.xxx_hidden_FacilityName = b.FacilityName
	}
	if b.Namespace != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 2, 5)
		x.xxx_hidden_Namespace = b.Namespace
	}
	if b.Name != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 3, 5)
		x.xxx_hidden_Name = b.Name
	}
	if b.VirtualMachineName != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 4, 5)
		x.xxx_hidden_VirtualMachineName = b.VirtualMachineName
	}
	return m0
}

type DetachDiskRequest struct {
	state                         protoimpl.MessageState `protogen:"opaque.v1"`
	xxx_hidden_ScopeUuid          *string                `protobuf:"bytes,1,opt,name=scope_uuid,json=scopeUuid"`
	xxx_hidden_FacilityName       *string                `protobuf:"bytes,2,opt,name=facility_name,json=facilityName"`
	xxx_hidden_Namespace          *string                `protobuf:"bytes,3,opt,name=namespace"`
	xxx_hidden_Name               *string                `protobuf:"bytes,4,opt,name=name"`
	xxx_hidden_VirtualMachineName *string                `protobuf:"bytes,11,opt,name=virtual_machine_name,json=virtualMachineName"`
	XXX_raceDetectHookData        protoimpl.RaceDetectHookData
	XXX_presence                  [1]uint32
	unknownFields                 protoimpl.UnknownFields
	sizeCache                     protoimpl.SizeCache
}

func (x *DetachDiskRequest) Reset() {
	*x = DetachDiskRequest{}
	mi := &file_api_virtual_machine_v1_virtual_machine_proto_msgTypes[25]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DetachDiskRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DetachDiskRequest) ProtoMessage() {}

func (x *DetachDiskRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_virtual_machine_v1_virtual_machine_proto_msgTypes[25]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *DetachDiskRequest) GetScopeUuid() string {
	if x != nil {
		if x.xxx_hidden_ScopeUuid != nil {
			return *x.xxx_hidden_ScopeUuid
		}
		return ""
	}
	return ""
}

func (x *DetachDiskRequest) GetFacilityName() string {
	if x != nil {
		if x.xxx_hidden_FacilityName != nil {
			return *x.xxx_hidden_FacilityName
		}
		return ""
	}
	return ""
}

func (x *DetachDiskRequest) GetNamespace() string {
	if x != nil {
		if x.xxx_hidden_Namespace != nil {
			return *x.xxx_hidden_Namespace
		}
		return ""
	}
	return ""
}

func (x *DetachDiskRequest) GetName() string {
	if x != nil {
		if x.xxx_hidden_Name != nil {
			return *x.xxx_hidden_Name
		}
		return ""
	}
	return ""
}

func (x *DetachDiskRequest) GetVirtualMachineName() string {
	if x != nil {
		if x.xxx_hidden_VirtualMachineName != nil {
			return *x.xxx_hidden_VirtualMachineName
		}
		return ""
	}
	return ""
}

func (x *DetachDiskRequest) SetScopeUuid(v string) {
	x.xxx_hidden_ScopeUuid = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 0, 5)
}

func (x *DetachDiskRequest) SetFacilityName(v string) {
	x.xxx_hidden_FacilityName = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 1, 5)
}

func (x *DetachDiskRequest) SetNamespace(v string) {
	x.xxx_hidden_Namespace = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 2, 5)
}

func (x *DetachDiskRequest) SetName(v string) {
	x.xxx_hidden_Name = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 3, 5)
}

func (x *DetachDiskRequest) SetVirtualMachineName(v string) {
	x.xxx_hidden_VirtualMachineName = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 4, 5)
}

func (x *DetachDiskRequest) HasScopeUuid() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 0)
}

func (x *DetachDiskRequest) HasFacilityName() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 1)
}

func (x *DetachDiskRequest) HasNamespace() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 2)
}

func (x *DetachDiskRequest) HasName() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 3)
}

func (x *DetachDiskRequest) HasVirtualMachineName() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 4)
}

func (x *DetachDiskRequest) ClearScopeUuid() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 0)
	x.xxx_hidden_ScopeUuid = nil
}

func (x *DetachDiskRequest) ClearFacilityName() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 1)
	x.xxx_hidden_FacilityName = nil
}

func (x *DetachDiskRequest) ClearNamespace() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 2)
	x.xxx_hidden_Namespace = nil
}

func (x *DetachDiskRequest) ClearName() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 3)
	x.xxx_hidden_Name = nil
}

func (x *DetachDiskRequest) ClearVirtualMachineName() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 4)
	x.xxx_hidden_VirtualMachineName = nil
}

type DetachDiskRequest_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	ScopeUuid          *string
	FacilityName       *string
	Namespace          *string
	Name               *string
	VirtualMachineName *string
}

func (b0 DetachDiskRequest_builder) Build() *DetachDiskRequest {
	m0 := &DetachDiskRequest{}
	b, x := &b0, m0
	_, _ = b, x
	if b.ScopeUuid != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 0, 5)
		x.xxx_hidden_ScopeUuid = b.ScopeUuid
	}
	if b.FacilityName != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 1, 5)
		x.xxx_hidden_FacilityName = b.FacilityName
	}
	if b.Namespace != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 2, 5)
		x.xxx_hidden_Namespace = b.Namespace
	}
	if b.Name != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 3, 5)
		x.xxx_hidden_Name = b.Name
	}
	if b.VirtualMachineName != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 4, 5)
		x.xxx_hidden_VirtualMachineName = b.VirtualMachineName
	}
	return m0
}

type ListDataVolumesRequest struct {
	state                   protoimpl.MessageState `protogen:"opaque.v1"`
	xxx_hidden_ScopeUuid    *string                `protobuf:"bytes,1,opt,name=scope_uuid,json=scopeUuid"`
	xxx_hidden_FacilityName *string                `protobuf:"bytes,2,opt,name=facility_name,json=facilityName"`
	xxx_hidden_Namespace    *string                `protobuf:"bytes,3,opt,name=namespace"`
	XXX_raceDetectHookData  protoimpl.RaceDetectHookData
	XXX_presence            [1]uint32
	unknownFields           protoimpl.UnknownFields
	sizeCache               protoimpl.SizeCache
}

func (x *ListDataVolumesRequest) Reset() {
	*x = ListDataVolumesRequest{}
	mi := &file_api_virtual_machine_v1_virtual_machine_proto_msgTypes[26]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListDataVolumesRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListDataVolumesRequest) ProtoMessage() {}

func (x *ListDataVolumesRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_virtual_machine_v1_virtual_machine_proto_msgTypes[26]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *ListDataVolumesRequest) GetScopeUuid() string {
	if x != nil {
		if x.xxx_hidden_ScopeUuid != nil {
			return *x.xxx_hidden_ScopeUuid
		}
		return ""
	}
	return ""
}

func (x *ListDataVolumesRequest) GetFacilityName() string {
	if x != nil {
		if x.xxx_hidden_FacilityName != nil {
			return *x.xxx_hidden_FacilityName
		}
		return ""
	}
	return ""
}

func (x *ListDataVolumesRequest) GetNamespace() string {
	if x != nil {
		if x.xxx_hidden_Namespace != nil {
			return *x.xxx_hidden_Namespace
		}
		return ""
	}
	return ""
}

func (x *ListDataVolumesRequest) SetScopeUuid(v string) {
	x.xxx_hidden_ScopeUuid = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 0, 3)
}

func (x *ListDataVolumesRequest) SetFacilityName(v string) {
	x.xxx_hidden_FacilityName = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 1, 3)
}

func (x *ListDataVolumesRequest) SetNamespace(v string) {
	x.xxx_hidden_Namespace = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 2, 3)
}

func (x *ListDataVolumesRequest) HasScopeUuid() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 0)
}

func (x *ListDataVolumesRequest) HasFacilityName() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 1)
}

func (x *ListDataVolumesRequest) HasNamespace() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 2)
}

func (x *ListDataVolumesRequest) ClearScopeUuid() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 0)
	x.xxx_hidden_ScopeUuid = nil
}

func (x *ListDataVolumesRequest) ClearFacilityName() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 1)
	x.xxx_hidden_FacilityName = nil
}

func (x *ListDataVolumesRequest) ClearNamespace() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 2)
	x.xxx_hidden_Namespace = nil
}

type ListDataVolumesRequest_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	ScopeUuid    *string
	FacilityName *string
	Namespace    *string
}

func (b0 ListDataVolumesRequest_builder) Build() *ListDataVolumesRequest {
	m0 := &ListDataVolumesRequest{}
	b, x := &b0, m0
	_, _ = b, x
	if b.ScopeUuid != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 0, 3)
		x.xxx_hidden_ScopeUuid = b.ScopeUuid
	}
	if b.FacilityName != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 1, 3)
		x.xxx_hidden_FacilityName = b.FacilityName
	}
	if b.Namespace != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 2, 3)
		x.xxx_hidden_Namespace = b.Namespace
	}
	return m0
}

type ListDataVolumesResponse struct {
	state                  protoimpl.MessageState `protogen:"opaque.v1"`
	xxx_hidden_DataVolumes *[]*DataVolume         `protobuf:"bytes,1,rep,name=data_volumes,json=dataVolumes"`
	unknownFields          protoimpl.UnknownFields
	sizeCache              protoimpl.SizeCache
}

func (x *ListDataVolumesResponse) Reset() {
	*x = ListDataVolumesResponse{}
	mi := &file_api_virtual_machine_v1_virtual_machine_proto_msgTypes[27]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListDataVolumesResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListDataVolumesResponse) ProtoMessage() {}

func (x *ListDataVolumesResponse) ProtoReflect() protoreflect.Message {
	mi := &file_api_virtual_machine_v1_virtual_machine_proto_msgTypes[27]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *ListDataVolumesResponse) GetDataVolumes() []*DataVolume {
	if x != nil {
		if x.xxx_hidden_DataVolumes != nil {
			return *x.xxx_hidden_DataVolumes
		}
	}
	return nil
}

func (x *ListDataVolumesResponse) SetDataVolumes(v []*DataVolume) {
	x.xxx_hidden_DataVolumes = &v
}

type ListDataVolumesResponse_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	DataVolumes []*DataVolume
}

func (b0 ListDataVolumesResponse_builder) Build() *ListDataVolumesResponse {
	m0 := &ListDataVolumesResponse{}
	b, x := &b0, m0
	_, _ = b, x
	x.xxx_hidden_DataVolumes = &b.DataVolumes
	return m0
}

type GetDataVolumeRequest struct {
	state                   protoimpl.MessageState `protogen:"opaque.v1"`
	xxx_hidden_ScopeUuid    *string                `protobuf:"bytes,1,opt,name=scope_uuid,json=scopeUuid"`
	xxx_hidden_FacilityName *string                `protobuf:"bytes,2,opt,name=facility_name,json=facilityName"`
	xxx_hidden_Namespace    *string                `protobuf:"bytes,3,opt,name=namespace"`
	xxx_hidden_Name         *string                `protobuf:"bytes,4,opt,name=name"`
	XXX_raceDetectHookData  protoimpl.RaceDetectHookData
	XXX_presence            [1]uint32
	unknownFields           protoimpl.UnknownFields
	sizeCache               protoimpl.SizeCache
}

func (x *GetDataVolumeRequest) Reset() {
	*x = GetDataVolumeRequest{}
	mi := &file_api_virtual_machine_v1_virtual_machine_proto_msgTypes[28]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetDataVolumeRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetDataVolumeRequest) ProtoMessage() {}

func (x *GetDataVolumeRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_virtual_machine_v1_virtual_machine_proto_msgTypes[28]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *GetDataVolumeRequest) GetScopeUuid() string {
	if x != nil {
		if x.xxx_hidden_ScopeUuid != nil {
			return *x.xxx_hidden_ScopeUuid
		}
		return ""
	}
	return ""
}

func (x *GetDataVolumeRequest) GetFacilityName() string {
	if x != nil {
		if x.xxx_hidden_FacilityName != nil {
			return *x.xxx_hidden_FacilityName
		}
		return ""
	}
	return ""
}

func (x *GetDataVolumeRequest) GetNamespace() string {
	if x != nil {
		if x.xxx_hidden_Namespace != nil {
			return *x.xxx_hidden_Namespace
		}
		return ""
	}
	return ""
}

func (x *GetDataVolumeRequest) GetName() string {
	if x != nil {
		if x.xxx_hidden_Name != nil {
			return *x.xxx_hidden_Name
		}
		return ""
	}
	return ""
}

func (x *GetDataVolumeRequest) SetScopeUuid(v string) {
	x.xxx_hidden_ScopeUuid = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 0, 4)
}

func (x *GetDataVolumeRequest) SetFacilityName(v string) {
	x.xxx_hidden_FacilityName = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 1, 4)
}

func (x *GetDataVolumeRequest) SetNamespace(v string) {
	x.xxx_hidden_Namespace = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 2, 4)
}

func (x *GetDataVolumeRequest) SetName(v string) {
	x.xxx_hidden_Name = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 3, 4)
}

func (x *GetDataVolumeRequest) HasScopeUuid() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 0)
}

func (x *GetDataVolumeRequest) HasFacilityName() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 1)
}

func (x *GetDataVolumeRequest) HasNamespace() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 2)
}

func (x *GetDataVolumeRequest) HasName() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 3)
}

func (x *GetDataVolumeRequest) ClearScopeUuid() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 0)
	x.xxx_hidden_ScopeUuid = nil
}

func (x *GetDataVolumeRequest) ClearFacilityName() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 1)
	x.xxx_hidden_FacilityName = nil
}

func (x *GetDataVolumeRequest) ClearNamespace() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 2)
	x.xxx_hidden_Namespace = nil
}

func (x *GetDataVolumeRequest) ClearName() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 3)
	x.xxx_hidden_Name = nil
}

type GetDataVolumeRequest_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	ScopeUuid    *string
	FacilityName *string
	Namespace    *string
	Name         *string
}

func (b0 GetDataVolumeRequest_builder) Build() *GetDataVolumeRequest {
	m0 := &GetDataVolumeRequest{}
	b, x := &b0, m0
	_, _ = b, x
	if b.ScopeUuid != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 0, 4)
		x.xxx_hidden_ScopeUuid = b.ScopeUuid
	}
	if b.FacilityName != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 1, 4)
		x.xxx_hidden_FacilityName = b.FacilityName
	}
	if b.Namespace != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 2, 4)
		x.xxx_hidden_Namespace = b.Namespace
	}
	if b.Name != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 3, 4)
		x.xxx_hidden_Name = b.Name
	}
	return m0
}

type CreateDataVolumeRequest struct {
	state                   protoimpl.MessageState `protogen:"opaque.v1"`
	xxx_hidden_ScopeUuid    *string                `protobuf:"bytes,1,opt,name=scope_uuid,json=scopeUuid"`
	xxx_hidden_FacilityName *string                `protobuf:"bytes,2,opt,name=facility_name,json=facilityName"`
	xxx_hidden_Name         *string                `protobuf:"bytes,11,opt,name=name"`
	xxx_hidden_Namespace    *string                `protobuf:"bytes,12,opt,name=namespace"`
	xxx_hidden_Source       *DataVolume_Source     `protobuf:"bytes,21,opt,name=source"`
	xxx_hidden_BootImage    bool                   `protobuf:"varint,22,opt,name=boot_image,json=bootImage"`
	xxx_hidden_SizeBytes    int64                  `protobuf:"varint,31,opt,name=size_bytes,json=sizeBytes"`
	XXX_raceDetectHookData  protoimpl.RaceDetectHookData
	XXX_presence            [1]uint32
	unknownFields           protoimpl.UnknownFields
	sizeCache               protoimpl.SizeCache
}

func (x *CreateDataVolumeRequest) Reset() {
	*x = CreateDataVolumeRequest{}
	mi := &file_api_virtual_machine_v1_virtual_machine_proto_msgTypes[29]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CreateDataVolumeRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateDataVolumeRequest) ProtoMessage() {}

func (x *CreateDataVolumeRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_virtual_machine_v1_virtual_machine_proto_msgTypes[29]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *CreateDataVolumeRequest) GetScopeUuid() string {
	if x != nil {
		if x.xxx_hidden_ScopeUuid != nil {
			return *x.xxx_hidden_ScopeUuid
		}
		return ""
	}
	return ""
}

func (x *CreateDataVolumeRequest) GetFacilityName() string {
	if x != nil {
		if x.xxx_hidden_FacilityName != nil {
			return *x.xxx_hidden_FacilityName
		}
		return ""
	}
	return ""
}

func (x *CreateDataVolumeRequest) GetName() string {
	if x != nil {
		if x.xxx_hidden_Name != nil {
			return *x.xxx_hidden_Name
		}
		return ""
	}
	return ""
}

func (x *CreateDataVolumeRequest) GetNamespace() string {
	if x != nil {
		if x.xxx_hidden_Namespace != nil {
			return *x.xxx_hidden_Namespace
		}
		return ""
	}
	return ""
}

func (x *CreateDataVolumeRequest) GetSource() *DataVolume_Source {
	if x != nil {
		return x.xxx_hidden_Source
	}
	return nil
}

func (x *CreateDataVolumeRequest) GetBootImage() bool {
	if x != nil {
		return x.xxx_hidden_BootImage
	}
	return false
}

func (x *CreateDataVolumeRequest) GetSizeBytes() int64 {
	if x != nil {
		return x.xxx_hidden_SizeBytes
	}
	return 0
}

func (x *CreateDataVolumeRequest) SetScopeUuid(v string) {
	x.xxx_hidden_ScopeUuid = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 0, 7)
}

func (x *CreateDataVolumeRequest) SetFacilityName(v string) {
	x.xxx_hidden_FacilityName = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 1, 7)
}

func (x *CreateDataVolumeRequest) SetName(v string) {
	x.xxx_hidden_Name = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 2, 7)
}

func (x *CreateDataVolumeRequest) SetNamespace(v string) {
	x.xxx_hidden_Namespace = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 3, 7)
}

func (x *CreateDataVolumeRequest) SetSource(v *DataVolume_Source) {
	x.xxx_hidden_Source = v
}

func (x *CreateDataVolumeRequest) SetBootImage(v bool) {
	x.xxx_hidden_BootImage = v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 5, 7)
}

func (x *CreateDataVolumeRequest) SetSizeBytes(v int64) {
	x.xxx_hidden_SizeBytes = v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 6, 7)
}

func (x *CreateDataVolumeRequest) HasScopeUuid() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 0)
}

func (x *CreateDataVolumeRequest) HasFacilityName() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 1)
}

func (x *CreateDataVolumeRequest) HasName() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 2)
}

func (x *CreateDataVolumeRequest) HasNamespace() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 3)
}

func (x *CreateDataVolumeRequest) HasSource() bool {
	if x == nil {
		return false
	}
	return x.xxx_hidden_Source != nil
}

func (x *CreateDataVolumeRequest) HasBootImage() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 5)
}

func (x *CreateDataVolumeRequest) HasSizeBytes() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 6)
}

func (x *CreateDataVolumeRequest) ClearScopeUuid() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 0)
	x.xxx_hidden_ScopeUuid = nil
}

func (x *CreateDataVolumeRequest) ClearFacilityName() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 1)
	x.xxx_hidden_FacilityName = nil
}

func (x *CreateDataVolumeRequest) ClearName() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 2)
	x.xxx_hidden_Name = nil
}

func (x *CreateDataVolumeRequest) ClearNamespace() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 3)
	x.xxx_hidden_Namespace = nil
}

func (x *CreateDataVolumeRequest) ClearSource() {
	x.xxx_hidden_Source = nil
}

func (x *CreateDataVolumeRequest) ClearBootImage() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 5)
	x.xxx_hidden_BootImage = false
}

func (x *CreateDataVolumeRequest) ClearSizeBytes() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 6)
	x.xxx_hidden_SizeBytes = 0
}

type CreateDataVolumeRequest_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	ScopeUuid    *string
	FacilityName *string
	Name         *string
	Namespace    *string
	Source       *DataVolume_Source
	BootImage    *bool
	SizeBytes    *int64
}

func (b0 CreateDataVolumeRequest_builder) Build() *CreateDataVolumeRequest {
	m0 := &CreateDataVolumeRequest{}
	b, x := &b0, m0
	_, _ = b, x
	if b.ScopeUuid != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 0, 7)
		x.xxx_hidden_ScopeUuid = b.ScopeUuid
	}
	if b.FacilityName != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 1, 7)
		x.xxx_hidden_FacilityName = b.FacilityName
	}
	if b.Name != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 2, 7)
		x.xxx_hidden_Name = b.Name
	}
	if b.Namespace != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 3, 7)
		x.xxx_hidden_Namespace = b.Namespace
	}
	x.xxx_hidden_Source = b.Source
	if b.BootImage != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 5, 7)
		x.xxx_hidden_BootImage = *b.BootImage
	}
	if b.SizeBytes != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 6, 7)
		x.xxx_hidden_SizeBytes = *b.SizeBytes
	}
	return m0
}

type DeleteDataVolumeRequest struct {
	state                   protoimpl.MessageState `protogen:"opaque.v1"`
	xxx_hidden_ScopeUuid    *string                `protobuf:"bytes,1,opt,name=scope_uuid,json=scopeUuid"`
	xxx_hidden_FacilityName *string                `protobuf:"bytes,2,opt,name=facility_name,json=facilityName"`
	xxx_hidden_Namespace    *string                `protobuf:"bytes,3,opt,name=namespace"`
	xxx_hidden_Name         *string                `protobuf:"bytes,4,opt,name=name"`
	XXX_raceDetectHookData  protoimpl.RaceDetectHookData
	XXX_presence            [1]uint32
	unknownFields           protoimpl.UnknownFields
	sizeCache               protoimpl.SizeCache
}

func (x *DeleteDataVolumeRequest) Reset() {
	*x = DeleteDataVolumeRequest{}
	mi := &file_api_virtual_machine_v1_virtual_machine_proto_msgTypes[30]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DeleteDataVolumeRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteDataVolumeRequest) ProtoMessage() {}

func (x *DeleteDataVolumeRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_virtual_machine_v1_virtual_machine_proto_msgTypes[30]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *DeleteDataVolumeRequest) GetScopeUuid() string {
	if x != nil {
		if x.xxx_hidden_ScopeUuid != nil {
			return *x.xxx_hidden_ScopeUuid
		}
		return ""
	}
	return ""
}

func (x *DeleteDataVolumeRequest) GetFacilityName() string {
	if x != nil {
		if x.xxx_hidden_FacilityName != nil {
			return *x.xxx_hidden_FacilityName
		}
		return ""
	}
	return ""
}

func (x *DeleteDataVolumeRequest) GetNamespace() string {
	if x != nil {
		if x.xxx_hidden_Namespace != nil {
			return *x.xxx_hidden_Namespace
		}
		return ""
	}
	return ""
}

func (x *DeleteDataVolumeRequest) GetName() string {
	if x != nil {
		if x.xxx_hidden_Name != nil {
			return *x.xxx_hidden_Name
		}
		return ""
	}
	return ""
}

func (x *DeleteDataVolumeRequest) SetScopeUuid(v string) {
	x.xxx_hidden_ScopeUuid = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 0, 4)
}

func (x *DeleteDataVolumeRequest) SetFacilityName(v string) {
	x.xxx_hidden_FacilityName = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 1, 4)
}

func (x *DeleteDataVolumeRequest) SetNamespace(v string) {
	x.xxx_hidden_Namespace = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 2, 4)
}

func (x *DeleteDataVolumeRequest) SetName(v string) {
	x.xxx_hidden_Name = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 3, 4)
}

func (x *DeleteDataVolumeRequest) HasScopeUuid() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 0)
}

func (x *DeleteDataVolumeRequest) HasFacilityName() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 1)
}

func (x *DeleteDataVolumeRequest) HasNamespace() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 2)
}

func (x *DeleteDataVolumeRequest) HasName() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 3)
}

func (x *DeleteDataVolumeRequest) ClearScopeUuid() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 0)
	x.xxx_hidden_ScopeUuid = nil
}

func (x *DeleteDataVolumeRequest) ClearFacilityName() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 1)
	x.xxx_hidden_FacilityName = nil
}

func (x *DeleteDataVolumeRequest) ClearNamespace() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 2)
	x.xxx_hidden_Namespace = nil
}

func (x *DeleteDataVolumeRequest) ClearName() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 3)
	x.xxx_hidden_Name = nil
}

type DeleteDataVolumeRequest_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	ScopeUuid    *string
	FacilityName *string
	Namespace    *string
	Name         *string
}

func (b0 DeleteDataVolumeRequest_builder) Build() *DeleteDataVolumeRequest {
	m0 := &DeleteDataVolumeRequest{}
	b, x := &b0, m0
	_, _ = b, x
	if b.ScopeUuid != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 0, 4)
		x.xxx_hidden_ScopeUuid = b.ScopeUuid
	}
	if b.FacilityName != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 1, 4)
		x.xxx_hidden_FacilityName = b.FacilityName
	}
	if b.Namespace != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 2, 4)
		x.xxx_hidden_Namespace = b.Namespace
	}
	if b.Name != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 3, 4)
		x.xxx_hidden_Name = b.Name
	}
	return m0
}

type ExtendDataVolumeRequest struct {
	state                   protoimpl.MessageState `protogen:"opaque.v1"`
	xxx_hidden_ScopeUuid    *string                `protobuf:"bytes,1,opt,name=scope_uuid,json=scopeUuid"`
	xxx_hidden_FacilityName *string                `protobuf:"bytes,2,opt,name=facility_name,json=facilityName"`
	xxx_hidden_Namespace    *string                `protobuf:"bytes,3,opt,name=namespace"`
	xxx_hidden_Name         *string                `protobuf:"bytes,4,opt,name=name"`
	xxx_hidden_SizeBytes    int64                  `protobuf:"varint,11,opt,name=size_bytes,json=sizeBytes"`
	XXX_raceDetectHookData  protoimpl.RaceDetectHookData
	XXX_presence            [1]uint32
	unknownFields           protoimpl.UnknownFields
	sizeCache               protoimpl.SizeCache
}

func (x *ExtendDataVolumeRequest) Reset() {
	*x = ExtendDataVolumeRequest{}
	mi := &file_api_virtual_machine_v1_virtual_machine_proto_msgTypes[31]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ExtendDataVolumeRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ExtendDataVolumeRequest) ProtoMessage() {}

func (x *ExtendDataVolumeRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_virtual_machine_v1_virtual_machine_proto_msgTypes[31]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *ExtendDataVolumeRequest) GetScopeUuid() string {
	if x != nil {
		if x.xxx_hidden_ScopeUuid != nil {
			return *x.xxx_hidden_ScopeUuid
		}
		return ""
	}
	return ""
}

func (x *ExtendDataVolumeRequest) GetFacilityName() string {
	if x != nil {
		if x.xxx_hidden_FacilityName != nil {
			return *x.xxx_hidden_FacilityName
		}
		return ""
	}
	return ""
}

func (x *ExtendDataVolumeRequest) GetNamespace() string {
	if x != nil {
		if x.xxx_hidden_Namespace != nil {
			return *x.xxx_hidden_Namespace
		}
		return ""
	}
	return ""
}

func (x *ExtendDataVolumeRequest) GetName() string {
	if x != nil {
		if x.xxx_hidden_Name != nil {
			return *x.xxx_hidden_Name
		}
		return ""
	}
	return ""
}

func (x *ExtendDataVolumeRequest) GetSizeBytes() int64 {
	if x != nil {
		return x.xxx_hidden_SizeBytes
	}
	return 0
}

func (x *ExtendDataVolumeRequest) SetScopeUuid(v string) {
	x.xxx_hidden_ScopeUuid = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 0, 5)
}

func (x *ExtendDataVolumeRequest) SetFacilityName(v string) {
	x.xxx_hidden_FacilityName = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 1, 5)
}

func (x *ExtendDataVolumeRequest) SetNamespace(v string) {
	x.xxx_hidden_Namespace = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 2, 5)
}

func (x *ExtendDataVolumeRequest) SetName(v string) {
	x.xxx_hidden_Name = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 3, 5)
}

func (x *ExtendDataVolumeRequest) SetSizeBytes(v int64) {
	x.xxx_hidden_SizeBytes = v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 4, 5)
}

func (x *ExtendDataVolumeRequest) HasScopeUuid() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 0)
}

func (x *ExtendDataVolumeRequest) HasFacilityName() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 1)
}

func (x *ExtendDataVolumeRequest) HasNamespace() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 2)
}

func (x *ExtendDataVolumeRequest) HasName() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 3)
}

func (x *ExtendDataVolumeRequest) HasSizeBytes() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 4)
}

func (x *ExtendDataVolumeRequest) ClearScopeUuid() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 0)
	x.xxx_hidden_ScopeUuid = nil
}

func (x *ExtendDataVolumeRequest) ClearFacilityName() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 1)
	x.xxx_hidden_FacilityName = nil
}

func (x *ExtendDataVolumeRequest) ClearNamespace() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 2)
	x.xxx_hidden_Namespace = nil
}

func (x *ExtendDataVolumeRequest) ClearName() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 3)
	x.xxx_hidden_Name = nil
}

func (x *ExtendDataVolumeRequest) ClearSizeBytes() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 4)
	x.xxx_hidden_SizeBytes = 0
}

type ExtendDataVolumeRequest_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	ScopeUuid    *string
	FacilityName *string
	Namespace    *string
	Name         *string
	SizeBytes    *int64
}

func (b0 ExtendDataVolumeRequest_builder) Build() *ExtendDataVolumeRequest {
	m0 := &ExtendDataVolumeRequest{}
	b, x := &b0, m0
	_, _ = b, x
	if b.ScopeUuid != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 0, 5)
		x.xxx_hidden_ScopeUuid = b.ScopeUuid
	}
	if b.FacilityName != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 1, 5)
		x.xxx_hidden_FacilityName = b.FacilityName
	}
	if b.Namespace != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 2, 5)
		x.xxx_hidden_Namespace = b.Namespace
	}
	if b.Name != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 3, 5)
		x.xxx_hidden_Name = b.Name
	}
	if b.SizeBytes != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 4, 5)
		x.xxx_hidden_SizeBytes = *b.SizeBytes
	}
	return m0
}

type ListClusterWideInstanceTypesRequest struct {
	state                   protoimpl.MessageState `protogen:"opaque.v1"`
	xxx_hidden_ScopeUuid    *string                `protobuf:"bytes,1,opt,name=scope_uuid,json=scopeUuid"`
	xxx_hidden_FacilityName *string                `protobuf:"bytes,2,opt,name=facility_name,json=facilityName"`
	XXX_raceDetectHookData  protoimpl.RaceDetectHookData
	XXX_presence            [1]uint32
	unknownFields           protoimpl.UnknownFields
	sizeCache               protoimpl.SizeCache
}

func (x *ListClusterWideInstanceTypesRequest) Reset() {
	*x = ListClusterWideInstanceTypesRequest{}
	mi := &file_api_virtual_machine_v1_virtual_machine_proto_msgTypes[32]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListClusterWideInstanceTypesRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListClusterWideInstanceTypesRequest) ProtoMessage() {}

func (x *ListClusterWideInstanceTypesRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_virtual_machine_v1_virtual_machine_proto_msgTypes[32]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *ListClusterWideInstanceTypesRequest) GetScopeUuid() string {
	if x != nil {
		if x.xxx_hidden_ScopeUuid != nil {
			return *x.xxx_hidden_ScopeUuid
		}
		return ""
	}
	return ""
}

func (x *ListClusterWideInstanceTypesRequest) GetFacilityName() string {
	if x != nil {
		if x.xxx_hidden_FacilityName != nil {
			return *x.xxx_hidden_FacilityName
		}
		return ""
	}
	return ""
}

func (x *ListClusterWideInstanceTypesRequest) SetScopeUuid(v string) {
	x.xxx_hidden_ScopeUuid = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 0, 2)
}

func (x *ListClusterWideInstanceTypesRequest) SetFacilityName(v string) {
	x.xxx_hidden_FacilityName = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 1, 2)
}

func (x *ListClusterWideInstanceTypesRequest) HasScopeUuid() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 0)
}

func (x *ListClusterWideInstanceTypesRequest) HasFacilityName() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 1)
}

func (x *ListClusterWideInstanceTypesRequest) ClearScopeUuid() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 0)
	x.xxx_hidden_ScopeUuid = nil
}

func (x *ListClusterWideInstanceTypesRequest) ClearFacilityName() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 1)
	x.xxx_hidden_FacilityName = nil
}

type ListClusterWideInstanceTypesRequest_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	ScopeUuid    *string
	FacilityName *string
}

func (b0 ListClusterWideInstanceTypesRequest_builder) Build() *ListClusterWideInstanceTypesRequest {
	m0 := &ListClusterWideInstanceTypesRequest{}
	b, x := &b0, m0
	_, _ = b, x
	if b.ScopeUuid != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 0, 2)
		x.xxx_hidden_ScopeUuid = b.ScopeUuid
	}
	if b.FacilityName != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 1, 2)
		x.xxx_hidden_FacilityName = b.FacilityName
	}
	return m0
}

type ListClusterWideInstanceTypesResponse struct {
	state                    protoimpl.MessageState `protogen:"opaque.v1"`
	xxx_hidden_InstanceTypes *[]*InstanceType       `protobuf:"bytes,1,rep,name=instance_types,json=instanceTypes"`
	unknownFields            protoimpl.UnknownFields
	sizeCache                protoimpl.SizeCache
}

func (x *ListClusterWideInstanceTypesResponse) Reset() {
	*x = ListClusterWideInstanceTypesResponse{}
	mi := &file_api_virtual_machine_v1_virtual_machine_proto_msgTypes[33]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListClusterWideInstanceTypesResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListClusterWideInstanceTypesResponse) ProtoMessage() {}

func (x *ListClusterWideInstanceTypesResponse) ProtoReflect() protoreflect.Message {
	mi := &file_api_virtual_machine_v1_virtual_machine_proto_msgTypes[33]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *ListClusterWideInstanceTypesResponse) GetInstanceTypes() []*InstanceType {
	if x != nil {
		if x.xxx_hidden_InstanceTypes != nil {
			return *x.xxx_hidden_InstanceTypes
		}
	}
	return nil
}

func (x *ListClusterWideInstanceTypesResponse) SetInstanceTypes(v []*InstanceType) {
	x.xxx_hidden_InstanceTypes = &v
}

type ListClusterWideInstanceTypesResponse_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	InstanceTypes []*InstanceType
}

func (b0 ListClusterWideInstanceTypesResponse_builder) Build() *ListClusterWideInstanceTypesResponse {
	m0 := &ListClusterWideInstanceTypesResponse{}
	b, x := &b0, m0
	_, _ = b, x
	x.xxx_hidden_InstanceTypes = &b.InstanceTypes
	return m0
}

type ListInstanceTypesRequest struct {
	state                   protoimpl.MessageState `protogen:"opaque.v1"`
	xxx_hidden_ScopeUuid    *string                `protobuf:"bytes,1,opt,name=scope_uuid,json=scopeUuid"`
	xxx_hidden_FacilityName *string                `protobuf:"bytes,2,opt,name=facility_name,json=facilityName"`
	xxx_hidden_Namespace    *string                `protobuf:"bytes,3,opt,name=namespace"`
	XXX_raceDetectHookData  protoimpl.RaceDetectHookData
	XXX_presence            [1]uint32
	unknownFields           protoimpl.UnknownFields
	sizeCache               protoimpl.SizeCache
}

func (x *ListInstanceTypesRequest) Reset() {
	*x = ListInstanceTypesRequest{}
	mi := &file_api_virtual_machine_v1_virtual_machine_proto_msgTypes[34]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListInstanceTypesRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListInstanceTypesRequest) ProtoMessage() {}

func (x *ListInstanceTypesRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_virtual_machine_v1_virtual_machine_proto_msgTypes[34]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *ListInstanceTypesRequest) GetScopeUuid() string {
	if x != nil {
		if x.xxx_hidden_ScopeUuid != nil {
			return *x.xxx_hidden_ScopeUuid
		}
		return ""
	}
	return ""
}

func (x *ListInstanceTypesRequest) GetFacilityName() string {
	if x != nil {
		if x.xxx_hidden_FacilityName != nil {
			return *x.xxx_hidden_FacilityName
		}
		return ""
	}
	return ""
}

func (x *ListInstanceTypesRequest) GetNamespace() string {
	if x != nil {
		if x.xxx_hidden_Namespace != nil {
			return *x.xxx_hidden_Namespace
		}
		return ""
	}
	return ""
}

func (x *ListInstanceTypesRequest) SetScopeUuid(v string) {
	x.xxx_hidden_ScopeUuid = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 0, 3)
}

func (x *ListInstanceTypesRequest) SetFacilityName(v string) {
	x.xxx_hidden_FacilityName = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 1, 3)
}

func (x *ListInstanceTypesRequest) SetNamespace(v string) {
	x.xxx_hidden_Namespace = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 2, 3)
}

func (x *ListInstanceTypesRequest) HasScopeUuid() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 0)
}

func (x *ListInstanceTypesRequest) HasFacilityName() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 1)
}

func (x *ListInstanceTypesRequest) HasNamespace() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 2)
}

func (x *ListInstanceTypesRequest) ClearScopeUuid() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 0)
	x.xxx_hidden_ScopeUuid = nil
}

func (x *ListInstanceTypesRequest) ClearFacilityName() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 1)
	x.xxx_hidden_FacilityName = nil
}

func (x *ListInstanceTypesRequest) ClearNamespace() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 2)
	x.xxx_hidden_Namespace = nil
}

type ListInstanceTypesRequest_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	ScopeUuid    *string
	FacilityName *string
	Namespace    *string
}

func (b0 ListInstanceTypesRequest_builder) Build() *ListInstanceTypesRequest {
	m0 := &ListInstanceTypesRequest{}
	b, x := &b0, m0
	_, _ = b, x
	if b.ScopeUuid != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 0, 3)
		x.xxx_hidden_ScopeUuid = b.ScopeUuid
	}
	if b.FacilityName != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 1, 3)
		x.xxx_hidden_FacilityName = b.FacilityName
	}
	if b.Namespace != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 2, 3)
		x.xxx_hidden_Namespace = b.Namespace
	}
	return m0
}

type ListInstanceTypesResponse struct {
	state                    protoimpl.MessageState `protogen:"opaque.v1"`
	xxx_hidden_InstanceTypes *[]*InstanceType       `protobuf:"bytes,1,rep,name=instance_types,json=instanceTypes"`
	unknownFields            protoimpl.UnknownFields
	sizeCache                protoimpl.SizeCache
}

func (x *ListInstanceTypesResponse) Reset() {
	*x = ListInstanceTypesResponse{}
	mi := &file_api_virtual_machine_v1_virtual_machine_proto_msgTypes[35]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListInstanceTypesResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListInstanceTypesResponse) ProtoMessage() {}

func (x *ListInstanceTypesResponse) ProtoReflect() protoreflect.Message {
	mi := &file_api_virtual_machine_v1_virtual_machine_proto_msgTypes[35]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *ListInstanceTypesResponse) GetInstanceTypes() []*InstanceType {
	if x != nil {
		if x.xxx_hidden_InstanceTypes != nil {
			return *x.xxx_hidden_InstanceTypes
		}
	}
	return nil
}

func (x *ListInstanceTypesResponse) SetInstanceTypes(v []*InstanceType) {
	x.xxx_hidden_InstanceTypes = &v
}

type ListInstanceTypesResponse_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	InstanceTypes []*InstanceType
}

func (b0 ListInstanceTypesResponse_builder) Build() *ListInstanceTypesResponse {
	m0 := &ListInstanceTypesResponse{}
	b, x := &b0, m0
	_, _ = b, x
	x.xxx_hidden_InstanceTypes = &b.InstanceTypes
	return m0
}

type GetInstanceTypeRequest struct {
	state                   protoimpl.MessageState `protogen:"opaque.v1"`
	xxx_hidden_ScopeUuid    *string                `protobuf:"bytes,1,opt,name=scope_uuid,json=scopeUuid"`
	xxx_hidden_FacilityName *string                `protobuf:"bytes,2,opt,name=facility_name,json=facilityName"`
	xxx_hidden_Namespace    *string                `protobuf:"bytes,3,opt,name=namespace"`
	xxx_hidden_Name         *string                `protobuf:"bytes,4,opt,name=name"`
	XXX_raceDetectHookData  protoimpl.RaceDetectHookData
	XXX_presence            [1]uint32
	unknownFields           protoimpl.UnknownFields
	sizeCache               protoimpl.SizeCache
}

func (x *GetInstanceTypeRequest) Reset() {
	*x = GetInstanceTypeRequest{}
	mi := &file_api_virtual_machine_v1_virtual_machine_proto_msgTypes[36]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetInstanceTypeRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetInstanceTypeRequest) ProtoMessage() {}

func (x *GetInstanceTypeRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_virtual_machine_v1_virtual_machine_proto_msgTypes[36]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *GetInstanceTypeRequest) GetScopeUuid() string {
	if x != nil {
		if x.xxx_hidden_ScopeUuid != nil {
			return *x.xxx_hidden_ScopeUuid
		}
		return ""
	}
	return ""
}

func (x *GetInstanceTypeRequest) GetFacilityName() string {
	if x != nil {
		if x.xxx_hidden_FacilityName != nil {
			return *x.xxx_hidden_FacilityName
		}
		return ""
	}
	return ""
}

func (x *GetInstanceTypeRequest) GetNamespace() string {
	if x != nil {
		if x.xxx_hidden_Namespace != nil {
			return *x.xxx_hidden_Namespace
		}
		return ""
	}
	return ""
}

func (x *GetInstanceTypeRequest) GetName() string {
	if x != nil {
		if x.xxx_hidden_Name != nil {
			return *x.xxx_hidden_Name
		}
		return ""
	}
	return ""
}

func (x *GetInstanceTypeRequest) SetScopeUuid(v string) {
	x.xxx_hidden_ScopeUuid = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 0, 4)
}

func (x *GetInstanceTypeRequest) SetFacilityName(v string) {
	x.xxx_hidden_FacilityName = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 1, 4)
}

func (x *GetInstanceTypeRequest) SetNamespace(v string) {
	x.xxx_hidden_Namespace = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 2, 4)
}

func (x *GetInstanceTypeRequest) SetName(v string) {
	x.xxx_hidden_Name = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 3, 4)
}

func (x *GetInstanceTypeRequest) HasScopeUuid() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 0)
}

func (x *GetInstanceTypeRequest) HasFacilityName() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 1)
}

func (x *GetInstanceTypeRequest) HasNamespace() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 2)
}

func (x *GetInstanceTypeRequest) HasName() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 3)
}

func (x *GetInstanceTypeRequest) ClearScopeUuid() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 0)
	x.xxx_hidden_ScopeUuid = nil
}

func (x *GetInstanceTypeRequest) ClearFacilityName() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 1)
	x.xxx_hidden_FacilityName = nil
}

func (x *GetInstanceTypeRequest) ClearNamespace() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 2)
	x.xxx_hidden_Namespace = nil
}

func (x *GetInstanceTypeRequest) ClearName() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 3)
	x.xxx_hidden_Name = nil
}

type GetInstanceTypeRequest_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	ScopeUuid    *string
	FacilityName *string
	Namespace    *string
	Name         *string
}

func (b0 GetInstanceTypeRequest_builder) Build() *GetInstanceTypeRequest {
	m0 := &GetInstanceTypeRequest{}
	b, x := &b0, m0
	_, _ = b, x
	if b.ScopeUuid != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 0, 4)
		x.xxx_hidden_ScopeUuid = b.ScopeUuid
	}
	if b.FacilityName != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 1, 4)
		x.xxx_hidden_FacilityName = b.FacilityName
	}
	if b.Namespace != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 2, 4)
		x.xxx_hidden_Namespace = b.Namespace
	}
	if b.Name != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 3, 4)
		x.xxx_hidden_Name = b.Name
	}
	return m0
}

type CreateInstanceTypeRequest struct {
	state                   protoimpl.MessageState `protogen:"opaque.v1"`
	xxx_hidden_ScopeUuid    *string                `protobuf:"bytes,1,opt,name=scope_uuid,json=scopeUuid"`
	xxx_hidden_FacilityName *string                `protobuf:"bytes,2,opt,name=facility_name,json=facilityName"`
	xxx_hidden_Name         *string                `protobuf:"bytes,11,opt,name=name"`
	xxx_hidden_Namespace    *string                `protobuf:"bytes,12,opt,name=namespace"`
	xxx_hidden_CpuCores     uint32                 `protobuf:"varint,13,opt,name=cpu_cores,json=cpuCores"`
	xxx_hidden_MemoryBytes  int64                  `protobuf:"varint,14,opt,name=memory_bytes,json=memoryBytes"`
	XXX_raceDetectHookData  protoimpl.RaceDetectHookData
	XXX_presence            [1]uint32
	unknownFields           protoimpl.UnknownFields
	sizeCache               protoimpl.SizeCache
}

func (x *CreateInstanceTypeRequest) Reset() {
	*x = CreateInstanceTypeRequest{}
	mi := &file_api_virtual_machine_v1_virtual_machine_proto_msgTypes[37]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CreateInstanceTypeRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateInstanceTypeRequest) ProtoMessage() {}

func (x *CreateInstanceTypeRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_virtual_machine_v1_virtual_machine_proto_msgTypes[37]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *CreateInstanceTypeRequest) GetScopeUuid() string {
	if x != nil {
		if x.xxx_hidden_ScopeUuid != nil {
			return *x.xxx_hidden_ScopeUuid
		}
		return ""
	}
	return ""
}

func (x *CreateInstanceTypeRequest) GetFacilityName() string {
	if x != nil {
		if x.xxx_hidden_FacilityName != nil {
			return *x.xxx_hidden_FacilityName
		}
		return ""
	}
	return ""
}

func (x *CreateInstanceTypeRequest) GetName() string {
	if x != nil {
		if x.xxx_hidden_Name != nil {
			return *x.xxx_hidden_Name
		}
		return ""
	}
	return ""
}

func (x *CreateInstanceTypeRequest) GetNamespace() string {
	if x != nil {
		if x.xxx_hidden_Namespace != nil {
			return *x.xxx_hidden_Namespace
		}
		return ""
	}
	return ""
}

func (x *CreateInstanceTypeRequest) GetCpuCores() uint32 {
	if x != nil {
		return x.xxx_hidden_CpuCores
	}
	return 0
}

func (x *CreateInstanceTypeRequest) GetMemoryBytes() int64 {
	if x != nil {
		return x.xxx_hidden_MemoryBytes
	}
	return 0
}

func (x *CreateInstanceTypeRequest) SetScopeUuid(v string) {
	x.xxx_hidden_ScopeUuid = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 0, 6)
}

func (x *CreateInstanceTypeRequest) SetFacilityName(v string) {
	x.xxx_hidden_FacilityName = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 1, 6)
}

func (x *CreateInstanceTypeRequest) SetName(v string) {
	x.xxx_hidden_Name = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 2, 6)
}

func (x *CreateInstanceTypeRequest) SetNamespace(v string) {
	x.xxx_hidden_Namespace = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 3, 6)
}

func (x *CreateInstanceTypeRequest) SetCpuCores(v uint32) {
	x.xxx_hidden_CpuCores = v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 4, 6)
}

func (x *CreateInstanceTypeRequest) SetMemoryBytes(v int64) {
	x.xxx_hidden_MemoryBytes = v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 5, 6)
}

func (x *CreateInstanceTypeRequest) HasScopeUuid() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 0)
}

func (x *CreateInstanceTypeRequest) HasFacilityName() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 1)
}

func (x *CreateInstanceTypeRequest) HasName() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 2)
}

func (x *CreateInstanceTypeRequest) HasNamespace() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 3)
}

func (x *CreateInstanceTypeRequest) HasCpuCores() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 4)
}

func (x *CreateInstanceTypeRequest) HasMemoryBytes() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 5)
}

func (x *CreateInstanceTypeRequest) ClearScopeUuid() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 0)
	x.xxx_hidden_ScopeUuid = nil
}

func (x *CreateInstanceTypeRequest) ClearFacilityName() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 1)
	x.xxx_hidden_FacilityName = nil
}

func (x *CreateInstanceTypeRequest) ClearName() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 2)
	x.xxx_hidden_Name = nil
}

func (x *CreateInstanceTypeRequest) ClearNamespace() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 3)
	x.xxx_hidden_Namespace = nil
}

func (x *CreateInstanceTypeRequest) ClearCpuCores() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 4)
	x.xxx_hidden_CpuCores = 0
}

func (x *CreateInstanceTypeRequest) ClearMemoryBytes() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 5)
	x.xxx_hidden_MemoryBytes = 0
}

type CreateInstanceTypeRequest_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	ScopeUuid    *string
	FacilityName *string
	Name         *string
	Namespace    *string
	CpuCores     *uint32
	MemoryBytes  *int64
}

func (b0 CreateInstanceTypeRequest_builder) Build() *CreateInstanceTypeRequest {
	m0 := &CreateInstanceTypeRequest{}
	b, x := &b0, m0
	_, _ = b, x
	if b.ScopeUuid != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 0, 6)
		x.xxx_hidden_ScopeUuid = b.ScopeUuid
	}
	if b.FacilityName != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 1, 6)
		x.xxx_hidden_FacilityName = b.FacilityName
	}
	if b.Name != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 2, 6)
		x.xxx_hidden_Name = b.Name
	}
	if b.Namespace != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 3, 6)
		x.xxx_hidden_Namespace = b.Namespace
	}
	if b.CpuCores != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 4, 6)
		x.xxx_hidden_CpuCores = *b.CpuCores
	}
	if b.MemoryBytes != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 5, 6)
		x.xxx_hidden_MemoryBytes = *b.MemoryBytes
	}
	return m0
}

type DeleteInstanceTypeRequest struct {
	state                   protoimpl.MessageState `protogen:"opaque.v1"`
	xxx_hidden_ScopeUuid    *string                `protobuf:"bytes,1,opt,name=scope_uuid,json=scopeUuid"`
	xxx_hidden_FacilityName *string                `protobuf:"bytes,2,opt,name=facility_name,json=facilityName"`
	xxx_hidden_Namespace    *string                `protobuf:"bytes,3,opt,name=namespace"`
	xxx_hidden_Name         *string                `protobuf:"bytes,4,opt,name=name"`
	XXX_raceDetectHookData  protoimpl.RaceDetectHookData
	XXX_presence            [1]uint32
	unknownFields           protoimpl.UnknownFields
	sizeCache               protoimpl.SizeCache
}

func (x *DeleteInstanceTypeRequest) Reset() {
	*x = DeleteInstanceTypeRequest{}
	mi := &file_api_virtual_machine_v1_virtual_machine_proto_msgTypes[38]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DeleteInstanceTypeRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteInstanceTypeRequest) ProtoMessage() {}

func (x *DeleteInstanceTypeRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_virtual_machine_v1_virtual_machine_proto_msgTypes[38]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *DeleteInstanceTypeRequest) GetScopeUuid() string {
	if x != nil {
		if x.xxx_hidden_ScopeUuid != nil {
			return *x.xxx_hidden_ScopeUuid
		}
		return ""
	}
	return ""
}

func (x *DeleteInstanceTypeRequest) GetFacilityName() string {
	if x != nil {
		if x.xxx_hidden_FacilityName != nil {
			return *x.xxx_hidden_FacilityName
		}
		return ""
	}
	return ""
}

func (x *DeleteInstanceTypeRequest) GetNamespace() string {
	if x != nil {
		if x.xxx_hidden_Namespace != nil {
			return *x.xxx_hidden_Namespace
		}
		return ""
	}
	return ""
}

func (x *DeleteInstanceTypeRequest) GetName() string {
	if x != nil {
		if x.xxx_hidden_Name != nil {
			return *x.xxx_hidden_Name
		}
		return ""
	}
	return ""
}

func (x *DeleteInstanceTypeRequest) SetScopeUuid(v string) {
	x.xxx_hidden_ScopeUuid = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 0, 4)
}

func (x *DeleteInstanceTypeRequest) SetFacilityName(v string) {
	x.xxx_hidden_FacilityName = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 1, 4)
}

func (x *DeleteInstanceTypeRequest) SetNamespace(v string) {
	x.xxx_hidden_Namespace = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 2, 4)
}

func (x *DeleteInstanceTypeRequest) SetName(v string) {
	x.xxx_hidden_Name = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 3, 4)
}

func (x *DeleteInstanceTypeRequest) HasScopeUuid() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 0)
}

func (x *DeleteInstanceTypeRequest) HasFacilityName() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 1)
}

func (x *DeleteInstanceTypeRequest) HasNamespace() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 2)
}

func (x *DeleteInstanceTypeRequest) HasName() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 3)
}

func (x *DeleteInstanceTypeRequest) ClearScopeUuid() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 0)
	x.xxx_hidden_ScopeUuid = nil
}

func (x *DeleteInstanceTypeRequest) ClearFacilityName() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 1)
	x.xxx_hidden_FacilityName = nil
}

func (x *DeleteInstanceTypeRequest) ClearNamespace() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 2)
	x.xxx_hidden_Namespace = nil
}

func (x *DeleteInstanceTypeRequest) ClearName() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 3)
	x.xxx_hidden_Name = nil
}

type DeleteInstanceTypeRequest_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	ScopeUuid    *string
	FacilityName *string
	Namespace    *string
	Name         *string
}

func (b0 DeleteInstanceTypeRequest_builder) Build() *DeleteInstanceTypeRequest {
	m0 := &DeleteInstanceTypeRequest{}
	b, x := &b0, m0
	_, _ = b, x
	if b.ScopeUuid != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 0, 4)
		x.xxx_hidden_ScopeUuid = b.ScopeUuid
	}
	if b.FacilityName != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 1, 4)
		x.xxx_hidden_FacilityName = b.FacilityName
	}
	if b.Namespace != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 2, 4)
		x.xxx_hidden_Namespace = b.Namespace
	}
	if b.Name != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 3, 4)
		x.xxx_hidden_Name = b.Name
	}
	return m0
}

type VirtualMachine_Snapshot struct {
	state                    protoimpl.MessageState    `protogen:"opaque.v1"`
	xxx_hidden_Name          *string                   `protobuf:"bytes,1,opt,name=name"`
	xxx_hidden_Namespace     *string                   `protobuf:"bytes,2,opt,name=namespace"`
	xxx_hidden_SourceName    *string                   `protobuf:"bytes,11,opt,name=source_name,json=sourceName"`
	xxx_hidden_Description   *string                   `protobuf:"bytes,12,opt,name=description"`
	xxx_hidden_Phase         *string                   `protobuf:"bytes,21,opt,name=phase"`
	xxx_hidden_CreatedAt     *timestamppb.Timestamp    `protobuf:"bytes,31,opt,name=created_at,json=createdAt"`
	xxx_hidden_LastCondition *v1.Application_Condition `protobuf:"bytes,41,opt,name=last_condition,json=lastCondition"`
	XXX_raceDetectHookData   protoimpl.RaceDetectHookData
	XXX_presence             [1]uint32
	unknownFields            protoimpl.UnknownFields
	sizeCache                protoimpl.SizeCache
}

func (x *VirtualMachine_Snapshot) Reset() {
	*x = VirtualMachine_Snapshot{}
	mi := &file_api_virtual_machine_v1_virtual_machine_proto_msgTypes[39]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *VirtualMachine_Snapshot) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*VirtualMachine_Snapshot) ProtoMessage() {}

func (x *VirtualMachine_Snapshot) ProtoReflect() protoreflect.Message {
	mi := &file_api_virtual_machine_v1_virtual_machine_proto_msgTypes[39]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *VirtualMachine_Snapshot) GetName() string {
	if x != nil {
		if x.xxx_hidden_Name != nil {
			return *x.xxx_hidden_Name
		}
		return ""
	}
	return ""
}

func (x *VirtualMachine_Snapshot) GetNamespace() string {
	if x != nil {
		if x.xxx_hidden_Namespace != nil {
			return *x.xxx_hidden_Namespace
		}
		return ""
	}
	return ""
}

func (x *VirtualMachine_Snapshot) GetSourceName() string {
	if x != nil {
		if x.xxx_hidden_SourceName != nil {
			return *x.xxx_hidden_SourceName
		}
		return ""
	}
	return ""
}

func (x *VirtualMachine_Snapshot) GetDescription() string {
	if x != nil {
		if x.xxx_hidden_Description != nil {
			return *x.xxx_hidden_Description
		}
		return ""
	}
	return ""
}

func (x *VirtualMachine_Snapshot) GetPhase() string {
	if x != nil {
		if x.xxx_hidden_Phase != nil {
			return *x.xxx_hidden_Phase
		}
		return ""
	}
	return ""
}

func (x *VirtualMachine_Snapshot) GetCreatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.xxx_hidden_CreatedAt
	}
	return nil
}

func (x *VirtualMachine_Snapshot) GetLastCondition() *v1.Application_Condition {
	if x != nil {
		return x.xxx_hidden_LastCondition
	}
	return nil
}

func (x *VirtualMachine_Snapshot) SetName(v string) {
	x.xxx_hidden_Name = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 0, 7)
}

func (x *VirtualMachine_Snapshot) SetNamespace(v string) {
	x.xxx_hidden_Namespace = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 1, 7)
}

func (x *VirtualMachine_Snapshot) SetSourceName(v string) {
	x.xxx_hidden_SourceName = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 2, 7)
}

func (x *VirtualMachine_Snapshot) SetDescription(v string) {
	x.xxx_hidden_Description = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 3, 7)
}

func (x *VirtualMachine_Snapshot) SetPhase(v string) {
	x.xxx_hidden_Phase = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 4, 7)
}

func (x *VirtualMachine_Snapshot) SetCreatedAt(v *timestamppb.Timestamp) {
	x.xxx_hidden_CreatedAt = v
}

func (x *VirtualMachine_Snapshot) SetLastCondition(v *v1.Application_Condition) {
	x.xxx_hidden_LastCondition = v
}

func (x *VirtualMachine_Snapshot) HasName() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 0)
}

func (x *VirtualMachine_Snapshot) HasNamespace() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 1)
}

func (x *VirtualMachine_Snapshot) HasSourceName() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 2)
}

func (x *VirtualMachine_Snapshot) HasDescription() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 3)
}

func (x *VirtualMachine_Snapshot) HasPhase() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 4)
}

func (x *VirtualMachine_Snapshot) HasCreatedAt() bool {
	if x == nil {
		return false
	}
	return x.xxx_hidden_CreatedAt != nil
}

func (x *VirtualMachine_Snapshot) HasLastCondition() bool {
	if x == nil {
		return false
	}
	return x.xxx_hidden_LastCondition != nil
}

func (x *VirtualMachine_Snapshot) ClearName() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 0)
	x.xxx_hidden_Name = nil
}

func (x *VirtualMachine_Snapshot) ClearNamespace() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 1)
	x.xxx_hidden_Namespace = nil
}

func (x *VirtualMachine_Snapshot) ClearSourceName() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 2)
	x.xxx_hidden_SourceName = nil
}

func (x *VirtualMachine_Snapshot) ClearDescription() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 3)
	x.xxx_hidden_Description = nil
}

func (x *VirtualMachine_Snapshot) ClearPhase() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 4)
	x.xxx_hidden_Phase = nil
}

func (x *VirtualMachine_Snapshot) ClearCreatedAt() {
	x.xxx_hidden_CreatedAt = nil
}

func (x *VirtualMachine_Snapshot) ClearLastCondition() {
	x.xxx_hidden_LastCondition = nil
}

type VirtualMachine_Snapshot_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	Name          *string
	Namespace     *string
	SourceName    *string
	Description   *string
	Phase         *string
	CreatedAt     *timestamppb.Timestamp
	LastCondition *v1.Application_Condition
}

func (b0 VirtualMachine_Snapshot_builder) Build() *VirtualMachine_Snapshot {
	m0 := &VirtualMachine_Snapshot{}
	b, x := &b0, m0
	_, _ = b, x
	if b.Name != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 0, 7)
		x.xxx_hidden_Name = b.Name
	}
	if b.Namespace != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 1, 7)
		x.xxx_hidden_Namespace = b.Namespace
	}
	if b.SourceName != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 2, 7)
		x.xxx_hidden_SourceName = b.SourceName
	}
	if b.Description != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 3, 7)
		x.xxx_hidden_Description = b.Description
	}
	if b.Phase != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 4, 7)
		x.xxx_hidden_Phase = b.Phase
	}
	x.xxx_hidden_CreatedAt = b.CreatedAt
	x.xxx_hidden_LastCondition = b.LastCondition
	return m0
}

type VirtualMachine_Restore struct {
	state                    protoimpl.MessageState    `protogen:"opaque.v1"`
	xxx_hidden_Name          *string                   `protobuf:"bytes,1,opt,name=name"`
	xxx_hidden_Namespace     *string                   `protobuf:"bytes,2,opt,name=namespace"`
	xxx_hidden_SourceName    *string                   `protobuf:"bytes,11,opt,name=source_name,json=sourceName"`
	xxx_hidden_Description   *string                   `protobuf:"bytes,12,opt,name=description"`
	xxx_hidden_Phase         *string                   `protobuf:"bytes,21,opt,name=phase"`
	xxx_hidden_CreatedAt     *timestamppb.Timestamp    `protobuf:"bytes,31,opt,name=created_at,json=createdAt"`
	xxx_hidden_LastCondition *v1.Application_Condition `protobuf:"bytes,41,opt,name=last_condition,json=lastCondition"`
	XXX_raceDetectHookData   protoimpl.RaceDetectHookData
	XXX_presence             [1]uint32
	unknownFields            protoimpl.UnknownFields
	sizeCache                protoimpl.SizeCache
}

func (x *VirtualMachine_Restore) Reset() {
	*x = VirtualMachine_Restore{}
	mi := &file_api_virtual_machine_v1_virtual_machine_proto_msgTypes[40]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *VirtualMachine_Restore) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*VirtualMachine_Restore) ProtoMessage() {}

func (x *VirtualMachine_Restore) ProtoReflect() protoreflect.Message {
	mi := &file_api_virtual_machine_v1_virtual_machine_proto_msgTypes[40]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *VirtualMachine_Restore) GetName() string {
	if x != nil {
		if x.xxx_hidden_Name != nil {
			return *x.xxx_hidden_Name
		}
		return ""
	}
	return ""
}

func (x *VirtualMachine_Restore) GetNamespace() string {
	if x != nil {
		if x.xxx_hidden_Namespace != nil {
			return *x.xxx_hidden_Namespace
		}
		return ""
	}
	return ""
}

func (x *VirtualMachine_Restore) GetSourceName() string {
	if x != nil {
		if x.xxx_hidden_SourceName != nil {
			return *x.xxx_hidden_SourceName
		}
		return ""
	}
	return ""
}

func (x *VirtualMachine_Restore) GetDescription() string {
	if x != nil {
		if x.xxx_hidden_Description != nil {
			return *x.xxx_hidden_Description
		}
		return ""
	}
	return ""
}

func (x *VirtualMachine_Restore) GetPhase() string {
	if x != nil {
		if x.xxx_hidden_Phase != nil {
			return *x.xxx_hidden_Phase
		}
		return ""
	}
	return ""
}

func (x *VirtualMachine_Restore) GetCreatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.xxx_hidden_CreatedAt
	}
	return nil
}

func (x *VirtualMachine_Restore) GetLastCondition() *v1.Application_Condition {
	if x != nil {
		return x.xxx_hidden_LastCondition
	}
	return nil
}

func (x *VirtualMachine_Restore) SetName(v string) {
	x.xxx_hidden_Name = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 0, 7)
}

func (x *VirtualMachine_Restore) SetNamespace(v string) {
	x.xxx_hidden_Namespace = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 1, 7)
}

func (x *VirtualMachine_Restore) SetSourceName(v string) {
	x.xxx_hidden_SourceName = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 2, 7)
}

func (x *VirtualMachine_Restore) SetDescription(v string) {
	x.xxx_hidden_Description = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 3, 7)
}

func (x *VirtualMachine_Restore) SetPhase(v string) {
	x.xxx_hidden_Phase = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 4, 7)
}

func (x *VirtualMachine_Restore) SetCreatedAt(v *timestamppb.Timestamp) {
	x.xxx_hidden_CreatedAt = v
}

func (x *VirtualMachine_Restore) SetLastCondition(v *v1.Application_Condition) {
	x.xxx_hidden_LastCondition = v
}

func (x *VirtualMachine_Restore) HasName() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 0)
}

func (x *VirtualMachine_Restore) HasNamespace() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 1)
}

func (x *VirtualMachine_Restore) HasSourceName() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 2)
}

func (x *VirtualMachine_Restore) HasDescription() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 3)
}

func (x *VirtualMachine_Restore) HasPhase() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 4)
}

func (x *VirtualMachine_Restore) HasCreatedAt() bool {
	if x == nil {
		return false
	}
	return x.xxx_hidden_CreatedAt != nil
}

func (x *VirtualMachine_Restore) HasLastCondition() bool {
	if x == nil {
		return false
	}
	return x.xxx_hidden_LastCondition != nil
}

func (x *VirtualMachine_Restore) ClearName() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 0)
	x.xxx_hidden_Name = nil
}

func (x *VirtualMachine_Restore) ClearNamespace() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 1)
	x.xxx_hidden_Namespace = nil
}

func (x *VirtualMachine_Restore) ClearSourceName() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 2)
	x.xxx_hidden_SourceName = nil
}

func (x *VirtualMachine_Restore) ClearDescription() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 3)
	x.xxx_hidden_Description = nil
}

func (x *VirtualMachine_Restore) ClearPhase() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 4)
	x.xxx_hidden_Phase = nil
}

func (x *VirtualMachine_Restore) ClearCreatedAt() {
	x.xxx_hidden_CreatedAt = nil
}

func (x *VirtualMachine_Restore) ClearLastCondition() {
	x.xxx_hidden_LastCondition = nil
}

type VirtualMachine_Restore_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	Name          *string
	Namespace     *string
	SourceName    *string
	Description   *string
	Phase         *string
	CreatedAt     *timestamppb.Timestamp
	LastCondition *v1.Application_Condition
}

func (b0 VirtualMachine_Restore_builder) Build() *VirtualMachine_Restore {
	m0 := &VirtualMachine_Restore{}
	b, x := &b0, m0
	_, _ = b, x
	if b.Name != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 0, 7)
		x.xxx_hidden_Name = b.Name
	}
	if b.Namespace != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 1, 7)
		x.xxx_hidden_Namespace = b.Namespace
	}
	if b.SourceName != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 2, 7)
		x.xxx_hidden_SourceName = b.SourceName
	}
	if b.Description != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 3, 7)
		x.xxx_hidden_Description = b.Description
	}
	if b.Phase != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 4, 7)
		x.xxx_hidden_Phase = b.Phase
	}
	x.xxx_hidden_CreatedAt = b.CreatedAt
	x.xxx_hidden_LastCondition = b.LastCondition
	return m0
}

type VirtualMachine_Disk struct {
	state                  protoimpl.MessageState  `protogen:"opaque.v1"`
	xxx_hidden_Name        *string                 `protobuf:"bytes,1,opt,name=name"`
	xxx_hidden_Namespace   *string                 `protobuf:"bytes,2,opt,name=namespace"`
	xxx_hidden_Bus         VirtualMachine_Disk_Bus `protobuf:"varint,3,opt,name=bus,enum=otterscale.virtual_machine.v1.VirtualMachine_Disk_Bus"`
	xxx_hidden_Bootable    bool                    `protobuf:"varint,21,opt,name=bootable"`
	xxx_hidden_BootOrder   uint32                  `protobuf:"varint,22,opt,name=boot_order,json=bootOrder"`
	XXX_raceDetectHookData protoimpl.RaceDetectHookData
	XXX_presence           [1]uint32
	unknownFields          protoimpl.UnknownFields
	sizeCache              protoimpl.SizeCache
}

func (x *VirtualMachine_Disk) Reset() {
	*x = VirtualMachine_Disk{}
	mi := &file_api_virtual_machine_v1_virtual_machine_proto_msgTypes[41]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *VirtualMachine_Disk) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*VirtualMachine_Disk) ProtoMessage() {}

func (x *VirtualMachine_Disk) ProtoReflect() protoreflect.Message {
	mi := &file_api_virtual_machine_v1_virtual_machine_proto_msgTypes[41]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *VirtualMachine_Disk) GetName() string {
	if x != nil {
		if x.xxx_hidden_Name != nil {
			return *x.xxx_hidden_Name
		}
		return ""
	}
	return ""
}

func (x *VirtualMachine_Disk) GetNamespace() string {
	if x != nil {
		if x.xxx_hidden_Namespace != nil {
			return *x.xxx_hidden_Namespace
		}
		return ""
	}
	return ""
}

func (x *VirtualMachine_Disk) GetBus() VirtualMachine_Disk_Bus {
	if x != nil {
		if protoimpl.X.Present(&(x.XXX_presence[0]), 2) {
			return x.xxx_hidden_Bus
		}
	}
	return VirtualMachine_Disk_VIRTIO
}

func (x *VirtualMachine_Disk) GetBootable() bool {
	if x != nil {
		return x.xxx_hidden_Bootable
	}
	return false
}

func (x *VirtualMachine_Disk) GetBootOrder() uint32 {
	if x != nil {
		return x.xxx_hidden_BootOrder
	}
	return 0
}

func (x *VirtualMachine_Disk) SetName(v string) {
	x.xxx_hidden_Name = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 0, 5)
}

func (x *VirtualMachine_Disk) SetNamespace(v string) {
	x.xxx_hidden_Namespace = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 1, 5)
}

func (x *VirtualMachine_Disk) SetBus(v VirtualMachine_Disk_Bus) {
	x.xxx_hidden_Bus = v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 2, 5)
}

func (x *VirtualMachine_Disk) SetBootable(v bool) {
	x.xxx_hidden_Bootable = v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 3, 5)
}

func (x *VirtualMachine_Disk) SetBootOrder(v uint32) {
	x.xxx_hidden_BootOrder = v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 4, 5)
}

func (x *VirtualMachine_Disk) HasName() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 0)
}

func (x *VirtualMachine_Disk) HasNamespace() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 1)
}

func (x *VirtualMachine_Disk) HasBus() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 2)
}

func (x *VirtualMachine_Disk) HasBootable() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 3)
}

func (x *VirtualMachine_Disk) HasBootOrder() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 4)
}

func (x *VirtualMachine_Disk) ClearName() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 0)
	x.xxx_hidden_Name = nil
}

func (x *VirtualMachine_Disk) ClearNamespace() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 1)
	x.xxx_hidden_Namespace = nil
}

func (x *VirtualMachine_Disk) ClearBus() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 2)
	x.xxx_hidden_Bus = VirtualMachine_Disk_VIRTIO
}

func (x *VirtualMachine_Disk) ClearBootable() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 3)
	x.xxx_hidden_Bootable = false
}

func (x *VirtualMachine_Disk) ClearBootOrder() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 4)
	x.xxx_hidden_BootOrder = 0
}

type VirtualMachine_Disk_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	Name      *string
	Namespace *string
	Bus       *VirtualMachine_Disk_Bus
	// Type type = 11;
	// string data = 12;
	Bootable  *bool
	BootOrder *uint32
}

func (b0 VirtualMachine_Disk_builder) Build() *VirtualMachine_Disk {
	m0 := &VirtualMachine_Disk{}
	b, x := &b0, m0
	_, _ = b, x
	if b.Name != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 0, 5)
		x.xxx_hidden_Name = b.Name
	}
	if b.Namespace != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 1, 5)
		x.xxx_hidden_Namespace = b.Namespace
	}
	if b.Bus != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 2, 5)
		x.xxx_hidden_Bus = *b.Bus
	}
	if b.Bootable != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 3, 5)
		x.xxx_hidden_Bootable = *b.Bootable
	}
	if b.BootOrder != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 4, 5)
		x.xxx_hidden_BootOrder = *b.BootOrder
	}
	return m0
}

type DataVolume_Source struct {
	state                  protoimpl.MessageState `protogen:"opaque.v1"`
	xxx_hidden_Type        DataVolume_Source_Type `protobuf:"varint,1,opt,name=type,enum=otterscale.virtual_machine.v1.DataVolume_Source_Type"`
	xxx_hidden_Data        *string                `protobuf:"bytes,2,opt,name=data"`
	XXX_raceDetectHookData protoimpl.RaceDetectHookData
	XXX_presence           [1]uint32
	unknownFields          protoimpl.UnknownFields
	sizeCache              protoimpl.SizeCache
}

func (x *DataVolume_Source) Reset() {
	*x = DataVolume_Source{}
	mi := &file_api_virtual_machine_v1_virtual_machine_proto_msgTypes[42]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DataVolume_Source) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DataVolume_Source) ProtoMessage() {}

func (x *DataVolume_Source) ProtoReflect() protoreflect.Message {
	mi := &file_api_virtual_machine_v1_virtual_machine_proto_msgTypes[42]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *DataVolume_Source) GetType() DataVolume_Source_Type {
	if x != nil {
		if protoimpl.X.Present(&(x.XXX_presence[0]), 0) {
			return x.xxx_hidden_Type
		}
	}
	return DataVolume_Source_BLANK_IMAGE
}

func (x *DataVolume_Source) GetData() string {
	if x != nil {
		if x.xxx_hidden_Data != nil {
			return *x.xxx_hidden_Data
		}
		return ""
	}
	return ""
}

func (x *DataVolume_Source) SetType(v DataVolume_Source_Type) {
	x.xxx_hidden_Type = v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 0, 2)
}

func (x *DataVolume_Source) SetData(v string) {
	x.xxx_hidden_Data = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 1, 2)
}

func (x *DataVolume_Source) HasType() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 0)
}

func (x *DataVolume_Source) HasData() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 1)
}

func (x *DataVolume_Source) ClearType() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 0)
	x.xxx_hidden_Type = DataVolume_Source_BLANK_IMAGE
}

func (x *DataVolume_Source) ClearData() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 1)
	x.xxx_hidden_Data = nil
}

type DataVolume_Source_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	Type *DataVolume_Source_Type
	Data *string
}

func (b0 DataVolume_Source_builder) Build() *DataVolume_Source {
	m0 := &DataVolume_Source{}
	b, x := &b0, m0
	_, _ = b, x
	if b.Type != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 0, 2)
		x.xxx_hidden_Type = *b.Type
	}
	if b.Data != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 1, 2)
		x.xxx_hidden_Data = b.Data
	}
	return m0
}

type DataVolume_Condition struct {
	state                     protoimpl.MessageState `protogen:"opaque.v1"`
	xxx_hidden_Type           *string                `protobuf:"bytes,1,opt,name=type"`
	xxx_hidden_Status         *string                `protobuf:"bytes,2,opt,name=status"`
	xxx_hidden_Reason         *string                `protobuf:"bytes,3,opt,name=reason"`
	xxx_hidden_Message        *string                `protobuf:"bytes,4,opt,name=message"`
	xxx_hidden_HeartbeatAt    *timestamppb.Timestamp `protobuf:"bytes,201,opt,name=heartbeat_at,json=heartbeatAt"`
	xxx_hidden_TransitionedAt *timestamppb.Timestamp `protobuf:"bytes,202,opt,name=transitioned_at,json=transitionedAt"`
	XXX_raceDetectHookData    protoimpl.RaceDetectHookData
	XXX_presence              [1]uint32
	unknownFields             protoimpl.UnknownFields
	sizeCache                 protoimpl.SizeCache
}

func (x *DataVolume_Condition) Reset() {
	*x = DataVolume_Condition{}
	mi := &file_api_virtual_machine_v1_virtual_machine_proto_msgTypes[43]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DataVolume_Condition) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DataVolume_Condition) ProtoMessage() {}

func (x *DataVolume_Condition) ProtoReflect() protoreflect.Message {
	mi := &file_api_virtual_machine_v1_virtual_machine_proto_msgTypes[43]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *DataVolume_Condition) GetType() string {
	if x != nil {
		if x.xxx_hidden_Type != nil {
			return *x.xxx_hidden_Type
		}
		return ""
	}
	return ""
}

func (x *DataVolume_Condition) GetStatus() string {
	if x != nil {
		if x.xxx_hidden_Status != nil {
			return *x.xxx_hidden_Status
		}
		return ""
	}
	return ""
}

func (x *DataVolume_Condition) GetReason() string {
	if x != nil {
		if x.xxx_hidden_Reason != nil {
			return *x.xxx_hidden_Reason
		}
		return ""
	}
	return ""
}

func (x *DataVolume_Condition) GetMessage() string {
	if x != nil {
		if x.xxx_hidden_Message != nil {
			return *x.xxx_hidden_Message
		}
		return ""
	}
	return ""
}

func (x *DataVolume_Condition) GetHeartbeatAt() *timestamppb.Timestamp {
	if x != nil {
		return x.xxx_hidden_HeartbeatAt
	}
	return nil
}

func (x *DataVolume_Condition) GetTransitionedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.xxx_hidden_TransitionedAt
	}
	return nil
}

func (x *DataVolume_Condition) SetType(v string) {
	x.xxx_hidden_Type = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 0, 6)
}

func (x *DataVolume_Condition) SetStatus(v string) {
	x.xxx_hidden_Status = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 1, 6)
}

func (x *DataVolume_Condition) SetReason(v string) {
	x.xxx_hidden_Reason = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 2, 6)
}

func (x *DataVolume_Condition) SetMessage(v string) {
	x.xxx_hidden_Message = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 3, 6)
}

func (x *DataVolume_Condition) SetHeartbeatAt(v *timestamppb.Timestamp) {
	x.xxx_hidden_HeartbeatAt = v
}

func (x *DataVolume_Condition) SetTransitionedAt(v *timestamppb.Timestamp) {
	x.xxx_hidden_TransitionedAt = v
}

func (x *DataVolume_Condition) HasType() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 0)
}

func (x *DataVolume_Condition) HasStatus() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 1)
}

func (x *DataVolume_Condition) HasReason() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 2)
}

func (x *DataVolume_Condition) HasMessage() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 3)
}

func (x *DataVolume_Condition) HasHeartbeatAt() bool {
	if x == nil {
		return false
	}
	return x.xxx_hidden_HeartbeatAt != nil
}

func (x *DataVolume_Condition) HasTransitionedAt() bool {
	if x == nil {
		return false
	}
	return x.xxx_hidden_TransitionedAt != nil
}

func (x *DataVolume_Condition) ClearType() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 0)
	x.xxx_hidden_Type = nil
}

func (x *DataVolume_Condition) ClearStatus() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 1)
	x.xxx_hidden_Status = nil
}

func (x *DataVolume_Condition) ClearReason() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 2)
	x.xxx_hidden_Reason = nil
}

func (x *DataVolume_Condition) ClearMessage() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 3)
	x.xxx_hidden_Message = nil
}

func (x *DataVolume_Condition) ClearHeartbeatAt() {
	x.xxx_hidden_HeartbeatAt = nil
}

func (x *DataVolume_Condition) ClearTransitionedAt() {
	x.xxx_hidden_TransitionedAt = nil
}

type DataVolume_Condition_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	Type           *string
	Status         *string
	Reason         *string
	Message        *string
	HeartbeatAt    *timestamppb.Timestamp
	TransitionedAt *timestamppb.Timestamp
}

func (b0 DataVolume_Condition_builder) Build() *DataVolume_Condition {
	m0 := &DataVolume_Condition{}
	b, x := &b0, m0
	_, _ = b, x
	if b.Type != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 0, 6)
		x.xxx_hidden_Type = b.Type
	}
	if b.Status != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 1, 6)
		x.xxx_hidden_Status = b.Status
	}
	if b.Reason != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 2, 6)
		x.xxx_hidden_Reason = b.Reason
	}
	if b.Message != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 3, 6)
		x.xxx_hidden_Message = b.Message
	}
	x.xxx_hidden_HeartbeatAt = b.HeartbeatAt
	x.xxx_hidden_TransitionedAt = b.TransitionedAt
	return m0
}

var File_api_virtual_machine_v1_virtual_machine_proto protoreflect.FileDescriptor

const file_api_virtual_machine_v1_virtual_machine_proto_rawDesc = "" +
	"\n" +
	",api/virtual_machine/v1/virtual_machine.proto\x12\x1dotterscale.virtual_machine.v1\x1a$api/application/v1/application.proto\x1a\x1bgoogle/protobuf/empty.proto\x1a\x1fgoogle/protobuf/timestamp.proto\"\xd7\x06\n" +
	"\x0eVirtualMachine\x1a\xa9\x02\n" +
	"\bSnapshot\x12\x12\n" +
	"\x04name\x18\x01 \x01(\tR\x04name\x12\x1c\n" +
	"\tnamespace\x18\x02 \x01(\tR\tnamespace\x12\x1f\n" +
	"\vsource_name\x18\v \x01(\tR\n" +
	"sourceName\x12 \n" +
	"\vdescription\x18\f \x01(\tR\vdescription\x12\x14\n" +
	"\x05phase\x18\x15 \x01(\tR\x05phase\x129\n" +
	"\n" +
	"created_at\x18\x1f \x01(\v2\x1a.google.protobuf.TimestampR\tcreatedAt\x12W\n" +
	"\x0elast_condition\x18) \x01(\v20.otterscale.application.v1.Application.ConditionR\rlastCondition\x1a\xa8\x02\n" +
	"\aRestore\x12\x12\n" +
	"\x04name\x18\x01 \x01(\tR\x04name\x12\x1c\n" +
	"\tnamespace\x18\x02 \x01(\tR\tnamespace\x12\x1f\n" +
	"\vsource_name\x18\v \x01(\tR\n" +
	"sourceName\x12 \n" +
	"\vdescription\x18\f \x01(\tR\vdescription\x12\x14\n" +
	"\x05phase\x18\x15 \x01(\tR\x05phase\x129\n" +
	"\n" +
	"created_at\x18\x1f \x01(\v2\x1a.google.protobuf.TimestampR\tcreatedAt\x12W\n" +
	"\x0elast_condition\x18) \x01(\v20.otterscale.application.v1.Application.ConditionR\rlastCondition\x1a\xed\x01\n" +
	"\x04Disk\x12\x12\n" +
	"\x04name\x18\x01 \x01(\tR\x04name\x12\x1c\n" +
	"\tnamespace\x18\x02 \x01(\tR\tnamespace\x12H\n" +
	"\x03bus\x18\x03 \x01(\x0e26.otterscale.virtual_machine.v1.VirtualMachine.Disk.BusR\x03bus\x12\x1a\n" +
	"\bbootable\x18\x15 \x01(\bR\bbootable\x12\x1d\n" +
	"\n" +
	"boot_order\x18\x16 \x01(\rR\tbootOrder\".\n" +
	"\x03Bus\x12\n" +
	"\n" +
	"\x06VIRTIO\x10\x00\x12\b\n" +
	"\x04SATA\x10\x01\x12\b\n" +
	"\x04SCSI\x10\x02\x12\a\n" +
	"\x03USB\x10\x03\"\xf1\x06\n" +
	"\n" +
	"DataVolume\x12\x12\n" +
	"\x04name\x18\x01 \x01(\tR\x04name\x12\x1c\n" +
	"\tnamespace\x18\x02 \x01(\tR\tnamespace\x12H\n" +
	"\x06source\x18\v \x01(\v20.otterscale.virtual_machine.v1.DataVolume.SourceR\x06source\x12\x1d\n" +
	"\n" +
	"boot_image\x18\f \x01(\bR\tbootImage\x12\x14\n" +
	"\x05phase\x18\x15 \x01(\tR\x05phase\x12\x1a\n" +
	"\bprogress\x18\x16 \x01(\tR\bprogress\x12\x1d\n" +
	"\n" +
	"size_bytes\x18\x1f \x01(\x03R\tsizeBytes\x12r\n" +
	"\x15PersistentVolumeClaim\x18  \x01(\v2<.otterscale.application.v1.Application.PersistentVolumeClaimR\x15PersistentVolumeClaim\x12Z\n" +
	"\x0elast_condition\x18) \x01(\v23.otterscale.virtual_machine.v1.DataVolume.ConditionR\rlastCondition\x1a\xb4\x01\n" +
	"\x06Source\x12I\n" +
	"\x04type\x18\x01 \x01(\x0e25.otterscale.virtual_machine.v1.DataVolume.Source.TypeR\x04type\x12\x12\n" +
	"\x04data\x18\x02 \x01(\tR\x04data\"K\n" +
	"\x04Type\x12\x0f\n" +
	"\vBLANK_IMAGE\x10\x00\x12\f\n" +
	"\bHTTP_URL\x10\x01\x12$\n" +
	" EXISTING_PERSISTENT_VOLUME_CLAIM\x10\x02\x1a\xef\x01\n" +
	"\tCondition\x12\x12\n" +
	"\x04type\x18\x01 \x01(\tR\x04type\x12\x16\n" +
	"\x06status\x18\x02 \x01(\tR\x06status\x12\x16\n" +
	"\x06reason\x18\x03 \x01(\tR\x06reason\x12\x18\n" +
	"\amessage\x18\x04 \x01(\tR\amessage\x12>\n" +
	"\fheartbeat_at\x18\xc9\x01 \x01(\v2\x1a.google.protobuf.TimestampR\vheartbeatAt\x12D\n" +
	"\x0ftransitioned_at\x18\xca\x01 \x01(\v2\x1a.google.protobuf.TimestampR\x0etransitionedAt\"\x80\x01\n" +
	"\fInstanceType\x12\x12\n" +
	"\x04name\x18\x01 \x01(\tR\x04name\x12\x1c\n" +
	"\tnamespace\x18\x02 \x01(\tR\tnamespace\x12\x1b\n" +
	"\tcpu_cores\x18\x03 \x01(\rR\bcpuCores\x12!\n" +
	"\fmemory_bytes\x18\x04 \x01(\x03R\vmemoryBytes\"~\n" +
	"\x1aListVirtualMachinesRequest\x12\x1d\n" +
	"\n" +
	"scope_uuid\x18\x01 \x01(\tR\tscopeUuid\x12#\n" +
	"\rfacility_name\x18\x02 \x01(\tR\ffacilityName\x12\x1c\n" +
	"\tnamespace\x18\x03 \x01(\tR\tnamespace\"w\n" +
	"\x1bListVirtualMachinesResponse\x12X\n" +
	"\x10virtual_machines\x18\x01 \x03(\v2-.otterscale.virtual_machine.v1.VirtualMachineR\x0fvirtualMachines\"\x90\x01\n" +
	"\x18GetVirtualMachineRequest\x12\x1d\n" +
	"\n" +
	"scope_uuid\x18\x01 \x01(\tR\tscopeUuid\x12#\n" +
	"\rfacility_name\x18\x02 \x01(\tR\ffacilityName\x12\x1c\n" +
	"\tnamespace\x18\x03 \x01(\tR\tnamespace\x12\x12\n" +
	"\x04name\x18\x04 \x01(\tR\x04name\"\x9b\x02\n" +
	"\x1bCreateVirtualMachineRequest\x12\x1d\n" +
	"\n" +
	"scope_uuid\x18\x01 \x01(\tR\tscopeUuid\x12#\n" +
	"\rfacility_name\x18\x02 \x01(\tR\ffacilityName\x12\x12\n" +
	"\x04name\x18\v \x01(\tR\x04name\x12\x1c\n" +
	"\tnamespace\x18\f \x01(\tR\tnamespace\x12,\n" +
	"\x12instance_type_name\x18\x15 \x01(\tR\x10instanceTypeName\x121\n" +
	"\x15boot_data_volume_name\x18\x16 \x01(\tR\x12bootDataVolumeName\x12%\n" +
	"\x0estartup_script\x18\x1f \x01(\tR\rstartupScript\"\x93\x01\n" +
	"\x1bDeleteVirtualMachineRequest\x12\x1d\n" +
	"\n" +
	"scope_uuid\x18\x01 \x01(\tR\tscopeUuid\x12#\n" +
	"\rfacility_name\x18\x02 \x01(\tR\ffacilityName\x12\x1c\n" +
	"\tnamespace\x18\x03 \x01(\tR\tnamespace\x12\x12\n" +
	"\x04name\x18\x04 \x01(\tR\x04name\"\xb3\x01\n" +
	"\x1aCloneVirtualMachineRequest\x12\x1d\n" +
	"\n" +
	"scope_uuid\x18\x01 \x01(\tR\tscopeUuid\x12#\n" +
	"\rfacility_name\x18\x02 \x01(\tR\ffacilityName\x12\x1c\n" +
	"\tnamespace\x18\x03 \x01(\tR\tnamespace\x12\x12\n" +
	"\x04name\x18\x04 \x01(\tR\x04name\x12\x1f\n" +
	"\vtarget_name\x18\x05 \x01(\tR\n" +
	"targetName\"\x8c\x01\n" +
	"\x14StartInstanceRequest\x12\x1d\n" +
	"\n" +
	"scope_uuid\x18\x01 \x01(\tR\tscopeUuid\x12#\n" +
	"\rfacility_name\x18\x02 \x01(\tR\ffacilityName\x12\x1c\n" +
	"\tnamespace\x18\x03 \x01(\tR\tnamespace\x12\x12\n" +
	"\x04name\x18\x04 \x01(\tR\x04name\"\x8b\x01\n" +
	"\x13StopInstanceRequest\x12\x1d\n" +
	"\n" +
	"scope_uuid\x18\x01 \x01(\tR\tscopeUuid\x12#\n" +
	"\rfacility_name\x18\x02 \x01(\tR\ffacilityName\x12\x1c\n" +
	"\tnamespace\x18\x03 \x01(\tR\tnamespace\x12\x12\n" +
	"\x04name\x18\x04 \x01(\tR\x04name\"\x8e\x01\n" +
	"\x16RestartInstanceRequest\x12\x1d\n" +
	"\n" +
	"scope_uuid\x18\x01 \x01(\tR\tscopeUuid\x12#\n" +
	"\rfacility_name\x18\x02 \x01(\tR\ffacilityName\x12\x1c\n" +
	"\tnamespace\x18\x03 \x01(\tR\tnamespace\x12\x12\n" +
	"\x04name\x18\x04 \x01(\tR\x04name\"\x8c\x01\n" +
	"\x14PauseInstanceRequest\x12\x1d\n" +
	"\n" +
	"scope_uuid\x18\x01 \x01(\tR\tscopeUuid\x12#\n" +
	"\rfacility_name\x18\x02 \x01(\tR\ffacilityName\x12\x1c\n" +
	"\tnamespace\x18\x03 \x01(\tR\tnamespace\x12\x12\n" +
	"\x04name\x18\x04 \x01(\tR\x04name\"\x8d\x01\n" +
	"\x15ResumeInstanceRequest\x12\x1d\n" +
	"\n" +
	"scope_uuid\x18\x01 \x01(\tR\tscopeUuid\x12#\n" +
	"\rfacility_name\x18\x02 \x01(\tR\ffacilityName\x12\x1c\n" +
	"\tnamespace\x18\x03 \x01(\tR\tnamespace\x12\x12\n" +
	"\x04name\x18\x04 \x01(\tR\x04name\"\xb7\x01\n" +
	"\x16MigrateInstanceRequest\x12\x1d\n" +
	"\n" +
	"scope_uuid\x18\x01 \x01(\tR\tscopeUuid\x12#\n" +
	"\rfacility_name\x18\x02 \x01(\tR\ffacilityName\x12\x1c\n" +
	"\tnamespace\x18\x03 \x01(\tR\tnamespace\x12\x12\n" +
	"\x04name\x18\x04 \x01(\tR\x04name\x12'\n" +
	"\x0ftarget_hostname\x18\v \x01(\tR\x0etargetHostname\"\xd7\x01\n" +
	"\x14CreateServiceRequest\x12\x1d\n" +
	"\n" +
	"scope_uuid\x18\x01 \x01(\tR\tscopeUuid\x12#\n" +
	"\rfacility_name\x18\x02 \x01(\tR\ffacilityName\x12\x1c\n" +
	"\tnamespace\x18\x03 \x01(\tR\tnamespace\x12\x12\n" +
	"\x04name\x18\x04 \x01(\tR\x04name\x12I\n" +
	"\x05ports\x18\v \x03(\v23.otterscale.application.v1.Application.Service.PortR\x05ports\"\xd7\x01\n" +
	"\x14UpdateServiceRequest\x12\x1d\n" +
	"\n" +
	"scope_uuid\x18\x01 \x01(\tR\tscopeUuid\x12#\n" +
	"\rfacility_name\x18\x02 \x01(\tR\ffacilityName\x12\x1c\n" +
	"\tnamespace\x18\x03 \x01(\tR\tnamespace\x12\x12\n" +
	"\x04name\x18\x04 \x01(\tR\x04name\x12I\n" +
	"\x05ports\x18\v \x03(\v23.otterscale.application.v1.Application.Service.PortR\x05ports\"\x8c\x01\n" +
	"\x14DeleteServiceRequest\x12\x1d\n" +
	"\n" +
	"scope_uuid\x18\x01 \x01(\tR\tscopeUuid\x12#\n" +
	"\rfacility_name\x18\x02 \x01(\tR\ffacilityName\x12\x1c\n" +
	"\tnamespace\x18\x03 \x01(\tR\tnamespace\x12\x12\n" +
	"\x04name\x18\x04 \x01(\tR\x04name\"\xe1\x01\n" +
	"\x15CreateSnapshotRequest\x12\x1d\n" +
	"\n" +
	"scope_uuid\x18\x01 \x01(\tR\tscopeUuid\x12#\n" +
	"\rfacility_name\x18\x02 \x01(\tR\ffacilityName\x12\x1c\n" +
	"\tnamespace\x18\x03 \x01(\tR\tnamespace\x12\x12\n" +
	"\x04name\x18\x04 \x01(\tR\x04name\x12 \n" +
	"\vdescription\x18\x05 \x01(\tR\vdescription\x120\n" +
	"\x14virtual_machine_name\x18\v \x01(\tR\x12virtualMachineName\"\x8d\x01\n" +
	"\x15DeleteSnapshotRequest\x12\x1d\n" +
	"\n" +
	"scope_uuid\x18\x01 \x01(\tR\tscopeUuid\x12#\n" +
	"\rfacility_name\x18\x02 \x01(\tR\ffacilityName\x12\x1c\n" +
	"\tnamespace\x18\x03 \x01(\tR\tnamespace\x12\x12\n" +
	"\x04name\x18\x04 \x01(\tR\x04name\"\xe3\x01\n" +
	"\x14CreateRestoreRequest\x12\x1d\n" +
	"\n" +
	"scope_uuid\x18\x01 \x01(\tR\tscopeUuid\x12#\n" +
	"\rfacility_name\x18\x02 \x01(\tR\ffacilityName\x12\x1c\n" +
	"\tnamespace\x18\x03 \x01(\tR\tnamespace\x12\x12\n" +
	"\x04name\x18\x04 \x01(\tR\x04name\x120\n" +
	"\x14virtual_machine_name\x18\v \x01(\tR\x12virtualMachineName\x12#\n" +
	"\rsnapshot_name\x18\f \x01(\tR\fsnapshotName\"\x8c\x01\n" +
	"\x14DeleteRestoreRequest\x12\x1d\n" +
	"\n" +
	"scope_uuid\x18\x01 \x01(\tR\tscopeUuid\x12#\n" +
	"\rfacility_name\x18\x02 \x01(\tR\ffacilityName\x12\x1c\n" +
	"\tnamespace\x18\x03 \x01(\tR\tnamespace\x12\x12\n" +
	"\x04name\x18\x04 \x01(\tR\x04name\"\xb3\x01\n" +
	"\x11CreateDiskRequest\x12\x1d\n" +
	"\n" +
	"scope_uuid\x18\x01 \x01(\tR\tscopeUuid\x12#\n" +
	"\rfacility_name\x18\x02 \x01(\tR\ffacilityName\x12\x1c\n" +
	"\tnamespace\x18\x03 \x01(\tR\tnamespace\x12\x12\n" +
	"\x04name\x18\x04 \x01(\tR\x04name\x12(\n" +
	"\x10data_volume_name\x18\v \x01(\tR\x0edataVolumeName\"\x89\x01\n" +
	"\x11DeleteDiskRequest\x12\x1d\n" +
	"\n" +
	"scope_uuid\x18\x01 \x01(\tR\tscopeUuid\x12#\n" +
	"\rfacility_name\x18\x02 \x01(\tR\ffacilityName\x12\x1c\n" +
	"\tnamespace\x18\x03 \x01(\tR\tnamespace\x12\x12\n" +
	"\x04name\x18\x04 \x01(\tR\x04name\"\xbb\x01\n" +
	"\x11AttachDiskRequest\x12\x1d\n" +
	"\n" +
	"scope_uuid\x18\x01 \x01(\tR\tscopeUuid\x12#\n" +
	"\rfacility_name\x18\x02 \x01(\tR\ffacilityName\x12\x1c\n" +
	"\tnamespace\x18\x03 \x01(\tR\tnamespace\x12\x12\n" +
	"\x04name\x18\x04 \x01(\tR\x04name\x120\n" +
	"\x14virtual_machine_name\x18\v \x01(\tR\x12virtualMachineName\"\xbb\x01\n" +
	"\x11DetachDiskRequest\x12\x1d\n" +
	"\n" +
	"scope_uuid\x18\x01 \x01(\tR\tscopeUuid\x12#\n" +
	"\rfacility_name\x18\x02 \x01(\tR\ffacilityName\x12\x1c\n" +
	"\tnamespace\x18\x03 \x01(\tR\tnamespace\x12\x12\n" +
	"\x04name\x18\x04 \x01(\tR\x04name\x120\n" +
	"\x14virtual_machine_name\x18\v \x01(\tR\x12virtualMachineName\"z\n" +
	"\x16ListDataVolumesRequest\x12\x1d\n" +
	"\n" +
	"scope_uuid\x18\x01 \x01(\tR\tscopeUuid\x12#\n" +
	"\rfacility_name\x18\x02 \x01(\tR\ffacilityName\x12\x1c\n" +
	"\tnamespace\x18\x03 \x01(\tR\tnamespace\"g\n" +
	"\x17ListDataVolumesResponse\x12L\n" +
	"\fdata_volumes\x18\x01 \x03(\v2).otterscale.virtual_machine.v1.DataVolumeR\vdataVolumes\"\x8c\x01\n" +
	"\x14GetDataVolumeRequest\x12\x1d\n" +
	"\n" +
	"scope_uuid\x18\x01 \x01(\tR\tscopeUuid\x12#\n" +
	"\rfacility_name\x18\x02 \x01(\tR\ffacilityName\x12\x1c\n" +
	"\tnamespace\x18\x03 \x01(\tR\tnamespace\x12\x12\n" +
	"\x04name\x18\x04 \x01(\tR\x04name\"\x97\x02\n" +
	"\x17CreateDataVolumeRequest\x12\x1d\n" +
	"\n" +
	"scope_uuid\x18\x01 \x01(\tR\tscopeUuid\x12#\n" +
	"\rfacility_name\x18\x02 \x01(\tR\ffacilityName\x12\x12\n" +
	"\x04name\x18\v \x01(\tR\x04name\x12\x1c\n" +
	"\tnamespace\x18\f \x01(\tR\tnamespace\x12H\n" +
	"\x06source\x18\x15 \x01(\v20.otterscale.virtual_machine.v1.DataVolume.SourceR\x06source\x12\x1d\n" +
	"\n" +
	"boot_image\x18\x16 \x01(\bR\tbootImage\x12\x1d\n" +
	"\n" +
	"size_bytes\x18\x1f \x01(\x03R\tsizeBytes\"\x8f\x01\n" +
	"\x17DeleteDataVolumeRequest\x12\x1d\n" +
	"\n" +
	"scope_uuid\x18\x01 \x01(\tR\tscopeUuid\x12#\n" +
	"\rfacility_name\x18\x02 \x01(\tR\ffacilityName\x12\x1c\n" +
	"\tnamespace\x18\x03 \x01(\tR\tnamespace\x12\x12\n" +
	"\x04name\x18\x04 \x01(\tR\x04name\"\xae\x01\n" +
	"\x17ExtendDataVolumeRequest\x12\x1d\n" +
	"\n" +
	"scope_uuid\x18\x01 \x01(\tR\tscopeUuid\x12#\n" +
	"\rfacility_name\x18\x02 \x01(\tR\ffacilityName\x12\x1c\n" +
	"\tnamespace\x18\x03 \x01(\tR\tnamespace\x12\x12\n" +
	"\x04name\x18\x04 \x01(\tR\x04name\x12\x1d\n" +
	"\n" +
	"size_bytes\x18\v \x01(\x03R\tsizeBytes\"i\n" +
	"#ListClusterWideInstanceTypesRequest\x12\x1d\n" +
	"\n" +
	"scope_uuid\x18\x01 \x01(\tR\tscopeUuid\x12#\n" +
	"\rfacility_name\x18\x02 \x01(\tR\ffacilityName\"z\n" +
	"$ListClusterWideInstanceTypesResponse\x12R\n" +
	"\x0einstance_types\x18\x01 \x03(\v2+.otterscale.virtual_machine.v1.InstanceTypeR\rinstanceTypes\"|\n" +
	"\x18ListInstanceTypesRequest\x12\x1d\n" +
	"\n" +
	"scope_uuid\x18\x01 \x01(\tR\tscopeUuid\x12#\n" +
	"\rfacility_name\x18\x02 \x01(\tR\ffacilityName\x12\x1c\n" +
	"\tnamespace\x18\x03 \x01(\tR\tnamespace\"o\n" +
	"\x19ListInstanceTypesResponse\x12R\n" +
	"\x0einstance_types\x18\x01 \x03(\v2+.otterscale.virtual_machine.v1.InstanceTypeR\rinstanceTypes\"\x8e\x01\n" +
	"\x16GetInstanceTypeRequest\x12\x1d\n" +
	"\n" +
	"scope_uuid\x18\x01 \x01(\tR\tscopeUuid\x12#\n" +
	"\rfacility_name\x18\x02 \x01(\tR\ffacilityName\x12\x1c\n" +
	"\tnamespace\x18\x03 \x01(\tR\tnamespace\x12\x12\n" +
	"\x04name\x18\x04 \x01(\tR\x04name\"\xd1\x01\n" +
	"\x19CreateInstanceTypeRequest\x12\x1d\n" +
	"\n" +
	"scope_uuid\x18\x01 \x01(\tR\tscopeUuid\x12#\n" +
	"\rfacility_name\x18\x02 \x01(\tR\ffacilityName\x12\x12\n" +
	"\x04name\x18\v \x01(\tR\x04name\x12\x1c\n" +
	"\tnamespace\x18\f \x01(\tR\tnamespace\x12\x1b\n" +
	"\tcpu_cores\x18\r \x01(\rR\bcpuCores\x12!\n" +
	"\fmemory_bytes\x18\x0e \x01(\x03R\vmemoryBytes\"\x91\x01\n" +
	"\x19DeleteInstanceTypeRequest\x12\x1d\n" +
	"\n" +
	"scope_uuid\x18\x01 \x01(\tR\tscopeUuid\x12#\n" +
	"\rfacility_name\x18\x02 \x01(\tR\ffacilityName\x12\x1c\n" +
	"\tnamespace\x18\x03 \x01(\tR\tnamespace\x12\x12\n" +
	"\x04name\x18\x04 \x01(\tR\x04name2\xfc\x1b\n" +
	"\x15VirtualMachineService\x12\x8c\x01\n" +
	"\x13ListVirtualMachines\x129.otterscale.virtual_machine.v1.ListVirtualMachinesRequest\x1a:.otterscale.virtual_machine.v1.ListVirtualMachinesResponse\x12{\n" +
	"\x11GetVirtualMachine\x127.otterscale.virtual_machine.v1.GetVirtualMachineRequest\x1a-.otterscale.virtual_machine.v1.VirtualMachine\x12\x81\x01\n" +
	"\x14CreateVirtualMachine\x12:.otterscale.virtual_machine.v1.CreateVirtualMachineRequest\x1a-.otterscale.virtual_machine.v1.VirtualMachine\x12j\n" +
	"\x14DeleteVirtualMachine\x12:.otterscale.virtual_machine.v1.DeleteVirtualMachineRequest\x1a\x16.google.protobuf.Empty\x12h\n" +
	"\x13CloneVirtualMachine\x129.otterscale.virtual_machine.v1.CloneVirtualMachineRequest\x1a\x16.google.protobuf.Empty\x12\\\n" +
	"\rStartInstance\x123.otterscale.virtual_machine.v1.StartInstanceRequest\x1a\x16.google.protobuf.Empty\x12Z\n" +
	"\fStopInstance\x122.otterscale.virtual_machine.v1.StopInstanceRequest\x1a\x16.google.protobuf.Empty\x12`\n" +
	"\x0fRestartInstance\x125.otterscale.virtual_machine.v1.RestartInstanceRequest\x1a\x16.google.protobuf.Empty\x12\\\n" +
	"\rPauseInstance\x123.otterscale.virtual_machine.v1.PauseInstanceRequest\x1a\x16.google.protobuf.Empty\x12^\n" +
	"\x0eResumeInstance\x124.otterscale.virtual_machine.v1.ResumeInstanceRequest\x1a\x16.google.protobuf.Empty\x12`\n" +
	"\x0fMigrateInstance\x125.otterscale.virtual_machine.v1.MigrateInstanceRequest\x1a\x16.google.protobuf.Empty\x12t\n" +
	"\rCreateService\x123.otterscale.virtual_machine.v1.CreateServiceRequest\x1a..otterscale.application.v1.Application.Service\x12t\n" +
	"\rUpdateService\x123.otterscale.virtual_machine.v1.UpdateServiceRequest\x1a..otterscale.application.v1.Application.Service\x12\\\n" +
	"\rDeleteService\x123.otterscale.virtual_machine.v1.DeleteServiceRequest\x1a\x16.google.protobuf.Empty\x12~\n" +
	"\x0eCreateSnapshot\x124.otterscale.virtual_machine.v1.CreateSnapshotRequest\x1a6.otterscale.virtual_machine.v1.VirtualMachine.Snapshot\x12^\n" +
	"\x0eDeleteSnapshot\x124.otterscale.virtual_machine.v1.DeleteSnapshotRequest\x1a\x16.google.protobuf.Empty\x12{\n" +
	"\rCreateRestore\x123.otterscale.virtual_machine.v1.CreateRestoreRequest\x1a5.otterscale.virtual_machine.v1.VirtualMachine.Restore\x12\\\n" +
	"\rDeleteRestore\x123.otterscale.virtual_machine.v1.DeleteRestoreRequest\x1a\x16.google.protobuf.Empty\x12r\n" +
	"\n" +
	"CreateDisk\x120.otterscale.virtual_machine.v1.CreateDiskRequest\x1a2.otterscale.virtual_machine.v1.VirtualMachine.Disk\x12V\n" +
	"\n" +
	"DeleteDisk\x120.otterscale.virtual_machine.v1.DeleteDiskRequest\x1a\x16.google.protobuf.Empty\x12V\n" +
	"\n" +
	"AttachDisk\x120.otterscale.virtual_machine.v1.AttachDiskRequest\x1a\x16.google.protobuf.Empty\x12V\n" +
	"\n" +
	"DetachDisk\x120.otterscale.virtual_machine.v1.DetachDiskRequest\x1a\x16.google.protobuf.Empty\x12\x80\x01\n" +
	"\x0fListDataVolumes\x125.otterscale.virtual_machine.v1.ListDataVolumesRequest\x1a6.otterscale.virtual_machine.v1.ListDataVolumesResponse\x12o\n" +
	"\rGetDataVolume\x123.otterscale.virtual_machine.v1.GetDataVolumeRequest\x1a).otterscale.virtual_machine.v1.DataVolume\x12u\n" +
	"\x10CreateDataVolume\x126.otterscale.virtual_machine.v1.CreateDataVolumeRequest\x1a).otterscale.virtual_machine.v1.DataVolume\x12b\n" +
	"\x10DeleteDataVolume\x126.otterscale.virtual_machine.v1.DeleteDataVolumeRequest\x1a\x16.google.protobuf.Empty\x12b\n" +
	"\x10ExtendDataVolume\x126.otterscale.virtual_machine.v1.ExtendDataVolumeRequest\x1a\x16.google.protobuf.Empty\x12\xa7\x01\n" +
	"\x1cListClusterWideInstanceTypes\x12B.otterscale.virtual_machine.v1.ListClusterWideInstanceTypesRequest\x1aC.otterscale.virtual_machine.v1.ListClusterWideInstanceTypesResponse\x12\x86\x01\n" +
	"\x11ListInstanceTypes\x127.otterscale.virtual_machine.v1.ListInstanceTypesRequest\x1a8.otterscale.virtual_machine.v1.ListInstanceTypesResponse\x12u\n" +
	"\x0fGetInstanceType\x125.otterscale.virtual_machine.v1.GetInstanceTypeRequest\x1a+.otterscale.virtual_machine.v1.InstanceType\x12{\n" +
	"\x12CreateInstanceType\x128.otterscale.virtual_machine.v1.CreateInstanceTypeRequest\x1a+.otterscale.virtual_machine.v1.InstanceType\x12f\n" +
	"\x12DeleteInstanceType\x128.otterscale.virtual_machine.v1.DeleteInstanceTypeRequest\x1a\x16.google.protobuf.EmptyB<Z:github.com/otterscale/otterscale/api/virtual_machine/v1;pbb\beditionsp\xe8\a"

var file_api_virtual_machine_v1_virtual_machine_proto_enumTypes = make([]protoimpl.EnumInfo, 2)
var file_api_virtual_machine_v1_virtual_machine_proto_msgTypes = make([]protoimpl.MessageInfo, 44)
var file_api_virtual_machine_v1_virtual_machine_proto_goTypes = []any{
	(VirtualMachine_Disk_Bus)(0),                 // 0: otterscale.virtual_machine.v1.VirtualMachine.Disk.Bus
	(DataVolume_Source_Type)(0),                  // 1: otterscale.virtual_machine.v1.DataVolume.Source.Type
	(*VirtualMachine)(nil),                       // 2: otterscale.virtual_machine.v1.VirtualMachine
	(*DataVolume)(nil),                           // 3: otterscale.virtual_machine.v1.DataVolume
	(*InstanceType)(nil),                         // 4: otterscale.virtual_machine.v1.InstanceType
	(*ListVirtualMachinesRequest)(nil),           // 5: otterscale.virtual_machine.v1.ListVirtualMachinesRequest
	(*ListVirtualMachinesResponse)(nil),          // 6: otterscale.virtual_machine.v1.ListVirtualMachinesResponse
	(*GetVirtualMachineRequest)(nil),             // 7: otterscale.virtual_machine.v1.GetVirtualMachineRequest
	(*CreateVirtualMachineRequest)(nil),          // 8: otterscale.virtual_machine.v1.CreateVirtualMachineRequest
	(*DeleteVirtualMachineRequest)(nil),          // 9: otterscale.virtual_machine.v1.DeleteVirtualMachineRequest
	(*CloneVirtualMachineRequest)(nil),           // 10: otterscale.virtual_machine.v1.CloneVirtualMachineRequest
	(*StartInstanceRequest)(nil),                 // 11: otterscale.virtual_machine.v1.StartInstanceRequest
	(*StopInstanceRequest)(nil),                  // 12: otterscale.virtual_machine.v1.StopInstanceRequest
	(*RestartInstanceRequest)(nil),               // 13: otterscale.virtual_machine.v1.RestartInstanceRequest
	(*PauseInstanceRequest)(nil),                 // 14: otterscale.virtual_machine.v1.PauseInstanceRequest
	(*ResumeInstanceRequest)(nil),                // 15: otterscale.virtual_machine.v1.ResumeInstanceRequest
	(*MigrateInstanceRequest)(nil),               // 16: otterscale.virtual_machine.v1.MigrateInstanceRequest
	(*CreateServiceRequest)(nil),                 // 17: otterscale.virtual_machine.v1.CreateServiceRequest
	(*UpdateServiceRequest)(nil),                 // 18: otterscale.virtual_machine.v1.UpdateServiceRequest
	(*DeleteServiceRequest)(nil),                 // 19: otterscale.virtual_machine.v1.DeleteServiceRequest
	(*CreateSnapshotRequest)(nil),                // 20: otterscale.virtual_machine.v1.CreateSnapshotRequest
	(*DeleteSnapshotRequest)(nil),                // 21: otterscale.virtual_machine.v1.DeleteSnapshotRequest
	(*CreateRestoreRequest)(nil),                 // 22: otterscale.virtual_machine.v1.CreateRestoreRequest
	(*DeleteRestoreRequest)(nil),                 // 23: otterscale.virtual_machine.v1.DeleteRestoreRequest
	(*CreateDiskRequest)(nil),                    // 24: otterscale.virtual_machine.v1.CreateDiskRequest
	(*DeleteDiskRequest)(nil),                    // 25: otterscale.virtual_machine.v1.DeleteDiskRequest
	(*AttachDiskRequest)(nil),                    // 26: otterscale.virtual_machine.v1.AttachDiskRequest
	(*DetachDiskRequest)(nil),                    // 27: otterscale.virtual_machine.v1.DetachDiskRequest
	(*ListDataVolumesRequest)(nil),               // 28: otterscale.virtual_machine.v1.ListDataVolumesRequest
	(*ListDataVolumesResponse)(nil),              // 29: otterscale.virtual_machine.v1.ListDataVolumesResponse
	(*GetDataVolumeRequest)(nil),                 // 30: otterscale.virtual_machine.v1.GetDataVolumeRequest
	(*CreateDataVolumeRequest)(nil),              // 31: otterscale.virtual_machine.v1.CreateDataVolumeRequest
	(*DeleteDataVolumeRequest)(nil),              // 32: otterscale.virtual_machine.v1.DeleteDataVolumeRequest
	(*ExtendDataVolumeRequest)(nil),              // 33: otterscale.virtual_machine.v1.ExtendDataVolumeRequest
	(*ListClusterWideInstanceTypesRequest)(nil),  // 34: otterscale.virtual_machine.v1.ListClusterWideInstanceTypesRequest
	(*ListClusterWideInstanceTypesResponse)(nil), // 35: otterscale.virtual_machine.v1.ListClusterWideInstanceTypesResponse
	(*ListInstanceTypesRequest)(nil),             // 36: otterscale.virtual_machine.v1.ListInstanceTypesRequest
	(*ListInstanceTypesResponse)(nil),            // 37: otterscale.virtual_machine.v1.ListInstanceTypesResponse
	(*GetInstanceTypeRequest)(nil),               // 38: otterscale.virtual_machine.v1.GetInstanceTypeRequest
	(*CreateInstanceTypeRequest)(nil),            // 39: otterscale.virtual_machine.v1.CreateInstanceTypeRequest
	(*DeleteInstanceTypeRequest)(nil),            // 40: otterscale.virtual_machine.v1.DeleteInstanceTypeRequest
	(*VirtualMachine_Snapshot)(nil),              // 41: otterscale.virtual_machine.v1.VirtualMachine.Snapshot
	(*VirtualMachine_Restore)(nil),               // 42: otterscale.virtual_machine.v1.VirtualMachine.Restore
	(*VirtualMachine_Disk)(nil),                  // 43: otterscale.virtual_machine.v1.VirtualMachine.Disk
	(*DataVolume_Source)(nil),                    // 44: otterscale.virtual_machine.v1.DataVolume.Source
	(*DataVolume_Condition)(nil),                 // 45: otterscale.virtual_machine.v1.DataVolume.Condition
	(*v1.Application_PersistentVolumeClaim)(nil), // 46: otterscale.application.v1.Application.PersistentVolumeClaim
	(*v1.Application_Service_Port)(nil),          // 47: otterscale.application.v1.Application.Service.Port
	(*timestamppb.Timestamp)(nil),                // 48: google.protobuf.Timestamp
	(*v1.Application_Condition)(nil),             // 49: otterscale.application.v1.Application.Condition
	(*emptypb.Empty)(nil),                        // 50: google.protobuf.Empty
	(*v1.Application_Service)(nil),               // 51: otterscale.application.v1.Application.Service
}
var file_api_virtual_machine_v1_virtual_machine_proto_depIdxs = []int32{
	44, // 0: otterscale.virtual_machine.v1.DataVolume.source:type_name -> otterscale.virtual_machine.v1.DataVolume.Source
	46, // 1: otterscale.virtual_machine.v1.DataVolume.PersistentVolumeClaim:type_name -> otterscale.application.v1.Application.PersistentVolumeClaim
	45, // 2: otterscale.virtual_machine.v1.DataVolume.last_condition:type_name -> otterscale.virtual_machine.v1.DataVolume.Condition
	2,  // 3: otterscale.virtual_machine.v1.ListVirtualMachinesResponse.virtual_machines:type_name -> otterscale.virtual_machine.v1.VirtualMachine
	47, // 4: otterscale.virtual_machine.v1.CreateServiceRequest.ports:type_name -> otterscale.application.v1.Application.Service.Port
	47, // 5: otterscale.virtual_machine.v1.UpdateServiceRequest.ports:type_name -> otterscale.application.v1.Application.Service.Port
	3,  // 6: otterscale.virtual_machine.v1.ListDataVolumesResponse.data_volumes:type_name -> otterscale.virtual_machine.v1.DataVolume
	44, // 7: otterscale.virtual_machine.v1.CreateDataVolumeRequest.source:type_name -> otterscale.virtual_machine.v1.DataVolume.Source
	4,  // 8: otterscale.virtual_machine.v1.ListClusterWideInstanceTypesResponse.instance_types:type_name -> otterscale.virtual_machine.v1.InstanceType
	4,  // 9: otterscale.virtual_machine.v1.ListInstanceTypesResponse.instance_types:type_name -> otterscale.virtual_machine.v1.InstanceType
	48, // 10: otterscale.virtual_machine.v1.VirtualMachine.Snapshot.created_at:type_name -> google.protobuf.Timestamp
	49, // 11: otterscale.virtual_machine.v1.VirtualMachine.Snapshot.last_condition:type_name -> otterscale.application.v1.Application.Condition
	48, // 12: otterscale.virtual_machine.v1.VirtualMachine.Restore.created_at:type_name -> google.protobuf.Timestamp
	49, // 13: otterscale.virtual_machine.v1.VirtualMachine.Restore.last_condition:type_name -> otterscale.application.v1.Application.Condition
	0,  // 14: otterscale.virtual_machine.v1.VirtualMachine.Disk.bus:type_name -> otterscale.virtual_machine.v1.VirtualMachine.Disk.Bus
	1,  // 15: otterscale.virtual_machine.v1.DataVolume.Source.type:type_name -> otterscale.virtual_machine.v1.DataVolume.Source.Type
	48, // 16: otterscale.virtual_machine.v1.DataVolume.Condition.heartbeat_at:type_name -> google.protobuf.Timestamp
	48, // 17: otterscale.virtual_machine.v1.DataVolume.Condition.transitioned_at:type_name -> google.protobuf.Timestamp
	5,  // 18: otterscale.virtual_machine.v1.VirtualMachineService.ListVirtualMachines:input_type -> otterscale.virtual_machine.v1.ListVirtualMachinesRequest
	7,  // 19: otterscale.virtual_machine.v1.VirtualMachineService.GetVirtualMachine:input_type -> otterscale.virtual_machine.v1.GetVirtualMachineRequest
	8,  // 20: otterscale.virtual_machine.v1.VirtualMachineService.CreateVirtualMachine:input_type -> otterscale.virtual_machine.v1.CreateVirtualMachineRequest
	9,  // 21: otterscale.virtual_machine.v1.VirtualMachineService.DeleteVirtualMachine:input_type -> otterscale.virtual_machine.v1.DeleteVirtualMachineRequest
	10, // 22: otterscale.virtual_machine.v1.VirtualMachineService.CloneVirtualMachine:input_type -> otterscale.virtual_machine.v1.CloneVirtualMachineRequest
	11, // 23: otterscale.virtual_machine.v1.VirtualMachineService.StartInstance:input_type -> otterscale.virtual_machine.v1.StartInstanceRequest
	12, // 24: otterscale.virtual_machine.v1.VirtualMachineService.StopInstance:input_type -> otterscale.virtual_machine.v1.StopInstanceRequest
	13, // 25: otterscale.virtual_machine.v1.VirtualMachineService.RestartInstance:input_type -> otterscale.virtual_machine.v1.RestartInstanceRequest
	14, // 26: otterscale.virtual_machine.v1.VirtualMachineService.PauseInstance:input_type -> otterscale.virtual_machine.v1.PauseInstanceRequest
	15, // 27: otterscale.virtual_machine.v1.VirtualMachineService.ResumeInstance:input_type -> otterscale.virtual_machine.v1.ResumeInstanceRequest
	16, // 28: otterscale.virtual_machine.v1.VirtualMachineService.MigrateInstance:input_type -> otterscale.virtual_machine.v1.MigrateInstanceRequest
	17, // 29: otterscale.virtual_machine.v1.VirtualMachineService.CreateService:input_type -> otterscale.virtual_machine.v1.CreateServiceRequest
	18, // 30: otterscale.virtual_machine.v1.VirtualMachineService.UpdateService:input_type -> otterscale.virtual_machine.v1.UpdateServiceRequest
	19, // 31: otterscale.virtual_machine.v1.VirtualMachineService.DeleteService:input_type -> otterscale.virtual_machine.v1.DeleteServiceRequest
	20, // 32: otterscale.virtual_machine.v1.VirtualMachineService.CreateSnapshot:input_type -> otterscale.virtual_machine.v1.CreateSnapshotRequest
	21, // 33: otterscale.virtual_machine.v1.VirtualMachineService.DeleteSnapshot:input_type -> otterscale.virtual_machine.v1.DeleteSnapshotRequest
	22, // 34: otterscale.virtual_machine.v1.VirtualMachineService.CreateRestore:input_type -> otterscale.virtual_machine.v1.CreateRestoreRequest
	23, // 35: otterscale.virtual_machine.v1.VirtualMachineService.DeleteRestore:input_type -> otterscale.virtual_machine.v1.DeleteRestoreRequest
	24, // 36: otterscale.virtual_machine.v1.VirtualMachineService.CreateDisk:input_type -> otterscale.virtual_machine.v1.CreateDiskRequest
	25, // 37: otterscale.virtual_machine.v1.VirtualMachineService.DeleteDisk:input_type -> otterscale.virtual_machine.v1.DeleteDiskRequest
	26, // 38: otterscale.virtual_machine.v1.VirtualMachineService.AttachDisk:input_type -> otterscale.virtual_machine.v1.AttachDiskRequest
	27, // 39: otterscale.virtual_machine.v1.VirtualMachineService.DetachDisk:input_type -> otterscale.virtual_machine.v1.DetachDiskRequest
	28, // 40: otterscale.virtual_machine.v1.VirtualMachineService.ListDataVolumes:input_type -> otterscale.virtual_machine.v1.ListDataVolumesRequest
	30, // 41: otterscale.virtual_machine.v1.VirtualMachineService.GetDataVolume:input_type -> otterscale.virtual_machine.v1.GetDataVolumeRequest
	31, // 42: otterscale.virtual_machine.v1.VirtualMachineService.CreateDataVolume:input_type -> otterscale.virtual_machine.v1.CreateDataVolumeRequest
	32, // 43: otterscale.virtual_machine.v1.VirtualMachineService.DeleteDataVolume:input_type -> otterscale.virtual_machine.v1.DeleteDataVolumeRequest
	33, // 44: otterscale.virtual_machine.v1.VirtualMachineService.ExtendDataVolume:input_type -> otterscale.virtual_machine.v1.ExtendDataVolumeRequest
	34, // 45: otterscale.virtual_machine.v1.VirtualMachineService.ListClusterWideInstanceTypes:input_type -> otterscale.virtual_machine.v1.ListClusterWideInstanceTypesRequest
	36, // 46: otterscale.virtual_machine.v1.VirtualMachineService.ListInstanceTypes:input_type -> otterscale.virtual_machine.v1.ListInstanceTypesRequest
	38, // 47: otterscale.virtual_machine.v1.VirtualMachineService.GetInstanceType:input_type -> otterscale.virtual_machine.v1.GetInstanceTypeRequest
	39, // 48: otterscale.virtual_machine.v1.VirtualMachineService.CreateInstanceType:input_type -> otterscale.virtual_machine.v1.CreateInstanceTypeRequest
	40, // 49: otterscale.virtual_machine.v1.VirtualMachineService.DeleteInstanceType:input_type -> otterscale.virtual_machine.v1.DeleteInstanceTypeRequest
	6,  // 50: otterscale.virtual_machine.v1.VirtualMachineService.ListVirtualMachines:output_type -> otterscale.virtual_machine.v1.ListVirtualMachinesResponse
	2,  // 51: otterscale.virtual_machine.v1.VirtualMachineService.GetVirtualMachine:output_type -> otterscale.virtual_machine.v1.VirtualMachine
	2,  // 52: otterscale.virtual_machine.v1.VirtualMachineService.CreateVirtualMachine:output_type -> otterscale.virtual_machine.v1.VirtualMachine
	50, // 53: otterscale.virtual_machine.v1.VirtualMachineService.DeleteVirtualMachine:output_type -> google.protobuf.Empty
	50, // 54: otterscale.virtual_machine.v1.VirtualMachineService.CloneVirtualMachine:output_type -> google.protobuf.Empty
	50, // 55: otterscale.virtual_machine.v1.VirtualMachineService.StartInstance:output_type -> google.protobuf.Empty
	50, // 56: otterscale.virtual_machine.v1.VirtualMachineService.StopInstance:output_type -> google.protobuf.Empty
	50, // 57: otterscale.virtual_machine.v1.VirtualMachineService.RestartInstance:output_type -> google.protobuf.Empty
	50, // 58: otterscale.virtual_machine.v1.VirtualMachineService.PauseInstance:output_type -> google.protobuf.Empty
	50, // 59: otterscale.virtual_machine.v1.VirtualMachineService.ResumeInstance:output_type -> google.protobuf.Empty
	50, // 60: otterscale.virtual_machine.v1.VirtualMachineService.MigrateInstance:output_type -> google.protobuf.Empty
	51, // 61: otterscale.virtual_machine.v1.VirtualMachineService.CreateService:output_type -> otterscale.application.v1.Application.Service
	51, // 62: otterscale.virtual_machine.v1.VirtualMachineService.UpdateService:output_type -> otterscale.application.v1.Application.Service
	50, // 63: otterscale.virtual_machine.v1.VirtualMachineService.DeleteService:output_type -> google.protobuf.Empty
	41, // 64: otterscale.virtual_machine.v1.VirtualMachineService.CreateSnapshot:output_type -> otterscale.virtual_machine.v1.VirtualMachine.Snapshot
	50, // 65: otterscale.virtual_machine.v1.VirtualMachineService.DeleteSnapshot:output_type -> google.protobuf.Empty
	42, // 66: otterscale.virtual_machine.v1.VirtualMachineService.CreateRestore:output_type -> otterscale.virtual_machine.v1.VirtualMachine.Restore
	50, // 67: otterscale.virtual_machine.v1.VirtualMachineService.DeleteRestore:output_type -> google.protobuf.Empty
	43, // 68: otterscale.virtual_machine.v1.VirtualMachineService.CreateDisk:output_type -> otterscale.virtual_machine.v1.VirtualMachine.Disk
	50, // 69: otterscale.virtual_machine.v1.VirtualMachineService.DeleteDisk:output_type -> google.protobuf.Empty
	50, // 70: otterscale.virtual_machine.v1.VirtualMachineService.AttachDisk:output_type -> google.protobuf.Empty
	50, // 71: otterscale.virtual_machine.v1.VirtualMachineService.DetachDisk:output_type -> google.protobuf.Empty
	29, // 72: otterscale.virtual_machine.v1.VirtualMachineService.ListDataVolumes:output_type -> otterscale.virtual_machine.v1.ListDataVolumesResponse
	3,  // 73: otterscale.virtual_machine.v1.VirtualMachineService.GetDataVolume:output_type -> otterscale.virtual_machine.v1.DataVolume
	3,  // 74: otterscale.virtual_machine.v1.VirtualMachineService.CreateDataVolume:output_type -> otterscale.virtual_machine.v1.DataVolume
	50, // 75: otterscale.virtual_machine.v1.VirtualMachineService.DeleteDataVolume:output_type -> google.protobuf.Empty
	50, // 76: otterscale.virtual_machine.v1.VirtualMachineService.ExtendDataVolume:output_type -> google.protobuf.Empty
	35, // 77: otterscale.virtual_machine.v1.VirtualMachineService.ListClusterWideInstanceTypes:output_type -> otterscale.virtual_machine.v1.ListClusterWideInstanceTypesResponse
	37, // 78: otterscale.virtual_machine.v1.VirtualMachineService.ListInstanceTypes:output_type -> otterscale.virtual_machine.v1.ListInstanceTypesResponse
	4,  // 79: otterscale.virtual_machine.v1.VirtualMachineService.GetInstanceType:output_type -> otterscale.virtual_machine.v1.InstanceType
	4,  // 80: otterscale.virtual_machine.v1.VirtualMachineService.CreateInstanceType:output_type -> otterscale.virtual_machine.v1.InstanceType
	50, // 81: otterscale.virtual_machine.v1.VirtualMachineService.DeleteInstanceType:output_type -> google.protobuf.Empty
	50, // [50:82] is the sub-list for method output_type
	18, // [18:50] is the sub-list for method input_type
	18, // [18:18] is the sub-list for extension type_name
	18, // [18:18] is the sub-list for extension extendee
	0,  // [0:18] is the sub-list for field type_name
}

func init() { file_api_virtual_machine_v1_virtual_machine_proto_init() }
func file_api_virtual_machine_v1_virtual_machine_proto_init() {
	if File_api_virtual_machine_v1_virtual_machine_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_api_virtual_machine_v1_virtual_machine_proto_rawDesc), len(file_api_virtual_machine_v1_virtual_machine_proto_rawDesc)),
			NumEnums:      2,
			NumMessages:   44,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_api_virtual_machine_v1_virtual_machine_proto_goTypes,
		DependencyIndexes: file_api_virtual_machine_v1_virtual_machine_proto_depIdxs,
		EnumInfos:         file_api_virtual_machine_v1_virtual_machine_proto_enumTypes,
		MessageInfos:      file_api_virtual_machine_v1_virtual_machine_proto_msgTypes,
	}.Build()
	File_api_virtual_machine_v1_virtual_machine_proto = out.File
	file_api_virtual_machine_v1_virtual_machine_proto_goTypes = nil
	file_api_virtual_machine_v1_virtual_machine_proto_depIdxs = nil
}
