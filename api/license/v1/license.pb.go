// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.6
// 	protoc        v6.31.0
// source: api/license/v1/license.proto

package pb

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type Ping struct {
	state         protoimpl.MessageState `protogen:"opaque.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Ping) Reset() {
	*x = Ping{}
	mi := &file_api_license_v1_license_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Ping) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Ping) ProtoMessage() {}

func (x *Ping) ProtoReflect() protoreflect.Message {
	mi := &file_api_license_v1_license_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

type Ping_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

}

func (b0 Ping_builder) Build() *Ping {
	m0 := &Ping{}
	b, x := &b0, m0
	_, _ = b, x
	return m0
}

type Pong struct {
	state         protoimpl.MessageState `protogen:"opaque.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Pong) Reset() {
	*x = Pong{}
	mi := &file_api_license_v1_license_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Pong) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Pong) ProtoMessage() {}

func (x *Pong) ProtoReflect() protoreflect.Message {
	mi := &file_api_license_v1_license_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

type Pong_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

}

func (b0 Pong_builder) Build() *Pong {
	m0 := &Pong{}
	b, x := &b0, m0
	_, _ = b, x
	return m0
}

var File_api_license_v1_license_proto protoreflect.FileDescriptor

const file_api_license_v1_license_proto_rawDesc = "" +
	"\n" +
	"\x1capi/license/v1/license.proto\x12\x15otterscale.license.v1\"\x06\n" +
	"\x04Ping\"\x06\n" +
	"\x04Pong2X\n" +
	"\x0eLicenseService\x12F\n" +
	"\n" +
	"Enterprise\x12\x1b.otterscale.license.v1.Ping\x1a\x1b.otterscale.license.v1.PongB1Z/github.com/openhdc/otterscale/api/license/v1;pbb\beditionsp\xe8\a"

var file_api_license_v1_license_proto_msgTypes = make([]protoimpl.MessageInfo, 2)
var file_api_license_v1_license_proto_goTypes = []any{
	(*Ping)(nil), // 0: otterscale.license.v1.Ping
	(*Pong)(nil), // 1: otterscale.license.v1.Pong
}
var file_api_license_v1_license_proto_depIdxs = []int32{
	0, // 0: otterscale.license.v1.LicenseService.Enterprise:input_type -> otterscale.license.v1.Ping
	1, // 1: otterscale.license.v1.LicenseService.Enterprise:output_type -> otterscale.license.v1.Pong
	1, // [1:2] is the sub-list for method output_type
	0, // [0:1] is the sub-list for method input_type
	0, // [0:0] is the sub-list for extension type_name
	0, // [0:0] is the sub-list for extension extendee
	0, // [0:0] is the sub-list for field type_name
}

func init() { file_api_license_v1_license_proto_init() }
func file_api_license_v1_license_proto_init() {
	if File_api_license_v1_license_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_api_license_v1_license_proto_rawDesc), len(file_api_license_v1_license_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   2,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_api_license_v1_license_proto_goTypes,
		DependencyIndexes: file_api_license_v1_license_proto_depIdxs,
		MessageInfos:      file_api_license_v1_license_proto_msgTypes,
	}.Build()
	File_api_license_v1_license_proto = out.File
	file_api_license_v1_license_proto_goTypes = nil
	file_api_license_v1_license_proto_depIdxs = nil
}
