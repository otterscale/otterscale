edition = "2023";

package otterscale.storage.v1;

import "google/protobuf/empty.proto";
import "google/protobuf/timestamp.proto";

option go_package = "github.com/otterscale/otterscale/api/storage/v1;pb";

service StorageService {
  rpc ListMONs(ListMONsRequest) returns (ListMONsResponse);
  rpc ListOSDs(ListOSDsRequest) returns (ListOSDsResponse);

  rpc DoSMART(DoSMARTRequest) returns (DoSMARTResponse);

  rpc ListPools(ListPoolsRequest) returns (ListPoolsResponse);
  rpc CreatePool(CreatePoolRequest) returns (Pool);
  rpc UpdatePool(UpdatePoolRequest) returns (Pool);
  rpc DeletePool(DeletePoolRequest) returns (google.protobuf.Empty);

  rpc ListImages(ListImagesRequest) returns (ListImagesResponse);
  rpc CreateImage(CreateImageRequest) returns (Image);
  rpc UpdateImage(UpdateImageRequest) returns (Image);
  rpc DeleteImage(DeleteImageRequest) returns (google.protobuf.Empty);

  rpc CreateImageSnapshot(CreateImageSnapshotRequest) returns (Image.Snapshot);
  rpc DeleteImageSnapshot(DeleteImageSnapshotRequest) returns (google.protobuf.Empty);
  rpc RollbackImageSnapshot(RollbackImageSnapshotRequest) returns (google.protobuf.Empty);
  rpc ProtectImageSnapshot(ProtectImageSnapshotRequest) returns (google.protobuf.Empty);
  rpc UnprotectImageSnapshot(UnprotectImageSnapshotRequest) returns (google.protobuf.Empty);

  rpc ListVolumes(ListVolumesRequest) returns (ListVolumesResponse);

  rpc ListSubvolumes(ListSubvolumesRequest) returns (ListSubvolumesResponse);
  rpc CreateSubvolume(CreateSubvolumeRequest) returns (Subvolume);
  rpc UpdateSubvolume(UpdateSubvolumeRequest) returns (Subvolume);
  rpc DeleteSubvolume(DeleteSubvolumeRequest) returns (google.protobuf.Empty);

  rpc GrantSubvolumeExportAccess(GrantSubvolumeExportAccessRequest) returns (google.protobuf.Empty);
  rpc RevokeSubvolumeExportAccess(RevokeSubvolumeExportAccessRequest) returns (google.protobuf.Empty);

  rpc CreateSubvolumeSnapshot(CreateSubvolumeSnapshotRequest) returns (Subvolume.Snapshot);
  rpc DeleteSubvolumeSnapshot(DeleteSubvolumeSnapshotRequest) returns (google.protobuf.Empty);

  rpc ListSubvolumeGroups(ListSubvolumeGroupsRequest) returns (ListSubvolumeGroupsResponse);
  rpc CreateSubvolumeGroup(CreateSubvolumeGroupRequest) returns (SubvolumeGroup);
  rpc UpdateSubvolumeGroup(UpdateSubvolumeGroupRequest) returns (SubvolumeGroup);
  rpc DeleteSubvolumeGroup(DeleteSubvolumeGroupRequest) returns (google.protobuf.Empty);

  rpc ListBuckets(ListBucketsRequest) returns (ListBucketsResponse);
  rpc CreateBucket(CreateBucketRequest) returns (Bucket);
  rpc UpdateBucket(UpdateBucketRequest) returns (Bucket);
  rpc DeleteBucket(DeleteBucketRequest) returns (google.protobuf.Empty);

  rpc ListUsers(ListUsersRequest) returns (ListUsersResponse);
  rpc CreateUser(CreateUserRequest) returns (User);
  rpc UpdateUser(UpdateUserRequest) returns (User);
  rpc DeleteUser(DeleteUserRequest) returns (google.protobuf.Empty);

  rpc CreateUserKey(CreateUserKeyRequest) returns (User.Key);
  rpc DeleteUserKey(DeleteUserKeyRequest) returns (google.protobuf.Empty);
}

enum PoolType {
  UNSPECIFIED = 0;
  ERASURE = 1;
  REPLICATED = 2;
}

message Machine {
  string id = 1;
  string hostname = 2;
}

message MON {
  bool leader = 1;
  string name = 2;
  uint64 rank = 3;
  string public_address = 4;
  Machine machine = 101;
}

message OSD {
  int64 id = 1;
  string name = 2;
  bool up = 3;
  bool in = 4;
  bool exists = 5;
  string device_class = 11;
  uint64 size_bytes = 12;
  uint64 used_bytes = 13;
  uint64 placement_group_count = 21;
  Machine machine = 101;
}

message Pool {
  int64 id = 1;
  string name = 2;
  bool updating = 3;
  PoolType pool_type = 11;
  bool ec_overwrites = 21;      // erasure
  uint64 data_chunks = 22;      // erasure k
  uint64 coding_chunks = 23;    // erasure m
  uint64 replicated_size = 31;  // replicated
  uint64 quota_bytes = 41;
  uint64 quota_objects = 42;
  uint64 used_bytes = 43;
  uint64 used_objects = 44;
  uint64 max_bytes = 45;
  uint64 placement_group_count = 51;
  map<string, int64> placement_group_state = 52;
  google.protobuf.Timestamp created_at = 61;
  repeated string applications = 71;
}

message Image {
  message Snapshot {
    string name = 1;
    bool protected = 2;
    uint64 quota_bytes = 3;
    uint64 used_bytes = 4;
  }
  string name = 1;
  string pool_name = 11;
  uint64 object_size_bytes = 21;
  uint64 stripe_unit_bytes = 22;
  uint64 stripe_count = 23;
  uint64 quota_bytes = 31;
  uint64 used_bytes = 32;
  uint64 object_count = 33;
  bool layering = 41;
  bool exclusive_lock = 42;
  bool object_map = 43;
  bool fast_diff = 44;
  bool deep_flatten = 45;
  google.protobuf.Timestamp created_at = 51;
  repeated Snapshot snapshots = 101;
}

message Volume {
  int64 id = 1;
  string name = 2;
  google.protobuf.Timestamp created_at = 11;
}

message Subvolume {
  message Snapshot {
    string name = 1;
    string has_pending_clones = 2;
    google.protobuf.Timestamp created_at = 11;
  }
  message Export {
    string ip = 1;
    string path = 2;
    repeated string clients = 3;
    string command = 11;
  }
  string name = 1;
  string path = 2;
  string mode = 11;  // oct
  string pool_name = 12;
  uint64 quota_bytes = 21;
  uint64 used_bytes = 22;
  google.protobuf.Timestamp created_at = 31;
  Export export = 51;
  repeated Snapshot snapshots = 101;
}

message SubvolumeGroup {
  string name = 1;
  string mode = 11;  // oct
  string pool_name = 12;
  uint64 quota_bytes = 21;
  uint64 used_bytes = 22;
  google.protobuf.Timestamp created_at = 31;
}

message Bucket {
  enum ACL {
    PRIVATE = 0;
    PUBLIC_READ = 1;
    PUBLIC_READ_WRITE = 2;
    AUTHENTICATED_READ = 3;
  }
  message Grant {
    string type = 1;
    string id = 2;
    string name = 3;
    string uri = 4;
    string permission = 5;
  }
  string name = 1;
  string owner = 2;
  string policy = 21;
  repeated Grant grants = 22;
  uint64 used_bytes = 33;
  uint64 used_objects = 34;
  google.protobuf.Timestamp created_at = 41;
}

message User {
  message Key {
    string access_key = 1;
    string secret_key = 2;
  }
  string id = 1;
  string name = 2;
  bool suspended = 3;
  repeated Key keys = 21;
}

message ListMONsRequest {
  string scope = 1;
  string facility = 2;
}

message ListMONsResponse {
  repeated MON mons = 1;
}

message ListOSDsRequest {
  string scope = 1;
  string facility = 2;
}

message ListOSDsResponse {
  repeated OSD osds = 1;
}

message DoSMARTRequest {
  string scope = 1;
  string facility = 2;
  string osd_name = 3;
}

message DoSMARTResponse {
  message Output {
    repeated string lines = 1;
  }
  map<string, Output> device_output_map = 1;
}

message ListPoolsRequest {
  string scope = 1;
  string facility = 2;
  string application = 11;
}

message ListPoolsResponse {
  repeated Pool pools = 1;
}

message CreatePoolRequest {
  string scope = 1;
  string facility = 2;
  string pool_name = 3;
  PoolType pool_type = 11;
  bool ec_overwrites = 21;      // erasure
  uint64 replicated_size = 31;  // replicated
  uint64 quota_bytes = 41;
  uint64 quota_objects = 42;
  repeated string applications = 61;  // cephfs, rbd, rgw
}

message UpdatePoolRequest {
  string scope = 1;
  string facility = 2;
  string pool_name = 3;
  uint64 quota_bytes = 41;
  uint64 quota_objects = 42;
}

message DeletePoolRequest {
  string scope = 1;
  string facility = 2;
  string pool_name = 3;
}

message ListImagesRequest {
  string scope = 1;
  string facility = 2;
}

message ListImagesResponse {
  repeated Image images = 1;
}

message CreateImageRequest {
  string scope = 1;
  string facility = 2;
  string pool_name = 3;
  string image_name = 4;
  uint64 object_size_bytes = 11;
  uint64 stripe_unit_bytes = 12;
  uint64 stripe_count = 13;
  uint64 quota_bytes = 21;
  bool layering = 31;
  bool exclusive_lock = 32;
  bool object_map = 33;
  bool fast_diff = 34;
  bool deep_flatten = 35;
}

message UpdateImageRequest {
  string scope = 1;
  string facility = 2;
  string pool_name = 3;
  string image_name = 4;
  uint64 quota_bytes = 11;
}

message DeleteImageRequest {
  string scope = 1;
  string facility = 2;
  string pool_name = 3;
  string image_name = 4;
}

message CreateImageSnapshotRequest {
  string scope = 1;
  string facility = 2;
  string pool_name = 3;
  string image_name = 4;
  string snapshot_name = 5;
}

message DeleteImageSnapshotRequest {
  string scope = 1;
  string facility = 2;
  string pool_name = 3;
  string image_name = 4;
  string snapshot_name = 5;
}

message RollbackImageSnapshotRequest {
  string scope = 1;
  string facility = 2;
  string pool_name = 3;
  string image_name = 4;
  string snapshot_name = 5;
}

message ProtectImageSnapshotRequest {
  string scope = 1;
  string facility = 2;
  string pool_name = 3;
  string image_name = 4;
  string snapshot_name = 5;
}

message UnprotectImageSnapshotRequest {
  string scope = 1;
  string facility = 2;
  string pool_name = 3;
  string image_name = 4;
  string snapshot_name = 5;
}

message ListVolumesRequest {
  string scope = 1;
  string facility = 2;
}

message ListVolumesResponse {
  repeated Volume volumes = 1;
}

message ListSubvolumesRequest {
  string scope = 1;
  string facility = 2;
  string volume_name = 3;
  string group_name = 4;
}

message ListSubvolumesResponse {
  repeated Subvolume subvolumes = 1;
}

message CreateSubvolumeRequest {
  string scope = 1;
  string facility = 2;
  string volume_name = 3;
  string group_name = 4;
  string subvolume_name = 5;
  uint64 quota_bytes = 11;
  bool export = 101;
}

message UpdateSubvolumeRequest {
  string scope = 1;
  string facility = 2;
  string volume_name = 3;
  string group_name = 4;
  string subvolume_name = 5;
  uint64 quota_bytes = 11;
}

message DeleteSubvolumeRequest {
  string scope = 1;
  string facility = 2;
  string volume_name = 3;
  string group_name = 4;
  string subvolume_name = 5;
}

message GrantSubvolumeExportAccessRequest {
  string scope = 1;
  string facility = 2;
  string volume_name = 3;
  string subvolume_name = 4;
  string client_ip = 11;
}

message RevokeSubvolumeExportAccessRequest {
  string scope = 1;
  string facility = 2;
  string volume_name = 3;
  string subvolume_name = 4;
  string client_ip = 11;
}

message CreateSubvolumeSnapshotRequest {
  string scope = 1;
  string facility = 2;
  string volume_name = 3;
  string subvolume_name = 4;
  string group_name = 5;
  string snapshot_name = 6;
}

message DeleteSubvolumeSnapshotRequest {
  string scope = 1;
  string facility = 2;
  string volume_name = 3;
  string subvolume_name = 4;
  string group_name = 5;
  string snapshot_name = 6;
}

message ListSubvolumeGroupsRequest {
  string scope = 1;
  string facility = 2;
  string volume_name = 3;
}

message ListSubvolumeGroupsResponse {
  repeated SubvolumeGroup subvolume_groups = 1;
}

message CreateSubvolumeGroupRequest {
  string scope = 1;
  string facility = 2;
  string volume_name = 3;
  string group_name = 4;
  uint64 quota_bytes = 11;
}

message UpdateSubvolumeGroupRequest {
  string scope = 1;
  string facility = 2;
  string volume_name = 3;
  string group_name = 4;
  uint64 quota_bytes = 11;
}

message DeleteSubvolumeGroupRequest {
  string scope = 1;
  string facility = 2;
  string volume_name = 3;
  string group_name = 4;
}

message ListBucketsRequest {
  string scope = 1;
  string facility = 2;
}

message ListBucketsResponse {
  repeated Bucket buckets = 1;
}

message CreateBucketRequest {
  string scope = 1;
  string facility = 2;
  string bucket_name = 3;
  string owner = 11;
  string policy = 12;
  Bucket.ACL acl = 21;
}

message UpdateBucketRequest {
  string scope = 1;
  string facility = 2;
  string bucket_name = 3;
  string owner = 11;
  string policy = 12;
  Bucket.ACL acl = 21;
}

message DeleteBucketRequest {
  string scope = 1;
  string facility = 2;
  string bucket_name = 3;
}

message ListUsersRequest {
  string scope = 1;
  string facility = 2;
}

message ListUsersResponse {
  repeated User users = 1;
}

message CreateUserRequest {
  string scope = 1;
  string facility = 2;
  string user_id = 3;
  string user_name = 11;
  bool suspended = 12;
}

message UpdateUserRequest {
  string scope = 1;
  string facility = 2;
  string user_id = 3;
  string user_name = 11;
  bool suspended = 12;
}

message DeleteUserRequest {
  string scope = 1;
  string facility = 2;
  string user_id = 3;
}

message CreateUserKeyRequest {
  string scope = 1;
  string facility = 2;
  string user_id = 3;
}

message DeleteUserKeyRequest {
  string scope = 1;
  string facility = 2;
  string user_id = 3;
  string access_key = 4;
}