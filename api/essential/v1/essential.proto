edition = "2023";

package otterscale.essential.v1;

import "google/protobuf/empty.proto";

option go_package = "github.com/otterscale/otterscale/api/essential/v1;pb";

service EssentialService {
  rpc GetCapabilities(GetCapabilitiesRequest) returns (GetCapabilitiesResponse);
  rpc IsMachineDeployed(IsMachineDeployedRequest) returns (IsMachineDeployedResponse);
  rpc ListStatuses(ListStatusesRequest) returns (ListStatusesResponse);
  rpc ListEssentials(ListEssentialsRequest) returns (ListEssentialsResponse);
  rpc CreateSingleNode(CreateSingleNodeRequest) returns (google.protobuf.Empty);
  rpc CreateHighAvailabilityCluster(CreateHighAvailabilityClusterRequest) returns (google.protobuf.Empty);
  rpc AddUnits(AddUnitsRequest) returns (google.protobuf.Empty);
}

message Essential {
  enum Type {
    UNSPECIFIED = 0;
    KUBERNETES = 1;
    CEPH = 2;
  }
  message Unit {
    string name = 1;
    string directive = 2;
  }
  Type type = 1;
  string name = 2;
  string scope_uuid = 11;
  string scope_name = 12;
  repeated Unit units = 21;
}

message Status {
  enum Level {
    INFO = 0;
    LOW = 1;
    MEDIUM = 2;
    HIGH = 3;
    CRITICAL = 4;
  }
  Level level = 1;
  string message = 2;
  string details = 3;
}

message IsMachineDeployedRequest {
  string scope_uuid = 1;
}

message IsMachineDeployedResponse {
  bool deployed = 1;
  string message = 2;
}

message ListStatusesRequest {
  string scope_uuid = 1;
}

message ListStatusesResponse {
  repeated Status statuses = 1;
}

message ListEssentialsRequest {
  Essential.Type type = 1;
  string scope_uuid = 2;
}

message ListEssentialsResponse {
  repeated Essential essentials = 1;
}

message CreateSingleNodeRequest {
  string scope_uuid = 1;
  string machine_id = 2;
  string prefix_name = 3;
  repeated string virtual_ips = 11;
  string calico_cidr = 12;
  repeated string osd_devices = 21;
}

message CreateHighAvailabilityClusterRequest {
  string scope_uuid = 1;
  string machine_id = 2;
  string prefix_name = 3;
  repeated string virtual_ips = 11;
  string calico_cidr = 12;
  repeated string osd_devices = 21;
}

message AddUnitsRequest {
  Essential.Type type = 1;
  string scope_uuid = 2;
  string name = 3;
  int32 number = 4;
  repeated string machine_ids = 5;
  bool force = 11;
}

message GetCapabilitiesRequest {
  string language = 1; // Language code like "en", "zh", "zh-CN", "zh-TW"
}

message GetCapabilitiesResponse {
  message Capability {
    string category = 1;         // e.g., "Virtualization", "Storage", "Networking"
    string name = 2;            // e.g., "VM Lifecycle Management"
    string description = 3;     // Detailed description
    repeated string features = 4; // List of specific features
    bool available = 5;         // Whether this capability is currently available
  }
  
  string platform_name = 1;      // "OtterScale"
  string platform_description = 2; // Brief platform description
  repeated Capability capabilities = 3;
  repeated string use_cases = 4;  // Common use cases
  string documentation_url = 5;   // Link to full documentation
  string version = 6;            // Platform version
}
