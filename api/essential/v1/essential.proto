edition = "2023";

package otterscale.essential.v1;

import "google/protobuf/empty.proto";
import "google/protobuf/timestamp.proto";

option go_package = "github.com/otterscale/otterscale/api/essential/v1;pb";

service EssentialService {
  rpc IsMachineDeployed(IsMachineDeployedRequest) returns (IsMachineDeployedResponse);
  rpc ListStatuses(ListStatusesRequest) returns (ListStatusesResponse);
  rpc ListEssentials(ListEssentialsRequest) returns (ListEssentialsResponse);
  rpc CreateSingleNode(CreateSingleNodeRequest) returns (google.protobuf.Empty);
  rpc CreateHighAvailabilityCluster(CreateHighAvailabilityClusterRequest) returns (google.protobuf.Empty);
  rpc AddUnits(AddUnitsRequest) returns (google.protobuf.Empty);
  rpc ListKubernetesNodeLabels(ListKubernetesNodeLabelsRequest) returns (ListKubernetesNodeLabelsResponse);
  rpc UpdateKubernetesNodeLabels(UpdateKubernetesNodeLabelsRequest) returns (UpdateKubernetesNodeLabelsResponse);
  rpc ListGPURelationsByMachine(ListGPURelationsByMachineRequest) returns (ListGPURelationsByMachineResponse);
  rpc ListGPURelationsByModel(ListGPURelationsByModelRequest) returns (ListGPURelationsByModelResponse);
}

message Essential {
  enum Type {
    UNSPECIFIED = 0;
    KUBERNETES = 1;
    CEPH = 2;
  }
  message Unit {
    string name = 1;
    string directive = 2;
  }
  Type type = 1;
  string name = 2;
  string scope_uuid = 11;
  string scope_name = 12;
  repeated Unit units = 21;
}

message Status {
  enum Level {
    INFO = 0;
    LOW = 1;
    MEDIUM = 2;
    HIGH = 3;
    CRITICAL = 4;
  }
  Level level = 1;
  string message = 2;
  string details = 3;
}

message GPURelation {
  message Pod {
    message Device {
      string gpu_id = 1;
      int32 used_cores = 2;
      int32 used_memory_bytes = 3;
    }
    string name = 1;
    string namespace = 2;
    string model_name = 3;
    string binding_phase = 11;
    google.protobuf.Timestamp bound_at = 12;
    repeated Device devices = 21;
  }
  message GPU {
    string id = 1;
    uint32 index = 2;
    int32 count = 3;
    int32 cores = 4;
    int32 memory_bytes = 5;
    string type = 6;
    bool health = 7;
    string machine_id = 101;
  }
  message Machine {
    string id = 1;
    string hostname = 2;
  }
  oneof entity {
    Pod pod = 1;
    GPU gpu = 2;
    Machine machine = 3;
  }
}

message IsMachineDeployedRequest {
  string scope_uuid = 1;
}

message IsMachineDeployedResponse {
  bool deployed = 1;
  string message = 2;
}

message ListStatusesRequest {
  string scope_uuid = 1;
}

message ListStatusesResponse {
  repeated Status statuses = 1;
}

message ListEssentialsRequest {
  Essential.Type type = 1;
  string scope_uuid = 2;
}

message ListEssentialsResponse {
  repeated Essential essentials = 1;
}

message CreateSingleNodeRequest {
  string scope_uuid = 1;
  string machine_id = 2;
  string prefix_name = 3;
  repeated string virtual_ips = 11;
  string calico_cidr = 12;
  repeated string osd_devices = 21;
}

message CreateHighAvailabilityClusterRequest {
  string scope_uuid = 1;
  string machine_id = 2;
  string prefix_name = 3;
  repeated string virtual_ips = 11;
  string calico_cidr = 12;
  repeated string osd_devices = 21;
}

message AddUnitsRequest {
  Essential.Type type = 1;
  string scope_uuid = 2;
  string name = 3;
  int32 number = 4;
  repeated string machine_ids = 5;
  bool force = 11;
}

message ListKubernetesNodeLabelsRequest {
  string scope_uuid = 1;
  string facility_name = 2;
  string hostname = 3;
  bool all = 11;
}

message ListKubernetesNodeLabelsResponse {
  map<string, string> labels = 1;
}

message UpdateKubernetesNodeLabelsRequest {
  string scope_uuid = 1;
  string facility_name = 2;
  string hostname = 3;
  map<string, string> labels = 4;
}

message UpdateKubernetesNodeLabelsResponse {
  map<string, string> labels = 1;
}

message ListGPURelationsByMachineRequest {
  string scope_uuid = 1;
  string facility_name = 2;
  string machine_id = 3;
}

message ListGPURelationsByMachineResponse {
  repeated GPURelation gpu_relations = 1;
}

message ListGPURelationsByModelRequest {
  string scope_uuid = 1;
  string facility_name = 2;
  string namespace = 3;
  string model_name = 4;
}

message ListGPURelationsByModelResponse {
  repeated GPURelation gpu_relations = 1;
}
