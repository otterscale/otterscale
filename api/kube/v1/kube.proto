edition = "2023";

package openhdc.kube.v1;

import "google/protobuf/empty.proto";
import "google/protobuf/timestamp.proto";

option go_package = "github.com/openhdc/openhdc/api/kube/v1;v1";

service KubeService {
  // Helm Release
  rpc InstallRelease(InstallReleaseRequest) returns (Release);                  // helm install
  rpc UninstallRelease(UninstallReleaseRequest) returns (Release);              // helm uninstall
  rpc UpgradeRelease(UpgradeReleaseRequest) returns (Release);                  // helm upgrade
  rpc RollbackRelease(RollbackReleaseRequest) returns (google.protobuf.Empty);  // helm rollback

  // App Store
  rpc ListCharts(ListChartsRequest) returns (ListChartsResponse);
  rpc GetChart(GetChartRequest) returns (Chart);

  // Native
  rpc ListApplications(ListApplicationsRequest) returns (ListApplicationsResponse);
  rpc GetApplication(GetApplicationRequest) returns (Application);
}

message Release {
  string name = 1;
  string namespace = 2;
  int32 revision = 3;
}

message Chart {
  message Maintainer {
    string name = 1;
    string email = 2;
    string url = 3;
  }
  message Dependency {
    string name = 1;
    string version = 2;
    string condition = 4;
  }
  message Version {
    string chart_version = 1;
    string application_version = 2;
    string chart_ref = 3;
  }
  string name = 1;
  string icon = 2;
  string description = 3;
  bool deprecated = 4;
  string tags = 5;
  repeated string keywords = 6;
  string home = 11;
  repeated string sources = 12;
  repeated Maintainer maintainers = 21;
  repeated Dependency dependencies = 31;
  repeated Version versions = 41;
  string default_values_yaml = 51;
  bool installed = 61;
  Version installed_version = 62;
  string installed_values_yaml = 63;
}

message Application {
  message Service {
    message Port {
      int32 port = 1;
      int32 node_port = 2;
      string protocol = 3;
      string target_port = 11;
    }
    string name = 1;
    string type = 2;
    string cluster_ip = 3;
    repeated Port ports = 11;
  }
  message Pod {
    message Condition {
      string type = 1;
      string status = 2;
      google.protobuf.Timestamp probed_at = 3;
      google.protobuf.Timestamp transitioned_at = 4;
      string reason = 5;
      string message = 6;
    }
    string name = 1;
    string phase = 2;
    string ready = 3;
    string restarts = 4;
    Condition last_condition = 11;
  }
  message PersistentVolumeClaim {
    string name = 1;
    string status = 2;
    repeated string access_modes = 3;
    string capacity = 4;
    StorageClass storage_class = 11;
  }
  message StorageClass {
    string name = 1;
    string provisioner = 2;
    string reclaim_policy = 3;
    string volume_binding_mode = 4;
    map<string, string> parameters = 5;
  }
  message Container {
    string image_name = 1;
    string image_pull_policy = 2;
  }
  string type = 1;
  string name = 2;
  string namespace = 3;
  map<string, string> labels = 4;
  int32 replicas = 5;
  int32 healthies = 11;
  repeated Container containers = 101;
  repeated PersistentVolumeClaim persistent_volume_claims = 102;
  repeated Pod pods = 103;
  repeated Service service = 104;
}

message InstallReleaseRequest {
  string model_uuid = 1;
  string cluster_name = 2;
  string namespace = 3;
  string name = 4;
  bool dry_run = 5;
  string chart_ref = 11;
  string values_yaml = 12;
}

message UninstallReleaseRequest {
  string model_uuid = 1;
  string cluster_name = 2;
  string namespace = 3;
  string name = 4;
  bool dry_run = 5;
}

message UpgradeReleaseRequest {
  string model_uuid = 1;
  string cluster_name = 2;
  string namespace = 3;
  string name = 4;
  bool dry_run = 5;
  string chart_ref = 11;
  string values_yaml = 12;
}

message RollbackReleaseRequest {
  string model_uuid = 1;
  string cluster_name = 2;
  string namespace = 3;
  string name = 4;
  bool dry_run = 5;
}

message ListApplicationsRequest {
  string model_uuid = 1;
  string cluster_name = 2;
}

message ListApplicationsResponse {
  repeated Application applications = 1;
}

message GetApplicationRequest {
  string model_uuid = 1;
  string cluster_name = 2;
  string namespace = 3;
  string name = 4;
}

message ListChartsRequest {}

message ListChartsResponse {
  repeated Chart charts = 1;
}

message GetChartRequest {
  string name = 1;
}