edition = "2023";

package openhdc.kube.v1;

import "google/protobuf/empty.proto";
import "google/protobuf/timestamp.proto";

option go_package = "github.com/openhdc/openhdc/api/kube/v1;v1";

service KubeService {
  // Helm Release
  rpc ListReleases(ListReleasesRequest) returns (ListReleasesResponse);     // helm list
  rpc CreateRelease(CreateReleaseRequest) returns (Release);                // helm install
  rpc DeleteRelease(DeleteReleaseRequest) returns (google.protobuf.Empty);  // helm remove
  rpc UpgradeRelease(UpgradeReleaseRequest) returns (Release);              // helm upgrade
  rpc RollbackRelease(RollbackReleaseRequest) returns (Release);            // helm rollback

  // Helm Repository
  rpc ListRepositories(ListRepositoriesRequest) returns (ListRepositoriesResponse);  // helm repo list
  rpc CreateRepository(CreateRepositoryRequest) returns (Repository);                // helm repo add
  rpc UpdateRepository(UpdateRepositoryRequest) returns (Repository);                // helm repo update
  rpc DeleteRepository(DeleteRepositoryRequest) returns (google.protobuf.Empty);     // helm repo remove

  // Native
  rpc ListApplications(ListApplicationsRequest) returns (ListApplicationsResponse);
}

message Release {
  // ReleaseValues
  // Providers
  // settings
  // history
}

message Repository {}

message Application {
  message Service {}
  message Pod {}
  message PVC {}
  message PV {}
  message StorageClass {}
  string name = 1;
  string namespace = 2;
  map<string, string> labels = 3;
  int32 replicas = 11;
  string strategy_type = 21;
  string image = 31;
  string image_pull_policy = 32;
  Service service = 101;
  repeated Pod pods = 102;
  PVC pvc = 103;
}

message ListReleasesRequest {}

message ListReleasesResponse {}

message CreateReleaseRequest {}

message DeleteReleaseRequest {}

message UpgradeReleaseRequest {}

message RollbackReleaseRequest {}

message ListRepositoriesRequest {}

message ListRepositoriesResponse {}

message CreateRepositoryRequest {}

message UpdateRepositoryRequest {}

message DeleteRepositoryRequest {}

message ListApplicationsRequest {
  string model_uuid = 1;
  string cluster_name = 2;
}

message ListApplicationsResponse {
  repeated Application applications = 1;
}