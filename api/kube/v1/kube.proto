edition = "2023";

package openhdc.kube.v1;

import "google/protobuf/empty.proto";
import "google/protobuf/timestamp.proto";

option go_package = "github.com/openhdc/openhdc/api/kube/v1;v1";

service KubeService {
  // Helm Release
  rpc ListReleases(ListReleasesRequest) returns (ListReleasesResponse);           // helm list
  rpc InstallRelease(InstallReleaseRequest) returns (Release);                    // helm install
  rpc UninstallRelease(UninstallReleaseRequest) returns (google.protobuf.Empty);  // helm uninstall
  rpc UpgradeRelease(UpgradeReleaseRequest) returns (Release);                    // helm upgrade
  rpc RollbackRelease(RollbackReleaseRequest) returns (Release);                  // helm rollback

  // Helm Repository
  rpc ListRepositories(ListRepositoriesRequest) returns (ListRepositoriesResponse);  // helm repo list
  rpc UpdateRepositoryCharts(UpdateRepositoryChartsRequest) returns (Repository);    // helm repo update

  // Native
  rpc ListApplications(ListApplicationsRequest) returns (ListApplicationsResponse);
  rpc GetApplication(GetApplicationRequest) returns (Application);
}

message Release {
  // ReleaseValues
  // Providers
  // settings
  // history
}

message Repository {
  string name = 1;
  string url = 2;
  string username = 3;
  string password = 4;
  string cert_file = 5;
  string key_file = 6;
  string ca_file = 7;
  bool insecure_skip_tls_verify = 8;
  bool pass_credentials_all = 9;
  repeated string chart_names = 11;
}

message Application {
  message Service {
    message Port {
      int32 port = 1;
      int32 node_port = 2;
      string protocol = 3;
      string target_port = 11;
    }
    string name = 1;
    string type = 2;
    string cluster_ip = 3;
    repeated Port ports = 11;
  }
  message Pod {
    message Condition {
      string type = 1;
      string status = 2;
      google.protobuf.Timestamp probed_at = 3;
      google.protobuf.Timestamp transitioned_at = 4;
      string reason = 5;
      string message = 6;
    }
    string name = 1;
    string phase = 2;
    string ready = 3;
    string restarts = 4;
    Condition last_condition = 11;
  }
  message PersistentVolumeClaim {
    string name = 1;
    string status = 2;
    repeated string access_modes = 3;
    string capacity = 4;
    StorageClass storage_class = 11;
  }
  message StorageClass {
    string name = 1;
    string provisioner = 2;
    string reclaim_policy = 3;
    string volume_binding_mode = 4;
    map<string, string> parameters = 5;
  }
  message Container {
    string image_name = 1;
    string image_pull_policy = 2;
  }
  string type = 1;
  string name = 2;
  string namespace = 3;
  map<string, string> labels = 4;
  int32 replicas = 5;
  repeated Container containers = 11;
  repeated PersistentVolumeClaim persistent_volume_claims = 21;
  repeated Pod pods = 31;
  repeated Service service = 41;
}

message ListReleasesRequest {
  string model_uuid = 1;
  string cluster_name = 2;
}

message ListReleasesResponse {}

message InstallReleaseRequest {}

message UninstallReleaseRequest {}

message UpgradeReleaseRequest {}

message RollbackReleaseRequest {}

message ListRepositoriesRequest {}

message ListRepositoriesResponse {
  repeated Repository repositories = 1;
}

message UpdateRepositoryChartsRequest {
  string name = 1;
}

message ListApplicationsRequest {
  string model_uuid = 1;
  string cluster_name = 2;
}

message ListApplicationsResponse {
  repeated Application applications = 1;
}

message GetApplicationRequest {
  string model_uuid = 1;
  string cluster_name = 2;
  string namespace = 3;
  string name = 4;
}