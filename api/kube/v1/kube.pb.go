// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.5
// 	protoc        v6.30.1
// source: api/kube/v1/kube.proto

package v1

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	emptypb "google.golang.org/protobuf/types/known/emptypb"
	timestamppb "google.golang.org/protobuf/types/known/timestamppb"
	reflect "reflect"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type Release struct {
	state                  protoimpl.MessageState `protogen:"opaque.v1"`
	xxx_hidden_ModelName   *string                `protobuf:"bytes,1,opt,name=model_name,json=modelName"`
	xxx_hidden_ModelUuid   *string                `protobuf:"bytes,2,opt,name=model_uuid,json=modelUuid"`
	xxx_hidden_ClusterName *string                `protobuf:"bytes,3,opt,name=cluster_name,json=clusterName"`
	xxx_hidden_Namespace   *string                `protobuf:"bytes,4,opt,name=namespace"`
	xxx_hidden_Name        *string                `protobuf:"bytes,5,opt,name=name"`
	xxx_hidden_Revision    int32                  `protobuf:"varint,6,opt,name=revision"`
	xxx_hidden_ChartName   *string                `protobuf:"bytes,11,opt,name=chart_name,json=chartName"`
	xxx_hidden_Version     *Chart_Version         `protobuf:"bytes,12,opt,name=version"`
	XXX_raceDetectHookData protoimpl.RaceDetectHookData
	XXX_presence           [1]uint32
	unknownFields          protoimpl.UnknownFields
	sizeCache              protoimpl.SizeCache
}

func (x *Release) Reset() {
	*x = Release{}
	mi := &file_api_kube_v1_kube_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Release) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Release) ProtoMessage() {}

func (x *Release) ProtoReflect() protoreflect.Message {
	mi := &file_api_kube_v1_kube_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *Release) GetModelName() string {
	if x != nil {
		if x.xxx_hidden_ModelName != nil {
			return *x.xxx_hidden_ModelName
		}
		return ""
	}
	return ""
}

func (x *Release) GetModelUuid() string {
	if x != nil {
		if x.xxx_hidden_ModelUuid != nil {
			return *x.xxx_hidden_ModelUuid
		}
		return ""
	}
	return ""
}

func (x *Release) GetClusterName() string {
	if x != nil {
		if x.xxx_hidden_ClusterName != nil {
			return *x.xxx_hidden_ClusterName
		}
		return ""
	}
	return ""
}

func (x *Release) GetNamespace() string {
	if x != nil {
		if x.xxx_hidden_Namespace != nil {
			return *x.xxx_hidden_Namespace
		}
		return ""
	}
	return ""
}

func (x *Release) GetName() string {
	if x != nil {
		if x.xxx_hidden_Name != nil {
			return *x.xxx_hidden_Name
		}
		return ""
	}
	return ""
}

func (x *Release) GetRevision() int32 {
	if x != nil {
		return x.xxx_hidden_Revision
	}
	return 0
}

func (x *Release) GetChartName() string {
	if x != nil {
		if x.xxx_hidden_ChartName != nil {
			return *x.xxx_hidden_ChartName
		}
		return ""
	}
	return ""
}

func (x *Release) GetVersion() *Chart_Version {
	if x != nil {
		return x.xxx_hidden_Version
	}
	return nil
}

func (x *Release) SetModelName(v string) {
	x.xxx_hidden_ModelName = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 0, 8)
}

func (x *Release) SetModelUuid(v string) {
	x.xxx_hidden_ModelUuid = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 1, 8)
}

func (x *Release) SetClusterName(v string) {
	x.xxx_hidden_ClusterName = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 2, 8)
}

func (x *Release) SetNamespace(v string) {
	x.xxx_hidden_Namespace = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 3, 8)
}

func (x *Release) SetName(v string) {
	x.xxx_hidden_Name = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 4, 8)
}

func (x *Release) SetRevision(v int32) {
	x.xxx_hidden_Revision = v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 5, 8)
}

func (x *Release) SetChartName(v string) {
	x.xxx_hidden_ChartName = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 6, 8)
}

func (x *Release) SetVersion(v *Chart_Version) {
	x.xxx_hidden_Version = v
}

func (x *Release) HasModelName() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 0)
}

func (x *Release) HasModelUuid() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 1)
}

func (x *Release) HasClusterName() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 2)
}

func (x *Release) HasNamespace() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 3)
}

func (x *Release) HasName() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 4)
}

func (x *Release) HasRevision() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 5)
}

func (x *Release) HasChartName() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 6)
}

func (x *Release) HasVersion() bool {
	if x == nil {
		return false
	}
	return x.xxx_hidden_Version != nil
}

func (x *Release) ClearModelName() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 0)
	x.xxx_hidden_ModelName = nil
}

func (x *Release) ClearModelUuid() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 1)
	x.xxx_hidden_ModelUuid = nil
}

func (x *Release) ClearClusterName() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 2)
	x.xxx_hidden_ClusterName = nil
}

func (x *Release) ClearNamespace() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 3)
	x.xxx_hidden_Namespace = nil
}

func (x *Release) ClearName() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 4)
	x.xxx_hidden_Name = nil
}

func (x *Release) ClearRevision() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 5)
	x.xxx_hidden_Revision = 0
}

func (x *Release) ClearChartName() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 6)
	x.xxx_hidden_ChartName = nil
}

func (x *Release) ClearVersion() {
	x.xxx_hidden_Version = nil
}

type Release_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	ModelName   *string
	ModelUuid   *string
	ClusterName *string
	Namespace   *string
	Name        *string
	Revision    *int32
	ChartName   *string
	Version     *Chart_Version
}

func (b0 Release_builder) Build() *Release {
	m0 := &Release{}
	b, x := &b0, m0
	_, _ = b, x
	if b.ModelName != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 0, 8)
		x.xxx_hidden_ModelName = b.ModelName
	}
	if b.ModelUuid != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 1, 8)
		x.xxx_hidden_ModelUuid = b.ModelUuid
	}
	if b.ClusterName != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 2, 8)
		x.xxx_hidden_ClusterName = b.ClusterName
	}
	if b.Namespace != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 3, 8)
		x.xxx_hidden_Namespace = b.Namespace
	}
	if b.Name != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 4, 8)
		x.xxx_hidden_Name = b.Name
	}
	if b.Revision != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 5, 8)
		x.xxx_hidden_Revision = *b.Revision
	}
	if b.ChartName != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 6, 8)
		x.xxx_hidden_ChartName = b.ChartName
	}
	x.xxx_hidden_Version = b.Version
	return m0
}

type Chart struct {
	state                   protoimpl.MessageState `protogen:"opaque.v1"`
	xxx_hidden_Name         *string                `protobuf:"bytes,1,opt,name=name"`
	xxx_hidden_Icon         *string                `protobuf:"bytes,2,opt,name=icon"`
	xxx_hidden_Description  *string                `protobuf:"bytes,3,opt,name=description"`
	xxx_hidden_Deprecated   bool                   `protobuf:"varint,4,opt,name=deprecated"`
	xxx_hidden_Tags         *string                `protobuf:"bytes,5,opt,name=tags"`
	xxx_hidden_Keywords     []string               `protobuf:"bytes,6,rep,name=keywords"`
	xxx_hidden_Home         *string                `protobuf:"bytes,11,opt,name=home"`
	xxx_hidden_Sources      []string               `protobuf:"bytes,12,rep,name=sources"`
	xxx_hidden_Maintainers  *[]*Chart_Maintainer   `protobuf:"bytes,21,rep,name=maintainers"`
	xxx_hidden_Dependencies *[]*Chart_Dependency   `protobuf:"bytes,31,rep,name=dependencies"`
	xxx_hidden_Versions     *[]*Chart_Version      `protobuf:"bytes,41,rep,name=versions"`
	XXX_raceDetectHookData  protoimpl.RaceDetectHookData
	XXX_presence            [1]uint32
	unknownFields           protoimpl.UnknownFields
	sizeCache               protoimpl.SizeCache
}

func (x *Chart) Reset() {
	*x = Chart{}
	mi := &file_api_kube_v1_kube_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Chart) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Chart) ProtoMessage() {}

func (x *Chart) ProtoReflect() protoreflect.Message {
	mi := &file_api_kube_v1_kube_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *Chart) GetName() string {
	if x != nil {
		if x.xxx_hidden_Name != nil {
			return *x.xxx_hidden_Name
		}
		return ""
	}
	return ""
}

func (x *Chart) GetIcon() string {
	if x != nil {
		if x.xxx_hidden_Icon != nil {
			return *x.xxx_hidden_Icon
		}
		return ""
	}
	return ""
}

func (x *Chart) GetDescription() string {
	if x != nil {
		if x.xxx_hidden_Description != nil {
			return *x.xxx_hidden_Description
		}
		return ""
	}
	return ""
}

func (x *Chart) GetDeprecated() bool {
	if x != nil {
		return x.xxx_hidden_Deprecated
	}
	return false
}

func (x *Chart) GetTags() string {
	if x != nil {
		if x.xxx_hidden_Tags != nil {
			return *x.xxx_hidden_Tags
		}
		return ""
	}
	return ""
}

func (x *Chart) GetKeywords() []string {
	if x != nil {
		return x.xxx_hidden_Keywords
	}
	return nil
}

func (x *Chart) GetHome() string {
	if x != nil {
		if x.xxx_hidden_Home != nil {
			return *x.xxx_hidden_Home
		}
		return ""
	}
	return ""
}

func (x *Chart) GetSources() []string {
	if x != nil {
		return x.xxx_hidden_Sources
	}
	return nil
}

func (x *Chart) GetMaintainers() []*Chart_Maintainer {
	if x != nil {
		if x.xxx_hidden_Maintainers != nil {
			return *x.xxx_hidden_Maintainers
		}
	}
	return nil
}

func (x *Chart) GetDependencies() []*Chart_Dependency {
	if x != nil {
		if x.xxx_hidden_Dependencies != nil {
			return *x.xxx_hidden_Dependencies
		}
	}
	return nil
}

func (x *Chart) GetVersions() []*Chart_Version {
	if x != nil {
		if x.xxx_hidden_Versions != nil {
			return *x.xxx_hidden_Versions
		}
	}
	return nil
}

func (x *Chart) SetName(v string) {
	x.xxx_hidden_Name = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 0, 11)
}

func (x *Chart) SetIcon(v string) {
	x.xxx_hidden_Icon = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 1, 11)
}

func (x *Chart) SetDescription(v string) {
	x.xxx_hidden_Description = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 2, 11)
}

func (x *Chart) SetDeprecated(v bool) {
	x.xxx_hidden_Deprecated = v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 3, 11)
}

func (x *Chart) SetTags(v string) {
	x.xxx_hidden_Tags = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 4, 11)
}

func (x *Chart) SetKeywords(v []string) {
	x.xxx_hidden_Keywords = v
}

func (x *Chart) SetHome(v string) {
	x.xxx_hidden_Home = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 6, 11)
}

func (x *Chart) SetSources(v []string) {
	x.xxx_hidden_Sources = v
}

func (x *Chart) SetMaintainers(v []*Chart_Maintainer) {
	x.xxx_hidden_Maintainers = &v
}

func (x *Chart) SetDependencies(v []*Chart_Dependency) {
	x.xxx_hidden_Dependencies = &v
}

func (x *Chart) SetVersions(v []*Chart_Version) {
	x.xxx_hidden_Versions = &v
}

func (x *Chart) HasName() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 0)
}

func (x *Chart) HasIcon() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 1)
}

func (x *Chart) HasDescription() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 2)
}

func (x *Chart) HasDeprecated() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 3)
}

func (x *Chart) HasTags() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 4)
}

func (x *Chart) HasHome() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 6)
}

func (x *Chart) ClearName() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 0)
	x.xxx_hidden_Name = nil
}

func (x *Chart) ClearIcon() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 1)
	x.xxx_hidden_Icon = nil
}

func (x *Chart) ClearDescription() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 2)
	x.xxx_hidden_Description = nil
}

func (x *Chart) ClearDeprecated() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 3)
	x.xxx_hidden_Deprecated = false
}

func (x *Chart) ClearTags() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 4)
	x.xxx_hidden_Tags = nil
}

func (x *Chart) ClearHome() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 6)
	x.xxx_hidden_Home = nil
}

type Chart_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	Name         *string
	Icon         *string
	Description  *string
	Deprecated   *bool
	Tags         *string
	Keywords     []string
	Home         *string
	Sources      []string
	Maintainers  []*Chart_Maintainer
	Dependencies []*Chart_Dependency
	Versions     []*Chart_Version
}

func (b0 Chart_builder) Build() *Chart {
	m0 := &Chart{}
	b, x := &b0, m0
	_, _ = b, x
	if b.Name != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 0, 11)
		x.xxx_hidden_Name = b.Name
	}
	if b.Icon != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 1, 11)
		x.xxx_hidden_Icon = b.Icon
	}
	if b.Description != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 2, 11)
		x.xxx_hidden_Description = b.Description
	}
	if b.Deprecated != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 3, 11)
		x.xxx_hidden_Deprecated = *b.Deprecated
	}
	if b.Tags != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 4, 11)
		x.xxx_hidden_Tags = b.Tags
	}
	x.xxx_hidden_Keywords = b.Keywords
	if b.Home != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 6, 11)
		x.xxx_hidden_Home = b.Home
	}
	x.xxx_hidden_Sources = b.Sources
	x.xxx_hidden_Maintainers = &b.Maintainers
	x.xxx_hidden_Dependencies = &b.Dependencies
	x.xxx_hidden_Versions = &b.Versions
	return m0
}

type Application struct {
	state                             protoimpl.MessageState                `protogen:"opaque.v1"`
	xxx_hidden_Type                   *string                               `protobuf:"bytes,1,opt,name=type"`
	xxx_hidden_Name                   *string                               `protobuf:"bytes,2,opt,name=name"`
	xxx_hidden_Namespace              *string                               `protobuf:"bytes,3,opt,name=namespace"`
	xxx_hidden_Labels                 map[string]string                     `protobuf:"bytes,4,rep,name=labels" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	xxx_hidden_Replicas               int32                                 `protobuf:"varint,5,opt,name=replicas"`
	xxx_hidden_Healthies              int32                                 `protobuf:"varint,11,opt,name=healthies"`
	xxx_hidden_Containers             *[]*Application_Container             `protobuf:"bytes,101,rep,name=containers"`
	xxx_hidden_PersistentVolumeClaims *[]*Application_PersistentVolumeClaim `protobuf:"bytes,102,rep,name=persistent_volume_claims,json=persistentVolumeClaims"`
	xxx_hidden_Pods                   *[]*Application_Pod                   `protobuf:"bytes,103,rep,name=pods"`
	xxx_hidden_Service                *[]*Application_Service               `protobuf:"bytes,104,rep,name=service"`
	XXX_raceDetectHookData            protoimpl.RaceDetectHookData
	XXX_presence                      [1]uint32
	unknownFields                     protoimpl.UnknownFields
	sizeCache                         protoimpl.SizeCache
}

func (x *Application) Reset() {
	*x = Application{}
	mi := &file_api_kube_v1_kube_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Application) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Application) ProtoMessage() {}

func (x *Application) ProtoReflect() protoreflect.Message {
	mi := &file_api_kube_v1_kube_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *Application) GetType() string {
	if x != nil {
		if x.xxx_hidden_Type != nil {
			return *x.xxx_hidden_Type
		}
		return ""
	}
	return ""
}

func (x *Application) GetName() string {
	if x != nil {
		if x.xxx_hidden_Name != nil {
			return *x.xxx_hidden_Name
		}
		return ""
	}
	return ""
}

func (x *Application) GetNamespace() string {
	if x != nil {
		if x.xxx_hidden_Namespace != nil {
			return *x.xxx_hidden_Namespace
		}
		return ""
	}
	return ""
}

func (x *Application) GetLabels() map[string]string {
	if x != nil {
		return x.xxx_hidden_Labels
	}
	return nil
}

func (x *Application) GetReplicas() int32 {
	if x != nil {
		return x.xxx_hidden_Replicas
	}
	return 0
}

func (x *Application) GetHealthies() int32 {
	if x != nil {
		return x.xxx_hidden_Healthies
	}
	return 0
}

func (x *Application) GetContainers() []*Application_Container {
	if x != nil {
		if x.xxx_hidden_Containers != nil {
			return *x.xxx_hidden_Containers
		}
	}
	return nil
}

func (x *Application) GetPersistentVolumeClaims() []*Application_PersistentVolumeClaim {
	if x != nil {
		if x.xxx_hidden_PersistentVolumeClaims != nil {
			return *x.xxx_hidden_PersistentVolumeClaims
		}
	}
	return nil
}

func (x *Application) GetPods() []*Application_Pod {
	if x != nil {
		if x.xxx_hidden_Pods != nil {
			return *x.xxx_hidden_Pods
		}
	}
	return nil
}

func (x *Application) GetService() []*Application_Service {
	if x != nil {
		if x.xxx_hidden_Service != nil {
			return *x.xxx_hidden_Service
		}
	}
	return nil
}

func (x *Application) SetType(v string) {
	x.xxx_hidden_Type = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 0, 10)
}

func (x *Application) SetName(v string) {
	x.xxx_hidden_Name = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 1, 10)
}

func (x *Application) SetNamespace(v string) {
	x.xxx_hidden_Namespace = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 2, 10)
}

func (x *Application) SetLabels(v map[string]string) {
	x.xxx_hidden_Labels = v
}

func (x *Application) SetReplicas(v int32) {
	x.xxx_hidden_Replicas = v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 4, 10)
}

func (x *Application) SetHealthies(v int32) {
	x.xxx_hidden_Healthies = v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 5, 10)
}

func (x *Application) SetContainers(v []*Application_Container) {
	x.xxx_hidden_Containers = &v
}

func (x *Application) SetPersistentVolumeClaims(v []*Application_PersistentVolumeClaim) {
	x.xxx_hidden_PersistentVolumeClaims = &v
}

func (x *Application) SetPods(v []*Application_Pod) {
	x.xxx_hidden_Pods = &v
}

func (x *Application) SetService(v []*Application_Service) {
	x.xxx_hidden_Service = &v
}

func (x *Application) HasType() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 0)
}

func (x *Application) HasName() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 1)
}

func (x *Application) HasNamespace() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 2)
}

func (x *Application) HasReplicas() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 4)
}

func (x *Application) HasHealthies() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 5)
}

func (x *Application) ClearType() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 0)
	x.xxx_hidden_Type = nil
}

func (x *Application) ClearName() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 1)
	x.xxx_hidden_Name = nil
}

func (x *Application) ClearNamespace() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 2)
	x.xxx_hidden_Namespace = nil
}

func (x *Application) ClearReplicas() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 4)
	x.xxx_hidden_Replicas = 0
}

func (x *Application) ClearHealthies() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 5)
	x.xxx_hidden_Healthies = 0
}

type Application_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	Type                   *string
	Name                   *string
	Namespace              *string
	Labels                 map[string]string
	Replicas               *int32
	Healthies              *int32
	Containers             []*Application_Container
	PersistentVolumeClaims []*Application_PersistentVolumeClaim
	Pods                   []*Application_Pod
	Service                []*Application_Service
}

func (b0 Application_builder) Build() *Application {
	m0 := &Application{}
	b, x := &b0, m0
	_, _ = b, x
	if b.Type != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 0, 10)
		x.xxx_hidden_Type = b.Type
	}
	if b.Name != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 1, 10)
		x.xxx_hidden_Name = b.Name
	}
	if b.Namespace != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 2, 10)
		x.xxx_hidden_Namespace = b.Namespace
	}
	x.xxx_hidden_Labels = b.Labels
	if b.Replicas != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 4, 10)
		x.xxx_hidden_Replicas = *b.Replicas
	}
	if b.Healthies != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 5, 10)
		x.xxx_hidden_Healthies = *b.Healthies
	}
	x.xxx_hidden_Containers = &b.Containers
	x.xxx_hidden_PersistentVolumeClaims = &b.PersistentVolumeClaims
	x.xxx_hidden_Pods = &b.Pods
	x.xxx_hidden_Service = &b.Service
	return m0
}

type ListReleasesRequest struct {
	state         protoimpl.MessageState `protogen:"opaque.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ListReleasesRequest) Reset() {
	*x = ListReleasesRequest{}
	mi := &file_api_kube_v1_kube_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListReleasesRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListReleasesRequest) ProtoMessage() {}

func (x *ListReleasesRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_kube_v1_kube_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

type ListReleasesRequest_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

}

func (b0 ListReleasesRequest_builder) Build() *ListReleasesRequest {
	m0 := &ListReleasesRequest{}
	b, x := &b0, m0
	_, _ = b, x
	return m0
}

type ListReleasesResponse struct {
	state               protoimpl.MessageState `protogen:"opaque.v1"`
	xxx_hidden_Releases *[]*Release            `protobuf:"bytes,1,rep,name=releases"`
	unknownFields       protoimpl.UnknownFields
	sizeCache           protoimpl.SizeCache
}

func (x *ListReleasesResponse) Reset() {
	*x = ListReleasesResponse{}
	mi := &file_api_kube_v1_kube_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListReleasesResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListReleasesResponse) ProtoMessage() {}

func (x *ListReleasesResponse) ProtoReflect() protoreflect.Message {
	mi := &file_api_kube_v1_kube_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *ListReleasesResponse) GetReleases() []*Release {
	if x != nil {
		if x.xxx_hidden_Releases != nil {
			return *x.xxx_hidden_Releases
		}
	}
	return nil
}

func (x *ListReleasesResponse) SetReleases(v []*Release) {
	x.xxx_hidden_Releases = &v
}

type ListReleasesResponse_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	Releases []*Release
}

func (b0 ListReleasesResponse_builder) Build() *ListReleasesResponse {
	m0 := &ListReleasesResponse{}
	b, x := &b0, m0
	_, _ = b, x
	x.xxx_hidden_Releases = &b.Releases
	return m0
}

type InstallReleaseRequest struct {
	state                  protoimpl.MessageState `protogen:"opaque.v1"`
	xxx_hidden_ModelUuid   *string                `protobuf:"bytes,1,opt,name=model_uuid,json=modelUuid"`
	xxx_hidden_ClusterName *string                `protobuf:"bytes,2,opt,name=cluster_name,json=clusterName"`
	xxx_hidden_Namespace   *string                `protobuf:"bytes,3,opt,name=namespace"`
	xxx_hidden_Name        *string                `protobuf:"bytes,4,opt,name=name"`
	xxx_hidden_DryRun      bool                   `protobuf:"varint,5,opt,name=dry_run,json=dryRun"`
	xxx_hidden_ChartRef    *string                `protobuf:"bytes,11,opt,name=chart_ref,json=chartRef"`
	xxx_hidden_ValuesYaml  *string                `protobuf:"bytes,12,opt,name=values_yaml,json=valuesYaml"`
	XXX_raceDetectHookData protoimpl.RaceDetectHookData
	XXX_presence           [1]uint32
	unknownFields          protoimpl.UnknownFields
	sizeCache              protoimpl.SizeCache
}

func (x *InstallReleaseRequest) Reset() {
	*x = InstallReleaseRequest{}
	mi := &file_api_kube_v1_kube_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *InstallReleaseRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*InstallReleaseRequest) ProtoMessage() {}

func (x *InstallReleaseRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_kube_v1_kube_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *InstallReleaseRequest) GetModelUuid() string {
	if x != nil {
		if x.xxx_hidden_ModelUuid != nil {
			return *x.xxx_hidden_ModelUuid
		}
		return ""
	}
	return ""
}

func (x *InstallReleaseRequest) GetClusterName() string {
	if x != nil {
		if x.xxx_hidden_ClusterName != nil {
			return *x.xxx_hidden_ClusterName
		}
		return ""
	}
	return ""
}

func (x *InstallReleaseRequest) GetNamespace() string {
	if x != nil {
		if x.xxx_hidden_Namespace != nil {
			return *x.xxx_hidden_Namespace
		}
		return ""
	}
	return ""
}

func (x *InstallReleaseRequest) GetName() string {
	if x != nil {
		if x.xxx_hidden_Name != nil {
			return *x.xxx_hidden_Name
		}
		return ""
	}
	return ""
}

func (x *InstallReleaseRequest) GetDryRun() bool {
	if x != nil {
		return x.xxx_hidden_DryRun
	}
	return false
}

func (x *InstallReleaseRequest) GetChartRef() string {
	if x != nil {
		if x.xxx_hidden_ChartRef != nil {
			return *x.xxx_hidden_ChartRef
		}
		return ""
	}
	return ""
}

func (x *InstallReleaseRequest) GetValuesYaml() string {
	if x != nil {
		if x.xxx_hidden_ValuesYaml != nil {
			return *x.xxx_hidden_ValuesYaml
		}
		return ""
	}
	return ""
}

func (x *InstallReleaseRequest) SetModelUuid(v string) {
	x.xxx_hidden_ModelUuid = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 0, 7)
}

func (x *InstallReleaseRequest) SetClusterName(v string) {
	x.xxx_hidden_ClusterName = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 1, 7)
}

func (x *InstallReleaseRequest) SetNamespace(v string) {
	x.xxx_hidden_Namespace = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 2, 7)
}

func (x *InstallReleaseRequest) SetName(v string) {
	x.xxx_hidden_Name = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 3, 7)
}

func (x *InstallReleaseRequest) SetDryRun(v bool) {
	x.xxx_hidden_DryRun = v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 4, 7)
}

func (x *InstallReleaseRequest) SetChartRef(v string) {
	x.xxx_hidden_ChartRef = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 5, 7)
}

func (x *InstallReleaseRequest) SetValuesYaml(v string) {
	x.xxx_hidden_ValuesYaml = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 6, 7)
}

func (x *InstallReleaseRequest) HasModelUuid() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 0)
}

func (x *InstallReleaseRequest) HasClusterName() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 1)
}

func (x *InstallReleaseRequest) HasNamespace() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 2)
}

func (x *InstallReleaseRequest) HasName() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 3)
}

func (x *InstallReleaseRequest) HasDryRun() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 4)
}

func (x *InstallReleaseRequest) HasChartRef() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 5)
}

func (x *InstallReleaseRequest) HasValuesYaml() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 6)
}

func (x *InstallReleaseRequest) ClearModelUuid() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 0)
	x.xxx_hidden_ModelUuid = nil
}

func (x *InstallReleaseRequest) ClearClusterName() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 1)
	x.xxx_hidden_ClusterName = nil
}

func (x *InstallReleaseRequest) ClearNamespace() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 2)
	x.xxx_hidden_Namespace = nil
}

func (x *InstallReleaseRequest) ClearName() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 3)
	x.xxx_hidden_Name = nil
}

func (x *InstallReleaseRequest) ClearDryRun() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 4)
	x.xxx_hidden_DryRun = false
}

func (x *InstallReleaseRequest) ClearChartRef() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 5)
	x.xxx_hidden_ChartRef = nil
}

func (x *InstallReleaseRequest) ClearValuesYaml() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 6)
	x.xxx_hidden_ValuesYaml = nil
}

type InstallReleaseRequest_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	ModelUuid   *string
	ClusterName *string
	Namespace   *string
	Name        *string
	DryRun      *bool
	ChartRef    *string
	ValuesYaml  *string
}

func (b0 InstallReleaseRequest_builder) Build() *InstallReleaseRequest {
	m0 := &InstallReleaseRequest{}
	b, x := &b0, m0
	_, _ = b, x
	if b.ModelUuid != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 0, 7)
		x.xxx_hidden_ModelUuid = b.ModelUuid
	}
	if b.ClusterName != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 1, 7)
		x.xxx_hidden_ClusterName = b.ClusterName
	}
	if b.Namespace != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 2, 7)
		x.xxx_hidden_Namespace = b.Namespace
	}
	if b.Name != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 3, 7)
		x.xxx_hidden_Name = b.Name
	}
	if b.DryRun != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 4, 7)
		x.xxx_hidden_DryRun = *b.DryRun
	}
	if b.ChartRef != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 5, 7)
		x.xxx_hidden_ChartRef = b.ChartRef
	}
	if b.ValuesYaml != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 6, 7)
		x.xxx_hidden_ValuesYaml = b.ValuesYaml
	}
	return m0
}

type UninstallReleaseRequest struct {
	state                  protoimpl.MessageState `protogen:"opaque.v1"`
	xxx_hidden_ModelUuid   *string                `protobuf:"bytes,1,opt,name=model_uuid,json=modelUuid"`
	xxx_hidden_ClusterName *string                `protobuf:"bytes,2,opt,name=cluster_name,json=clusterName"`
	xxx_hidden_Namespace   *string                `protobuf:"bytes,3,opt,name=namespace"`
	xxx_hidden_Name        *string                `protobuf:"bytes,4,opt,name=name"`
	xxx_hidden_DryRun      bool                   `protobuf:"varint,5,opt,name=dry_run,json=dryRun"`
	XXX_raceDetectHookData protoimpl.RaceDetectHookData
	XXX_presence           [1]uint32
	unknownFields          protoimpl.UnknownFields
	sizeCache              protoimpl.SizeCache
}

func (x *UninstallReleaseRequest) Reset() {
	*x = UninstallReleaseRequest{}
	mi := &file_api_kube_v1_kube_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UninstallReleaseRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UninstallReleaseRequest) ProtoMessage() {}

func (x *UninstallReleaseRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_kube_v1_kube_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *UninstallReleaseRequest) GetModelUuid() string {
	if x != nil {
		if x.xxx_hidden_ModelUuid != nil {
			return *x.xxx_hidden_ModelUuid
		}
		return ""
	}
	return ""
}

func (x *UninstallReleaseRequest) GetClusterName() string {
	if x != nil {
		if x.xxx_hidden_ClusterName != nil {
			return *x.xxx_hidden_ClusterName
		}
		return ""
	}
	return ""
}

func (x *UninstallReleaseRequest) GetNamespace() string {
	if x != nil {
		if x.xxx_hidden_Namespace != nil {
			return *x.xxx_hidden_Namespace
		}
		return ""
	}
	return ""
}

func (x *UninstallReleaseRequest) GetName() string {
	if x != nil {
		if x.xxx_hidden_Name != nil {
			return *x.xxx_hidden_Name
		}
		return ""
	}
	return ""
}

func (x *UninstallReleaseRequest) GetDryRun() bool {
	if x != nil {
		return x.xxx_hidden_DryRun
	}
	return false
}

func (x *UninstallReleaseRequest) SetModelUuid(v string) {
	x.xxx_hidden_ModelUuid = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 0, 5)
}

func (x *UninstallReleaseRequest) SetClusterName(v string) {
	x.xxx_hidden_ClusterName = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 1, 5)
}

func (x *UninstallReleaseRequest) SetNamespace(v string) {
	x.xxx_hidden_Namespace = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 2, 5)
}

func (x *UninstallReleaseRequest) SetName(v string) {
	x.xxx_hidden_Name = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 3, 5)
}

func (x *UninstallReleaseRequest) SetDryRun(v bool) {
	x.xxx_hidden_DryRun = v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 4, 5)
}

func (x *UninstallReleaseRequest) HasModelUuid() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 0)
}

func (x *UninstallReleaseRequest) HasClusterName() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 1)
}

func (x *UninstallReleaseRequest) HasNamespace() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 2)
}

func (x *UninstallReleaseRequest) HasName() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 3)
}

func (x *UninstallReleaseRequest) HasDryRun() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 4)
}

func (x *UninstallReleaseRequest) ClearModelUuid() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 0)
	x.xxx_hidden_ModelUuid = nil
}

func (x *UninstallReleaseRequest) ClearClusterName() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 1)
	x.xxx_hidden_ClusterName = nil
}

func (x *UninstallReleaseRequest) ClearNamespace() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 2)
	x.xxx_hidden_Namespace = nil
}

func (x *UninstallReleaseRequest) ClearName() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 3)
	x.xxx_hidden_Name = nil
}

func (x *UninstallReleaseRequest) ClearDryRun() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 4)
	x.xxx_hidden_DryRun = false
}

type UninstallReleaseRequest_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	ModelUuid   *string
	ClusterName *string
	Namespace   *string
	Name        *string
	DryRun      *bool
}

func (b0 UninstallReleaseRequest_builder) Build() *UninstallReleaseRequest {
	m0 := &UninstallReleaseRequest{}
	b, x := &b0, m0
	_, _ = b, x
	if b.ModelUuid != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 0, 5)
		x.xxx_hidden_ModelUuid = b.ModelUuid
	}
	if b.ClusterName != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 1, 5)
		x.xxx_hidden_ClusterName = b.ClusterName
	}
	if b.Namespace != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 2, 5)
		x.xxx_hidden_Namespace = b.Namespace
	}
	if b.Name != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 3, 5)
		x.xxx_hidden_Name = b.Name
	}
	if b.DryRun != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 4, 5)
		x.xxx_hidden_DryRun = *b.DryRun
	}
	return m0
}

type UpgradeReleaseRequest struct {
	state                  protoimpl.MessageState `protogen:"opaque.v1"`
	xxx_hidden_ModelUuid   *string                `protobuf:"bytes,1,opt,name=model_uuid,json=modelUuid"`
	xxx_hidden_ClusterName *string                `protobuf:"bytes,2,opt,name=cluster_name,json=clusterName"`
	xxx_hidden_Namespace   *string                `protobuf:"bytes,3,opt,name=namespace"`
	xxx_hidden_Name        *string                `protobuf:"bytes,4,opt,name=name"`
	xxx_hidden_DryRun      bool                   `protobuf:"varint,5,opt,name=dry_run,json=dryRun"`
	xxx_hidden_ChartRef    *string                `protobuf:"bytes,11,opt,name=chart_ref,json=chartRef"`
	xxx_hidden_ValuesYaml  *string                `protobuf:"bytes,12,opt,name=values_yaml,json=valuesYaml"`
	XXX_raceDetectHookData protoimpl.RaceDetectHookData
	XXX_presence           [1]uint32
	unknownFields          protoimpl.UnknownFields
	sizeCache              protoimpl.SizeCache
}

func (x *UpgradeReleaseRequest) Reset() {
	*x = UpgradeReleaseRequest{}
	mi := &file_api_kube_v1_kube_proto_msgTypes[7]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UpgradeReleaseRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpgradeReleaseRequest) ProtoMessage() {}

func (x *UpgradeReleaseRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_kube_v1_kube_proto_msgTypes[7]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *UpgradeReleaseRequest) GetModelUuid() string {
	if x != nil {
		if x.xxx_hidden_ModelUuid != nil {
			return *x.xxx_hidden_ModelUuid
		}
		return ""
	}
	return ""
}

func (x *UpgradeReleaseRequest) GetClusterName() string {
	if x != nil {
		if x.xxx_hidden_ClusterName != nil {
			return *x.xxx_hidden_ClusterName
		}
		return ""
	}
	return ""
}

func (x *UpgradeReleaseRequest) GetNamespace() string {
	if x != nil {
		if x.xxx_hidden_Namespace != nil {
			return *x.xxx_hidden_Namespace
		}
		return ""
	}
	return ""
}

func (x *UpgradeReleaseRequest) GetName() string {
	if x != nil {
		if x.xxx_hidden_Name != nil {
			return *x.xxx_hidden_Name
		}
		return ""
	}
	return ""
}

func (x *UpgradeReleaseRequest) GetDryRun() bool {
	if x != nil {
		return x.xxx_hidden_DryRun
	}
	return false
}

func (x *UpgradeReleaseRequest) GetChartRef() string {
	if x != nil {
		if x.xxx_hidden_ChartRef != nil {
			return *x.xxx_hidden_ChartRef
		}
		return ""
	}
	return ""
}

func (x *UpgradeReleaseRequest) GetValuesYaml() string {
	if x != nil {
		if x.xxx_hidden_ValuesYaml != nil {
			return *x.xxx_hidden_ValuesYaml
		}
		return ""
	}
	return ""
}

func (x *UpgradeReleaseRequest) SetModelUuid(v string) {
	x.xxx_hidden_ModelUuid = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 0, 7)
}

func (x *UpgradeReleaseRequest) SetClusterName(v string) {
	x.xxx_hidden_ClusterName = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 1, 7)
}

func (x *UpgradeReleaseRequest) SetNamespace(v string) {
	x.xxx_hidden_Namespace = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 2, 7)
}

func (x *UpgradeReleaseRequest) SetName(v string) {
	x.xxx_hidden_Name = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 3, 7)
}

func (x *UpgradeReleaseRequest) SetDryRun(v bool) {
	x.xxx_hidden_DryRun = v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 4, 7)
}

func (x *UpgradeReleaseRequest) SetChartRef(v string) {
	x.xxx_hidden_ChartRef = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 5, 7)
}

func (x *UpgradeReleaseRequest) SetValuesYaml(v string) {
	x.xxx_hidden_ValuesYaml = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 6, 7)
}

func (x *UpgradeReleaseRequest) HasModelUuid() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 0)
}

func (x *UpgradeReleaseRequest) HasClusterName() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 1)
}

func (x *UpgradeReleaseRequest) HasNamespace() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 2)
}

func (x *UpgradeReleaseRequest) HasName() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 3)
}

func (x *UpgradeReleaseRequest) HasDryRun() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 4)
}

func (x *UpgradeReleaseRequest) HasChartRef() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 5)
}

func (x *UpgradeReleaseRequest) HasValuesYaml() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 6)
}

func (x *UpgradeReleaseRequest) ClearModelUuid() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 0)
	x.xxx_hidden_ModelUuid = nil
}

func (x *UpgradeReleaseRequest) ClearClusterName() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 1)
	x.xxx_hidden_ClusterName = nil
}

func (x *UpgradeReleaseRequest) ClearNamespace() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 2)
	x.xxx_hidden_Namespace = nil
}

func (x *UpgradeReleaseRequest) ClearName() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 3)
	x.xxx_hidden_Name = nil
}

func (x *UpgradeReleaseRequest) ClearDryRun() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 4)
	x.xxx_hidden_DryRun = false
}

func (x *UpgradeReleaseRequest) ClearChartRef() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 5)
	x.xxx_hidden_ChartRef = nil
}

func (x *UpgradeReleaseRequest) ClearValuesYaml() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 6)
	x.xxx_hidden_ValuesYaml = nil
}

type UpgradeReleaseRequest_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	ModelUuid   *string
	ClusterName *string
	Namespace   *string
	Name        *string
	DryRun      *bool
	ChartRef    *string
	ValuesYaml  *string
}

func (b0 UpgradeReleaseRequest_builder) Build() *UpgradeReleaseRequest {
	m0 := &UpgradeReleaseRequest{}
	b, x := &b0, m0
	_, _ = b, x
	if b.ModelUuid != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 0, 7)
		x.xxx_hidden_ModelUuid = b.ModelUuid
	}
	if b.ClusterName != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 1, 7)
		x.xxx_hidden_ClusterName = b.ClusterName
	}
	if b.Namespace != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 2, 7)
		x.xxx_hidden_Namespace = b.Namespace
	}
	if b.Name != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 3, 7)
		x.xxx_hidden_Name = b.Name
	}
	if b.DryRun != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 4, 7)
		x.xxx_hidden_DryRun = *b.DryRun
	}
	if b.ChartRef != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 5, 7)
		x.xxx_hidden_ChartRef = b.ChartRef
	}
	if b.ValuesYaml != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 6, 7)
		x.xxx_hidden_ValuesYaml = b.ValuesYaml
	}
	return m0
}

type RollbackReleaseRequest struct {
	state                  protoimpl.MessageState `protogen:"opaque.v1"`
	xxx_hidden_ModelUuid   *string                `protobuf:"bytes,1,opt,name=model_uuid,json=modelUuid"`
	xxx_hidden_ClusterName *string                `protobuf:"bytes,2,opt,name=cluster_name,json=clusterName"`
	xxx_hidden_Namespace   *string                `protobuf:"bytes,3,opt,name=namespace"`
	xxx_hidden_Name        *string                `protobuf:"bytes,4,opt,name=name"`
	xxx_hidden_DryRun      bool                   `protobuf:"varint,5,opt,name=dry_run,json=dryRun"`
	XXX_raceDetectHookData protoimpl.RaceDetectHookData
	XXX_presence           [1]uint32
	unknownFields          protoimpl.UnknownFields
	sizeCache              protoimpl.SizeCache
}

func (x *RollbackReleaseRequest) Reset() {
	*x = RollbackReleaseRequest{}
	mi := &file_api_kube_v1_kube_proto_msgTypes[8]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RollbackReleaseRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RollbackReleaseRequest) ProtoMessage() {}

func (x *RollbackReleaseRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_kube_v1_kube_proto_msgTypes[8]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *RollbackReleaseRequest) GetModelUuid() string {
	if x != nil {
		if x.xxx_hidden_ModelUuid != nil {
			return *x.xxx_hidden_ModelUuid
		}
		return ""
	}
	return ""
}

func (x *RollbackReleaseRequest) GetClusterName() string {
	if x != nil {
		if x.xxx_hidden_ClusterName != nil {
			return *x.xxx_hidden_ClusterName
		}
		return ""
	}
	return ""
}

func (x *RollbackReleaseRequest) GetNamespace() string {
	if x != nil {
		if x.xxx_hidden_Namespace != nil {
			return *x.xxx_hidden_Namespace
		}
		return ""
	}
	return ""
}

func (x *RollbackReleaseRequest) GetName() string {
	if x != nil {
		if x.xxx_hidden_Name != nil {
			return *x.xxx_hidden_Name
		}
		return ""
	}
	return ""
}

func (x *RollbackReleaseRequest) GetDryRun() bool {
	if x != nil {
		return x.xxx_hidden_DryRun
	}
	return false
}

func (x *RollbackReleaseRequest) SetModelUuid(v string) {
	x.xxx_hidden_ModelUuid = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 0, 5)
}

func (x *RollbackReleaseRequest) SetClusterName(v string) {
	x.xxx_hidden_ClusterName = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 1, 5)
}

func (x *RollbackReleaseRequest) SetNamespace(v string) {
	x.xxx_hidden_Namespace = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 2, 5)
}

func (x *RollbackReleaseRequest) SetName(v string) {
	x.xxx_hidden_Name = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 3, 5)
}

func (x *RollbackReleaseRequest) SetDryRun(v bool) {
	x.xxx_hidden_DryRun = v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 4, 5)
}

func (x *RollbackReleaseRequest) HasModelUuid() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 0)
}

func (x *RollbackReleaseRequest) HasClusterName() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 1)
}

func (x *RollbackReleaseRequest) HasNamespace() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 2)
}

func (x *RollbackReleaseRequest) HasName() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 3)
}

func (x *RollbackReleaseRequest) HasDryRun() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 4)
}

func (x *RollbackReleaseRequest) ClearModelUuid() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 0)
	x.xxx_hidden_ModelUuid = nil
}

func (x *RollbackReleaseRequest) ClearClusterName() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 1)
	x.xxx_hidden_ClusterName = nil
}

func (x *RollbackReleaseRequest) ClearNamespace() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 2)
	x.xxx_hidden_Namespace = nil
}

func (x *RollbackReleaseRequest) ClearName() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 3)
	x.xxx_hidden_Name = nil
}

func (x *RollbackReleaseRequest) ClearDryRun() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 4)
	x.xxx_hidden_DryRun = false
}

type RollbackReleaseRequest_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	ModelUuid   *string
	ClusterName *string
	Namespace   *string
	Name        *string
	DryRun      *bool
}

func (b0 RollbackReleaseRequest_builder) Build() *RollbackReleaseRequest {
	m0 := &RollbackReleaseRequest{}
	b, x := &b0, m0
	_, _ = b, x
	if b.ModelUuid != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 0, 5)
		x.xxx_hidden_ModelUuid = b.ModelUuid
	}
	if b.ClusterName != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 1, 5)
		x.xxx_hidden_ClusterName = b.ClusterName
	}
	if b.Namespace != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 2, 5)
		x.xxx_hidden_Namespace = b.Namespace
	}
	if b.Name != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 3, 5)
		x.xxx_hidden_Name = b.Name
	}
	if b.DryRun != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 4, 5)
		x.xxx_hidden_DryRun = *b.DryRun
	}
	return m0
}

type GetChartInfoRequest struct {
	state                  protoimpl.MessageState `protogen:"opaque.v1"`
	xxx_hidden_ChartRef    *string                `protobuf:"bytes,1,opt,name=chart_ref,json=chartRef"`
	XXX_raceDetectHookData protoimpl.RaceDetectHookData
	XXX_presence           [1]uint32
	unknownFields          protoimpl.UnknownFields
	sizeCache              protoimpl.SizeCache
}

func (x *GetChartInfoRequest) Reset() {
	*x = GetChartInfoRequest{}
	mi := &file_api_kube_v1_kube_proto_msgTypes[9]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetChartInfoRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetChartInfoRequest) ProtoMessage() {}

func (x *GetChartInfoRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_kube_v1_kube_proto_msgTypes[9]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *GetChartInfoRequest) GetChartRef() string {
	if x != nil {
		if x.xxx_hidden_ChartRef != nil {
			return *x.xxx_hidden_ChartRef
		}
		return ""
	}
	return ""
}

func (x *GetChartInfoRequest) SetChartRef(v string) {
	x.xxx_hidden_ChartRef = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 0, 1)
}

func (x *GetChartInfoRequest) HasChartRef() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 0)
}

func (x *GetChartInfoRequest) ClearChartRef() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 0)
	x.xxx_hidden_ChartRef = nil
}

type GetChartInfoRequest_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	ChartRef *string
}

func (b0 GetChartInfoRequest_builder) Build() *GetChartInfoRequest {
	m0 := &GetChartInfoRequest{}
	b, x := &b0, m0
	_, _ = b, x
	if b.ChartRef != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 0, 1)
		x.xxx_hidden_ChartRef = b.ChartRef
	}
	return m0
}

type GetChartInfoResponse struct {
	state                  protoimpl.MessageState `protogen:"opaque.v1"`
	xxx_hidden_Values      *string                `protobuf:"bytes,1,opt,name=values"`
	xxx_hidden_Readme      *string                `protobuf:"bytes,2,opt,name=readme"`
	XXX_raceDetectHookData protoimpl.RaceDetectHookData
	XXX_presence           [1]uint32
	unknownFields          protoimpl.UnknownFields
	sizeCache              protoimpl.SizeCache
}

func (x *GetChartInfoResponse) Reset() {
	*x = GetChartInfoResponse{}
	mi := &file_api_kube_v1_kube_proto_msgTypes[10]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetChartInfoResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetChartInfoResponse) ProtoMessage() {}

func (x *GetChartInfoResponse) ProtoReflect() protoreflect.Message {
	mi := &file_api_kube_v1_kube_proto_msgTypes[10]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *GetChartInfoResponse) GetValues() string {
	if x != nil {
		if x.xxx_hidden_Values != nil {
			return *x.xxx_hidden_Values
		}
		return ""
	}
	return ""
}

func (x *GetChartInfoResponse) GetReadme() string {
	if x != nil {
		if x.xxx_hidden_Readme != nil {
			return *x.xxx_hidden_Readme
		}
		return ""
	}
	return ""
}

func (x *GetChartInfoResponse) SetValues(v string) {
	x.xxx_hidden_Values = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 0, 2)
}

func (x *GetChartInfoResponse) SetReadme(v string) {
	x.xxx_hidden_Readme = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 1, 2)
}

func (x *GetChartInfoResponse) HasValues() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 0)
}

func (x *GetChartInfoResponse) HasReadme() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 1)
}

func (x *GetChartInfoResponse) ClearValues() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 0)
	x.xxx_hidden_Values = nil
}

func (x *GetChartInfoResponse) ClearReadme() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 1)
	x.xxx_hidden_Readme = nil
}

type GetChartInfoResponse_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	Values *string
	Readme *string
}

func (b0 GetChartInfoResponse_builder) Build() *GetChartInfoResponse {
	m0 := &GetChartInfoResponse{}
	b, x := &b0, m0
	_, _ = b, x
	if b.Values != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 0, 2)
		x.xxx_hidden_Values = b.Values
	}
	if b.Readme != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 1, 2)
		x.xxx_hidden_Readme = b.Readme
	}
	return m0
}

type ListChartsRequest struct {
	state         protoimpl.MessageState `protogen:"opaque.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ListChartsRequest) Reset() {
	*x = ListChartsRequest{}
	mi := &file_api_kube_v1_kube_proto_msgTypes[11]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListChartsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListChartsRequest) ProtoMessage() {}

func (x *ListChartsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_kube_v1_kube_proto_msgTypes[11]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

type ListChartsRequest_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

}

func (b0 ListChartsRequest_builder) Build() *ListChartsRequest {
	m0 := &ListChartsRequest{}
	b, x := &b0, m0
	_, _ = b, x
	return m0
}

type ListChartsResponse struct {
	state             protoimpl.MessageState `protogen:"opaque.v1"`
	xxx_hidden_Charts *[]*Chart              `protobuf:"bytes,1,rep,name=charts"`
	unknownFields     protoimpl.UnknownFields
	sizeCache         protoimpl.SizeCache
}

func (x *ListChartsResponse) Reset() {
	*x = ListChartsResponse{}
	mi := &file_api_kube_v1_kube_proto_msgTypes[12]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListChartsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListChartsResponse) ProtoMessage() {}

func (x *ListChartsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_api_kube_v1_kube_proto_msgTypes[12]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *ListChartsResponse) GetCharts() []*Chart {
	if x != nil {
		if x.xxx_hidden_Charts != nil {
			return *x.xxx_hidden_Charts
		}
	}
	return nil
}

func (x *ListChartsResponse) SetCharts(v []*Chart) {
	x.xxx_hidden_Charts = &v
}

type ListChartsResponse_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	Charts []*Chart
}

func (b0 ListChartsResponse_builder) Build() *ListChartsResponse {
	m0 := &ListChartsResponse{}
	b, x := &b0, m0
	_, _ = b, x
	x.xxx_hidden_Charts = &b.Charts
	return m0
}

type GetChartRequest struct {
	state                  protoimpl.MessageState `protogen:"opaque.v1"`
	xxx_hidden_Name        *string                `protobuf:"bytes,1,opt,name=name"`
	XXX_raceDetectHookData protoimpl.RaceDetectHookData
	XXX_presence           [1]uint32
	unknownFields          protoimpl.UnknownFields
	sizeCache              protoimpl.SizeCache
}

func (x *GetChartRequest) Reset() {
	*x = GetChartRequest{}
	mi := &file_api_kube_v1_kube_proto_msgTypes[13]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetChartRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetChartRequest) ProtoMessage() {}

func (x *GetChartRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_kube_v1_kube_proto_msgTypes[13]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *GetChartRequest) GetName() string {
	if x != nil {
		if x.xxx_hidden_Name != nil {
			return *x.xxx_hidden_Name
		}
		return ""
	}
	return ""
}

func (x *GetChartRequest) SetName(v string) {
	x.xxx_hidden_Name = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 0, 1)
}

func (x *GetChartRequest) HasName() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 0)
}

func (x *GetChartRequest) ClearName() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 0)
	x.xxx_hidden_Name = nil
}

type GetChartRequest_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	Name *string
}

func (b0 GetChartRequest_builder) Build() *GetChartRequest {
	m0 := &GetChartRequest{}
	b, x := &b0, m0
	_, _ = b, x
	if b.Name != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 0, 1)
		x.xxx_hidden_Name = b.Name
	}
	return m0
}

type ListApplicationsRequest struct {
	state                  protoimpl.MessageState `protogen:"opaque.v1"`
	xxx_hidden_ModelUuid   *string                `protobuf:"bytes,1,opt,name=model_uuid,json=modelUuid"`
	xxx_hidden_ClusterName *string                `protobuf:"bytes,2,opt,name=cluster_name,json=clusterName"`
	XXX_raceDetectHookData protoimpl.RaceDetectHookData
	XXX_presence           [1]uint32
	unknownFields          protoimpl.UnknownFields
	sizeCache              protoimpl.SizeCache
}

func (x *ListApplicationsRequest) Reset() {
	*x = ListApplicationsRequest{}
	mi := &file_api_kube_v1_kube_proto_msgTypes[14]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListApplicationsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListApplicationsRequest) ProtoMessage() {}

func (x *ListApplicationsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_kube_v1_kube_proto_msgTypes[14]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *ListApplicationsRequest) GetModelUuid() string {
	if x != nil {
		if x.xxx_hidden_ModelUuid != nil {
			return *x.xxx_hidden_ModelUuid
		}
		return ""
	}
	return ""
}

func (x *ListApplicationsRequest) GetClusterName() string {
	if x != nil {
		if x.xxx_hidden_ClusterName != nil {
			return *x.xxx_hidden_ClusterName
		}
		return ""
	}
	return ""
}

func (x *ListApplicationsRequest) SetModelUuid(v string) {
	x.xxx_hidden_ModelUuid = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 0, 2)
}

func (x *ListApplicationsRequest) SetClusterName(v string) {
	x.xxx_hidden_ClusterName = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 1, 2)
}

func (x *ListApplicationsRequest) HasModelUuid() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 0)
}

func (x *ListApplicationsRequest) HasClusterName() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 1)
}

func (x *ListApplicationsRequest) ClearModelUuid() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 0)
	x.xxx_hidden_ModelUuid = nil
}

func (x *ListApplicationsRequest) ClearClusterName() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 1)
	x.xxx_hidden_ClusterName = nil
}

type ListApplicationsRequest_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	ModelUuid   *string
	ClusterName *string
}

func (b0 ListApplicationsRequest_builder) Build() *ListApplicationsRequest {
	m0 := &ListApplicationsRequest{}
	b, x := &b0, m0
	_, _ = b, x
	if b.ModelUuid != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 0, 2)
		x.xxx_hidden_ModelUuid = b.ModelUuid
	}
	if b.ClusterName != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 1, 2)
		x.xxx_hidden_ClusterName = b.ClusterName
	}
	return m0
}

type ListApplicationsResponse struct {
	state                   protoimpl.MessageState `protogen:"opaque.v1"`
	xxx_hidden_Applications *[]*Application        `protobuf:"bytes,1,rep,name=applications"`
	unknownFields           protoimpl.UnknownFields
	sizeCache               protoimpl.SizeCache
}

func (x *ListApplicationsResponse) Reset() {
	*x = ListApplicationsResponse{}
	mi := &file_api_kube_v1_kube_proto_msgTypes[15]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListApplicationsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListApplicationsResponse) ProtoMessage() {}

func (x *ListApplicationsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_api_kube_v1_kube_proto_msgTypes[15]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *ListApplicationsResponse) GetApplications() []*Application {
	if x != nil {
		if x.xxx_hidden_Applications != nil {
			return *x.xxx_hidden_Applications
		}
	}
	return nil
}

func (x *ListApplicationsResponse) SetApplications(v []*Application) {
	x.xxx_hidden_Applications = &v
}

type ListApplicationsResponse_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	Applications []*Application
}

func (b0 ListApplicationsResponse_builder) Build() *ListApplicationsResponse {
	m0 := &ListApplicationsResponse{}
	b, x := &b0, m0
	_, _ = b, x
	x.xxx_hidden_Applications = &b.Applications
	return m0
}

type GetApplicationRequest struct {
	state                  protoimpl.MessageState `protogen:"opaque.v1"`
	xxx_hidden_ModelUuid   *string                `protobuf:"bytes,1,opt,name=model_uuid,json=modelUuid"`
	xxx_hidden_ClusterName *string                `protobuf:"bytes,2,opt,name=cluster_name,json=clusterName"`
	xxx_hidden_Namespace   *string                `protobuf:"bytes,3,opt,name=namespace"`
	xxx_hidden_Name        *string                `protobuf:"bytes,4,opt,name=name"`
	XXX_raceDetectHookData protoimpl.RaceDetectHookData
	XXX_presence           [1]uint32
	unknownFields          protoimpl.UnknownFields
	sizeCache              protoimpl.SizeCache
}

func (x *GetApplicationRequest) Reset() {
	*x = GetApplicationRequest{}
	mi := &file_api_kube_v1_kube_proto_msgTypes[16]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetApplicationRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetApplicationRequest) ProtoMessage() {}

func (x *GetApplicationRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_kube_v1_kube_proto_msgTypes[16]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *GetApplicationRequest) GetModelUuid() string {
	if x != nil {
		if x.xxx_hidden_ModelUuid != nil {
			return *x.xxx_hidden_ModelUuid
		}
		return ""
	}
	return ""
}

func (x *GetApplicationRequest) GetClusterName() string {
	if x != nil {
		if x.xxx_hidden_ClusterName != nil {
			return *x.xxx_hidden_ClusterName
		}
		return ""
	}
	return ""
}

func (x *GetApplicationRequest) GetNamespace() string {
	if x != nil {
		if x.xxx_hidden_Namespace != nil {
			return *x.xxx_hidden_Namespace
		}
		return ""
	}
	return ""
}

func (x *GetApplicationRequest) GetName() string {
	if x != nil {
		if x.xxx_hidden_Name != nil {
			return *x.xxx_hidden_Name
		}
		return ""
	}
	return ""
}

func (x *GetApplicationRequest) SetModelUuid(v string) {
	x.xxx_hidden_ModelUuid = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 0, 4)
}

func (x *GetApplicationRequest) SetClusterName(v string) {
	x.xxx_hidden_ClusterName = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 1, 4)
}

func (x *GetApplicationRequest) SetNamespace(v string) {
	x.xxx_hidden_Namespace = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 2, 4)
}

func (x *GetApplicationRequest) SetName(v string) {
	x.xxx_hidden_Name = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 3, 4)
}

func (x *GetApplicationRequest) HasModelUuid() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 0)
}

func (x *GetApplicationRequest) HasClusterName() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 1)
}

func (x *GetApplicationRequest) HasNamespace() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 2)
}

func (x *GetApplicationRequest) HasName() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 3)
}

func (x *GetApplicationRequest) ClearModelUuid() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 0)
	x.xxx_hidden_ModelUuid = nil
}

func (x *GetApplicationRequest) ClearClusterName() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 1)
	x.xxx_hidden_ClusterName = nil
}

func (x *GetApplicationRequest) ClearNamespace() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 2)
	x.xxx_hidden_Namespace = nil
}

func (x *GetApplicationRequest) ClearName() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 3)
	x.xxx_hidden_Name = nil
}

type GetApplicationRequest_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	ModelUuid   *string
	ClusterName *string
	Namespace   *string
	Name        *string
}

func (b0 GetApplicationRequest_builder) Build() *GetApplicationRequest {
	m0 := &GetApplicationRequest{}
	b, x := &b0, m0
	_, _ = b, x
	if b.ModelUuid != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 0, 4)
		x.xxx_hidden_ModelUuid = b.ModelUuid
	}
	if b.ClusterName != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 1, 4)
		x.xxx_hidden_ClusterName = b.ClusterName
	}
	if b.Namespace != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 2, 4)
		x.xxx_hidden_Namespace = b.Namespace
	}
	if b.Name != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 3, 4)
		x.xxx_hidden_Name = b.Name
	}
	return m0
}

type Chart_Maintainer struct {
	state                  protoimpl.MessageState `protogen:"opaque.v1"`
	xxx_hidden_Name        *string                `protobuf:"bytes,1,opt,name=name"`
	xxx_hidden_Email       *string                `protobuf:"bytes,2,opt,name=email"`
	xxx_hidden_Url         *string                `protobuf:"bytes,3,opt,name=url"`
	XXX_raceDetectHookData protoimpl.RaceDetectHookData
	XXX_presence           [1]uint32
	unknownFields          protoimpl.UnknownFields
	sizeCache              protoimpl.SizeCache
}

func (x *Chart_Maintainer) Reset() {
	*x = Chart_Maintainer{}
	mi := &file_api_kube_v1_kube_proto_msgTypes[17]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Chart_Maintainer) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Chart_Maintainer) ProtoMessage() {}

func (x *Chart_Maintainer) ProtoReflect() protoreflect.Message {
	mi := &file_api_kube_v1_kube_proto_msgTypes[17]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *Chart_Maintainer) GetName() string {
	if x != nil {
		if x.xxx_hidden_Name != nil {
			return *x.xxx_hidden_Name
		}
		return ""
	}
	return ""
}

func (x *Chart_Maintainer) GetEmail() string {
	if x != nil {
		if x.xxx_hidden_Email != nil {
			return *x.xxx_hidden_Email
		}
		return ""
	}
	return ""
}

func (x *Chart_Maintainer) GetUrl() string {
	if x != nil {
		if x.xxx_hidden_Url != nil {
			return *x.xxx_hidden_Url
		}
		return ""
	}
	return ""
}

func (x *Chart_Maintainer) SetName(v string) {
	x.xxx_hidden_Name = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 0, 3)
}

func (x *Chart_Maintainer) SetEmail(v string) {
	x.xxx_hidden_Email = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 1, 3)
}

func (x *Chart_Maintainer) SetUrl(v string) {
	x.xxx_hidden_Url = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 2, 3)
}

func (x *Chart_Maintainer) HasName() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 0)
}

func (x *Chart_Maintainer) HasEmail() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 1)
}

func (x *Chart_Maintainer) HasUrl() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 2)
}

func (x *Chart_Maintainer) ClearName() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 0)
	x.xxx_hidden_Name = nil
}

func (x *Chart_Maintainer) ClearEmail() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 1)
	x.xxx_hidden_Email = nil
}

func (x *Chart_Maintainer) ClearUrl() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 2)
	x.xxx_hidden_Url = nil
}

type Chart_Maintainer_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	Name  *string
	Email *string
	Url   *string
}

func (b0 Chart_Maintainer_builder) Build() *Chart_Maintainer {
	m0 := &Chart_Maintainer{}
	b, x := &b0, m0
	_, _ = b, x
	if b.Name != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 0, 3)
		x.xxx_hidden_Name = b.Name
	}
	if b.Email != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 1, 3)
		x.xxx_hidden_Email = b.Email
	}
	if b.Url != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 2, 3)
		x.xxx_hidden_Url = b.Url
	}
	return m0
}

type Chart_Dependency struct {
	state                  protoimpl.MessageState `protogen:"opaque.v1"`
	xxx_hidden_Name        *string                `protobuf:"bytes,1,opt,name=name"`
	xxx_hidden_Version     *string                `protobuf:"bytes,2,opt,name=version"`
	xxx_hidden_Condition   *string                `protobuf:"bytes,4,opt,name=condition"`
	XXX_raceDetectHookData protoimpl.RaceDetectHookData
	XXX_presence           [1]uint32
	unknownFields          protoimpl.UnknownFields
	sizeCache              protoimpl.SizeCache
}

func (x *Chart_Dependency) Reset() {
	*x = Chart_Dependency{}
	mi := &file_api_kube_v1_kube_proto_msgTypes[18]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Chart_Dependency) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Chart_Dependency) ProtoMessage() {}

func (x *Chart_Dependency) ProtoReflect() protoreflect.Message {
	mi := &file_api_kube_v1_kube_proto_msgTypes[18]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *Chart_Dependency) GetName() string {
	if x != nil {
		if x.xxx_hidden_Name != nil {
			return *x.xxx_hidden_Name
		}
		return ""
	}
	return ""
}

func (x *Chart_Dependency) GetVersion() string {
	if x != nil {
		if x.xxx_hidden_Version != nil {
			return *x.xxx_hidden_Version
		}
		return ""
	}
	return ""
}

func (x *Chart_Dependency) GetCondition() string {
	if x != nil {
		if x.xxx_hidden_Condition != nil {
			return *x.xxx_hidden_Condition
		}
		return ""
	}
	return ""
}

func (x *Chart_Dependency) SetName(v string) {
	x.xxx_hidden_Name = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 0, 3)
}

func (x *Chart_Dependency) SetVersion(v string) {
	x.xxx_hidden_Version = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 1, 3)
}

func (x *Chart_Dependency) SetCondition(v string) {
	x.xxx_hidden_Condition = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 2, 3)
}

func (x *Chart_Dependency) HasName() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 0)
}

func (x *Chart_Dependency) HasVersion() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 1)
}

func (x *Chart_Dependency) HasCondition() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 2)
}

func (x *Chart_Dependency) ClearName() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 0)
	x.xxx_hidden_Name = nil
}

func (x *Chart_Dependency) ClearVersion() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 1)
	x.xxx_hidden_Version = nil
}

func (x *Chart_Dependency) ClearCondition() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 2)
	x.xxx_hidden_Condition = nil
}

type Chart_Dependency_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	Name      *string
	Version   *string
	Condition *string
}

func (b0 Chart_Dependency_builder) Build() *Chart_Dependency {
	m0 := &Chart_Dependency{}
	b, x := &b0, m0
	_, _ = b, x
	if b.Name != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 0, 3)
		x.xxx_hidden_Name = b.Name
	}
	if b.Version != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 1, 3)
		x.xxx_hidden_Version = b.Version
	}
	if b.Condition != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 2, 3)
		x.xxx_hidden_Condition = b.Condition
	}
	return m0
}

type Chart_Version struct {
	state                         protoimpl.MessageState `protogen:"opaque.v1"`
	xxx_hidden_ChartVersion       *string                `protobuf:"bytes,1,opt,name=chart_version,json=chartVersion"`
	xxx_hidden_ApplicationVersion *string                `protobuf:"bytes,2,opt,name=application_version,json=applicationVersion"`
	xxx_hidden_ChartRef           *string                `protobuf:"bytes,3,opt,name=chart_ref,json=chartRef"`
	XXX_raceDetectHookData        protoimpl.RaceDetectHookData
	XXX_presence                  [1]uint32
	unknownFields                 protoimpl.UnknownFields
	sizeCache                     protoimpl.SizeCache
}

func (x *Chart_Version) Reset() {
	*x = Chart_Version{}
	mi := &file_api_kube_v1_kube_proto_msgTypes[19]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Chart_Version) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Chart_Version) ProtoMessage() {}

func (x *Chart_Version) ProtoReflect() protoreflect.Message {
	mi := &file_api_kube_v1_kube_proto_msgTypes[19]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *Chart_Version) GetChartVersion() string {
	if x != nil {
		if x.xxx_hidden_ChartVersion != nil {
			return *x.xxx_hidden_ChartVersion
		}
		return ""
	}
	return ""
}

func (x *Chart_Version) GetApplicationVersion() string {
	if x != nil {
		if x.xxx_hidden_ApplicationVersion != nil {
			return *x.xxx_hidden_ApplicationVersion
		}
		return ""
	}
	return ""
}

func (x *Chart_Version) GetChartRef() string {
	if x != nil {
		if x.xxx_hidden_ChartRef != nil {
			return *x.xxx_hidden_ChartRef
		}
		return ""
	}
	return ""
}

func (x *Chart_Version) SetChartVersion(v string) {
	x.xxx_hidden_ChartVersion = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 0, 3)
}

func (x *Chart_Version) SetApplicationVersion(v string) {
	x.xxx_hidden_ApplicationVersion = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 1, 3)
}

func (x *Chart_Version) SetChartRef(v string) {
	x.xxx_hidden_ChartRef = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 2, 3)
}

func (x *Chart_Version) HasChartVersion() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 0)
}

func (x *Chart_Version) HasApplicationVersion() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 1)
}

func (x *Chart_Version) HasChartRef() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 2)
}

func (x *Chart_Version) ClearChartVersion() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 0)
	x.xxx_hidden_ChartVersion = nil
}

func (x *Chart_Version) ClearApplicationVersion() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 1)
	x.xxx_hidden_ApplicationVersion = nil
}

func (x *Chart_Version) ClearChartRef() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 2)
	x.xxx_hidden_ChartRef = nil
}

type Chart_Version_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	ChartVersion       *string
	ApplicationVersion *string
	ChartRef           *string
}

func (b0 Chart_Version_builder) Build() *Chart_Version {
	m0 := &Chart_Version{}
	b, x := &b0, m0
	_, _ = b, x
	if b.ChartVersion != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 0, 3)
		x.xxx_hidden_ChartVersion = b.ChartVersion
	}
	if b.ApplicationVersion != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 1, 3)
		x.xxx_hidden_ApplicationVersion = b.ApplicationVersion
	}
	if b.ChartRef != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 2, 3)
		x.xxx_hidden_ChartRef = b.ChartRef
	}
	return m0
}

type Application_Service struct {
	state                  protoimpl.MessageState       `protogen:"opaque.v1"`
	xxx_hidden_Name        *string                      `protobuf:"bytes,1,opt,name=name"`
	xxx_hidden_Type        *string                      `protobuf:"bytes,2,opt,name=type"`
	xxx_hidden_ClusterIp   *string                      `protobuf:"bytes,3,opt,name=cluster_ip,json=clusterIp"`
	xxx_hidden_Ports       *[]*Application_Service_Port `protobuf:"bytes,11,rep,name=ports"`
	XXX_raceDetectHookData protoimpl.RaceDetectHookData
	XXX_presence           [1]uint32
	unknownFields          protoimpl.UnknownFields
	sizeCache              protoimpl.SizeCache
}

func (x *Application_Service) Reset() {
	*x = Application_Service{}
	mi := &file_api_kube_v1_kube_proto_msgTypes[20]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Application_Service) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Application_Service) ProtoMessage() {}

func (x *Application_Service) ProtoReflect() protoreflect.Message {
	mi := &file_api_kube_v1_kube_proto_msgTypes[20]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *Application_Service) GetName() string {
	if x != nil {
		if x.xxx_hidden_Name != nil {
			return *x.xxx_hidden_Name
		}
		return ""
	}
	return ""
}

func (x *Application_Service) GetType() string {
	if x != nil {
		if x.xxx_hidden_Type != nil {
			return *x.xxx_hidden_Type
		}
		return ""
	}
	return ""
}

func (x *Application_Service) GetClusterIp() string {
	if x != nil {
		if x.xxx_hidden_ClusterIp != nil {
			return *x.xxx_hidden_ClusterIp
		}
		return ""
	}
	return ""
}

func (x *Application_Service) GetPorts() []*Application_Service_Port {
	if x != nil {
		if x.xxx_hidden_Ports != nil {
			return *x.xxx_hidden_Ports
		}
	}
	return nil
}

func (x *Application_Service) SetName(v string) {
	x.xxx_hidden_Name = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 0, 4)
}

func (x *Application_Service) SetType(v string) {
	x.xxx_hidden_Type = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 1, 4)
}

func (x *Application_Service) SetClusterIp(v string) {
	x.xxx_hidden_ClusterIp = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 2, 4)
}

func (x *Application_Service) SetPorts(v []*Application_Service_Port) {
	x.xxx_hidden_Ports = &v
}

func (x *Application_Service) HasName() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 0)
}

func (x *Application_Service) HasType() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 1)
}

func (x *Application_Service) HasClusterIp() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 2)
}

func (x *Application_Service) ClearName() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 0)
	x.xxx_hidden_Name = nil
}

func (x *Application_Service) ClearType() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 1)
	x.xxx_hidden_Type = nil
}

func (x *Application_Service) ClearClusterIp() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 2)
	x.xxx_hidden_ClusterIp = nil
}

type Application_Service_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	Name      *string
	Type      *string
	ClusterIp *string
	Ports     []*Application_Service_Port
}

func (b0 Application_Service_builder) Build() *Application_Service {
	m0 := &Application_Service{}
	b, x := &b0, m0
	_, _ = b, x
	if b.Name != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 0, 4)
		x.xxx_hidden_Name = b.Name
	}
	if b.Type != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 1, 4)
		x.xxx_hidden_Type = b.Type
	}
	if b.ClusterIp != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 2, 4)
		x.xxx_hidden_ClusterIp = b.ClusterIp
	}
	x.xxx_hidden_Ports = &b.Ports
	return m0
}

type Application_Pod struct {
	state                    protoimpl.MessageState     `protogen:"opaque.v1"`
	xxx_hidden_Name          *string                    `protobuf:"bytes,1,opt,name=name"`
	xxx_hidden_Phase         *string                    `protobuf:"bytes,2,opt,name=phase"`
	xxx_hidden_Ready         *string                    `protobuf:"bytes,3,opt,name=ready"`
	xxx_hidden_Restarts      *string                    `protobuf:"bytes,4,opt,name=restarts"`
	xxx_hidden_LastCondition *Application_Pod_Condition `protobuf:"bytes,11,opt,name=last_condition,json=lastCondition"`
	XXX_raceDetectHookData   protoimpl.RaceDetectHookData
	XXX_presence             [1]uint32
	unknownFields            protoimpl.UnknownFields
	sizeCache                protoimpl.SizeCache
}

func (x *Application_Pod) Reset() {
	*x = Application_Pod{}
	mi := &file_api_kube_v1_kube_proto_msgTypes[21]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Application_Pod) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Application_Pod) ProtoMessage() {}

func (x *Application_Pod) ProtoReflect() protoreflect.Message {
	mi := &file_api_kube_v1_kube_proto_msgTypes[21]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *Application_Pod) GetName() string {
	if x != nil {
		if x.xxx_hidden_Name != nil {
			return *x.xxx_hidden_Name
		}
		return ""
	}
	return ""
}

func (x *Application_Pod) GetPhase() string {
	if x != nil {
		if x.xxx_hidden_Phase != nil {
			return *x.xxx_hidden_Phase
		}
		return ""
	}
	return ""
}

func (x *Application_Pod) GetReady() string {
	if x != nil {
		if x.xxx_hidden_Ready != nil {
			return *x.xxx_hidden_Ready
		}
		return ""
	}
	return ""
}

func (x *Application_Pod) GetRestarts() string {
	if x != nil {
		if x.xxx_hidden_Restarts != nil {
			return *x.xxx_hidden_Restarts
		}
		return ""
	}
	return ""
}

func (x *Application_Pod) GetLastCondition() *Application_Pod_Condition {
	if x != nil {
		return x.xxx_hidden_LastCondition
	}
	return nil
}

func (x *Application_Pod) SetName(v string) {
	x.xxx_hidden_Name = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 0, 5)
}

func (x *Application_Pod) SetPhase(v string) {
	x.xxx_hidden_Phase = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 1, 5)
}

func (x *Application_Pod) SetReady(v string) {
	x.xxx_hidden_Ready = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 2, 5)
}

func (x *Application_Pod) SetRestarts(v string) {
	x.xxx_hidden_Restarts = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 3, 5)
}

func (x *Application_Pod) SetLastCondition(v *Application_Pod_Condition) {
	x.xxx_hidden_LastCondition = v
}

func (x *Application_Pod) HasName() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 0)
}

func (x *Application_Pod) HasPhase() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 1)
}

func (x *Application_Pod) HasReady() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 2)
}

func (x *Application_Pod) HasRestarts() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 3)
}

func (x *Application_Pod) HasLastCondition() bool {
	if x == nil {
		return false
	}
	return x.xxx_hidden_LastCondition != nil
}

func (x *Application_Pod) ClearName() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 0)
	x.xxx_hidden_Name = nil
}

func (x *Application_Pod) ClearPhase() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 1)
	x.xxx_hidden_Phase = nil
}

func (x *Application_Pod) ClearReady() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 2)
	x.xxx_hidden_Ready = nil
}

func (x *Application_Pod) ClearRestarts() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 3)
	x.xxx_hidden_Restarts = nil
}

func (x *Application_Pod) ClearLastCondition() {
	x.xxx_hidden_LastCondition = nil
}

type Application_Pod_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	Name          *string
	Phase         *string
	Ready         *string
	Restarts      *string
	LastCondition *Application_Pod_Condition
}

func (b0 Application_Pod_builder) Build() *Application_Pod {
	m0 := &Application_Pod{}
	b, x := &b0, m0
	_, _ = b, x
	if b.Name != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 0, 5)
		x.xxx_hidden_Name = b.Name
	}
	if b.Phase != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 1, 5)
		x.xxx_hidden_Phase = b.Phase
	}
	if b.Ready != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 2, 5)
		x.xxx_hidden_Ready = b.Ready
	}
	if b.Restarts != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 3, 5)
		x.xxx_hidden_Restarts = b.Restarts
	}
	x.xxx_hidden_LastCondition = b.LastCondition
	return m0
}

type Application_PersistentVolumeClaim struct {
	state                   protoimpl.MessageState    `protogen:"opaque.v1"`
	xxx_hidden_Name         *string                   `protobuf:"bytes,1,opt,name=name"`
	xxx_hidden_Status       *string                   `protobuf:"bytes,2,opt,name=status"`
	xxx_hidden_AccessModes  []string                  `protobuf:"bytes,3,rep,name=access_modes,json=accessModes"`
	xxx_hidden_Capacity     *string                   `protobuf:"bytes,4,opt,name=capacity"`
	xxx_hidden_StorageClass *Application_StorageClass `protobuf:"bytes,11,opt,name=storage_class,json=storageClass"`
	XXX_raceDetectHookData  protoimpl.RaceDetectHookData
	XXX_presence            [1]uint32
	unknownFields           protoimpl.UnknownFields
	sizeCache               protoimpl.SizeCache
}

func (x *Application_PersistentVolumeClaim) Reset() {
	*x = Application_PersistentVolumeClaim{}
	mi := &file_api_kube_v1_kube_proto_msgTypes[22]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Application_PersistentVolumeClaim) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Application_PersistentVolumeClaim) ProtoMessage() {}

func (x *Application_PersistentVolumeClaim) ProtoReflect() protoreflect.Message {
	mi := &file_api_kube_v1_kube_proto_msgTypes[22]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *Application_PersistentVolumeClaim) GetName() string {
	if x != nil {
		if x.xxx_hidden_Name != nil {
			return *x.xxx_hidden_Name
		}
		return ""
	}
	return ""
}

func (x *Application_PersistentVolumeClaim) GetStatus() string {
	if x != nil {
		if x.xxx_hidden_Status != nil {
			return *x.xxx_hidden_Status
		}
		return ""
	}
	return ""
}

func (x *Application_PersistentVolumeClaim) GetAccessModes() []string {
	if x != nil {
		return x.xxx_hidden_AccessModes
	}
	return nil
}

func (x *Application_PersistentVolumeClaim) GetCapacity() string {
	if x != nil {
		if x.xxx_hidden_Capacity != nil {
			return *x.xxx_hidden_Capacity
		}
		return ""
	}
	return ""
}

func (x *Application_PersistentVolumeClaim) GetStorageClass() *Application_StorageClass {
	if x != nil {
		return x.xxx_hidden_StorageClass
	}
	return nil
}

func (x *Application_PersistentVolumeClaim) SetName(v string) {
	x.xxx_hidden_Name = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 0, 5)
}

func (x *Application_PersistentVolumeClaim) SetStatus(v string) {
	x.xxx_hidden_Status = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 1, 5)
}

func (x *Application_PersistentVolumeClaim) SetAccessModes(v []string) {
	x.xxx_hidden_AccessModes = v
}

func (x *Application_PersistentVolumeClaim) SetCapacity(v string) {
	x.xxx_hidden_Capacity = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 3, 5)
}

func (x *Application_PersistentVolumeClaim) SetStorageClass(v *Application_StorageClass) {
	x.xxx_hidden_StorageClass = v
}

func (x *Application_PersistentVolumeClaim) HasName() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 0)
}

func (x *Application_PersistentVolumeClaim) HasStatus() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 1)
}

func (x *Application_PersistentVolumeClaim) HasCapacity() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 3)
}

func (x *Application_PersistentVolumeClaim) HasStorageClass() bool {
	if x == nil {
		return false
	}
	return x.xxx_hidden_StorageClass != nil
}

func (x *Application_PersistentVolumeClaim) ClearName() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 0)
	x.xxx_hidden_Name = nil
}

func (x *Application_PersistentVolumeClaim) ClearStatus() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 1)
	x.xxx_hidden_Status = nil
}

func (x *Application_PersistentVolumeClaim) ClearCapacity() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 3)
	x.xxx_hidden_Capacity = nil
}

func (x *Application_PersistentVolumeClaim) ClearStorageClass() {
	x.xxx_hidden_StorageClass = nil
}

type Application_PersistentVolumeClaim_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	Name         *string
	Status       *string
	AccessModes  []string
	Capacity     *string
	StorageClass *Application_StorageClass
}

func (b0 Application_PersistentVolumeClaim_builder) Build() *Application_PersistentVolumeClaim {
	m0 := &Application_PersistentVolumeClaim{}
	b, x := &b0, m0
	_, _ = b, x
	if b.Name != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 0, 5)
		x.xxx_hidden_Name = b.Name
	}
	if b.Status != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 1, 5)
		x.xxx_hidden_Status = b.Status
	}
	x.xxx_hidden_AccessModes = b.AccessModes
	if b.Capacity != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 3, 5)
		x.xxx_hidden_Capacity = b.Capacity
	}
	x.xxx_hidden_StorageClass = b.StorageClass
	return m0
}

type Application_StorageClass struct {
	state                        protoimpl.MessageState `protogen:"opaque.v1"`
	xxx_hidden_Name              *string                `protobuf:"bytes,1,opt,name=name"`
	xxx_hidden_Provisioner       *string                `protobuf:"bytes,2,opt,name=provisioner"`
	xxx_hidden_ReclaimPolicy     *string                `protobuf:"bytes,3,opt,name=reclaim_policy,json=reclaimPolicy"`
	xxx_hidden_VolumeBindingMode *string                `protobuf:"bytes,4,opt,name=volume_binding_mode,json=volumeBindingMode"`
	xxx_hidden_Parameters        map[string]string      `protobuf:"bytes,5,rep,name=parameters" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	XXX_raceDetectHookData       protoimpl.RaceDetectHookData
	XXX_presence                 [1]uint32
	unknownFields                protoimpl.UnknownFields
	sizeCache                    protoimpl.SizeCache
}

func (x *Application_StorageClass) Reset() {
	*x = Application_StorageClass{}
	mi := &file_api_kube_v1_kube_proto_msgTypes[23]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Application_StorageClass) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Application_StorageClass) ProtoMessage() {}

func (x *Application_StorageClass) ProtoReflect() protoreflect.Message {
	mi := &file_api_kube_v1_kube_proto_msgTypes[23]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *Application_StorageClass) GetName() string {
	if x != nil {
		if x.xxx_hidden_Name != nil {
			return *x.xxx_hidden_Name
		}
		return ""
	}
	return ""
}

func (x *Application_StorageClass) GetProvisioner() string {
	if x != nil {
		if x.xxx_hidden_Provisioner != nil {
			return *x.xxx_hidden_Provisioner
		}
		return ""
	}
	return ""
}

func (x *Application_StorageClass) GetReclaimPolicy() string {
	if x != nil {
		if x.xxx_hidden_ReclaimPolicy != nil {
			return *x.xxx_hidden_ReclaimPolicy
		}
		return ""
	}
	return ""
}

func (x *Application_StorageClass) GetVolumeBindingMode() string {
	if x != nil {
		if x.xxx_hidden_VolumeBindingMode != nil {
			return *x.xxx_hidden_VolumeBindingMode
		}
		return ""
	}
	return ""
}

func (x *Application_StorageClass) GetParameters() map[string]string {
	if x != nil {
		return x.xxx_hidden_Parameters
	}
	return nil
}

func (x *Application_StorageClass) SetName(v string) {
	x.xxx_hidden_Name = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 0, 5)
}

func (x *Application_StorageClass) SetProvisioner(v string) {
	x.xxx_hidden_Provisioner = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 1, 5)
}

func (x *Application_StorageClass) SetReclaimPolicy(v string) {
	x.xxx_hidden_ReclaimPolicy = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 2, 5)
}

func (x *Application_StorageClass) SetVolumeBindingMode(v string) {
	x.xxx_hidden_VolumeBindingMode = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 3, 5)
}

func (x *Application_StorageClass) SetParameters(v map[string]string) {
	x.xxx_hidden_Parameters = v
}

func (x *Application_StorageClass) HasName() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 0)
}

func (x *Application_StorageClass) HasProvisioner() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 1)
}

func (x *Application_StorageClass) HasReclaimPolicy() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 2)
}

func (x *Application_StorageClass) HasVolumeBindingMode() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 3)
}

func (x *Application_StorageClass) ClearName() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 0)
	x.xxx_hidden_Name = nil
}

func (x *Application_StorageClass) ClearProvisioner() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 1)
	x.xxx_hidden_Provisioner = nil
}

func (x *Application_StorageClass) ClearReclaimPolicy() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 2)
	x.xxx_hidden_ReclaimPolicy = nil
}

func (x *Application_StorageClass) ClearVolumeBindingMode() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 3)
	x.xxx_hidden_VolumeBindingMode = nil
}

type Application_StorageClass_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	Name              *string
	Provisioner       *string
	ReclaimPolicy     *string
	VolumeBindingMode *string
	Parameters        map[string]string
}

func (b0 Application_StorageClass_builder) Build() *Application_StorageClass {
	m0 := &Application_StorageClass{}
	b, x := &b0, m0
	_, _ = b, x
	if b.Name != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 0, 5)
		x.xxx_hidden_Name = b.Name
	}
	if b.Provisioner != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 1, 5)
		x.xxx_hidden_Provisioner = b.Provisioner
	}
	if b.ReclaimPolicy != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 2, 5)
		x.xxx_hidden_ReclaimPolicy = b.ReclaimPolicy
	}
	if b.VolumeBindingMode != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 3, 5)
		x.xxx_hidden_VolumeBindingMode = b.VolumeBindingMode
	}
	x.xxx_hidden_Parameters = b.Parameters
	return m0
}

type Application_Container struct {
	state                      protoimpl.MessageState `protogen:"opaque.v1"`
	xxx_hidden_ImageName       *string                `protobuf:"bytes,1,opt,name=image_name,json=imageName"`
	xxx_hidden_ImagePullPolicy *string                `protobuf:"bytes,2,opt,name=image_pull_policy,json=imagePullPolicy"`
	XXX_raceDetectHookData     protoimpl.RaceDetectHookData
	XXX_presence               [1]uint32
	unknownFields              protoimpl.UnknownFields
	sizeCache                  protoimpl.SizeCache
}

func (x *Application_Container) Reset() {
	*x = Application_Container{}
	mi := &file_api_kube_v1_kube_proto_msgTypes[24]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Application_Container) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Application_Container) ProtoMessage() {}

func (x *Application_Container) ProtoReflect() protoreflect.Message {
	mi := &file_api_kube_v1_kube_proto_msgTypes[24]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *Application_Container) GetImageName() string {
	if x != nil {
		if x.xxx_hidden_ImageName != nil {
			return *x.xxx_hidden_ImageName
		}
		return ""
	}
	return ""
}

func (x *Application_Container) GetImagePullPolicy() string {
	if x != nil {
		if x.xxx_hidden_ImagePullPolicy != nil {
			return *x.xxx_hidden_ImagePullPolicy
		}
		return ""
	}
	return ""
}

func (x *Application_Container) SetImageName(v string) {
	x.xxx_hidden_ImageName = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 0, 2)
}

func (x *Application_Container) SetImagePullPolicy(v string) {
	x.xxx_hidden_ImagePullPolicy = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 1, 2)
}

func (x *Application_Container) HasImageName() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 0)
}

func (x *Application_Container) HasImagePullPolicy() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 1)
}

func (x *Application_Container) ClearImageName() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 0)
	x.xxx_hidden_ImageName = nil
}

func (x *Application_Container) ClearImagePullPolicy() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 1)
	x.xxx_hidden_ImagePullPolicy = nil
}

type Application_Container_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	ImageName       *string
	ImagePullPolicy *string
}

func (b0 Application_Container_builder) Build() *Application_Container {
	m0 := &Application_Container{}
	b, x := &b0, m0
	_, _ = b, x
	if b.ImageName != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 0, 2)
		x.xxx_hidden_ImageName = b.ImageName
	}
	if b.ImagePullPolicy != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 1, 2)
		x.xxx_hidden_ImagePullPolicy = b.ImagePullPolicy
	}
	return m0
}

type Application_Service_Port struct {
	state                  protoimpl.MessageState `protogen:"opaque.v1"`
	xxx_hidden_Port        int32                  `protobuf:"varint,1,opt,name=port"`
	xxx_hidden_NodePort    int32                  `protobuf:"varint,2,opt,name=node_port,json=nodePort"`
	xxx_hidden_Protocol    *string                `protobuf:"bytes,3,opt,name=protocol"`
	xxx_hidden_TargetPort  *string                `protobuf:"bytes,11,opt,name=target_port,json=targetPort"`
	XXX_raceDetectHookData protoimpl.RaceDetectHookData
	XXX_presence           [1]uint32
	unknownFields          protoimpl.UnknownFields
	sizeCache              protoimpl.SizeCache
}

func (x *Application_Service_Port) Reset() {
	*x = Application_Service_Port{}
	mi := &file_api_kube_v1_kube_proto_msgTypes[26]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Application_Service_Port) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Application_Service_Port) ProtoMessage() {}

func (x *Application_Service_Port) ProtoReflect() protoreflect.Message {
	mi := &file_api_kube_v1_kube_proto_msgTypes[26]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *Application_Service_Port) GetPort() int32 {
	if x != nil {
		return x.xxx_hidden_Port
	}
	return 0
}

func (x *Application_Service_Port) GetNodePort() int32 {
	if x != nil {
		return x.xxx_hidden_NodePort
	}
	return 0
}

func (x *Application_Service_Port) GetProtocol() string {
	if x != nil {
		if x.xxx_hidden_Protocol != nil {
			return *x.xxx_hidden_Protocol
		}
		return ""
	}
	return ""
}

func (x *Application_Service_Port) GetTargetPort() string {
	if x != nil {
		if x.xxx_hidden_TargetPort != nil {
			return *x.xxx_hidden_TargetPort
		}
		return ""
	}
	return ""
}

func (x *Application_Service_Port) SetPort(v int32) {
	x.xxx_hidden_Port = v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 0, 4)
}

func (x *Application_Service_Port) SetNodePort(v int32) {
	x.xxx_hidden_NodePort = v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 1, 4)
}

func (x *Application_Service_Port) SetProtocol(v string) {
	x.xxx_hidden_Protocol = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 2, 4)
}

func (x *Application_Service_Port) SetTargetPort(v string) {
	x.xxx_hidden_TargetPort = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 3, 4)
}

func (x *Application_Service_Port) HasPort() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 0)
}

func (x *Application_Service_Port) HasNodePort() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 1)
}

func (x *Application_Service_Port) HasProtocol() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 2)
}

func (x *Application_Service_Port) HasTargetPort() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 3)
}

func (x *Application_Service_Port) ClearPort() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 0)
	x.xxx_hidden_Port = 0
}

func (x *Application_Service_Port) ClearNodePort() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 1)
	x.xxx_hidden_NodePort = 0
}

func (x *Application_Service_Port) ClearProtocol() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 2)
	x.xxx_hidden_Protocol = nil
}

func (x *Application_Service_Port) ClearTargetPort() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 3)
	x.xxx_hidden_TargetPort = nil
}

type Application_Service_Port_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	Port       *int32
	NodePort   *int32
	Protocol   *string
	TargetPort *string
}

func (b0 Application_Service_Port_builder) Build() *Application_Service_Port {
	m0 := &Application_Service_Port{}
	b, x := &b0, m0
	_, _ = b, x
	if b.Port != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 0, 4)
		x.xxx_hidden_Port = *b.Port
	}
	if b.NodePort != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 1, 4)
		x.xxx_hidden_NodePort = *b.NodePort
	}
	if b.Protocol != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 2, 4)
		x.xxx_hidden_Protocol = b.Protocol
	}
	if b.TargetPort != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 3, 4)
		x.xxx_hidden_TargetPort = b.TargetPort
	}
	return m0
}

type Application_Pod_Condition struct {
	state                     protoimpl.MessageState `protogen:"opaque.v1"`
	xxx_hidden_Type           *string                `protobuf:"bytes,1,opt,name=type"`
	xxx_hidden_Status         *string                `protobuf:"bytes,2,opt,name=status"`
	xxx_hidden_ProbedAt       *timestamppb.Timestamp `protobuf:"bytes,3,opt,name=probed_at,json=probedAt"`
	xxx_hidden_TransitionedAt *timestamppb.Timestamp `protobuf:"bytes,4,opt,name=transitioned_at,json=transitionedAt"`
	xxx_hidden_Reason         *string                `protobuf:"bytes,5,opt,name=reason"`
	xxx_hidden_Message        *string                `protobuf:"bytes,6,opt,name=message"`
	XXX_raceDetectHookData    protoimpl.RaceDetectHookData
	XXX_presence              [1]uint32
	unknownFields             protoimpl.UnknownFields
	sizeCache                 protoimpl.SizeCache
}

func (x *Application_Pod_Condition) Reset() {
	*x = Application_Pod_Condition{}
	mi := &file_api_kube_v1_kube_proto_msgTypes[27]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Application_Pod_Condition) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Application_Pod_Condition) ProtoMessage() {}

func (x *Application_Pod_Condition) ProtoReflect() protoreflect.Message {
	mi := &file_api_kube_v1_kube_proto_msgTypes[27]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *Application_Pod_Condition) GetType() string {
	if x != nil {
		if x.xxx_hidden_Type != nil {
			return *x.xxx_hidden_Type
		}
		return ""
	}
	return ""
}

func (x *Application_Pod_Condition) GetStatus() string {
	if x != nil {
		if x.xxx_hidden_Status != nil {
			return *x.xxx_hidden_Status
		}
		return ""
	}
	return ""
}

func (x *Application_Pod_Condition) GetProbedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.xxx_hidden_ProbedAt
	}
	return nil
}

func (x *Application_Pod_Condition) GetTransitionedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.xxx_hidden_TransitionedAt
	}
	return nil
}

func (x *Application_Pod_Condition) GetReason() string {
	if x != nil {
		if x.xxx_hidden_Reason != nil {
			return *x.xxx_hidden_Reason
		}
		return ""
	}
	return ""
}

func (x *Application_Pod_Condition) GetMessage() string {
	if x != nil {
		if x.xxx_hidden_Message != nil {
			return *x.xxx_hidden_Message
		}
		return ""
	}
	return ""
}

func (x *Application_Pod_Condition) SetType(v string) {
	x.xxx_hidden_Type = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 0, 6)
}

func (x *Application_Pod_Condition) SetStatus(v string) {
	x.xxx_hidden_Status = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 1, 6)
}

func (x *Application_Pod_Condition) SetProbedAt(v *timestamppb.Timestamp) {
	x.xxx_hidden_ProbedAt = v
}

func (x *Application_Pod_Condition) SetTransitionedAt(v *timestamppb.Timestamp) {
	x.xxx_hidden_TransitionedAt = v
}

func (x *Application_Pod_Condition) SetReason(v string) {
	x.xxx_hidden_Reason = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 4, 6)
}

func (x *Application_Pod_Condition) SetMessage(v string) {
	x.xxx_hidden_Message = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 5, 6)
}

func (x *Application_Pod_Condition) HasType() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 0)
}

func (x *Application_Pod_Condition) HasStatus() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 1)
}

func (x *Application_Pod_Condition) HasProbedAt() bool {
	if x == nil {
		return false
	}
	return x.xxx_hidden_ProbedAt != nil
}

func (x *Application_Pod_Condition) HasTransitionedAt() bool {
	if x == nil {
		return false
	}
	return x.xxx_hidden_TransitionedAt != nil
}

func (x *Application_Pod_Condition) HasReason() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 4)
}

func (x *Application_Pod_Condition) HasMessage() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 5)
}

func (x *Application_Pod_Condition) ClearType() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 0)
	x.xxx_hidden_Type = nil
}

func (x *Application_Pod_Condition) ClearStatus() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 1)
	x.xxx_hidden_Status = nil
}

func (x *Application_Pod_Condition) ClearProbedAt() {
	x.xxx_hidden_ProbedAt = nil
}

func (x *Application_Pod_Condition) ClearTransitionedAt() {
	x.xxx_hidden_TransitionedAt = nil
}

func (x *Application_Pod_Condition) ClearReason() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 4)
	x.xxx_hidden_Reason = nil
}

func (x *Application_Pod_Condition) ClearMessage() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 5)
	x.xxx_hidden_Message = nil
}

type Application_Pod_Condition_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	Type           *string
	Status         *string
	ProbedAt       *timestamppb.Timestamp
	TransitionedAt *timestamppb.Timestamp
	Reason         *string
	Message        *string
}

func (b0 Application_Pod_Condition_builder) Build() *Application_Pod_Condition {
	m0 := &Application_Pod_Condition{}
	b, x := &b0, m0
	_, _ = b, x
	if b.Type != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 0, 6)
		x.xxx_hidden_Type = b.Type
	}
	if b.Status != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 1, 6)
		x.xxx_hidden_Status = b.Status
	}
	x.xxx_hidden_ProbedAt = b.ProbedAt
	x.xxx_hidden_TransitionedAt = b.TransitionedAt
	if b.Reason != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 4, 6)
		x.xxx_hidden_Reason = b.Reason
	}
	if b.Message != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 5, 6)
		x.xxx_hidden_Message = b.Message
	}
	return m0
}

var File_api_kube_v1_kube_proto protoreflect.FileDescriptor

var file_api_kube_v1_kube_proto_rawDesc = string([]byte{
	0x0a, 0x16, 0x61, 0x70, 0x69, 0x2f, 0x6b, 0x75, 0x62, 0x65, 0x2f, 0x76, 0x31, 0x2f, 0x6b, 0x75,
	0x62, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x0f, 0x6f, 0x70, 0x65, 0x6e, 0x68, 0x64,
	0x63, 0x2e, 0x6b, 0x75, 0x62, 0x65, 0x2e, 0x76, 0x31, 0x1a, 0x1b, 0x67, 0x6f, 0x6f, 0x67, 0x6c,
	0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x65, 0x6d, 0x70, 0x74, 0x79,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1f, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d,
	0x70, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x91, 0x02, 0x0a, 0x07, 0x52, 0x65, 0x6c, 0x65,
	0x61, 0x73, 0x65, 0x12, 0x1d, 0x0a, 0x0a, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x5f, 0x6e, 0x61, 0x6d,
	0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x4e, 0x61,
	0x6d, 0x65, 0x12, 0x1d, 0x0a, 0x0a, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x5f, 0x75, 0x75, 0x69, 0x64,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x55, 0x75, 0x69,
	0x64, 0x12, 0x21, 0x0a, 0x0c, 0x63, 0x6c, 0x75, 0x73, 0x74, 0x65, 0x72, 0x5f, 0x6e, 0x61, 0x6d,
	0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x63, 0x6c, 0x75, 0x73, 0x74, 0x65, 0x72,
	0x4e, 0x61, 0x6d, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x6e, 0x61, 0x6d, 0x65, 0x73, 0x70, 0x61, 0x63,
	0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x6e, 0x61, 0x6d, 0x65, 0x73, 0x70, 0x61,
	0x63, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x72, 0x65, 0x76, 0x69, 0x73, 0x69,
	0x6f, 0x6e, 0x18, 0x06, 0x20, 0x01, 0x28, 0x05, 0x52, 0x08, 0x72, 0x65, 0x76, 0x69, 0x73, 0x69,
	0x6f, 0x6e, 0x12, 0x1d, 0x0a, 0x0a, 0x63, 0x68, 0x61, 0x72, 0x74, 0x5f, 0x6e, 0x61, 0x6d, 0x65,
	0x18, 0x0b, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x63, 0x68, 0x61, 0x72, 0x74, 0x4e, 0x61, 0x6d,
	0x65, 0x12, 0x38, 0x0a, 0x07, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x0c, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x1e, 0x2e, 0x6f, 0x70, 0x65, 0x6e, 0x68, 0x64, 0x63, 0x2e, 0x6b, 0x75, 0x62,
	0x65, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x68, 0x61, 0x72, 0x74, 0x2e, 0x56, 0x65, 0x72, 0x73, 0x69,
	0x6f, 0x6e, 0x52, 0x07, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x22, 0xb9, 0x05, 0x0a, 0x05,
	0x43, 0x68, 0x61, 0x72, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x69, 0x63, 0x6f,
	0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x69, 0x63, 0x6f, 0x6e, 0x12, 0x20, 0x0a,
	0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x12,
	0x1e, 0x0a, 0x0a, 0x64, 0x65, 0x70, 0x72, 0x65, 0x63, 0x61, 0x74, 0x65, 0x64, 0x18, 0x04, 0x20,
	0x01, 0x28, 0x08, 0x52, 0x0a, 0x64, 0x65, 0x70, 0x72, 0x65, 0x63, 0x61, 0x74, 0x65, 0x64, 0x12,
	0x12, 0x0a, 0x04, 0x74, 0x61, 0x67, 0x73, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x74,
	0x61, 0x67, 0x73, 0x12, 0x1a, 0x0a, 0x08, 0x6b, 0x65, 0x79, 0x77, 0x6f, 0x72, 0x64, 0x73, 0x18,
	0x06, 0x20, 0x03, 0x28, 0x09, 0x52, 0x08, 0x6b, 0x65, 0x79, 0x77, 0x6f, 0x72, 0x64, 0x73, 0x12,
	0x12, 0x0a, 0x04, 0x68, 0x6f, 0x6d, 0x65, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x68,
	0x6f, 0x6d, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x73, 0x18, 0x0c,
	0x20, 0x03, 0x28, 0x09, 0x52, 0x07, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x73, 0x12, 0x43, 0x0a,
	0x0b, 0x6d, 0x61, 0x69, 0x6e, 0x74, 0x61, 0x69, 0x6e, 0x65, 0x72, 0x73, 0x18, 0x15, 0x20, 0x03,
	0x28, 0x0b, 0x32, 0x21, 0x2e, 0x6f, 0x70, 0x65, 0x6e, 0x68, 0x64, 0x63, 0x2e, 0x6b, 0x75, 0x62,
	0x65, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x68, 0x61, 0x72, 0x74, 0x2e, 0x4d, 0x61, 0x69, 0x6e, 0x74,
	0x61, 0x69, 0x6e, 0x65, 0x72, 0x52, 0x0b, 0x6d, 0x61, 0x69, 0x6e, 0x74, 0x61, 0x69, 0x6e, 0x65,
	0x72, 0x73, 0x12, 0x45, 0x0a, 0x0c, 0x64, 0x65, 0x70, 0x65, 0x6e, 0x64, 0x65, 0x6e, 0x63, 0x69,
	0x65, 0x73, 0x18, 0x1f, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x21, 0x2e, 0x6f, 0x70, 0x65, 0x6e, 0x68,
	0x64, 0x63, 0x2e, 0x6b, 0x75, 0x62, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x68, 0x61, 0x72, 0x74,
	0x2e, 0x44, 0x65, 0x70, 0x65, 0x6e, 0x64, 0x65, 0x6e, 0x63, 0x79, 0x52, 0x0c, 0x64, 0x65, 0x70,
	0x65, 0x6e, 0x64, 0x65, 0x6e, 0x63, 0x69, 0x65, 0x73, 0x12, 0x3a, 0x0a, 0x08, 0x76, 0x65, 0x72,
	0x73, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0x29, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1e, 0x2e, 0x6f, 0x70,
	0x65, 0x6e, 0x68, 0x64, 0x63, 0x2e, 0x6b, 0x75, 0x62, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x68,
	0x61, 0x72, 0x74, 0x2e, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x52, 0x08, 0x76, 0x65, 0x72,
	0x73, 0x69, 0x6f, 0x6e, 0x73, 0x1a, 0x48, 0x0a, 0x0a, 0x4d, 0x61, 0x69, 0x6e, 0x74, 0x61, 0x69,
	0x6e, 0x65, 0x72, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x65, 0x6d, 0x61, 0x69, 0x6c,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x65, 0x6d, 0x61, 0x69, 0x6c, 0x12, 0x10, 0x0a,
	0x03, 0x75, 0x72, 0x6c, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x75, 0x72, 0x6c, 0x1a,
	0x58, 0x0a, 0x0a, 0x44, 0x65, 0x70, 0x65, 0x6e, 0x64, 0x65, 0x6e, 0x63, 0x79, 0x12, 0x12, 0x0a,
	0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d,
	0x65, 0x12, 0x18, 0x0a, 0x07, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x07, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x1c, 0x0a, 0x09, 0x63,
	0x6f, 0x6e, 0x64, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09,
	0x63, 0x6f, 0x6e, 0x64, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x1a, 0x7c, 0x0a, 0x07, 0x56, 0x65, 0x72,
	0x73, 0x69, 0x6f, 0x6e, 0x12, 0x23, 0x0a, 0x0d, 0x63, 0x68, 0x61, 0x72, 0x74, 0x5f, 0x76, 0x65,
	0x72, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x63, 0x68, 0x61,
	0x72, 0x74, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x2f, 0x0a, 0x13, 0x61, 0x70, 0x70,
	0x6c, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x12, 0x61, 0x70, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x1b, 0x0a, 0x09, 0x63, 0x68,
	0x61, 0x72, 0x74, 0x5f, 0x72, 0x65, 0x66, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x63,
	0x68, 0x61, 0x72, 0x74, 0x52, 0x65, 0x66, 0x22, 0xc6, 0x0e, 0x0a, 0x0b, 0x41, 0x70, 0x70, 0x6c,
	0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x6e,
	0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12,
	0x1c, 0x0a, 0x09, 0x6e, 0x61, 0x6d, 0x65, 0x73, 0x70, 0x61, 0x63, 0x65, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x09, 0x6e, 0x61, 0x6d, 0x65, 0x73, 0x70, 0x61, 0x63, 0x65, 0x12, 0x40, 0x0a,
	0x06, 0x6c, 0x61, 0x62, 0x65, 0x6c, 0x73, 0x18, 0x04, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x28, 0x2e,
	0x6f, 0x70, 0x65, 0x6e, 0x68, 0x64, 0x63, 0x2e, 0x6b, 0x75, 0x62, 0x65, 0x2e, 0x76, 0x31, 0x2e,
	0x41, 0x70, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x4c, 0x61, 0x62, 0x65,
	0x6c, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x06, 0x6c, 0x61, 0x62, 0x65, 0x6c, 0x73, 0x12,
	0x1a, 0x0a, 0x08, 0x72, 0x65, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x73, 0x18, 0x05, 0x20, 0x01, 0x28,
	0x05, 0x52, 0x08, 0x72, 0x65, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x73, 0x12, 0x1c, 0x0a, 0x09, 0x68,
	0x65, 0x61, 0x6c, 0x74, 0x68, 0x69, 0x65, 0x73, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x05, 0x52, 0x09,
	0x68, 0x65, 0x61, 0x6c, 0x74, 0x68, 0x69, 0x65, 0x73, 0x12, 0x46, 0x0a, 0x0a, 0x63, 0x6f, 0x6e,
	0x74, 0x61, 0x69, 0x6e, 0x65, 0x72, 0x73, 0x18, 0x65, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x26, 0x2e,
	0x6f, 0x70, 0x65, 0x6e, 0x68, 0x64, 0x63, 0x2e, 0x6b, 0x75, 0x62, 0x65, 0x2e, 0x76, 0x31, 0x2e,
	0x41, 0x70, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x43, 0x6f, 0x6e, 0x74,
	0x61, 0x69, 0x6e, 0x65, 0x72, 0x52, 0x0a, 0x63, 0x6f, 0x6e, 0x74, 0x61, 0x69, 0x6e, 0x65, 0x72,
	0x73, 0x12, 0x6c, 0x0a, 0x18, 0x70, 0x65, 0x72, 0x73, 0x69, 0x73, 0x74, 0x65, 0x6e, 0x74, 0x5f,
	0x76, 0x6f, 0x6c, 0x75, 0x6d, 0x65, 0x5f, 0x63, 0x6c, 0x61, 0x69, 0x6d, 0x73, 0x18, 0x66, 0x20,
	0x03, 0x28, 0x0b, 0x32, 0x32, 0x2e, 0x6f, 0x70, 0x65, 0x6e, 0x68, 0x64, 0x63, 0x2e, 0x6b, 0x75,
	0x62, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x41, 0x70, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x2e, 0x50, 0x65, 0x72, 0x73, 0x69, 0x73, 0x74, 0x65, 0x6e, 0x74, 0x56, 0x6f, 0x6c, 0x75,
	0x6d, 0x65, 0x43, 0x6c, 0x61, 0x69, 0x6d, 0x52, 0x16, 0x70, 0x65, 0x72, 0x73, 0x69, 0x73, 0x74,
	0x65, 0x6e, 0x74, 0x56, 0x6f, 0x6c, 0x75, 0x6d, 0x65, 0x43, 0x6c, 0x61, 0x69, 0x6d, 0x73, 0x12,
	0x34, 0x0a, 0x04, 0x70, 0x6f, 0x64, 0x73, 0x18, 0x67, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x20, 0x2e,
	0x6f, 0x70, 0x65, 0x6e, 0x68, 0x64, 0x63, 0x2e, 0x6b, 0x75, 0x62, 0x65, 0x2e, 0x76, 0x31, 0x2e,
	0x41, 0x70, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x50, 0x6f, 0x64, 0x52,
	0x04, 0x70, 0x6f, 0x64, 0x73, 0x12, 0x3e, 0x0a, 0x07, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65,
	0x18, 0x68, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x24, 0x2e, 0x6f, 0x70, 0x65, 0x6e, 0x68, 0x64, 0x63,
	0x2e, 0x6b, 0x75, 0x62, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x41, 0x70, 0x70, 0x6c, 0x69, 0x63, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x52, 0x07, 0x73, 0x65,
	0x72, 0x76, 0x69, 0x63, 0x65, 0x1a, 0x87, 0x02, 0x0a, 0x07, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63,
	0x65, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x12, 0x1d, 0x0a, 0x0a, 0x63, 0x6c, 0x75,
	0x73, 0x74, 0x65, 0x72, 0x5f, 0x69, 0x70, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x63,
	0x6c, 0x75, 0x73, 0x74, 0x65, 0x72, 0x49, 0x70, 0x12, 0x3f, 0x0a, 0x05, 0x70, 0x6f, 0x72, 0x74,
	0x73, 0x18, 0x0b, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x29, 0x2e, 0x6f, 0x70, 0x65, 0x6e, 0x68, 0x64,
	0x63, 0x2e, 0x6b, 0x75, 0x62, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x41, 0x70, 0x70, 0x6c, 0x69, 0x63,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x50, 0x6f,
	0x72, 0x74, 0x52, 0x05, 0x70, 0x6f, 0x72, 0x74, 0x73, 0x1a, 0x74, 0x0a, 0x04, 0x50, 0x6f, 0x72,
	0x74, 0x12, 0x12, 0x0a, 0x04, 0x70, 0x6f, 0x72, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x04, 0x70, 0x6f, 0x72, 0x74, 0x12, 0x1b, 0x0a, 0x09, 0x6e, 0x6f, 0x64, 0x65, 0x5f, 0x70, 0x6f,
	0x72, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x08, 0x6e, 0x6f, 0x64, 0x65, 0x50, 0x6f,
	0x72, 0x74, 0x12, 0x1a, 0x0a, 0x08, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x12, 0x1f,
	0x0a, 0x0b, 0x74, 0x61, 0x72, 0x67, 0x65, 0x74, 0x5f, 0x70, 0x6f, 0x72, 0x74, 0x18, 0x0b, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0a, 0x74, 0x61, 0x72, 0x67, 0x65, 0x74, 0x50, 0x6f, 0x72, 0x74, 0x1a,
	0x9e, 0x03, 0x0a, 0x03, 0x50, 0x6f, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x70,
	0x68, 0x61, 0x73, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x70, 0x68, 0x61, 0x73,
	0x65, 0x12, 0x14, 0x0a, 0x05, 0x72, 0x65, 0x61, 0x64, 0x79, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x05, 0x72, 0x65, 0x61, 0x64, 0x79, 0x12, 0x1a, 0x0a, 0x08, 0x72, 0x65, 0x73, 0x74, 0x61,
	0x72, 0x74, 0x73, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x72, 0x65, 0x73, 0x74, 0x61,
	0x72, 0x74, 0x73, 0x12, 0x51, 0x0a, 0x0e, 0x6c, 0x61, 0x73, 0x74, 0x5f, 0x63, 0x6f, 0x6e, 0x64,
	0x69, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2a, 0x2e, 0x6f, 0x70,
	0x65, 0x6e, 0x68, 0x64, 0x63, 0x2e, 0x6b, 0x75, 0x62, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x41, 0x70,
	0x70, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x50, 0x6f, 0x64, 0x2e, 0x43, 0x6f,
	0x6e, 0x64, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x0d, 0x6c, 0x61, 0x73, 0x74, 0x43, 0x6f, 0x6e,
	0x64, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x1a, 0xe7, 0x01, 0x0a, 0x09, 0x43, 0x6f, 0x6e, 0x64, 0x69,
	0x74, 0x69, 0x6f, 0x6e, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74,
	0x75, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73,
	0x12, 0x37, 0x0a, 0x09, 0x70, 0x72, 0x6f, 0x62, 0x65, 0x64, 0x5f, 0x61, 0x74, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52,
	0x08, 0x70, 0x72, 0x6f, 0x62, 0x65, 0x64, 0x41, 0x74, 0x12, 0x43, 0x0a, 0x0f, 0x74, 0x72, 0x61,
	0x6e, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x65, 0x64, 0x5f, 0x61, 0x74, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x0e,
	0x74, 0x72, 0x61, 0x6e, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x65, 0x64, 0x41, 0x74, 0x12, 0x16,
	0x0a, 0x06, 0x72, 0x65, 0x61, 0x73, 0x6f, 0x6e, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06,
	0x72, 0x65, 0x61, 0x73, 0x6f, 0x6e, 0x12, 0x18, 0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67,
	0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65,
	0x1a, 0xd2, 0x01, 0x0a, 0x15, 0x50, 0x65, 0x72, 0x73, 0x69, 0x73, 0x74, 0x65, 0x6e, 0x74, 0x56,
	0x6f, 0x6c, 0x75, 0x6d, 0x65, 0x43, 0x6c, 0x61, 0x69, 0x6d, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61,
	0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x16,
	0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06,
	0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x21, 0x0a, 0x0c, 0x61, 0x63, 0x63, 0x65, 0x73, 0x73,
	0x5f, 0x6d, 0x6f, 0x64, 0x65, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x09, 0x52, 0x0b, 0x61, 0x63,
	0x63, 0x65, 0x73, 0x73, 0x4d, 0x6f, 0x64, 0x65, 0x73, 0x12, 0x1a, 0x0a, 0x08, 0x63, 0x61, 0x70,
	0x61, 0x63, 0x69, 0x74, 0x79, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x63, 0x61, 0x70,
	0x61, 0x63, 0x69, 0x74, 0x79, 0x12, 0x4e, 0x0a, 0x0d, 0x73, 0x74, 0x6f, 0x72, 0x61, 0x67, 0x65,
	0x5f, 0x63, 0x6c, 0x61, 0x73, 0x73, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x29, 0x2e, 0x6f,
	0x70, 0x65, 0x6e, 0x68, 0x64, 0x63, 0x2e, 0x6b, 0x75, 0x62, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x41,
	0x70, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x53, 0x74, 0x6f, 0x72, 0x61,
	0x67, 0x65, 0x43, 0x6c, 0x61, 0x73, 0x73, 0x52, 0x0c, 0x73, 0x74, 0x6f, 0x72, 0x61, 0x67, 0x65,
	0x43, 0x6c, 0x61, 0x73, 0x73, 0x1a, 0xb5, 0x02, 0x0a, 0x0c, 0x53, 0x74, 0x6f, 0x72, 0x61, 0x67,
	0x65, 0x43, 0x6c, 0x61, 0x73, 0x73, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x20, 0x0a, 0x0b, 0x70, 0x72,
	0x6f, 0x76, 0x69, 0x73, 0x69, 0x6f, 0x6e, 0x65, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0b, 0x70, 0x72, 0x6f, 0x76, 0x69, 0x73, 0x69, 0x6f, 0x6e, 0x65, 0x72, 0x12, 0x25, 0x0a, 0x0e,
	0x72, 0x65, 0x63, 0x6c, 0x61, 0x69, 0x6d, 0x5f, 0x70, 0x6f, 0x6c, 0x69, 0x63, 0x79, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x72, 0x65, 0x63, 0x6c, 0x61, 0x69, 0x6d, 0x50, 0x6f, 0x6c,
	0x69, 0x63, 0x79, 0x12, 0x2e, 0x0a, 0x13, 0x76, 0x6f, 0x6c, 0x75, 0x6d, 0x65, 0x5f, 0x62, 0x69,
	0x6e, 0x64, 0x69, 0x6e, 0x67, 0x5f, 0x6d, 0x6f, 0x64, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x11, 0x76, 0x6f, 0x6c, 0x75, 0x6d, 0x65, 0x42, 0x69, 0x6e, 0x64, 0x69, 0x6e, 0x67, 0x4d,
	0x6f, 0x64, 0x65, 0x12, 0x59, 0x0a, 0x0a, 0x70, 0x61, 0x72, 0x61, 0x6d, 0x65, 0x74, 0x65, 0x72,
	0x73, 0x18, 0x05, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x39, 0x2e, 0x6f, 0x70, 0x65, 0x6e, 0x68, 0x64,
	0x63, 0x2e, 0x6b, 0x75, 0x62, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x41, 0x70, 0x70, 0x6c, 0x69, 0x63,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x53, 0x74, 0x6f, 0x72, 0x61, 0x67, 0x65, 0x43, 0x6c, 0x61,
	0x73, 0x73, 0x2e, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x65, 0x74, 0x65, 0x72, 0x73, 0x45, 0x6e, 0x74,
	0x72, 0x79, 0x52, 0x0a, 0x70, 0x61, 0x72, 0x61, 0x6d, 0x65, 0x74, 0x65, 0x72, 0x73, 0x1a, 0x3d,
	0x0a, 0x0f, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x65, 0x74, 0x65, 0x72, 0x73, 0x45, 0x6e, 0x74, 0x72,
	0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03,
	0x6b, 0x65, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x1a, 0x56, 0x0a,
	0x09, 0x43, 0x6f, 0x6e, 0x74, 0x61, 0x69, 0x6e, 0x65, 0x72, 0x12, 0x1d, 0x0a, 0x0a, 0x69, 0x6d,
	0x61, 0x67, 0x65, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09,
	0x69, 0x6d, 0x61, 0x67, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x2a, 0x0a, 0x11, 0x69, 0x6d, 0x61,
	0x67, 0x65, 0x5f, 0x70, 0x75, 0x6c, 0x6c, 0x5f, 0x70, 0x6f, 0x6c, 0x69, 0x63, 0x79, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0f, 0x69, 0x6d, 0x61, 0x67, 0x65, 0x50, 0x75, 0x6c, 0x6c, 0x50,
	0x6f, 0x6c, 0x69, 0x63, 0x79, 0x1a, 0x39, 0x0a, 0x0b, 0x4c, 0x61, 0x62, 0x65, 0x6c, 0x73, 0x45,
	0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01,
	0x22, 0x15, 0x0a, 0x13, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x6c, 0x65, 0x61, 0x73, 0x65, 0x73,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x22, 0x4c, 0x0a, 0x14, 0x4c, 0x69, 0x73, 0x74, 0x52,
	0x65, 0x6c, 0x65, 0x61, 0x73, 0x65, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12,
	0x34, 0x0a, 0x08, 0x72, 0x65, 0x6c, 0x65, 0x61, 0x73, 0x65, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28,
	0x0b, 0x32, 0x18, 0x2e, 0x6f, 0x70, 0x65, 0x6e, 0x68, 0x64, 0x63, 0x2e, 0x6b, 0x75, 0x62, 0x65,
	0x2e, 0x76, 0x31, 0x2e, 0x52, 0x65, 0x6c, 0x65, 0x61, 0x73, 0x65, 0x52, 0x08, 0x72, 0x65, 0x6c,
	0x65, 0x61, 0x73, 0x65, 0x73, 0x22, 0xe2, 0x01, 0x0a, 0x15, 0x49, 0x6e, 0x73, 0x74, 0x61, 0x6c,
	0x6c, 0x52, 0x65, 0x6c, 0x65, 0x61, 0x73, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12,
	0x1d, 0x0a, 0x0a, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x5f, 0x75, 0x75, 0x69, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x09, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x55, 0x75, 0x69, 0x64, 0x12, 0x21,
	0x0a, 0x0c, 0x63, 0x6c, 0x75, 0x73, 0x74, 0x65, 0x72, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x63, 0x6c, 0x75, 0x73, 0x74, 0x65, 0x72, 0x4e, 0x61, 0x6d,
	0x65, 0x12, 0x1c, 0x0a, 0x09, 0x6e, 0x61, 0x6d, 0x65, 0x73, 0x70, 0x61, 0x63, 0x65, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x6e, 0x61, 0x6d, 0x65, 0x73, 0x70, 0x61, 0x63, 0x65, 0x12,
	0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e,
	0x61, 0x6d, 0x65, 0x12, 0x17, 0x0a, 0x07, 0x64, 0x72, 0x79, 0x5f, 0x72, 0x75, 0x6e, 0x18, 0x05,
	0x20, 0x01, 0x28, 0x08, 0x52, 0x06, 0x64, 0x72, 0x79, 0x52, 0x75, 0x6e, 0x12, 0x1b, 0x0a, 0x09,
	0x63, 0x68, 0x61, 0x72, 0x74, 0x5f, 0x72, 0x65, 0x66, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x08, 0x63, 0x68, 0x61, 0x72, 0x74, 0x52, 0x65, 0x66, 0x12, 0x1f, 0x0a, 0x0b, 0x76, 0x61, 0x6c,
	0x75, 0x65, 0x73, 0x5f, 0x79, 0x61, 0x6d, 0x6c, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a,
	0x76, 0x61, 0x6c, 0x75, 0x65, 0x73, 0x59, 0x61, 0x6d, 0x6c, 0x22, 0xa6, 0x01, 0x0a, 0x17, 0x55,
	0x6e, 0x69, 0x6e, 0x73, 0x74, 0x61, 0x6c, 0x6c, 0x52, 0x65, 0x6c, 0x65, 0x61, 0x73, 0x65, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1d, 0x0a, 0x0a, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x5f,
	0x75, 0x75, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x6d, 0x6f, 0x64, 0x65,
	0x6c, 0x55, 0x75, 0x69, 0x64, 0x12, 0x21, 0x0a, 0x0c, 0x63, 0x6c, 0x75, 0x73, 0x74, 0x65, 0x72,
	0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x63, 0x6c, 0x75,
	0x73, 0x74, 0x65, 0x72, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x6e, 0x61, 0x6d, 0x65,
	0x73, 0x70, 0x61, 0x63, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x6e, 0x61, 0x6d,
	0x65, 0x73, 0x70, 0x61, 0x63, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x17, 0x0a, 0x07, 0x64, 0x72,
	0x79, 0x5f, 0x72, 0x75, 0x6e, 0x18, 0x05, 0x20, 0x01, 0x28, 0x08, 0x52, 0x06, 0x64, 0x72, 0x79,
	0x52, 0x75, 0x6e, 0x22, 0xe2, 0x01, 0x0a, 0x15, 0x55, 0x70, 0x67, 0x72, 0x61, 0x64, 0x65, 0x52,
	0x65, 0x6c, 0x65, 0x61, 0x73, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1d, 0x0a,
	0x0a, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x5f, 0x75, 0x75, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x09, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x55, 0x75, 0x69, 0x64, 0x12, 0x21, 0x0a, 0x0c,
	0x63, 0x6c, 0x75, 0x73, 0x74, 0x65, 0x72, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0b, 0x63, 0x6c, 0x75, 0x73, 0x74, 0x65, 0x72, 0x4e, 0x61, 0x6d, 0x65, 0x12,
	0x1c, 0x0a, 0x09, 0x6e, 0x61, 0x6d, 0x65, 0x73, 0x70, 0x61, 0x63, 0x65, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x09, 0x6e, 0x61, 0x6d, 0x65, 0x73, 0x70, 0x61, 0x63, 0x65, 0x12, 0x12, 0x0a,
	0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d,
	0x65, 0x12, 0x17, 0x0a, 0x07, 0x64, 0x72, 0x79, 0x5f, 0x72, 0x75, 0x6e, 0x18, 0x05, 0x20, 0x01,
	0x28, 0x08, 0x52, 0x06, 0x64, 0x72, 0x79, 0x52, 0x75, 0x6e, 0x12, 0x1b, 0x0a, 0x09, 0x63, 0x68,
	0x61, 0x72, 0x74, 0x5f, 0x72, 0x65, 0x66, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x63,
	0x68, 0x61, 0x72, 0x74, 0x52, 0x65, 0x66, 0x12, 0x1f, 0x0a, 0x0b, 0x76, 0x61, 0x6c, 0x75, 0x65,
	0x73, 0x5f, 0x79, 0x61, 0x6d, 0x6c, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x76, 0x61,
	0x6c, 0x75, 0x65, 0x73, 0x59, 0x61, 0x6d, 0x6c, 0x22, 0xa5, 0x01, 0x0a, 0x16, 0x52, 0x6f, 0x6c,
	0x6c, 0x62, 0x61, 0x63, 0x6b, 0x52, 0x65, 0x6c, 0x65, 0x61, 0x73, 0x65, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x12, 0x1d, 0x0a, 0x0a, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x5f, 0x75, 0x75, 0x69,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x55, 0x75,
	0x69, 0x64, 0x12, 0x21, 0x0a, 0x0c, 0x63, 0x6c, 0x75, 0x73, 0x74, 0x65, 0x72, 0x5f, 0x6e, 0x61,
	0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x63, 0x6c, 0x75, 0x73, 0x74, 0x65,
	0x72, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x6e, 0x61, 0x6d, 0x65, 0x73, 0x70, 0x61,
	0x63, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x6e, 0x61, 0x6d, 0x65, 0x73, 0x70,
	0x61, 0x63, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x17, 0x0a, 0x07, 0x64, 0x72, 0x79, 0x5f, 0x72,
	0x75, 0x6e, 0x18, 0x05, 0x20, 0x01, 0x28, 0x08, 0x52, 0x06, 0x64, 0x72, 0x79, 0x52, 0x75, 0x6e,
	0x22, 0x32, 0x0a, 0x13, 0x47, 0x65, 0x74, 0x43, 0x68, 0x61, 0x72, 0x74, 0x49, 0x6e, 0x66, 0x6f,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1b, 0x0a, 0x09, 0x63, 0x68, 0x61, 0x72, 0x74,
	0x5f, 0x72, 0x65, 0x66, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x63, 0x68, 0x61, 0x72,
	0x74, 0x52, 0x65, 0x66, 0x22, 0x46, 0x0a, 0x14, 0x47, 0x65, 0x74, 0x43, 0x68, 0x61, 0x72, 0x74,
	0x49, 0x6e, 0x66, 0x6f, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x16, 0x0a, 0x06,
	0x76, 0x61, 0x6c, 0x75, 0x65, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x76, 0x61,
	0x6c, 0x75, 0x65, 0x73, 0x12, 0x16, 0x0a, 0x06, 0x72, 0x65, 0x61, 0x64, 0x6d, 0x65, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x72, 0x65, 0x61, 0x64, 0x6d, 0x65, 0x22, 0x13, 0x0a, 0x11,
	0x4c, 0x69, 0x73, 0x74, 0x43, 0x68, 0x61, 0x72, 0x74, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x22, 0x44, 0x0a, 0x12, 0x4c, 0x69, 0x73, 0x74, 0x43, 0x68, 0x61, 0x72, 0x74, 0x73, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x2e, 0x0a, 0x06, 0x63, 0x68, 0x61, 0x72, 0x74,
	0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x6f, 0x70, 0x65, 0x6e, 0x68, 0x64,
	0x63, 0x2e, 0x6b, 0x75, 0x62, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x68, 0x61, 0x72, 0x74, 0x52,
	0x06, 0x63, 0x68, 0x61, 0x72, 0x74, 0x73, 0x22, 0x25, 0x0a, 0x0f, 0x47, 0x65, 0x74, 0x43, 0x68,
	0x61, 0x72, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61,
	0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x22, 0x5b,
	0x0a, 0x17, 0x4c, 0x69, 0x73, 0x74, 0x41, 0x70, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1d, 0x0a, 0x0a, 0x6d, 0x6f, 0x64,
	0x65, 0x6c, 0x5f, 0x75, 0x75, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x6d,
	0x6f, 0x64, 0x65, 0x6c, 0x55, 0x75, 0x69, 0x64, 0x12, 0x21, 0x0a, 0x0c, 0x63, 0x6c, 0x75, 0x73,
	0x74, 0x65, 0x72, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b,
	0x63, 0x6c, 0x75, 0x73, 0x74, 0x65, 0x72, 0x4e, 0x61, 0x6d, 0x65, 0x22, 0x5c, 0x0a, 0x18, 0x4c,
	0x69, 0x73, 0x74, 0x41, 0x70, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x40, 0x0a, 0x0c, 0x61, 0x70, 0x70, 0x6c, 0x69,
	0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1c, 0x2e,
	0x6f, 0x70, 0x65, 0x6e, 0x68, 0x64, 0x63, 0x2e, 0x6b, 0x75, 0x62, 0x65, 0x2e, 0x76, 0x31, 0x2e,
	0x41, 0x70, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x0c, 0x61, 0x70, 0x70,
	0x6c, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x22, 0x8b, 0x01, 0x0a, 0x15, 0x47, 0x65,
	0x74, 0x41, 0x70, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x12, 0x1d, 0x0a, 0x0a, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x5f, 0x75, 0x75, 0x69,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x55, 0x75,
	0x69, 0x64, 0x12, 0x21, 0x0a, 0x0c, 0x63, 0x6c, 0x75, 0x73, 0x74, 0x65, 0x72, 0x5f, 0x6e, 0x61,
	0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x63, 0x6c, 0x75, 0x73, 0x74, 0x65,
	0x72, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x6e, 0x61, 0x6d, 0x65, 0x73, 0x70, 0x61,
	0x63, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x6e, 0x61, 0x6d, 0x65, 0x73, 0x70,
	0x61, 0x63, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x32, 0xf9, 0x06, 0x0a, 0x0b, 0x4b, 0x75, 0x62, 0x65,
	0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x5b, 0x0a, 0x0c, 0x4c, 0x69, 0x73, 0x74, 0x52,
	0x65, 0x6c, 0x65, 0x61, 0x73, 0x65, 0x73, 0x12, 0x24, 0x2e, 0x6f, 0x70, 0x65, 0x6e, 0x68, 0x64,
	0x63, 0x2e, 0x6b, 0x75, 0x62, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65,
	0x6c, 0x65, 0x61, 0x73, 0x65, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x25, 0x2e,
	0x6f, 0x70, 0x65, 0x6e, 0x68, 0x64, 0x63, 0x2e, 0x6b, 0x75, 0x62, 0x65, 0x2e, 0x76, 0x31, 0x2e,
	0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x6c, 0x65, 0x61, 0x73, 0x65, 0x73, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x12, 0x52, 0x0a, 0x0e, 0x49, 0x6e, 0x73, 0x74, 0x61, 0x6c, 0x6c, 0x52,
	0x65, 0x6c, 0x65, 0x61, 0x73, 0x65, 0x12, 0x26, 0x2e, 0x6f, 0x70, 0x65, 0x6e, 0x68, 0x64, 0x63,
	0x2e, 0x6b, 0x75, 0x62, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x49, 0x6e, 0x73, 0x74, 0x61, 0x6c, 0x6c,
	0x52, 0x65, 0x6c, 0x65, 0x61, 0x73, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x18,
	0x2e, 0x6f, 0x70, 0x65, 0x6e, 0x68, 0x64, 0x63, 0x2e, 0x6b, 0x75, 0x62, 0x65, 0x2e, 0x76, 0x31,
	0x2e, 0x52, 0x65, 0x6c, 0x65, 0x61, 0x73, 0x65, 0x12, 0x56, 0x0a, 0x10, 0x55, 0x6e, 0x69, 0x6e,
	0x73, 0x74, 0x61, 0x6c, 0x6c, 0x52, 0x65, 0x6c, 0x65, 0x61, 0x73, 0x65, 0x12, 0x28, 0x2e, 0x6f,
	0x70, 0x65, 0x6e, 0x68, 0x64, 0x63, 0x2e, 0x6b, 0x75, 0x62, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x55,
	0x6e, 0x69, 0x6e, 0x73, 0x74, 0x61, 0x6c, 0x6c, 0x52, 0x65, 0x6c, 0x65, 0x61, 0x73, 0x65, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x18, 0x2e, 0x6f, 0x70, 0x65, 0x6e, 0x68, 0x64, 0x63,
	0x2e, 0x6b, 0x75, 0x62, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x52, 0x65, 0x6c, 0x65, 0x61, 0x73, 0x65,
	0x12, 0x52, 0x0a, 0x0e, 0x55, 0x70, 0x67, 0x72, 0x61, 0x64, 0x65, 0x52, 0x65, 0x6c, 0x65, 0x61,
	0x73, 0x65, 0x12, 0x26, 0x2e, 0x6f, 0x70, 0x65, 0x6e, 0x68, 0x64, 0x63, 0x2e, 0x6b, 0x75, 0x62,
	0x65, 0x2e, 0x76, 0x31, 0x2e, 0x55, 0x70, 0x67, 0x72, 0x61, 0x64, 0x65, 0x52, 0x65, 0x6c, 0x65,
	0x61, 0x73, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x18, 0x2e, 0x6f, 0x70, 0x65,
	0x6e, 0x68, 0x64, 0x63, 0x2e, 0x6b, 0x75, 0x62, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x52, 0x65, 0x6c,
	0x65, 0x61, 0x73, 0x65, 0x12, 0x52, 0x0a, 0x0f, 0x52, 0x6f, 0x6c, 0x6c, 0x62, 0x61, 0x63, 0x6b,
	0x52, 0x65, 0x6c, 0x65, 0x61, 0x73, 0x65, 0x12, 0x27, 0x2e, 0x6f, 0x70, 0x65, 0x6e, 0x68, 0x64,
	0x63, 0x2e, 0x6b, 0x75, 0x62, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x52, 0x6f, 0x6c, 0x6c, 0x62, 0x61,
	0x63, 0x6b, 0x52, 0x65, 0x6c, 0x65, 0x61, 0x73, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x1a, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62,
	0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x12, 0x55, 0x0a, 0x0a, 0x4c, 0x69, 0x73, 0x74,
	0x43, 0x68, 0x61, 0x72, 0x74, 0x73, 0x12, 0x22, 0x2e, 0x6f, 0x70, 0x65, 0x6e, 0x68, 0x64, 0x63,
	0x2e, 0x6b, 0x75, 0x62, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x43, 0x68, 0x61,
	0x72, 0x74, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x23, 0x2e, 0x6f, 0x70, 0x65,
	0x6e, 0x68, 0x64, 0x63, 0x2e, 0x6b, 0x75, 0x62, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x4c, 0x69, 0x73,
	0x74, 0x43, 0x68, 0x61, 0x72, 0x74, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12,
	0x44, 0x0a, 0x08, 0x47, 0x65, 0x74, 0x43, 0x68, 0x61, 0x72, 0x74, 0x12, 0x20, 0x2e, 0x6f, 0x70,
	0x65, 0x6e, 0x68, 0x64, 0x63, 0x2e, 0x6b, 0x75, 0x62, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65,
	0x74, 0x43, 0x68, 0x61, 0x72, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x16, 0x2e,
	0x6f, 0x70, 0x65, 0x6e, 0x68, 0x64, 0x63, 0x2e, 0x6b, 0x75, 0x62, 0x65, 0x2e, 0x76, 0x31, 0x2e,
	0x43, 0x68, 0x61, 0x72, 0x74, 0x12, 0x5b, 0x0a, 0x0c, 0x47, 0x65, 0x74, 0x43, 0x68, 0x61, 0x72,
	0x74, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x24, 0x2e, 0x6f, 0x70, 0x65, 0x6e, 0x68, 0x64, 0x63, 0x2e,
	0x6b, 0x75, 0x62, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x43, 0x68, 0x61, 0x72, 0x74,
	0x49, 0x6e, 0x66, 0x6f, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x25, 0x2e, 0x6f, 0x70,
	0x65, 0x6e, 0x68, 0x64, 0x63, 0x2e, 0x6b, 0x75, 0x62, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65,
	0x74, 0x43, 0x68, 0x61, 0x72, 0x74, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x12, 0x67, 0x0a, 0x10, 0x4c, 0x69, 0x73, 0x74, 0x41, 0x70, 0x70, 0x6c, 0x69, 0x63,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x12, 0x28, 0x2e, 0x6f, 0x70, 0x65, 0x6e, 0x68, 0x64, 0x63,
	0x2e, 0x6b, 0x75, 0x62, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x41, 0x70, 0x70,
	0x6c, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x1a, 0x29, 0x2e, 0x6f, 0x70, 0x65, 0x6e, 0x68, 0x64, 0x63, 0x2e, 0x6b, 0x75, 0x62, 0x65, 0x2e,
	0x76, 0x31, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x41, 0x70, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x56, 0x0a, 0x0e, 0x47,
	0x65, 0x74, 0x41, 0x70, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x26, 0x2e,
	0x6f, 0x70, 0x65, 0x6e, 0x68, 0x64, 0x63, 0x2e, 0x6b, 0x75, 0x62, 0x65, 0x2e, 0x76, 0x31, 0x2e,
	0x47, 0x65, 0x74, 0x41, 0x70, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1c, 0x2e, 0x6f, 0x70, 0x65, 0x6e, 0x68, 0x64, 0x63, 0x2e,
	0x6b, 0x75, 0x62, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x41, 0x70, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x42, 0x2b, 0x5a, 0x29, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f,
	0x6d, 0x2f, 0x6f, 0x70, 0x65, 0x6e, 0x68, 0x64, 0x63, 0x2f, 0x6f, 0x70, 0x65, 0x6e, 0x68, 0x64,
	0x63, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x6b, 0x75, 0x62, 0x65, 0x2f, 0x76, 0x31, 0x3b, 0x76, 0x31,
	0x62, 0x08, 0x65, 0x64, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x70, 0xe8, 0x07,
})

var file_api_kube_v1_kube_proto_msgTypes = make([]protoimpl.MessageInfo, 29)
var file_api_kube_v1_kube_proto_goTypes = []any{
	(*Release)(nil),                           // 0: openhdc.kube.v1.Release
	(*Chart)(nil),                             // 1: openhdc.kube.v1.Chart
	(*Application)(nil),                       // 2: openhdc.kube.v1.Application
	(*ListReleasesRequest)(nil),               // 3: openhdc.kube.v1.ListReleasesRequest
	(*ListReleasesResponse)(nil),              // 4: openhdc.kube.v1.ListReleasesResponse
	(*InstallReleaseRequest)(nil),             // 5: openhdc.kube.v1.InstallReleaseRequest
	(*UninstallReleaseRequest)(nil),           // 6: openhdc.kube.v1.UninstallReleaseRequest
	(*UpgradeReleaseRequest)(nil),             // 7: openhdc.kube.v1.UpgradeReleaseRequest
	(*RollbackReleaseRequest)(nil),            // 8: openhdc.kube.v1.RollbackReleaseRequest
	(*GetChartInfoRequest)(nil),               // 9: openhdc.kube.v1.GetChartInfoRequest
	(*GetChartInfoResponse)(nil),              // 10: openhdc.kube.v1.GetChartInfoResponse
	(*ListChartsRequest)(nil),                 // 11: openhdc.kube.v1.ListChartsRequest
	(*ListChartsResponse)(nil),                // 12: openhdc.kube.v1.ListChartsResponse
	(*GetChartRequest)(nil),                   // 13: openhdc.kube.v1.GetChartRequest
	(*ListApplicationsRequest)(nil),           // 14: openhdc.kube.v1.ListApplicationsRequest
	(*ListApplicationsResponse)(nil),          // 15: openhdc.kube.v1.ListApplicationsResponse
	(*GetApplicationRequest)(nil),             // 16: openhdc.kube.v1.GetApplicationRequest
	(*Chart_Maintainer)(nil),                  // 17: openhdc.kube.v1.Chart.Maintainer
	(*Chart_Dependency)(nil),                  // 18: openhdc.kube.v1.Chart.Dependency
	(*Chart_Version)(nil),                     // 19: openhdc.kube.v1.Chart.Version
	(*Application_Service)(nil),               // 20: openhdc.kube.v1.Application.Service
	(*Application_Pod)(nil),                   // 21: openhdc.kube.v1.Application.Pod
	(*Application_PersistentVolumeClaim)(nil), // 22: openhdc.kube.v1.Application.PersistentVolumeClaim
	(*Application_StorageClass)(nil),          // 23: openhdc.kube.v1.Application.StorageClass
	(*Application_Container)(nil),             // 24: openhdc.kube.v1.Application.Container
	nil,                                       // 25: openhdc.kube.v1.Application.LabelsEntry
	(*Application_Service_Port)(nil),          // 26: openhdc.kube.v1.Application.Service.Port
	(*Application_Pod_Condition)(nil),         // 27: openhdc.kube.v1.Application.Pod.Condition
	nil,                                       // 28: openhdc.kube.v1.Application.StorageClass.ParametersEntry
	(*timestamppb.Timestamp)(nil),             // 29: google.protobuf.Timestamp
	(*emptypb.Empty)(nil),                     // 30: google.protobuf.Empty
}
var file_api_kube_v1_kube_proto_depIdxs = []int32{
	19, // 0: openhdc.kube.v1.Release.version:type_name -> openhdc.kube.v1.Chart.Version
	17, // 1: openhdc.kube.v1.Chart.maintainers:type_name -> openhdc.kube.v1.Chart.Maintainer
	18, // 2: openhdc.kube.v1.Chart.dependencies:type_name -> openhdc.kube.v1.Chart.Dependency
	19, // 3: openhdc.kube.v1.Chart.versions:type_name -> openhdc.kube.v1.Chart.Version
	25, // 4: openhdc.kube.v1.Application.labels:type_name -> openhdc.kube.v1.Application.LabelsEntry
	24, // 5: openhdc.kube.v1.Application.containers:type_name -> openhdc.kube.v1.Application.Container
	22, // 6: openhdc.kube.v1.Application.persistent_volume_claims:type_name -> openhdc.kube.v1.Application.PersistentVolumeClaim
	21, // 7: openhdc.kube.v1.Application.pods:type_name -> openhdc.kube.v1.Application.Pod
	20, // 8: openhdc.kube.v1.Application.service:type_name -> openhdc.kube.v1.Application.Service
	0,  // 9: openhdc.kube.v1.ListReleasesResponse.releases:type_name -> openhdc.kube.v1.Release
	1,  // 10: openhdc.kube.v1.ListChartsResponse.charts:type_name -> openhdc.kube.v1.Chart
	2,  // 11: openhdc.kube.v1.ListApplicationsResponse.applications:type_name -> openhdc.kube.v1.Application
	26, // 12: openhdc.kube.v1.Application.Service.ports:type_name -> openhdc.kube.v1.Application.Service.Port
	27, // 13: openhdc.kube.v1.Application.Pod.last_condition:type_name -> openhdc.kube.v1.Application.Pod.Condition
	23, // 14: openhdc.kube.v1.Application.PersistentVolumeClaim.storage_class:type_name -> openhdc.kube.v1.Application.StorageClass
	28, // 15: openhdc.kube.v1.Application.StorageClass.parameters:type_name -> openhdc.kube.v1.Application.StorageClass.ParametersEntry
	29, // 16: openhdc.kube.v1.Application.Pod.Condition.probed_at:type_name -> google.protobuf.Timestamp
	29, // 17: openhdc.kube.v1.Application.Pod.Condition.transitioned_at:type_name -> google.protobuf.Timestamp
	3,  // 18: openhdc.kube.v1.KubeService.ListReleases:input_type -> openhdc.kube.v1.ListReleasesRequest
	5,  // 19: openhdc.kube.v1.KubeService.InstallRelease:input_type -> openhdc.kube.v1.InstallReleaseRequest
	6,  // 20: openhdc.kube.v1.KubeService.UninstallRelease:input_type -> openhdc.kube.v1.UninstallReleaseRequest
	7,  // 21: openhdc.kube.v1.KubeService.UpgradeRelease:input_type -> openhdc.kube.v1.UpgradeReleaseRequest
	8,  // 22: openhdc.kube.v1.KubeService.RollbackRelease:input_type -> openhdc.kube.v1.RollbackReleaseRequest
	11, // 23: openhdc.kube.v1.KubeService.ListCharts:input_type -> openhdc.kube.v1.ListChartsRequest
	13, // 24: openhdc.kube.v1.KubeService.GetChart:input_type -> openhdc.kube.v1.GetChartRequest
	9,  // 25: openhdc.kube.v1.KubeService.GetChartInfo:input_type -> openhdc.kube.v1.GetChartInfoRequest
	14, // 26: openhdc.kube.v1.KubeService.ListApplications:input_type -> openhdc.kube.v1.ListApplicationsRequest
	16, // 27: openhdc.kube.v1.KubeService.GetApplication:input_type -> openhdc.kube.v1.GetApplicationRequest
	4,  // 28: openhdc.kube.v1.KubeService.ListReleases:output_type -> openhdc.kube.v1.ListReleasesResponse
	0,  // 29: openhdc.kube.v1.KubeService.InstallRelease:output_type -> openhdc.kube.v1.Release
	0,  // 30: openhdc.kube.v1.KubeService.UninstallRelease:output_type -> openhdc.kube.v1.Release
	0,  // 31: openhdc.kube.v1.KubeService.UpgradeRelease:output_type -> openhdc.kube.v1.Release
	30, // 32: openhdc.kube.v1.KubeService.RollbackRelease:output_type -> google.protobuf.Empty
	12, // 33: openhdc.kube.v1.KubeService.ListCharts:output_type -> openhdc.kube.v1.ListChartsResponse
	1,  // 34: openhdc.kube.v1.KubeService.GetChart:output_type -> openhdc.kube.v1.Chart
	10, // 35: openhdc.kube.v1.KubeService.GetChartInfo:output_type -> openhdc.kube.v1.GetChartInfoResponse
	15, // 36: openhdc.kube.v1.KubeService.ListApplications:output_type -> openhdc.kube.v1.ListApplicationsResponse
	2,  // 37: openhdc.kube.v1.KubeService.GetApplication:output_type -> openhdc.kube.v1.Application
	28, // [28:38] is the sub-list for method output_type
	18, // [18:28] is the sub-list for method input_type
	18, // [18:18] is the sub-list for extension type_name
	18, // [18:18] is the sub-list for extension extendee
	0,  // [0:18] is the sub-list for field type_name
}

func init() { file_api_kube_v1_kube_proto_init() }
func file_api_kube_v1_kube_proto_init() {
	if File_api_kube_v1_kube_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_api_kube_v1_kube_proto_rawDesc), len(file_api_kube_v1_kube_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   29,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_api_kube_v1_kube_proto_goTypes,
		DependencyIndexes: file_api_kube_v1_kube_proto_depIdxs,
		MessageInfos:      file_api_kube_v1_kube_proto_msgTypes,
	}.Build()
	File_api_kube_v1_kube_proto = out.File
	file_api_kube_v1_kube_proto_goTypes = nil
	file_api_kube_v1_kube_proto_depIdxs = nil
}
