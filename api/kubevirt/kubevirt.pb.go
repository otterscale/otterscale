// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.6
// 	protoc        v6.31.0
// source: api/kubevirt/kubevirt.proto

package pb

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	emptypb "google.golang.org/protobuf/types/known/emptypb"
	timestamppb "google.golang.org/protobuf/types/known/timestamppb"
	reflect "reflect"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type VMStatus int32

const (
	VMStatus_UNKNOWN      VMStatus = 0
	VMStatus_PROVISIONING VMStatus = 1
	VMStatus_STARTING     VMStatus = 2
	VMStatus_RUNNING      VMStatus = 3
	VMStatus_TERMINATING  VMStatus = 4
	VMStatus_STOPPED      VMStatus = 5
	VMStatus_PAUSED       VMStatus = 6
	VMStatus_MIGRATING    VMStatus = 7
)

// Enum value maps for VMStatus.
var (
	VMStatus_name = map[int32]string{
		0: "UNKNOWN",
		1: "PROVISIONING",
		2: "STARTING",
		3: "RUNNING",
		4: "TERMINATING",
		5: "STOPPED",
		6: "PAUSED",
		7: "MIGRATING",
	}
	VMStatus_value = map[string]int32{
		"UNKNOWN":      0,
		"PROVISIONING": 1,
		"STARTING":     2,
		"RUNNING":      3,
		"TERMINATING":  4,
		"STOPPED":      5,
		"PAUSED":       6,
		"MIGRATING":    7,
	}
)

func (x VMStatus) Enum() *VMStatus {
	p := new(VMStatus)
	*p = x
	return p
}

func (x VMStatus) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (VMStatus) Descriptor() protoreflect.EnumDescriptor {
	return file_api_kubevirt_kubevirt_proto_enumTypes[0].Descriptor()
}

func (VMStatus) Type() protoreflect.EnumType {
	return &file_api_kubevirt_kubevirt_proto_enumTypes[0]
}

func (x VMStatus) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

type OpStatus int32

const (
	OpStatus_IN_PROGRESS OpStatus = 0
	OpStatus_SUCCEEDED   OpStatus = 1
	OpStatus_FAILED      OpStatus = 2
)

// Enum value maps for OpStatus.
var (
	OpStatus_name = map[int32]string{
		0: "IN_PROGRESS",
		1: "SUCCEEDED",
		2: "FAILED",
	}
	OpStatus_value = map[string]int32{
		"IN_PROGRESS": 0,
		"SUCCEEDED":   1,
		"FAILED":      2,
	}
)

func (x OpStatus) Enum() *OpStatus {
	p := new(OpStatus)
	*p = x
	return p
}

func (x OpStatus) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (OpStatus) Descriptor() protoreflect.EnumDescriptor {
	return file_api_kubevirt_kubevirt_proto_enumTypes[1].Descriptor()
}

func (OpStatus) Type() protoreflect.EnumType {
	return &file_api_kubevirt_kubevirt_proto_enumTypes[1]
}

func (x OpStatus) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

type VirtualMachine struct {
	state                  protoimpl.MessageState `protogen:"opaque.v1"`
	xxx_hidden_Name        *string                `protobuf:"bytes,1,opt,name=name"`
	xxx_hidden_Namespace   *string                `protobuf:"bytes,2,opt,name=namespace"`
	xxx_hidden_Flavor      *Flavor                `protobuf:"bytes,3,opt,name=flavor"`
	xxx_hidden_Network     *Network               `protobuf:"bytes,4,opt,name=network"`
	xxx_hidden_DataVolumes *[]*DataVolume         `protobuf:"bytes,5,rep,name=data_volumes,json=dataVolumes"`
	xxx_hidden_Status      VMStatus               `protobuf:"varint,6,opt,name=status,enum=otterscale.kubevirt.v1.VMStatus"`
	xxx_hidden_Snapshot    *VMSnapshot            `protobuf:"bytes,7,opt,name=snapshot"`
	xxx_hidden_Clone       *VMClone               `protobuf:"bytes,8,opt,name=clone"`
	xxx_hidden_Restore     *VMRestore             `protobuf:"bytes,9,opt,name=restore"`
	xxx_hidden_Migrate     *VMMigrate             `protobuf:"bytes,10,opt,name=migrate"`
	XXX_raceDetectHookData protoimpl.RaceDetectHookData
	XXX_presence           [1]uint32
	unknownFields          protoimpl.UnknownFields
	sizeCache              protoimpl.SizeCache
}

func (x *VirtualMachine) Reset() {
	*x = VirtualMachine{}
	mi := &file_api_kubevirt_kubevirt_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *VirtualMachine) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*VirtualMachine) ProtoMessage() {}

func (x *VirtualMachine) ProtoReflect() protoreflect.Message {
	mi := &file_api_kubevirt_kubevirt_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *VirtualMachine) GetName() string {
	if x != nil {
		if x.xxx_hidden_Name != nil {
			return *x.xxx_hidden_Name
		}
		return ""
	}
	return ""
}

func (x *VirtualMachine) GetNamespace() string {
	if x != nil {
		if x.xxx_hidden_Namespace != nil {
			return *x.xxx_hidden_Namespace
		}
		return ""
	}
	return ""
}

func (x *VirtualMachine) GetFlavor() *Flavor {
	if x != nil {
		return x.xxx_hidden_Flavor
	}
	return nil
}

func (x *VirtualMachine) GetNetwork() *Network {
	if x != nil {
		return x.xxx_hidden_Network
	}
	return nil
}

func (x *VirtualMachine) GetDataVolumes() []*DataVolume {
	if x != nil {
		if x.xxx_hidden_DataVolumes != nil {
			return *x.xxx_hidden_DataVolumes
		}
	}
	return nil
}

func (x *VirtualMachine) GetStatus() VMStatus {
	if x != nil {
		if protoimpl.X.Present(&(x.XXX_presence[0]), 5) {
			return x.xxx_hidden_Status
		}
	}
	return VMStatus_UNKNOWN
}

func (x *VirtualMachine) GetSnapshot() *VMSnapshot {
	if x != nil {
		return x.xxx_hidden_Snapshot
	}
	return nil
}

func (x *VirtualMachine) GetClone() *VMClone {
	if x != nil {
		return x.xxx_hidden_Clone
	}
	return nil
}

func (x *VirtualMachine) GetRestore() *VMRestore {
	if x != nil {
		return x.xxx_hidden_Restore
	}
	return nil
}

func (x *VirtualMachine) GetMigrate() *VMMigrate {
	if x != nil {
		return x.xxx_hidden_Migrate
	}
	return nil
}

func (x *VirtualMachine) SetName(v string) {
	x.xxx_hidden_Name = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 0, 10)
}

func (x *VirtualMachine) SetNamespace(v string) {
	x.xxx_hidden_Namespace = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 1, 10)
}

func (x *VirtualMachine) SetFlavor(v *Flavor) {
	x.xxx_hidden_Flavor = v
}

func (x *VirtualMachine) SetNetwork(v *Network) {
	x.xxx_hidden_Network = v
}

func (x *VirtualMachine) SetDataVolumes(v []*DataVolume) {
	x.xxx_hidden_DataVolumes = &v
}

func (x *VirtualMachine) SetStatus(v VMStatus) {
	x.xxx_hidden_Status = v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 5, 10)
}

func (x *VirtualMachine) SetSnapshot(v *VMSnapshot) {
	x.xxx_hidden_Snapshot = v
}

func (x *VirtualMachine) SetClone(v *VMClone) {
	x.xxx_hidden_Clone = v
}

func (x *VirtualMachine) SetRestore(v *VMRestore) {
	x.xxx_hidden_Restore = v
}

func (x *VirtualMachine) SetMigrate(v *VMMigrate) {
	x.xxx_hidden_Migrate = v
}

func (x *VirtualMachine) HasName() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 0)
}

func (x *VirtualMachine) HasNamespace() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 1)
}

func (x *VirtualMachine) HasFlavor() bool {
	if x == nil {
		return false
	}
	return x.xxx_hidden_Flavor != nil
}

func (x *VirtualMachine) HasNetwork() bool {
	if x == nil {
		return false
	}
	return x.xxx_hidden_Network != nil
}

func (x *VirtualMachine) HasStatus() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 5)
}

func (x *VirtualMachine) HasSnapshot() bool {
	if x == nil {
		return false
	}
	return x.xxx_hidden_Snapshot != nil
}

func (x *VirtualMachine) HasClone() bool {
	if x == nil {
		return false
	}
	return x.xxx_hidden_Clone != nil
}

func (x *VirtualMachine) HasRestore() bool {
	if x == nil {
		return false
	}
	return x.xxx_hidden_Restore != nil
}

func (x *VirtualMachine) HasMigrate() bool {
	if x == nil {
		return false
	}
	return x.xxx_hidden_Migrate != nil
}

func (x *VirtualMachine) ClearName() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 0)
	x.xxx_hidden_Name = nil
}

func (x *VirtualMachine) ClearNamespace() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 1)
	x.xxx_hidden_Namespace = nil
}

func (x *VirtualMachine) ClearFlavor() {
	x.xxx_hidden_Flavor = nil
}

func (x *VirtualMachine) ClearNetwork() {
	x.xxx_hidden_Network = nil
}

func (x *VirtualMachine) ClearStatus() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 5)
	x.xxx_hidden_Status = VMStatus_UNKNOWN
}

func (x *VirtualMachine) ClearSnapshot() {
	x.xxx_hidden_Snapshot = nil
}

func (x *VirtualMachine) ClearClone() {
	x.xxx_hidden_Clone = nil
}

func (x *VirtualMachine) ClearRestore() {
	x.xxx_hidden_Restore = nil
}

func (x *VirtualMachine) ClearMigrate() {
	x.xxx_hidden_Migrate = nil
}

type VirtualMachine_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	Name        *string
	Namespace   *string
	Flavor      *Flavor
	Network     *Network
	DataVolumes []*DataVolume
	Status      *VMStatus
	Snapshot    *VMSnapshot
	Clone       *VMClone
	Restore     *VMRestore
	Migrate     *VMMigrate
}

func (b0 VirtualMachine_builder) Build() *VirtualMachine {
	m0 := &VirtualMachine{}
	b, x := &b0, m0
	_, _ = b, x
	if b.Name != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 0, 10)
		x.xxx_hidden_Name = b.Name
	}
	if b.Namespace != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 1, 10)
		x.xxx_hidden_Namespace = b.Namespace
	}
	x.xxx_hidden_Flavor = b.Flavor
	x.xxx_hidden_Network = b.Network
	x.xxx_hidden_DataVolumes = &b.DataVolumes
	if b.Status != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 5, 10)
		x.xxx_hidden_Status = *b.Status
	}
	x.xxx_hidden_Snapshot = b.Snapshot
	x.xxx_hidden_Clone = b.Clone
	x.xxx_hidden_Restore = b.Restore
	x.xxx_hidden_Migrate = b.Migrate
	return m0
}

type VMOperations struct {
	state                  protoimpl.MessageState `protogen:"opaque.v1"`
	xxx_hidden_Name        *string                `protobuf:"bytes,1,opt,name=name"`
	xxx_hidden_CreateTime  *timestamppb.Timestamp `protobuf:"bytes,2,opt,name=create_time,json=createTime"`
	xxx_hidden_Description *string                `protobuf:"bytes,3,opt,name=description"`
	xxx_hidden_Status      *VMOperations_Status   `protobuf:"bytes,4,opt,name=status"`
	XXX_raceDetectHookData protoimpl.RaceDetectHookData
	XXX_presence           [1]uint32
	unknownFields          protoimpl.UnknownFields
	sizeCache              protoimpl.SizeCache
}

func (x *VMOperations) Reset() {
	*x = VMOperations{}
	mi := &file_api_kubevirt_kubevirt_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *VMOperations) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*VMOperations) ProtoMessage() {}

func (x *VMOperations) ProtoReflect() protoreflect.Message {
	mi := &file_api_kubevirt_kubevirt_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *VMOperations) GetName() string {
	if x != nil {
		if x.xxx_hidden_Name != nil {
			return *x.xxx_hidden_Name
		}
		return ""
	}
	return ""
}

func (x *VMOperations) GetCreateTime() *timestamppb.Timestamp {
	if x != nil {
		return x.xxx_hidden_CreateTime
	}
	return nil
}

func (x *VMOperations) GetDescription() string {
	if x != nil {
		if x.xxx_hidden_Description != nil {
			return *x.xxx_hidden_Description
		}
		return ""
	}
	return ""
}

func (x *VMOperations) GetStatus() *VMOperations_Status {
	if x != nil {
		return x.xxx_hidden_Status
	}
	return nil
}

func (x *VMOperations) SetName(v string) {
	x.xxx_hidden_Name = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 0, 4)
}

func (x *VMOperations) SetCreateTime(v *timestamppb.Timestamp) {
	x.xxx_hidden_CreateTime = v
}

func (x *VMOperations) SetDescription(v string) {
	x.xxx_hidden_Description = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 2, 4)
}

func (x *VMOperations) SetStatus(v *VMOperations_Status) {
	x.xxx_hidden_Status = v
}

func (x *VMOperations) HasName() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 0)
}

func (x *VMOperations) HasCreateTime() bool {
	if x == nil {
		return false
	}
	return x.xxx_hidden_CreateTime != nil
}

func (x *VMOperations) HasDescription() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 2)
}

func (x *VMOperations) HasStatus() bool {
	if x == nil {
		return false
	}
	return x.xxx_hidden_Status != nil
}

func (x *VMOperations) ClearName() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 0)
	x.xxx_hidden_Name = nil
}

func (x *VMOperations) ClearCreateTime() {
	x.xxx_hidden_CreateTime = nil
}

func (x *VMOperations) ClearDescription() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 2)
	x.xxx_hidden_Description = nil
}

func (x *VMOperations) ClearStatus() {
	x.xxx_hidden_Status = nil
}

type VMOperations_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	Name        *string
	CreateTime  *timestamppb.Timestamp
	Description *string
	Status      *VMOperations_Status
}

func (b0 VMOperations_builder) Build() *VMOperations {
	m0 := &VMOperations{}
	b, x := &b0, m0
	_, _ = b, x
	if b.Name != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 0, 4)
		x.xxx_hidden_Name = b.Name
	}
	x.xxx_hidden_CreateTime = b.CreateTime
	if b.Description != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 2, 4)
		x.xxx_hidden_Description = b.Description
	}
	x.xxx_hidden_Status = b.Status
	return m0
}

type VMSnapshot struct {
	state          protoimpl.MessageState `protogen:"opaque.v1"`
	xxx_hidden_Ops *VMOperations          `protobuf:"bytes,1,opt,name=ops"`
	unknownFields  protoimpl.UnknownFields
	sizeCache      protoimpl.SizeCache
}

func (x *VMSnapshot) Reset() {
	*x = VMSnapshot{}
	mi := &file_api_kubevirt_kubevirt_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *VMSnapshot) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*VMSnapshot) ProtoMessage() {}

func (x *VMSnapshot) ProtoReflect() protoreflect.Message {
	mi := &file_api_kubevirt_kubevirt_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *VMSnapshot) GetOps() *VMOperations {
	if x != nil {
		return x.xxx_hidden_Ops
	}
	return nil
}

func (x *VMSnapshot) SetOps(v *VMOperations) {
	x.xxx_hidden_Ops = v
}

func (x *VMSnapshot) HasOps() bool {
	if x == nil {
		return false
	}
	return x.xxx_hidden_Ops != nil
}

func (x *VMSnapshot) ClearOps() {
	x.xxx_hidden_Ops = nil
}

type VMSnapshot_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	Ops *VMOperations
}

func (b0 VMSnapshot_builder) Build() *VMSnapshot {
	m0 := &VMSnapshot{}
	b, x := &b0, m0
	_, _ = b, x
	x.xxx_hidden_Ops = b.Ops
	return m0
}

type VMClone struct {
	state          protoimpl.MessageState `protogen:"opaque.v1"`
	xxx_hidden_Ops *VMOperations          `protobuf:"bytes,1,opt,name=ops"`
	unknownFields  protoimpl.UnknownFields
	sizeCache      protoimpl.SizeCache
}

func (x *VMClone) Reset() {
	*x = VMClone{}
	mi := &file_api_kubevirt_kubevirt_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *VMClone) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*VMClone) ProtoMessage() {}

func (x *VMClone) ProtoReflect() protoreflect.Message {
	mi := &file_api_kubevirt_kubevirt_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *VMClone) GetOps() *VMOperations {
	if x != nil {
		return x.xxx_hidden_Ops
	}
	return nil
}

func (x *VMClone) SetOps(v *VMOperations) {
	x.xxx_hidden_Ops = v
}

func (x *VMClone) HasOps() bool {
	if x == nil {
		return false
	}
	return x.xxx_hidden_Ops != nil
}

func (x *VMClone) ClearOps() {
	x.xxx_hidden_Ops = nil
}

type VMClone_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	Ops *VMOperations
}

func (b0 VMClone_builder) Build() *VMClone {
	m0 := &VMClone{}
	b, x := &b0, m0
	_, _ = b, x
	x.xxx_hidden_Ops = b.Ops
	return m0
}

type VMRestore struct {
	state          protoimpl.MessageState `protogen:"opaque.v1"`
	xxx_hidden_Ops *VMOperations          `protobuf:"bytes,1,opt,name=ops"`
	unknownFields  protoimpl.UnknownFields
	sizeCache      protoimpl.SizeCache
}

func (x *VMRestore) Reset() {
	*x = VMRestore{}
	mi := &file_api_kubevirt_kubevirt_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *VMRestore) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*VMRestore) ProtoMessage() {}

func (x *VMRestore) ProtoReflect() protoreflect.Message {
	mi := &file_api_kubevirt_kubevirt_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *VMRestore) GetOps() *VMOperations {
	if x != nil {
		return x.xxx_hidden_Ops
	}
	return nil
}

func (x *VMRestore) SetOps(v *VMOperations) {
	x.xxx_hidden_Ops = v
}

func (x *VMRestore) HasOps() bool {
	if x == nil {
		return false
	}
	return x.xxx_hidden_Ops != nil
}

func (x *VMRestore) ClearOps() {
	x.xxx_hidden_Ops = nil
}

type VMRestore_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	Ops *VMOperations
}

func (b0 VMRestore_builder) Build() *VMRestore {
	m0 := &VMRestore{}
	b, x := &b0, m0
	_, _ = b, x
	x.xxx_hidden_Ops = b.Ops
	return m0
}

type VMMigrate struct {
	state          protoimpl.MessageState `protogen:"opaque.v1"`
	xxx_hidden_Ops *VMOperations          `protobuf:"bytes,1,opt,name=ops"`
	unknownFields  protoimpl.UnknownFields
	sizeCache      protoimpl.SizeCache
}

func (x *VMMigrate) Reset() {
	*x = VMMigrate{}
	mi := &file_api_kubevirt_kubevirt_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *VMMigrate) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*VMMigrate) ProtoMessage() {}

func (x *VMMigrate) ProtoReflect() protoreflect.Message {
	mi := &file_api_kubevirt_kubevirt_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *VMMigrate) GetOps() *VMOperations {
	if x != nil {
		return x.xxx_hidden_Ops
	}
	return nil
}

func (x *VMMigrate) SetOps(v *VMOperations) {
	x.xxx_hidden_Ops = v
}

func (x *VMMigrate) HasOps() bool {
	if x == nil {
		return false
	}
	return x.xxx_hidden_Ops != nil
}

func (x *VMMigrate) ClearOps() {
	x.xxx_hidden_Ops = nil
}

type VMMigrate_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	Ops *VMOperations
}

func (b0 VMMigrate_builder) Build() *VMMigrate {
	m0 := &VMMigrate{}
	b, x := &b0, m0
	_, _ = b, x
	x.xxx_hidden_Ops = b.Ops
	return m0
}

type Flavor struct {
	state                  protoimpl.MessageState `protogen:"opaque.v1"`
	xxx_hidden_CpuCores    float32                `protobuf:"fixed32,1,opt,name=cpu_cores,json=cpuCores"`
	xxx_hidden_MemoryBytes int64                  `protobuf:"varint,2,opt,name=memory_bytes,json=memoryBytes"`
	XXX_raceDetectHookData protoimpl.RaceDetectHookData
	XXX_presence           [1]uint32
	unknownFields          protoimpl.UnknownFields
	sizeCache              protoimpl.SizeCache
}

func (x *Flavor) Reset() {
	*x = Flavor{}
	mi := &file_api_kubevirt_kubevirt_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Flavor) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Flavor) ProtoMessage() {}

func (x *Flavor) ProtoReflect() protoreflect.Message {
	mi := &file_api_kubevirt_kubevirt_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *Flavor) GetCpuCores() float32 {
	if x != nil {
		return x.xxx_hidden_CpuCores
	}
	return 0
}

func (x *Flavor) GetMemoryBytes() int64 {
	if x != nil {
		return x.xxx_hidden_MemoryBytes
	}
	return 0
}

func (x *Flavor) SetCpuCores(v float32) {
	x.xxx_hidden_CpuCores = v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 0, 2)
}

func (x *Flavor) SetMemoryBytes(v int64) {
	x.xxx_hidden_MemoryBytes = v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 1, 2)
}

func (x *Flavor) HasCpuCores() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 0)
}

func (x *Flavor) HasMemoryBytes() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 1)
}

func (x *Flavor) ClearCpuCores() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 0)
	x.xxx_hidden_CpuCores = 0
}

func (x *Flavor) ClearMemoryBytes() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 1)
	x.xxx_hidden_MemoryBytes = 0
}

type Flavor_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	CpuCores    *float32
	MemoryBytes *int64
}

func (b0 Flavor_builder) Build() *Flavor {
	m0 := &Flavor{}
	b, x := &b0, m0
	_, _ = b, x
	if b.CpuCores != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 0, 2)
		x.xxx_hidden_CpuCores = *b.CpuCores
	}
	if b.MemoryBytes != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 1, 2)
		x.xxx_hidden_MemoryBytes = *b.MemoryBytes
	}
	return m0
}

type DataVolume struct {
	state                  protoimpl.MessageState `protogen:"opaque.v1"`
	xxx_hidden_Type        *string                `protobuf:"bytes,1,opt,name=type"`
	xxx_hidden_Name        *string                `protobuf:"bytes,2,opt,name=name"`
	xxx_hidden_Namespace   *string                `protobuf:"bytes,3,opt,name=namespace"`
	xxx_hidden_Source      *string                `protobuf:"bytes,4,opt,name=source"`
	xxx_hidden_VolumeBytes int64                  `protobuf:"varint,5,opt,name=volume_bytes,json=volumeBytes"`
	XXX_raceDetectHookData protoimpl.RaceDetectHookData
	XXX_presence           [1]uint32
	unknownFields          protoimpl.UnknownFields
	sizeCache              protoimpl.SizeCache
}

func (x *DataVolume) Reset() {
	*x = DataVolume{}
	mi := &file_api_kubevirt_kubevirt_proto_msgTypes[7]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DataVolume) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DataVolume) ProtoMessage() {}

func (x *DataVolume) ProtoReflect() protoreflect.Message {
	mi := &file_api_kubevirt_kubevirt_proto_msgTypes[7]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *DataVolume) GetType() string {
	if x != nil {
		if x.xxx_hidden_Type != nil {
			return *x.xxx_hidden_Type
		}
		return ""
	}
	return ""
}

func (x *DataVolume) GetName() string {
	if x != nil {
		if x.xxx_hidden_Name != nil {
			return *x.xxx_hidden_Name
		}
		return ""
	}
	return ""
}

func (x *DataVolume) GetNamespace() string {
	if x != nil {
		if x.xxx_hidden_Namespace != nil {
			return *x.xxx_hidden_Namespace
		}
		return ""
	}
	return ""
}

func (x *DataVolume) GetSource() string {
	if x != nil {
		if x.xxx_hidden_Source != nil {
			return *x.xxx_hidden_Source
		}
		return ""
	}
	return ""
}

func (x *DataVolume) GetVolumeBytes() int64 {
	if x != nil {
		return x.xxx_hidden_VolumeBytes
	}
	return 0
}

func (x *DataVolume) SetType(v string) {
	x.xxx_hidden_Type = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 0, 5)
}

func (x *DataVolume) SetName(v string) {
	x.xxx_hidden_Name = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 1, 5)
}

func (x *DataVolume) SetNamespace(v string) {
	x.xxx_hidden_Namespace = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 2, 5)
}

func (x *DataVolume) SetSource(v string) {
	x.xxx_hidden_Source = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 3, 5)
}

func (x *DataVolume) SetVolumeBytes(v int64) {
	x.xxx_hidden_VolumeBytes = v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 4, 5)
}

func (x *DataVolume) HasType() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 0)
}

func (x *DataVolume) HasName() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 1)
}

func (x *DataVolume) HasNamespace() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 2)
}

func (x *DataVolume) HasSource() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 3)
}

func (x *DataVolume) HasVolumeBytes() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 4)
}

func (x *DataVolume) ClearType() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 0)
	x.xxx_hidden_Type = nil
}

func (x *DataVolume) ClearName() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 1)
	x.xxx_hidden_Name = nil
}

func (x *DataVolume) ClearNamespace() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 2)
	x.xxx_hidden_Namespace = nil
}

func (x *DataVolume) ClearSource() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 3)
	x.xxx_hidden_Source = nil
}

func (x *DataVolume) ClearVolumeBytes() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 4)
	x.xxx_hidden_VolumeBytes = 0
}

type DataVolume_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	Type        *string
	Name        *string
	Namespace   *string
	Source      *string
	VolumeBytes *int64
}

func (b0 DataVolume_builder) Build() *DataVolume {
	m0 := &DataVolume{}
	b, x := &b0, m0
	_, _ = b, x
	if b.Type != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 0, 5)
		x.xxx_hidden_Type = b.Type
	}
	if b.Name != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 1, 5)
		x.xxx_hidden_Name = b.Name
	}
	if b.Namespace != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 2, 5)
		x.xxx_hidden_Namespace = b.Namespace
	}
	if b.Source != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 3, 5)
		x.xxx_hidden_Source = b.Source
	}
	if b.VolumeBytes != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 4, 5)
		x.xxx_hidden_VolumeBytes = *b.VolumeBytes
	}
	return m0
}

type Network struct {
	state                    protoimpl.MessageState `protogen:"opaque.v1"`
	xxx_hidden_Name          *string                `protobuf:"bytes,1,opt,name=name"`
	xxx_hidden_Namespace     *string                `protobuf:"bytes,2,opt,name=namespace"`
	xxx_hidden_ServiceType   *string                `protobuf:"bytes,3,opt,name=service_type,json=serviceType"`
	xxx_hidden_Port          int32                  `protobuf:"varint,4,opt,name=port"`
	xxx_hidden_NodePort      int32                  `protobuf:"varint,5,opt,name=node_port,json=nodePort"`
	xxx_hidden_ContainerPort int32                  `protobuf:"varint,6,opt,name=container_port,json=containerPort"`
	XXX_raceDetectHookData   protoimpl.RaceDetectHookData
	XXX_presence             [1]uint32
	unknownFields            protoimpl.UnknownFields
	sizeCache                protoimpl.SizeCache
}

func (x *Network) Reset() {
	*x = Network{}
	mi := &file_api_kubevirt_kubevirt_proto_msgTypes[8]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Network) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Network) ProtoMessage() {}

func (x *Network) ProtoReflect() protoreflect.Message {
	mi := &file_api_kubevirt_kubevirt_proto_msgTypes[8]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *Network) GetName() string {
	if x != nil {
		if x.xxx_hidden_Name != nil {
			return *x.xxx_hidden_Name
		}
		return ""
	}
	return ""
}

func (x *Network) GetNamespace() string {
	if x != nil {
		if x.xxx_hidden_Namespace != nil {
			return *x.xxx_hidden_Namespace
		}
		return ""
	}
	return ""
}

func (x *Network) GetServiceType() string {
	if x != nil {
		if x.xxx_hidden_ServiceType != nil {
			return *x.xxx_hidden_ServiceType
		}
		return ""
	}
	return ""
}

func (x *Network) GetPort() int32 {
	if x != nil {
		return x.xxx_hidden_Port
	}
	return 0
}

func (x *Network) GetNodePort() int32 {
	if x != nil {
		return x.xxx_hidden_NodePort
	}
	return 0
}

func (x *Network) GetContainerPort() int32 {
	if x != nil {
		return x.xxx_hidden_ContainerPort
	}
	return 0
}

func (x *Network) SetName(v string) {
	x.xxx_hidden_Name = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 0, 6)
}

func (x *Network) SetNamespace(v string) {
	x.xxx_hidden_Namespace = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 1, 6)
}

func (x *Network) SetServiceType(v string) {
	x.xxx_hidden_ServiceType = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 2, 6)
}

func (x *Network) SetPort(v int32) {
	x.xxx_hidden_Port = v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 3, 6)
}

func (x *Network) SetNodePort(v int32) {
	x.xxx_hidden_NodePort = v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 4, 6)
}

func (x *Network) SetContainerPort(v int32) {
	x.xxx_hidden_ContainerPort = v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 5, 6)
}

func (x *Network) HasName() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 0)
}

func (x *Network) HasNamespace() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 1)
}

func (x *Network) HasServiceType() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 2)
}

func (x *Network) HasPort() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 3)
}

func (x *Network) HasNodePort() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 4)
}

func (x *Network) HasContainerPort() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 5)
}

func (x *Network) ClearName() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 0)
	x.xxx_hidden_Name = nil
}

func (x *Network) ClearNamespace() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 1)
	x.xxx_hidden_Namespace = nil
}

func (x *Network) ClearServiceType() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 2)
	x.xxx_hidden_ServiceType = nil
}

func (x *Network) ClearPort() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 3)
	x.xxx_hidden_Port = 0
}

func (x *Network) ClearNodePort() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 4)
	x.xxx_hidden_NodePort = 0
}

func (x *Network) ClearContainerPort() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 5)
	x.xxx_hidden_ContainerPort = 0
}

type Network_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	Name          *string
	Namespace     *string
	ServiceType   *string
	Port          *int32
	NodePort      *int32
	ContainerPort *int32
}

func (b0 Network_builder) Build() *Network {
	m0 := &Network{}
	b, x := &b0, m0
	_, _ = b, x
	if b.Name != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 0, 6)
		x.xxx_hidden_Name = b.Name
	}
	if b.Namespace != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 1, 6)
		x.xxx_hidden_Namespace = b.Namespace
	}
	if b.ServiceType != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 2, 6)
		x.xxx_hidden_ServiceType = b.ServiceType
	}
	if b.Port != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 3, 6)
		x.xxx_hidden_Port = *b.Port
	}
	if b.NodePort != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 4, 6)
		x.xxx_hidden_NodePort = *b.NodePort
	}
	if b.ContainerPort != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 5, 6)
		x.xxx_hidden_ContainerPort = *b.ContainerPort
	}
	return m0
}

type Device struct {
	state                  protoimpl.MessageState `protogen:"opaque.v1"`
	xxx_hidden_Name        *string                `protobuf:"bytes,1,opt,name=name"`
	xxx_hidden_Type        *string                `protobuf:"bytes,2,opt,name=type"`
	XXX_raceDetectHookData protoimpl.RaceDetectHookData
	XXX_presence           [1]uint32
	unknownFields          protoimpl.UnknownFields
	sizeCache              protoimpl.SizeCache
}

func (x *Device) Reset() {
	*x = Device{}
	mi := &file_api_kubevirt_kubevirt_proto_msgTypes[9]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Device) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Device) ProtoMessage() {}

func (x *Device) ProtoReflect() protoreflect.Message {
	mi := &file_api_kubevirt_kubevirt_proto_msgTypes[9]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *Device) GetName() string {
	if x != nil {
		if x.xxx_hidden_Name != nil {
			return *x.xxx_hidden_Name
		}
		return ""
	}
	return ""
}

func (x *Device) GetType() string {
	if x != nil {
		if x.xxx_hidden_Type != nil {
			return *x.xxx_hidden_Type
		}
		return ""
	}
	return ""
}

func (x *Device) SetName(v string) {
	x.xxx_hidden_Name = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 0, 2)
}

func (x *Device) SetType(v string) {
	x.xxx_hidden_Type = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 1, 2)
}

func (x *Device) HasName() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 0)
}

func (x *Device) HasType() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 1)
}

func (x *Device) ClearName() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 0)
	x.xxx_hidden_Name = nil
}

func (x *Device) ClearType() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 1)
	x.xxx_hidden_Type = nil
}

type Device_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	Name *string
	Type *string
}

func (b0 Device_builder) Build() *Device {
	m0 := &Device{}
	b, x := &b0, m0
	_, _ = b, x
	if b.Name != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 0, 2)
		x.xxx_hidden_Name = b.Name
	}
	if b.Type != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 1, 2)
		x.xxx_hidden_Type = b.Type
	}
	return m0
}

type Disk struct {
	state                  protoimpl.MessageState `protogen:"opaque.v1"`
	xxx_hidden_Name        *string                `protobuf:"bytes,1,opt,name=name"`
	xxx_hidden_Type        *string                `protobuf:"bytes,2,opt,name=type"`
	XXX_raceDetectHookData protoimpl.RaceDetectHookData
	XXX_presence           [1]uint32
	unknownFields          protoimpl.UnknownFields
	sizeCache              protoimpl.SizeCache
}

func (x *Disk) Reset() {
	*x = Disk{}
	mi := &file_api_kubevirt_kubevirt_proto_msgTypes[10]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Disk) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Disk) ProtoMessage() {}

func (x *Disk) ProtoReflect() protoreflect.Message {
	mi := &file_api_kubevirt_kubevirt_proto_msgTypes[10]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *Disk) GetName() string {
	if x != nil {
		if x.xxx_hidden_Name != nil {
			return *x.xxx_hidden_Name
		}
		return ""
	}
	return ""
}

func (x *Disk) GetType() string {
	if x != nil {
		if x.xxx_hidden_Type != nil {
			return *x.xxx_hidden_Type
		}
		return ""
	}
	return ""
}

func (x *Disk) SetName(v string) {
	x.xxx_hidden_Name = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 0, 2)
}

func (x *Disk) SetType(v string) {
	x.xxx_hidden_Type = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 1, 2)
}

func (x *Disk) HasName() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 0)
}

func (x *Disk) HasType() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 1)
}

func (x *Disk) ClearName() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 0)
	x.xxx_hidden_Name = nil
}

func (x *Disk) ClearType() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 1)
	x.xxx_hidden_Type = nil
}

type Disk_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	Name *string
	Type *string
}

func (b0 Disk_builder) Build() *Disk {
	m0 := &Disk{}
	b, x := &b0, m0
	_, _ = b, x
	if b.Name != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 0, 2)
		x.xxx_hidden_Name = b.Name
	}
	if b.Type != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 1, 2)
		x.xxx_hidden_Type = b.Type
	}
	return m0
}

type USBDevice struct {
	state                  protoimpl.MessageState `protogen:"opaque.v1"`
	xxx_hidden_Name        *string                `protobuf:"bytes,1,opt,name=name"`
	xxx_hidden_Type        *string                `protobuf:"bytes,2,opt,name=type"`
	XXX_raceDetectHookData protoimpl.RaceDetectHookData
	XXX_presence           [1]uint32
	unknownFields          protoimpl.UnknownFields
	sizeCache              protoimpl.SizeCache
}

func (x *USBDevice) Reset() {
	*x = USBDevice{}
	mi := &file_api_kubevirt_kubevirt_proto_msgTypes[11]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *USBDevice) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*USBDevice) ProtoMessage() {}

func (x *USBDevice) ProtoReflect() protoreflect.Message {
	mi := &file_api_kubevirt_kubevirt_proto_msgTypes[11]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *USBDevice) GetName() string {
	if x != nil {
		if x.xxx_hidden_Name != nil {
			return *x.xxx_hidden_Name
		}
		return ""
	}
	return ""
}

func (x *USBDevice) GetType() string {
	if x != nil {
		if x.xxx_hidden_Type != nil {
			return *x.xxx_hidden_Type
		}
		return ""
	}
	return ""
}

func (x *USBDevice) SetName(v string) {
	x.xxx_hidden_Name = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 0, 2)
}

func (x *USBDevice) SetType(v string) {
	x.xxx_hidden_Type = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 1, 2)
}

func (x *USBDevice) HasName() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 0)
}

func (x *USBDevice) HasType() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 1)
}

func (x *USBDevice) ClearName() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 0)
	x.xxx_hidden_Name = nil
}

func (x *USBDevice) ClearType() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 1)
	x.xxx_hidden_Type = nil
}

type USBDevice_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	Name *string
	Type *string
}

func (b0 USBDevice_builder) Build() *USBDevice {
	m0 := &USBDevice{}
	b, x := &b0, m0
	_, _ = b, x
	if b.Name != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 0, 2)
		x.xxx_hidden_Name = b.Name
	}
	if b.Type != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 1, 2)
		x.xxx_hidden_Type = b.Type
	}
	return m0
}

type PCIeDevice struct {
	state                  protoimpl.MessageState `protogen:"opaque.v1"`
	xxx_hidden_Name        *string                `protobuf:"bytes,1,opt,name=name"`
	xxx_hidden_Type        *string                `protobuf:"bytes,2,opt,name=type"`
	XXX_raceDetectHookData protoimpl.RaceDetectHookData
	XXX_presence           [1]uint32
	unknownFields          protoimpl.UnknownFields
	sizeCache              protoimpl.SizeCache
}

func (x *PCIeDevice) Reset() {
	*x = PCIeDevice{}
	mi := &file_api_kubevirt_kubevirt_proto_msgTypes[12]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *PCIeDevice) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PCIeDevice) ProtoMessage() {}

func (x *PCIeDevice) ProtoReflect() protoreflect.Message {
	mi := &file_api_kubevirt_kubevirt_proto_msgTypes[12]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *PCIeDevice) GetName() string {
	if x != nil {
		if x.xxx_hidden_Name != nil {
			return *x.xxx_hidden_Name
		}
		return ""
	}
	return ""
}

func (x *PCIeDevice) GetType() string {
	if x != nil {
		if x.xxx_hidden_Type != nil {
			return *x.xxx_hidden_Type
		}
		return ""
	}
	return ""
}

func (x *PCIeDevice) SetName(v string) {
	x.xxx_hidden_Name = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 0, 2)
}

func (x *PCIeDevice) SetType(v string) {
	x.xxx_hidden_Type = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 1, 2)
}

func (x *PCIeDevice) HasName() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 0)
}

func (x *PCIeDevice) HasType() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 1)
}

func (x *PCIeDevice) ClearName() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 0)
	x.xxx_hidden_Name = nil
}

func (x *PCIeDevice) ClearType() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 1)
	x.xxx_hidden_Type = nil
}

type PCIeDevice_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	Name *string
	Type *string
}

func (b0 PCIeDevice_builder) Build() *PCIeDevice {
	m0 := &PCIeDevice{}
	b, x := &b0, m0
	_, _ = b, x
	if b.Name != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 0, 2)
		x.xxx_hidden_Name = b.Name
	}
	if b.Type != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 1, 2)
		x.xxx_hidden_Type = b.Type
	}
	return m0
}

type ListVirtualMachineRequest struct {
	state                  protoimpl.MessageState `protogen:"opaque.v1"`
	xxx_hidden_Namespace   *string                `protobuf:"bytes,1,opt,name=namespace"`
	XXX_raceDetectHookData protoimpl.RaceDetectHookData
	XXX_presence           [1]uint32
	unknownFields          protoimpl.UnknownFields
	sizeCache              protoimpl.SizeCache
}

func (x *ListVirtualMachineRequest) Reset() {
	*x = ListVirtualMachineRequest{}
	mi := &file_api_kubevirt_kubevirt_proto_msgTypes[13]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListVirtualMachineRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListVirtualMachineRequest) ProtoMessage() {}

func (x *ListVirtualMachineRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_kubevirt_kubevirt_proto_msgTypes[13]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *ListVirtualMachineRequest) GetNamespace() string {
	if x != nil {
		if x.xxx_hidden_Namespace != nil {
			return *x.xxx_hidden_Namespace
		}
		return ""
	}
	return ""
}

func (x *ListVirtualMachineRequest) SetNamespace(v string) {
	x.xxx_hidden_Namespace = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 0, 1)
}

func (x *ListVirtualMachineRequest) HasNamespace() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 0)
}

func (x *ListVirtualMachineRequest) ClearNamespace() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 0)
	x.xxx_hidden_Namespace = nil
}

type ListVirtualMachineRequest_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	Namespace *string
}

func (b0 ListVirtualMachineRequest_builder) Build() *ListVirtualMachineRequest {
	m0 := &ListVirtualMachineRequest{}
	b, x := &b0, m0
	_, _ = b, x
	if b.Namespace != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 0, 1)
		x.xxx_hidden_Namespace = b.Namespace
	}
	return m0
}

type ListVirtualMachineResponse struct {
	state                      protoimpl.MessageState `protogen:"opaque.v1"`
	xxx_hidden_VirtualMachines *[]*VirtualMachine     `protobuf:"bytes,1,rep,name=virtual_machines,json=virtualMachines"`
	unknownFields              protoimpl.UnknownFields
	sizeCache                  protoimpl.SizeCache
}

func (x *ListVirtualMachineResponse) Reset() {
	*x = ListVirtualMachineResponse{}
	mi := &file_api_kubevirt_kubevirt_proto_msgTypes[14]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListVirtualMachineResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListVirtualMachineResponse) ProtoMessage() {}

func (x *ListVirtualMachineResponse) ProtoReflect() protoreflect.Message {
	mi := &file_api_kubevirt_kubevirt_proto_msgTypes[14]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *ListVirtualMachineResponse) GetVirtualMachines() []*VirtualMachine {
	if x != nil {
		if x.xxx_hidden_VirtualMachines != nil {
			return *x.xxx_hidden_VirtualMachines
		}
	}
	return nil
}

func (x *ListVirtualMachineResponse) SetVirtualMachines(v []*VirtualMachine) {
	x.xxx_hidden_VirtualMachines = &v
}

type ListVirtualMachineResponse_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	VirtualMachines []*VirtualMachine
}

func (b0 ListVirtualMachineResponse_builder) Build() *ListVirtualMachineResponse {
	m0 := &ListVirtualMachineResponse{}
	b, x := &b0, m0
	_, _ = b, x
	x.xxx_hidden_VirtualMachines = &b.VirtualMachines
	return m0
}

type GetVirtualMachineRequest struct {
	state                  protoimpl.MessageState `protogen:"opaque.v1"`
	xxx_hidden_Name        *string                `protobuf:"bytes,1,opt,name=name"`
	xxx_hidden_Namespace   *string                `protobuf:"bytes,2,opt,name=namespace"`
	XXX_raceDetectHookData protoimpl.RaceDetectHookData
	XXX_presence           [1]uint32
	unknownFields          protoimpl.UnknownFields
	sizeCache              protoimpl.SizeCache
}

func (x *GetVirtualMachineRequest) Reset() {
	*x = GetVirtualMachineRequest{}
	mi := &file_api_kubevirt_kubevirt_proto_msgTypes[15]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetVirtualMachineRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetVirtualMachineRequest) ProtoMessage() {}

func (x *GetVirtualMachineRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_kubevirt_kubevirt_proto_msgTypes[15]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *GetVirtualMachineRequest) GetName() string {
	if x != nil {
		if x.xxx_hidden_Name != nil {
			return *x.xxx_hidden_Name
		}
		return ""
	}
	return ""
}

func (x *GetVirtualMachineRequest) GetNamespace() string {
	if x != nil {
		if x.xxx_hidden_Namespace != nil {
			return *x.xxx_hidden_Namespace
		}
		return ""
	}
	return ""
}

func (x *GetVirtualMachineRequest) SetName(v string) {
	x.xxx_hidden_Name = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 0, 2)
}

func (x *GetVirtualMachineRequest) SetNamespace(v string) {
	x.xxx_hidden_Namespace = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 1, 2)
}

func (x *GetVirtualMachineRequest) HasName() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 0)
}

func (x *GetVirtualMachineRequest) HasNamespace() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 1)
}

func (x *GetVirtualMachineRequest) ClearName() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 0)
	x.xxx_hidden_Name = nil
}

func (x *GetVirtualMachineRequest) ClearNamespace() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 1)
	x.xxx_hidden_Namespace = nil
}

type GetVirtualMachineRequest_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	Name      *string
	Namespace *string
}

func (b0 GetVirtualMachineRequest_builder) Build() *GetVirtualMachineRequest {
	m0 := &GetVirtualMachineRequest{}
	b, x := &b0, m0
	_, _ = b, x
	if b.Name != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 0, 2)
		x.xxx_hidden_Name = b.Name
	}
	if b.Namespace != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 1, 2)
		x.xxx_hidden_Namespace = b.Namespace
	}
	return m0
}

type GetVirtualMachineResponse struct {
	state                     protoimpl.MessageState `protogen:"opaque.v1"`
	xxx_hidden_VirtualMachine *VirtualMachine        `protobuf:"bytes,1,opt,name=virtual_machine,json=virtualMachine"`
	unknownFields             protoimpl.UnknownFields
	sizeCache                 protoimpl.SizeCache
}

func (x *GetVirtualMachineResponse) Reset() {
	*x = GetVirtualMachineResponse{}
	mi := &file_api_kubevirt_kubevirt_proto_msgTypes[16]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetVirtualMachineResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetVirtualMachineResponse) ProtoMessage() {}

func (x *GetVirtualMachineResponse) ProtoReflect() protoreflect.Message {
	mi := &file_api_kubevirt_kubevirt_proto_msgTypes[16]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *GetVirtualMachineResponse) GetVirtualMachine() *VirtualMachine {
	if x != nil {
		return x.xxx_hidden_VirtualMachine
	}
	return nil
}

func (x *GetVirtualMachineResponse) SetVirtualMachine(v *VirtualMachine) {
	x.xxx_hidden_VirtualMachine = v
}

func (x *GetVirtualMachineResponse) HasVirtualMachine() bool {
	if x == nil {
		return false
	}
	return x.xxx_hidden_VirtualMachine != nil
}

func (x *GetVirtualMachineResponse) ClearVirtualMachine() {
	x.xxx_hidden_VirtualMachine = nil
}

type GetVirtualMachineResponse_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	VirtualMachine *VirtualMachine
}

func (b0 GetVirtualMachineResponse_builder) Build() *GetVirtualMachineResponse {
	m0 := &GetVirtualMachineResponse{}
	b, x := &b0, m0
	_, _ = b, x
	x.xxx_hidden_VirtualMachine = b.VirtualMachine
	return m0
}

type CreateVirtualMachineRequest struct {
	state                  protoimpl.MessageState `protogen:"opaque.v1"`
	xxx_hidden_Name        *string                `protobuf:"bytes,1,opt,name=name"`
	xxx_hidden_Namespace   *string                `protobuf:"bytes,2,opt,name=namespace"`
	xxx_hidden_DataVolume  *DataVolume            `protobuf:"bytes,3,opt,name=data_volume,json=dataVolume"`
	xxx_hidden_NetworkName *string                `protobuf:"bytes,4,opt,name=network_name,json=networkName"`
	xxx_hidden_Flavor      *string                `protobuf:"bytes,5,opt,name=flavor"`
	xxx_hidden_Script      *string                `protobuf:"bytes,6,opt,name=script"`
	xxx_hidden_Disks       *[]*Disk               `protobuf:"bytes,7,rep,name=disks"`
	xxx_hidden_UsbDevices  *[]*USBDevice          `protobuf:"bytes,8,rep,name=usb_devices,json=usbDevices"`
	xxx_hidden_PcieDevices *[]*PCIeDevice         `protobuf:"bytes,9,rep,name=pcie_devices,json=pcieDevices"`
	XXX_raceDetectHookData protoimpl.RaceDetectHookData
	XXX_presence           [1]uint32
	unknownFields          protoimpl.UnknownFields
	sizeCache              protoimpl.SizeCache
}

func (x *CreateVirtualMachineRequest) Reset() {
	*x = CreateVirtualMachineRequest{}
	mi := &file_api_kubevirt_kubevirt_proto_msgTypes[17]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CreateVirtualMachineRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateVirtualMachineRequest) ProtoMessage() {}

func (x *CreateVirtualMachineRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_kubevirt_kubevirt_proto_msgTypes[17]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *CreateVirtualMachineRequest) GetName() string {
	if x != nil {
		if x.xxx_hidden_Name != nil {
			return *x.xxx_hidden_Name
		}
		return ""
	}
	return ""
}

func (x *CreateVirtualMachineRequest) GetNamespace() string {
	if x != nil {
		if x.xxx_hidden_Namespace != nil {
			return *x.xxx_hidden_Namespace
		}
		return ""
	}
	return ""
}

func (x *CreateVirtualMachineRequest) GetDataVolume() *DataVolume {
	if x != nil {
		return x.xxx_hidden_DataVolume
	}
	return nil
}

func (x *CreateVirtualMachineRequest) GetNetworkName() string {
	if x != nil {
		if x.xxx_hidden_NetworkName != nil {
			return *x.xxx_hidden_NetworkName
		}
		return ""
	}
	return ""
}

func (x *CreateVirtualMachineRequest) GetFlavor() string {
	if x != nil {
		if x.xxx_hidden_Flavor != nil {
			return *x.xxx_hidden_Flavor
		}
		return ""
	}
	return ""
}

func (x *CreateVirtualMachineRequest) GetScript() string {
	if x != nil {
		if x.xxx_hidden_Script != nil {
			return *x.xxx_hidden_Script
		}
		return ""
	}
	return ""
}

func (x *CreateVirtualMachineRequest) GetDisks() []*Disk {
	if x != nil {
		if x.xxx_hidden_Disks != nil {
			return *x.xxx_hidden_Disks
		}
	}
	return nil
}

func (x *CreateVirtualMachineRequest) GetUsbDevices() []*USBDevice {
	if x != nil {
		if x.xxx_hidden_UsbDevices != nil {
			return *x.xxx_hidden_UsbDevices
		}
	}
	return nil
}

func (x *CreateVirtualMachineRequest) GetPcieDevices() []*PCIeDevice {
	if x != nil {
		if x.xxx_hidden_PcieDevices != nil {
			return *x.xxx_hidden_PcieDevices
		}
	}
	return nil
}

func (x *CreateVirtualMachineRequest) SetName(v string) {
	x.xxx_hidden_Name = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 0, 9)
}

func (x *CreateVirtualMachineRequest) SetNamespace(v string) {
	x.xxx_hidden_Namespace = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 1, 9)
}

func (x *CreateVirtualMachineRequest) SetDataVolume(v *DataVolume) {
	x.xxx_hidden_DataVolume = v
}

func (x *CreateVirtualMachineRequest) SetNetworkName(v string) {
	x.xxx_hidden_NetworkName = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 3, 9)
}

func (x *CreateVirtualMachineRequest) SetFlavor(v string) {
	x.xxx_hidden_Flavor = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 4, 9)
}

func (x *CreateVirtualMachineRequest) SetScript(v string) {
	x.xxx_hidden_Script = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 5, 9)
}

func (x *CreateVirtualMachineRequest) SetDisks(v []*Disk) {
	x.xxx_hidden_Disks = &v
}

func (x *CreateVirtualMachineRequest) SetUsbDevices(v []*USBDevice) {
	x.xxx_hidden_UsbDevices = &v
}

func (x *CreateVirtualMachineRequest) SetPcieDevices(v []*PCIeDevice) {
	x.xxx_hidden_PcieDevices = &v
}

func (x *CreateVirtualMachineRequest) HasName() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 0)
}

func (x *CreateVirtualMachineRequest) HasNamespace() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 1)
}

func (x *CreateVirtualMachineRequest) HasDataVolume() bool {
	if x == nil {
		return false
	}
	return x.xxx_hidden_DataVolume != nil
}

func (x *CreateVirtualMachineRequest) HasNetworkName() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 3)
}

func (x *CreateVirtualMachineRequest) HasFlavor() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 4)
}

func (x *CreateVirtualMachineRequest) HasScript() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 5)
}

func (x *CreateVirtualMachineRequest) ClearName() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 0)
	x.xxx_hidden_Name = nil
}

func (x *CreateVirtualMachineRequest) ClearNamespace() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 1)
	x.xxx_hidden_Namespace = nil
}

func (x *CreateVirtualMachineRequest) ClearDataVolume() {
	x.xxx_hidden_DataVolume = nil
}

func (x *CreateVirtualMachineRequest) ClearNetworkName() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 3)
	x.xxx_hidden_NetworkName = nil
}

func (x *CreateVirtualMachineRequest) ClearFlavor() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 4)
	x.xxx_hidden_Flavor = nil
}

func (x *CreateVirtualMachineRequest) ClearScript() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 5)
	x.xxx_hidden_Script = nil
}

type CreateVirtualMachineRequest_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	Name        *string
	Namespace   *string
	DataVolume  *DataVolume
	NetworkName *string
	Flavor      *string
	Script      *string
	Disks       []*Disk
	UsbDevices  []*USBDevice
	PcieDevices []*PCIeDevice
}

func (b0 CreateVirtualMachineRequest_builder) Build() *CreateVirtualMachineRequest {
	m0 := &CreateVirtualMachineRequest{}
	b, x := &b0, m0
	_, _ = b, x
	if b.Name != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 0, 9)
		x.xxx_hidden_Name = b.Name
	}
	if b.Namespace != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 1, 9)
		x.xxx_hidden_Namespace = b.Namespace
	}
	x.xxx_hidden_DataVolume = b.DataVolume
	if b.NetworkName != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 3, 9)
		x.xxx_hidden_NetworkName = b.NetworkName
	}
	if b.Flavor != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 4, 9)
		x.xxx_hidden_Flavor = b.Flavor
	}
	if b.Script != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 5, 9)
		x.xxx_hidden_Script = b.Script
	}
	x.xxx_hidden_Disks = &b.Disks
	x.xxx_hidden_UsbDevices = &b.UsbDevices
	x.xxx_hidden_PcieDevices = &b.PcieDevices
	return m0
}

type CreateVirtualMachineResponse struct {
	state                     protoimpl.MessageState `protogen:"opaque.v1"`
	xxx_hidden_VirtualMachine *VirtualMachine        `protobuf:"bytes,1,opt,name=virtual_machine,json=virtualMachine"`
	unknownFields             protoimpl.UnknownFields
	sizeCache                 protoimpl.SizeCache
}

func (x *CreateVirtualMachineResponse) Reset() {
	*x = CreateVirtualMachineResponse{}
	mi := &file_api_kubevirt_kubevirt_proto_msgTypes[18]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CreateVirtualMachineResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateVirtualMachineResponse) ProtoMessage() {}

func (x *CreateVirtualMachineResponse) ProtoReflect() protoreflect.Message {
	mi := &file_api_kubevirt_kubevirt_proto_msgTypes[18]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *CreateVirtualMachineResponse) GetVirtualMachine() *VirtualMachine {
	if x != nil {
		return x.xxx_hidden_VirtualMachine
	}
	return nil
}

func (x *CreateVirtualMachineResponse) SetVirtualMachine(v *VirtualMachine) {
	x.xxx_hidden_VirtualMachine = v
}

func (x *CreateVirtualMachineResponse) HasVirtualMachine() bool {
	if x == nil {
		return false
	}
	return x.xxx_hidden_VirtualMachine != nil
}

func (x *CreateVirtualMachineResponse) ClearVirtualMachine() {
	x.xxx_hidden_VirtualMachine = nil
}

type CreateVirtualMachineResponse_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	VirtualMachine *VirtualMachine
}

func (b0 CreateVirtualMachineResponse_builder) Build() *CreateVirtualMachineResponse {
	m0 := &CreateVirtualMachineResponse{}
	b, x := &b0, m0
	_, _ = b, x
	x.xxx_hidden_VirtualMachine = b.VirtualMachine
	return m0
}

type UpdateVirtualMachineRequest struct {
	state                  protoimpl.MessageState `protogen:"opaque.v1"`
	xxx_hidden_Name        *string                `protobuf:"bytes,1,opt,name=name"`
	xxx_hidden_Namespace   *string                `protobuf:"bytes,2,opt,name=namespace"`
	xxx_hidden_Flavor      *string                `protobuf:"bytes,3,opt,name=flavor"`
	xxx_hidden_Disks       *[]*Disk               `protobuf:"bytes,4,rep,name=disks"`
	xxx_hidden_UsbDevices  *[]*USBDevice          `protobuf:"bytes,5,rep,name=usb_devices,json=usbDevices"`
	xxx_hidden_PcieDevices *[]*PCIeDevice         `protobuf:"bytes,6,rep,name=pcie_devices,json=pcieDevices"`
	XXX_raceDetectHookData protoimpl.RaceDetectHookData
	XXX_presence           [1]uint32
	unknownFields          protoimpl.UnknownFields
	sizeCache              protoimpl.SizeCache
}

func (x *UpdateVirtualMachineRequest) Reset() {
	*x = UpdateVirtualMachineRequest{}
	mi := &file_api_kubevirt_kubevirt_proto_msgTypes[19]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UpdateVirtualMachineRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateVirtualMachineRequest) ProtoMessage() {}

func (x *UpdateVirtualMachineRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_kubevirt_kubevirt_proto_msgTypes[19]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *UpdateVirtualMachineRequest) GetName() string {
	if x != nil {
		if x.xxx_hidden_Name != nil {
			return *x.xxx_hidden_Name
		}
		return ""
	}
	return ""
}

func (x *UpdateVirtualMachineRequest) GetNamespace() string {
	if x != nil {
		if x.xxx_hidden_Namespace != nil {
			return *x.xxx_hidden_Namespace
		}
		return ""
	}
	return ""
}

func (x *UpdateVirtualMachineRequest) GetFlavor() string {
	if x != nil {
		if x.xxx_hidden_Flavor != nil {
			return *x.xxx_hidden_Flavor
		}
		return ""
	}
	return ""
}

func (x *UpdateVirtualMachineRequest) GetDisks() []*Disk {
	if x != nil {
		if x.xxx_hidden_Disks != nil {
			return *x.xxx_hidden_Disks
		}
	}
	return nil
}

func (x *UpdateVirtualMachineRequest) GetUsbDevices() []*USBDevice {
	if x != nil {
		if x.xxx_hidden_UsbDevices != nil {
			return *x.xxx_hidden_UsbDevices
		}
	}
	return nil
}

func (x *UpdateVirtualMachineRequest) GetPcieDevices() []*PCIeDevice {
	if x != nil {
		if x.xxx_hidden_PcieDevices != nil {
			return *x.xxx_hidden_PcieDevices
		}
	}
	return nil
}

func (x *UpdateVirtualMachineRequest) SetName(v string) {
	x.xxx_hidden_Name = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 0, 6)
}

func (x *UpdateVirtualMachineRequest) SetNamespace(v string) {
	x.xxx_hidden_Namespace = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 1, 6)
}

func (x *UpdateVirtualMachineRequest) SetFlavor(v string) {
	x.xxx_hidden_Flavor = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 2, 6)
}

func (x *UpdateVirtualMachineRequest) SetDisks(v []*Disk) {
	x.xxx_hidden_Disks = &v
}

func (x *UpdateVirtualMachineRequest) SetUsbDevices(v []*USBDevice) {
	x.xxx_hidden_UsbDevices = &v
}

func (x *UpdateVirtualMachineRequest) SetPcieDevices(v []*PCIeDevice) {
	x.xxx_hidden_PcieDevices = &v
}

func (x *UpdateVirtualMachineRequest) HasName() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 0)
}

func (x *UpdateVirtualMachineRequest) HasNamespace() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 1)
}

func (x *UpdateVirtualMachineRequest) HasFlavor() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 2)
}

func (x *UpdateVirtualMachineRequest) ClearName() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 0)
	x.xxx_hidden_Name = nil
}

func (x *UpdateVirtualMachineRequest) ClearNamespace() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 1)
	x.xxx_hidden_Namespace = nil
}

func (x *UpdateVirtualMachineRequest) ClearFlavor() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 2)
	x.xxx_hidden_Flavor = nil
}

type UpdateVirtualMachineRequest_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	Name        *string
	Namespace   *string
	Flavor      *string
	Disks       []*Disk
	UsbDevices  []*USBDevice
	PcieDevices []*PCIeDevice
}

func (b0 UpdateVirtualMachineRequest_builder) Build() *UpdateVirtualMachineRequest {
	m0 := &UpdateVirtualMachineRequest{}
	b, x := &b0, m0
	_, _ = b, x
	if b.Name != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 0, 6)
		x.xxx_hidden_Name = b.Name
	}
	if b.Namespace != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 1, 6)
		x.xxx_hidden_Namespace = b.Namespace
	}
	if b.Flavor != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 2, 6)
		x.xxx_hidden_Flavor = b.Flavor
	}
	x.xxx_hidden_Disks = &b.Disks
	x.xxx_hidden_UsbDevices = &b.UsbDevices
	x.xxx_hidden_PcieDevices = &b.PcieDevices
	return m0
}

type UpdateVirtualMachineResponse struct {
	state                     protoimpl.MessageState `protogen:"opaque.v1"`
	xxx_hidden_VirtualMachine *VirtualMachine        `protobuf:"bytes,1,opt,name=virtual_machine,json=virtualMachine"`
	unknownFields             protoimpl.UnknownFields
	sizeCache                 protoimpl.SizeCache
}

func (x *UpdateVirtualMachineResponse) Reset() {
	*x = UpdateVirtualMachineResponse{}
	mi := &file_api_kubevirt_kubevirt_proto_msgTypes[20]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UpdateVirtualMachineResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateVirtualMachineResponse) ProtoMessage() {}

func (x *UpdateVirtualMachineResponse) ProtoReflect() protoreflect.Message {
	mi := &file_api_kubevirt_kubevirt_proto_msgTypes[20]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *UpdateVirtualMachineResponse) GetVirtualMachine() *VirtualMachine {
	if x != nil {
		return x.xxx_hidden_VirtualMachine
	}
	return nil
}

func (x *UpdateVirtualMachineResponse) SetVirtualMachine(v *VirtualMachine) {
	x.xxx_hidden_VirtualMachine = v
}

func (x *UpdateVirtualMachineResponse) HasVirtualMachine() bool {
	if x == nil {
		return false
	}
	return x.xxx_hidden_VirtualMachine != nil
}

func (x *UpdateVirtualMachineResponse) ClearVirtualMachine() {
	x.xxx_hidden_VirtualMachine = nil
}

type UpdateVirtualMachineResponse_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	VirtualMachine *VirtualMachine
}

func (b0 UpdateVirtualMachineResponse_builder) Build() *UpdateVirtualMachineResponse {
	m0 := &UpdateVirtualMachineResponse{}
	b, x := &b0, m0
	_, _ = b, x
	x.xxx_hidden_VirtualMachine = b.VirtualMachine
	return m0
}

type DeleteVirtualMachineRequest struct {
	state                  protoimpl.MessageState `protogen:"opaque.v1"`
	xxx_hidden_Name        *string                `protobuf:"bytes,1,opt,name=name"`
	xxx_hidden_Namespace   *string                `protobuf:"bytes,2,opt,name=namespace"`
	XXX_raceDetectHookData protoimpl.RaceDetectHookData
	XXX_presence           [1]uint32
	unknownFields          protoimpl.UnknownFields
	sizeCache              protoimpl.SizeCache
}

func (x *DeleteVirtualMachineRequest) Reset() {
	*x = DeleteVirtualMachineRequest{}
	mi := &file_api_kubevirt_kubevirt_proto_msgTypes[21]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DeleteVirtualMachineRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteVirtualMachineRequest) ProtoMessage() {}

func (x *DeleteVirtualMachineRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_kubevirt_kubevirt_proto_msgTypes[21]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *DeleteVirtualMachineRequest) GetName() string {
	if x != nil {
		if x.xxx_hidden_Name != nil {
			return *x.xxx_hidden_Name
		}
		return ""
	}
	return ""
}

func (x *DeleteVirtualMachineRequest) GetNamespace() string {
	if x != nil {
		if x.xxx_hidden_Namespace != nil {
			return *x.xxx_hidden_Namespace
		}
		return ""
	}
	return ""
}

func (x *DeleteVirtualMachineRequest) SetName(v string) {
	x.xxx_hidden_Name = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 0, 2)
}

func (x *DeleteVirtualMachineRequest) SetNamespace(v string) {
	x.xxx_hidden_Namespace = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 1, 2)
}

func (x *DeleteVirtualMachineRequest) HasName() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 0)
}

func (x *DeleteVirtualMachineRequest) HasNamespace() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 1)
}

func (x *DeleteVirtualMachineRequest) ClearName() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 0)
	x.xxx_hidden_Name = nil
}

func (x *DeleteVirtualMachineRequest) ClearNamespace() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 1)
	x.xxx_hidden_Namespace = nil
}

type DeleteVirtualMachineRequest_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	Name      *string
	Namespace *string
}

func (b0 DeleteVirtualMachineRequest_builder) Build() *DeleteVirtualMachineRequest {
	m0 := &DeleteVirtualMachineRequest{}
	b, x := &b0, m0
	_, _ = b, x
	if b.Name != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 0, 2)
		x.xxx_hidden_Name = b.Name
	}
	if b.Namespace != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 1, 2)
		x.xxx_hidden_Namespace = b.Namespace
	}
	return m0
}

type DeleteVirtualMachineResponse struct {
	state            protoimpl.MessageState `protogen:"opaque.v1"`
	xxx_hidden_Empty *emptypb.Empty         `protobuf:"bytes,1,opt,name=empty"`
	unknownFields    protoimpl.UnknownFields
	sizeCache        protoimpl.SizeCache
}

func (x *DeleteVirtualMachineResponse) Reset() {
	*x = DeleteVirtualMachineResponse{}
	mi := &file_api_kubevirt_kubevirt_proto_msgTypes[22]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DeleteVirtualMachineResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteVirtualMachineResponse) ProtoMessage() {}

func (x *DeleteVirtualMachineResponse) ProtoReflect() protoreflect.Message {
	mi := &file_api_kubevirt_kubevirt_proto_msgTypes[22]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *DeleteVirtualMachineResponse) GetEmpty() *emptypb.Empty {
	if x != nil {
		return x.xxx_hidden_Empty
	}
	return nil
}

func (x *DeleteVirtualMachineResponse) SetEmpty(v *emptypb.Empty) {
	x.xxx_hidden_Empty = v
}

func (x *DeleteVirtualMachineResponse) HasEmpty() bool {
	if x == nil {
		return false
	}
	return x.xxx_hidden_Empty != nil
}

func (x *DeleteVirtualMachineResponse) ClearEmpty() {
	x.xxx_hidden_Empty = nil
}

type DeleteVirtualMachineResponse_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	Empty *emptypb.Empty
}

func (b0 DeleteVirtualMachineResponse_builder) Build() *DeleteVirtualMachineResponse {
	m0 := &DeleteVirtualMachineResponse{}
	b, x := &b0, m0
	_, _ = b, x
	x.xxx_hidden_Empty = b.Empty
	return m0
}

type SnapshotVirtualMachineRequest struct {
	state                  protoimpl.MessageState `protogen:"opaque.v1"`
	xxx_hidden_VmName      *string                `protobuf:"bytes,1,opt,name=vm_name,json=vmName"`
	xxx_hidden_VmNamespace *string                `protobuf:"bytes,2,opt,name=vm_namespace,json=vmNamespace"`
	xxx_hidden_TargetName  *string                `protobuf:"bytes,3,opt,name=target_name,json=targetName"`
	XXX_raceDetectHookData protoimpl.RaceDetectHookData
	XXX_presence           [1]uint32
	unknownFields          protoimpl.UnknownFields
	sizeCache              protoimpl.SizeCache
}

func (x *SnapshotVirtualMachineRequest) Reset() {
	*x = SnapshotVirtualMachineRequest{}
	mi := &file_api_kubevirt_kubevirt_proto_msgTypes[23]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SnapshotVirtualMachineRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SnapshotVirtualMachineRequest) ProtoMessage() {}

func (x *SnapshotVirtualMachineRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_kubevirt_kubevirt_proto_msgTypes[23]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *SnapshotVirtualMachineRequest) GetVmName() string {
	if x != nil {
		if x.xxx_hidden_VmName != nil {
			return *x.xxx_hidden_VmName
		}
		return ""
	}
	return ""
}

func (x *SnapshotVirtualMachineRequest) GetVmNamespace() string {
	if x != nil {
		if x.xxx_hidden_VmNamespace != nil {
			return *x.xxx_hidden_VmNamespace
		}
		return ""
	}
	return ""
}

func (x *SnapshotVirtualMachineRequest) GetTargetName() string {
	if x != nil {
		if x.xxx_hidden_TargetName != nil {
			return *x.xxx_hidden_TargetName
		}
		return ""
	}
	return ""
}

func (x *SnapshotVirtualMachineRequest) SetVmName(v string) {
	x.xxx_hidden_VmName = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 0, 3)
}

func (x *SnapshotVirtualMachineRequest) SetVmNamespace(v string) {
	x.xxx_hidden_VmNamespace = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 1, 3)
}

func (x *SnapshotVirtualMachineRequest) SetTargetName(v string) {
	x.xxx_hidden_TargetName = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 2, 3)
}

func (x *SnapshotVirtualMachineRequest) HasVmName() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 0)
}

func (x *SnapshotVirtualMachineRequest) HasVmNamespace() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 1)
}

func (x *SnapshotVirtualMachineRequest) HasTargetName() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 2)
}

func (x *SnapshotVirtualMachineRequest) ClearVmName() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 0)
	x.xxx_hidden_VmName = nil
}

func (x *SnapshotVirtualMachineRequest) ClearVmNamespace() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 1)
	x.xxx_hidden_VmNamespace = nil
}

func (x *SnapshotVirtualMachineRequest) ClearTargetName() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 2)
	x.xxx_hidden_TargetName = nil
}

type SnapshotVirtualMachineRequest_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	VmName      *string
	VmNamespace *string
	TargetName  *string
}

func (b0 SnapshotVirtualMachineRequest_builder) Build() *SnapshotVirtualMachineRequest {
	m0 := &SnapshotVirtualMachineRequest{}
	b, x := &b0, m0
	_, _ = b, x
	if b.VmName != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 0, 3)
		x.xxx_hidden_VmName = b.VmName
	}
	if b.VmNamespace != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 1, 3)
		x.xxx_hidden_VmNamespace = b.VmNamespace
	}
	if b.TargetName != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 2, 3)
		x.xxx_hidden_TargetName = b.TargetName
	}
	return m0
}

type CloneVirtualMachineRequest struct {
	state                  protoimpl.MessageState `protogen:"opaque.v1"`
	xxx_hidden_VmName      *string                `protobuf:"bytes,1,opt,name=vm_name,json=vmName"`
	xxx_hidden_VmNamespace *string                `protobuf:"bytes,2,opt,name=vm_namespace,json=vmNamespace"`
	xxx_hidden_TargetName  *string                `protobuf:"bytes,3,opt,name=target_name,json=targetName"`
	XXX_raceDetectHookData protoimpl.RaceDetectHookData
	XXX_presence           [1]uint32
	unknownFields          protoimpl.UnknownFields
	sizeCache              protoimpl.SizeCache
}

func (x *CloneVirtualMachineRequest) Reset() {
	*x = CloneVirtualMachineRequest{}
	mi := &file_api_kubevirt_kubevirt_proto_msgTypes[24]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CloneVirtualMachineRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CloneVirtualMachineRequest) ProtoMessage() {}

func (x *CloneVirtualMachineRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_kubevirt_kubevirt_proto_msgTypes[24]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *CloneVirtualMachineRequest) GetVmName() string {
	if x != nil {
		if x.xxx_hidden_VmName != nil {
			return *x.xxx_hidden_VmName
		}
		return ""
	}
	return ""
}

func (x *CloneVirtualMachineRequest) GetVmNamespace() string {
	if x != nil {
		if x.xxx_hidden_VmNamespace != nil {
			return *x.xxx_hidden_VmNamespace
		}
		return ""
	}
	return ""
}

func (x *CloneVirtualMachineRequest) GetTargetName() string {
	if x != nil {
		if x.xxx_hidden_TargetName != nil {
			return *x.xxx_hidden_TargetName
		}
		return ""
	}
	return ""
}

func (x *CloneVirtualMachineRequest) SetVmName(v string) {
	x.xxx_hidden_VmName = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 0, 3)
}

func (x *CloneVirtualMachineRequest) SetVmNamespace(v string) {
	x.xxx_hidden_VmNamespace = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 1, 3)
}

func (x *CloneVirtualMachineRequest) SetTargetName(v string) {
	x.xxx_hidden_TargetName = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 2, 3)
}

func (x *CloneVirtualMachineRequest) HasVmName() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 0)
}

func (x *CloneVirtualMachineRequest) HasVmNamespace() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 1)
}

func (x *CloneVirtualMachineRequest) HasTargetName() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 2)
}

func (x *CloneVirtualMachineRequest) ClearVmName() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 0)
	x.xxx_hidden_VmName = nil
}

func (x *CloneVirtualMachineRequest) ClearVmNamespace() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 1)
	x.xxx_hidden_VmNamespace = nil
}

func (x *CloneVirtualMachineRequest) ClearTargetName() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 2)
	x.xxx_hidden_TargetName = nil
}

type CloneVirtualMachineRequest_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	VmName      *string
	VmNamespace *string
	TargetName  *string
}

func (b0 CloneVirtualMachineRequest_builder) Build() *CloneVirtualMachineRequest {
	m0 := &CloneVirtualMachineRequest{}
	b, x := &b0, m0
	_, _ = b, x
	if b.VmName != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 0, 3)
		x.xxx_hidden_VmName = b.VmName
	}
	if b.VmNamespace != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 1, 3)
		x.xxx_hidden_VmNamespace = b.VmNamespace
	}
	if b.TargetName != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 2, 3)
		x.xxx_hidden_TargetName = b.TargetName
	}
	return m0
}

type RestoreVirtualMachineRequest struct {
	state                   protoimpl.MessageState `protogen:"opaque.v1"`
	xxx_hidden_VmName       *string                `protobuf:"bytes,1,opt,name=vm_name,json=vmName"`
	xxx_hidden_SnapshotName *string                `protobuf:"bytes,2,opt,name=snapshot_name,json=snapshotName"`
	XXX_raceDetectHookData  protoimpl.RaceDetectHookData
	XXX_presence            [1]uint32
	unknownFields           protoimpl.UnknownFields
	sizeCache               protoimpl.SizeCache
}

func (x *RestoreVirtualMachineRequest) Reset() {
	*x = RestoreVirtualMachineRequest{}
	mi := &file_api_kubevirt_kubevirt_proto_msgTypes[25]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RestoreVirtualMachineRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RestoreVirtualMachineRequest) ProtoMessage() {}

func (x *RestoreVirtualMachineRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_kubevirt_kubevirt_proto_msgTypes[25]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *RestoreVirtualMachineRequest) GetVmName() string {
	if x != nil {
		if x.xxx_hidden_VmName != nil {
			return *x.xxx_hidden_VmName
		}
		return ""
	}
	return ""
}

func (x *RestoreVirtualMachineRequest) GetSnapshotName() string {
	if x != nil {
		if x.xxx_hidden_SnapshotName != nil {
			return *x.xxx_hidden_SnapshotName
		}
		return ""
	}
	return ""
}

func (x *RestoreVirtualMachineRequest) SetVmName(v string) {
	x.xxx_hidden_VmName = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 0, 2)
}

func (x *RestoreVirtualMachineRequest) SetSnapshotName(v string) {
	x.xxx_hidden_SnapshotName = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 1, 2)
}

func (x *RestoreVirtualMachineRequest) HasVmName() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 0)
}

func (x *RestoreVirtualMachineRequest) HasSnapshotName() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 1)
}

func (x *RestoreVirtualMachineRequest) ClearVmName() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 0)
	x.xxx_hidden_VmName = nil
}

func (x *RestoreVirtualMachineRequest) ClearSnapshotName() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 1)
	x.xxx_hidden_SnapshotName = nil
}

type RestoreVirtualMachineRequest_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	VmName       *string
	SnapshotName *string
}

func (b0 RestoreVirtualMachineRequest_builder) Build() *RestoreVirtualMachineRequest {
	m0 := &RestoreVirtualMachineRequest{}
	b, x := &b0, m0
	_, _ = b, x
	if b.VmName != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 0, 2)
		x.xxx_hidden_VmName = b.VmName
	}
	if b.SnapshotName != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 1, 2)
		x.xxx_hidden_SnapshotName = b.SnapshotName
	}
	return m0
}

type MigrateVirtualMachineRequest struct {
	state                  protoimpl.MessageState `protogen:"opaque.v1"`
	xxx_hidden_VmName      *string                `protobuf:"bytes,1,opt,name=vm_name,json=vmName"`
	xxx_hidden_VmNamespace *string                `protobuf:"bytes,2,opt,name=vm_namespace,json=vmNamespace"`
	XXX_raceDetectHookData protoimpl.RaceDetectHookData
	XXX_presence           [1]uint32
	unknownFields          protoimpl.UnknownFields
	sizeCache              protoimpl.SizeCache
}

func (x *MigrateVirtualMachineRequest) Reset() {
	*x = MigrateVirtualMachineRequest{}
	mi := &file_api_kubevirt_kubevirt_proto_msgTypes[26]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *MigrateVirtualMachineRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MigrateVirtualMachineRequest) ProtoMessage() {}

func (x *MigrateVirtualMachineRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_kubevirt_kubevirt_proto_msgTypes[26]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *MigrateVirtualMachineRequest) GetVmName() string {
	if x != nil {
		if x.xxx_hidden_VmName != nil {
			return *x.xxx_hidden_VmName
		}
		return ""
	}
	return ""
}

func (x *MigrateVirtualMachineRequest) GetVmNamespace() string {
	if x != nil {
		if x.xxx_hidden_VmNamespace != nil {
			return *x.xxx_hidden_VmNamespace
		}
		return ""
	}
	return ""
}

func (x *MigrateVirtualMachineRequest) SetVmName(v string) {
	x.xxx_hidden_VmName = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 0, 2)
}

func (x *MigrateVirtualMachineRequest) SetVmNamespace(v string) {
	x.xxx_hidden_VmNamespace = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 1, 2)
}

func (x *MigrateVirtualMachineRequest) HasVmName() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 0)
}

func (x *MigrateVirtualMachineRequest) HasVmNamespace() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 1)
}

func (x *MigrateVirtualMachineRequest) ClearVmName() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 0)
	x.xxx_hidden_VmName = nil
}

func (x *MigrateVirtualMachineRequest) ClearVmNamespace() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 1)
	x.xxx_hidden_VmNamespace = nil
}

type MigrateVirtualMachineRequest_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	VmName      *string
	VmNamespace *string
}

func (b0 MigrateVirtualMachineRequest_builder) Build() *MigrateVirtualMachineRequest {
	m0 := &MigrateVirtualMachineRequest{}
	b, x := &b0, m0
	_, _ = b, x
	if b.VmName != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 0, 2)
		x.xxx_hidden_VmName = b.VmName
	}
	if b.VmNamespace != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 1, 2)
		x.xxx_hidden_VmNamespace = b.VmNamespace
	}
	return m0
}

type StartVirtualMachineRequest struct {
	state                  protoimpl.MessageState `protogen:"opaque.v1"`
	xxx_hidden_VmName      *string                `protobuf:"bytes,1,opt,name=vm_name,json=vmName"`
	XXX_raceDetectHookData protoimpl.RaceDetectHookData
	XXX_presence           [1]uint32
	unknownFields          protoimpl.UnknownFields
	sizeCache              protoimpl.SizeCache
}

func (x *StartVirtualMachineRequest) Reset() {
	*x = StartVirtualMachineRequest{}
	mi := &file_api_kubevirt_kubevirt_proto_msgTypes[27]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *StartVirtualMachineRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StartVirtualMachineRequest) ProtoMessage() {}

func (x *StartVirtualMachineRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_kubevirt_kubevirt_proto_msgTypes[27]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *StartVirtualMachineRequest) GetVmName() string {
	if x != nil {
		if x.xxx_hidden_VmName != nil {
			return *x.xxx_hidden_VmName
		}
		return ""
	}
	return ""
}

func (x *StartVirtualMachineRequest) SetVmName(v string) {
	x.xxx_hidden_VmName = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 0, 1)
}

func (x *StartVirtualMachineRequest) HasVmName() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 0)
}

func (x *StartVirtualMachineRequest) ClearVmName() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 0)
	x.xxx_hidden_VmName = nil
}

type StartVirtualMachineRequest_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	VmName *string
}

func (b0 StartVirtualMachineRequest_builder) Build() *StartVirtualMachineRequest {
	m0 := &StartVirtualMachineRequest{}
	b, x := &b0, m0
	_, _ = b, x
	if b.VmName != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 0, 1)
		x.xxx_hidden_VmName = b.VmName
	}
	return m0
}

type StopVirtualMachineRequest struct {
	state                  protoimpl.MessageState `protogen:"opaque.v1"`
	xxx_hidden_VmName      *string                `protobuf:"bytes,1,opt,name=vm_name,json=vmName"`
	XXX_raceDetectHookData protoimpl.RaceDetectHookData
	XXX_presence           [1]uint32
	unknownFields          protoimpl.UnknownFields
	sizeCache              protoimpl.SizeCache
}

func (x *StopVirtualMachineRequest) Reset() {
	*x = StopVirtualMachineRequest{}
	mi := &file_api_kubevirt_kubevirt_proto_msgTypes[28]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *StopVirtualMachineRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StopVirtualMachineRequest) ProtoMessage() {}

func (x *StopVirtualMachineRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_kubevirt_kubevirt_proto_msgTypes[28]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *StopVirtualMachineRequest) GetVmName() string {
	if x != nil {
		if x.xxx_hidden_VmName != nil {
			return *x.xxx_hidden_VmName
		}
		return ""
	}
	return ""
}

func (x *StopVirtualMachineRequest) SetVmName(v string) {
	x.xxx_hidden_VmName = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 0, 1)
}

func (x *StopVirtualMachineRequest) HasVmName() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 0)
}

func (x *StopVirtualMachineRequest) ClearVmName() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 0)
	x.xxx_hidden_VmName = nil
}

type StopVirtualMachineRequest_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	VmName *string
}

func (b0 StopVirtualMachineRequest_builder) Build() *StopVirtualMachineRequest {
	m0 := &StopVirtualMachineRequest{}
	b, x := &b0, m0
	_, _ = b, x
	if b.VmName != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 0, 1)
		x.xxx_hidden_VmName = b.VmName
	}
	return m0
}

type PauseVirtualMachineRequest struct {
	state                  protoimpl.MessageState `protogen:"opaque.v1"`
	xxx_hidden_VmName      *string                `protobuf:"bytes,1,opt,name=vm_name,json=vmName"`
	XXX_raceDetectHookData protoimpl.RaceDetectHookData
	XXX_presence           [1]uint32
	unknownFields          protoimpl.UnknownFields
	sizeCache              protoimpl.SizeCache
}

func (x *PauseVirtualMachineRequest) Reset() {
	*x = PauseVirtualMachineRequest{}
	mi := &file_api_kubevirt_kubevirt_proto_msgTypes[29]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *PauseVirtualMachineRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PauseVirtualMachineRequest) ProtoMessage() {}

func (x *PauseVirtualMachineRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_kubevirt_kubevirt_proto_msgTypes[29]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *PauseVirtualMachineRequest) GetVmName() string {
	if x != nil {
		if x.xxx_hidden_VmName != nil {
			return *x.xxx_hidden_VmName
		}
		return ""
	}
	return ""
}

func (x *PauseVirtualMachineRequest) SetVmName(v string) {
	x.xxx_hidden_VmName = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 0, 1)
}

func (x *PauseVirtualMachineRequest) HasVmName() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 0)
}

func (x *PauseVirtualMachineRequest) ClearVmName() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 0)
	x.xxx_hidden_VmName = nil
}

type PauseVirtualMachineRequest_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	VmName *string
}

func (b0 PauseVirtualMachineRequest_builder) Build() *PauseVirtualMachineRequest {
	m0 := &PauseVirtualMachineRequest{}
	b, x := &b0, m0
	_, _ = b, x
	if b.VmName != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 0, 1)
		x.xxx_hidden_VmName = b.VmName
	}
	return m0
}

type UnpauseVirtualMachineRequest struct {
	state                  protoimpl.MessageState `protogen:"opaque.v1"`
	xxx_hidden_VmName      *string                `protobuf:"bytes,1,opt,name=vm_name,json=vmName"`
	XXX_raceDetectHookData protoimpl.RaceDetectHookData
	XXX_presence           [1]uint32
	unknownFields          protoimpl.UnknownFields
	sizeCache              protoimpl.SizeCache
}

func (x *UnpauseVirtualMachineRequest) Reset() {
	*x = UnpauseVirtualMachineRequest{}
	mi := &file_api_kubevirt_kubevirt_proto_msgTypes[30]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UnpauseVirtualMachineRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UnpauseVirtualMachineRequest) ProtoMessage() {}

func (x *UnpauseVirtualMachineRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_kubevirt_kubevirt_proto_msgTypes[30]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *UnpauseVirtualMachineRequest) GetVmName() string {
	if x != nil {
		if x.xxx_hidden_VmName != nil {
			return *x.xxx_hidden_VmName
		}
		return ""
	}
	return ""
}

func (x *UnpauseVirtualMachineRequest) SetVmName(v string) {
	x.xxx_hidden_VmName = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 0, 1)
}

func (x *UnpauseVirtualMachineRequest) HasVmName() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 0)
}

func (x *UnpauseVirtualMachineRequest) ClearVmName() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 0)
	x.xxx_hidden_VmName = nil
}

type UnpauseVirtualMachineRequest_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	VmName *string
}

func (b0 UnpauseVirtualMachineRequest_builder) Build() *UnpauseVirtualMachineRequest {
	m0 := &UnpauseVirtualMachineRequest{}
	b, x := &b0, m0
	_, _ = b, x
	if b.VmName != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 0, 1)
		x.xxx_hidden_VmName = b.VmName
	}
	return m0
}

type CreateDataVolumeRequest struct {
	state                 protoimpl.MessageState `protogen:"opaque.v1"`
	xxx_hidden_DataVolume *DataVolume            `protobuf:"bytes,1,opt,name=data_volume,json=dataVolume"`
	unknownFields         protoimpl.UnknownFields
	sizeCache             protoimpl.SizeCache
}

func (x *CreateDataVolumeRequest) Reset() {
	*x = CreateDataVolumeRequest{}
	mi := &file_api_kubevirt_kubevirt_proto_msgTypes[31]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CreateDataVolumeRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateDataVolumeRequest) ProtoMessage() {}

func (x *CreateDataVolumeRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_kubevirt_kubevirt_proto_msgTypes[31]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *CreateDataVolumeRequest) GetDataVolume() *DataVolume {
	if x != nil {
		return x.xxx_hidden_DataVolume
	}
	return nil
}

func (x *CreateDataVolumeRequest) SetDataVolume(v *DataVolume) {
	x.xxx_hidden_DataVolume = v
}

func (x *CreateDataVolumeRequest) HasDataVolume() bool {
	if x == nil {
		return false
	}
	return x.xxx_hidden_DataVolume != nil
}

func (x *CreateDataVolumeRequest) ClearDataVolume() {
	x.xxx_hidden_DataVolume = nil
}

type CreateDataVolumeRequest_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	DataVolume *DataVolume
}

func (b0 CreateDataVolumeRequest_builder) Build() *CreateDataVolumeRequest {
	m0 := &CreateDataVolumeRequest{}
	b, x := &b0, m0
	_, _ = b, x
	x.xxx_hidden_DataVolume = b.DataVolume
	return m0
}

type ListDataVolumeRequest struct {
	state                  protoimpl.MessageState `protogen:"opaque.v1"`
	xxx_hidden_Namespace   *string                `protobuf:"bytes,1,opt,name=namespace"`
	XXX_raceDetectHookData protoimpl.RaceDetectHookData
	XXX_presence           [1]uint32
	unknownFields          protoimpl.UnknownFields
	sizeCache              protoimpl.SizeCache
}

func (x *ListDataVolumeRequest) Reset() {
	*x = ListDataVolumeRequest{}
	mi := &file_api_kubevirt_kubevirt_proto_msgTypes[32]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListDataVolumeRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListDataVolumeRequest) ProtoMessage() {}

func (x *ListDataVolumeRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_kubevirt_kubevirt_proto_msgTypes[32]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *ListDataVolumeRequest) GetNamespace() string {
	if x != nil {
		if x.xxx_hidden_Namespace != nil {
			return *x.xxx_hidden_Namespace
		}
		return ""
	}
	return ""
}

func (x *ListDataVolumeRequest) SetNamespace(v string) {
	x.xxx_hidden_Namespace = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 0, 1)
}

func (x *ListDataVolumeRequest) HasNamespace() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 0)
}

func (x *ListDataVolumeRequest) ClearNamespace() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 0)
	x.xxx_hidden_Namespace = nil
}

type ListDataVolumeRequest_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	Namespace *string
}

func (b0 ListDataVolumeRequest_builder) Build() *ListDataVolumeRequest {
	m0 := &ListDataVolumeRequest{}
	b, x := &b0, m0
	_, _ = b, x
	if b.Namespace != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 0, 1)
		x.xxx_hidden_Namespace = b.Namespace
	}
	return m0
}

type ListDataVolumeResponse struct {
	state                  protoimpl.MessageState `protogen:"opaque.v1"`
	xxx_hidden_DataVolumes *[]*DataVolume         `protobuf:"bytes,1,rep,name=data_volumes,json=dataVolumes"`
	unknownFields          protoimpl.UnknownFields
	sizeCache              protoimpl.SizeCache
}

func (x *ListDataVolumeResponse) Reset() {
	*x = ListDataVolumeResponse{}
	mi := &file_api_kubevirt_kubevirt_proto_msgTypes[33]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListDataVolumeResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListDataVolumeResponse) ProtoMessage() {}

func (x *ListDataVolumeResponse) ProtoReflect() protoreflect.Message {
	mi := &file_api_kubevirt_kubevirt_proto_msgTypes[33]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *ListDataVolumeResponse) GetDataVolumes() []*DataVolume {
	if x != nil {
		if x.xxx_hidden_DataVolumes != nil {
			return *x.xxx_hidden_DataVolumes
		}
	}
	return nil
}

func (x *ListDataVolumeResponse) SetDataVolumes(v []*DataVolume) {
	x.xxx_hidden_DataVolumes = &v
}

type ListDataVolumeResponse_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	DataVolumes []*DataVolume
}

func (b0 ListDataVolumeResponse_builder) Build() *ListDataVolumeResponse {
	m0 := &ListDataVolumeResponse{}
	b, x := &b0, m0
	_, _ = b, x
	x.xxx_hidden_DataVolumes = &b.DataVolumes
	return m0
}

type GetDataVolumeRequest struct {
	state                  protoimpl.MessageState `protogen:"opaque.v1"`
	xxx_hidden_Name        *string                `protobuf:"bytes,1,opt,name=name"`
	xxx_hidden_Namespace   *string                `protobuf:"bytes,2,opt,name=namespace"`
	XXX_raceDetectHookData protoimpl.RaceDetectHookData
	XXX_presence           [1]uint32
	unknownFields          protoimpl.UnknownFields
	sizeCache              protoimpl.SizeCache
}

func (x *GetDataVolumeRequest) Reset() {
	*x = GetDataVolumeRequest{}
	mi := &file_api_kubevirt_kubevirt_proto_msgTypes[34]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetDataVolumeRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetDataVolumeRequest) ProtoMessage() {}

func (x *GetDataVolumeRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_kubevirt_kubevirt_proto_msgTypes[34]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *GetDataVolumeRequest) GetName() string {
	if x != nil {
		if x.xxx_hidden_Name != nil {
			return *x.xxx_hidden_Name
		}
		return ""
	}
	return ""
}

func (x *GetDataVolumeRequest) GetNamespace() string {
	if x != nil {
		if x.xxx_hidden_Namespace != nil {
			return *x.xxx_hidden_Namespace
		}
		return ""
	}
	return ""
}

func (x *GetDataVolumeRequest) SetName(v string) {
	x.xxx_hidden_Name = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 0, 2)
}

func (x *GetDataVolumeRequest) SetNamespace(v string) {
	x.xxx_hidden_Namespace = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 1, 2)
}

func (x *GetDataVolumeRequest) HasName() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 0)
}

func (x *GetDataVolumeRequest) HasNamespace() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 1)
}

func (x *GetDataVolumeRequest) ClearName() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 0)
	x.xxx_hidden_Name = nil
}

func (x *GetDataVolumeRequest) ClearNamespace() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 1)
	x.xxx_hidden_Namespace = nil
}

type GetDataVolumeRequest_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	Name      *string
	Namespace *string
}

func (b0 GetDataVolumeRequest_builder) Build() *GetDataVolumeRequest {
	m0 := &GetDataVolumeRequest{}
	b, x := &b0, m0
	_, _ = b, x
	if b.Name != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 0, 2)
		x.xxx_hidden_Name = b.Name
	}
	if b.Namespace != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 1, 2)
		x.xxx_hidden_Namespace = b.Namespace
	}
	return m0
}

type DeleteDataVolumeRequest struct {
	state                  protoimpl.MessageState `protogen:"opaque.v1"`
	xxx_hidden_Name        *string                `protobuf:"bytes,1,opt,name=name"`
	xxx_hidden_Namespace   *string                `protobuf:"bytes,2,opt,name=namespace"`
	XXX_raceDetectHookData protoimpl.RaceDetectHookData
	XXX_presence           [1]uint32
	unknownFields          protoimpl.UnknownFields
	sizeCache              protoimpl.SizeCache
}

func (x *DeleteDataVolumeRequest) Reset() {
	*x = DeleteDataVolumeRequest{}
	mi := &file_api_kubevirt_kubevirt_proto_msgTypes[35]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DeleteDataVolumeRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteDataVolumeRequest) ProtoMessage() {}

func (x *DeleteDataVolumeRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_kubevirt_kubevirt_proto_msgTypes[35]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *DeleteDataVolumeRequest) GetName() string {
	if x != nil {
		if x.xxx_hidden_Name != nil {
			return *x.xxx_hidden_Name
		}
		return ""
	}
	return ""
}

func (x *DeleteDataVolumeRequest) GetNamespace() string {
	if x != nil {
		if x.xxx_hidden_Namespace != nil {
			return *x.xxx_hidden_Namespace
		}
		return ""
	}
	return ""
}

func (x *DeleteDataVolumeRequest) SetName(v string) {
	x.xxx_hidden_Name = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 0, 2)
}

func (x *DeleteDataVolumeRequest) SetNamespace(v string) {
	x.xxx_hidden_Namespace = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 1, 2)
}

func (x *DeleteDataVolumeRequest) HasName() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 0)
}

func (x *DeleteDataVolumeRequest) HasNamespace() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 1)
}

func (x *DeleteDataVolumeRequest) ClearName() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 0)
	x.xxx_hidden_Name = nil
}

func (x *DeleteDataVolumeRequest) ClearNamespace() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 1)
	x.xxx_hidden_Namespace = nil
}

type DeleteDataVolumeRequest_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	Name      *string
	Namespace *string
}

func (b0 DeleteDataVolumeRequest_builder) Build() *DeleteDataVolumeRequest {
	m0 := &DeleteDataVolumeRequest{}
	b, x := &b0, m0
	_, _ = b, x
	if b.Name != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 0, 2)
		x.xxx_hidden_Name = b.Name
	}
	if b.Namespace != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 1, 2)
		x.xxx_hidden_Namespace = b.Namespace
	}
	return m0
}

type ExtendDataVolumeRequest struct {
	state                  protoimpl.MessageState `protogen:"opaque.v1"`
	xxx_hidden_Name        *string                `protobuf:"bytes,1,opt,name=name"`
	xxx_hidden_Namespace   *string                `protobuf:"bytes,2,opt,name=namespace"`
	xxx_hidden_SizeBytes   int64                  `protobuf:"varint,3,opt,name=size_bytes,json=sizeBytes"`
	XXX_raceDetectHookData protoimpl.RaceDetectHookData
	XXX_presence           [1]uint32
	unknownFields          protoimpl.UnknownFields
	sizeCache              protoimpl.SizeCache
}

func (x *ExtendDataVolumeRequest) Reset() {
	*x = ExtendDataVolumeRequest{}
	mi := &file_api_kubevirt_kubevirt_proto_msgTypes[36]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ExtendDataVolumeRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ExtendDataVolumeRequest) ProtoMessage() {}

func (x *ExtendDataVolumeRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_kubevirt_kubevirt_proto_msgTypes[36]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *ExtendDataVolumeRequest) GetName() string {
	if x != nil {
		if x.xxx_hidden_Name != nil {
			return *x.xxx_hidden_Name
		}
		return ""
	}
	return ""
}

func (x *ExtendDataVolumeRequest) GetNamespace() string {
	if x != nil {
		if x.xxx_hidden_Namespace != nil {
			return *x.xxx_hidden_Namespace
		}
		return ""
	}
	return ""
}

func (x *ExtendDataVolumeRequest) GetSizeBytes() int64 {
	if x != nil {
		return x.xxx_hidden_SizeBytes
	}
	return 0
}

func (x *ExtendDataVolumeRequest) SetName(v string) {
	x.xxx_hidden_Name = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 0, 3)
}

func (x *ExtendDataVolumeRequest) SetNamespace(v string) {
	x.xxx_hidden_Namespace = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 1, 3)
}

func (x *ExtendDataVolumeRequest) SetSizeBytes(v int64) {
	x.xxx_hidden_SizeBytes = v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 2, 3)
}

func (x *ExtendDataVolumeRequest) HasName() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 0)
}

func (x *ExtendDataVolumeRequest) HasNamespace() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 1)
}

func (x *ExtendDataVolumeRequest) HasSizeBytes() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 2)
}

func (x *ExtendDataVolumeRequest) ClearName() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 0)
	x.xxx_hidden_Name = nil
}

func (x *ExtendDataVolumeRequest) ClearNamespace() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 1)
	x.xxx_hidden_Namespace = nil
}

func (x *ExtendDataVolumeRequest) ClearSizeBytes() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 2)
	x.xxx_hidden_SizeBytes = 0
}

type ExtendDataVolumeRequest_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	Name      *string
	Namespace *string
	SizeBytes *int64
}

func (b0 ExtendDataVolumeRequest_builder) Build() *ExtendDataVolumeRequest {
	m0 := &ExtendDataVolumeRequest{}
	b, x := &b0, m0
	_, _ = b, x
	if b.Name != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 0, 3)
		x.xxx_hidden_Name = b.Name
	}
	if b.Namespace != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 1, 3)
		x.xxx_hidden_Namespace = b.Namespace
	}
	if b.SizeBytes != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 2, 3)
		x.xxx_hidden_SizeBytes = *b.SizeBytes
	}
	return m0
}

type CreateNetworkRequest struct {
	state              protoimpl.MessageState `protogen:"opaque.v1"`
	xxx_hidden_Network *Network               `protobuf:"bytes,1,opt,name=network"`
	unknownFields      protoimpl.UnknownFields
	sizeCache          protoimpl.SizeCache
}

func (x *CreateNetworkRequest) Reset() {
	*x = CreateNetworkRequest{}
	mi := &file_api_kubevirt_kubevirt_proto_msgTypes[37]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CreateNetworkRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateNetworkRequest) ProtoMessage() {}

func (x *CreateNetworkRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_kubevirt_kubevirt_proto_msgTypes[37]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *CreateNetworkRequest) GetNetwork() *Network {
	if x != nil {
		return x.xxx_hidden_Network
	}
	return nil
}

func (x *CreateNetworkRequest) SetNetwork(v *Network) {
	x.xxx_hidden_Network = v
}

func (x *CreateNetworkRequest) HasNetwork() bool {
	if x == nil {
		return false
	}
	return x.xxx_hidden_Network != nil
}

func (x *CreateNetworkRequest) ClearNetwork() {
	x.xxx_hidden_Network = nil
}

type CreateNetworkRequest_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	Network *Network
}

func (b0 CreateNetworkRequest_builder) Build() *CreateNetworkRequest {
	m0 := &CreateNetworkRequest{}
	b, x := &b0, m0
	_, _ = b, x
	x.xxx_hidden_Network = b.Network
	return m0
}

type ListNetworkRequest struct {
	state                  protoimpl.MessageState `protogen:"opaque.v1"`
	xxx_hidden_Namespace   *string                `protobuf:"bytes,1,opt,name=namespace"`
	XXX_raceDetectHookData protoimpl.RaceDetectHookData
	XXX_presence           [1]uint32
	unknownFields          protoimpl.UnknownFields
	sizeCache              protoimpl.SizeCache
}

func (x *ListNetworkRequest) Reset() {
	*x = ListNetworkRequest{}
	mi := &file_api_kubevirt_kubevirt_proto_msgTypes[38]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListNetworkRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListNetworkRequest) ProtoMessage() {}

func (x *ListNetworkRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_kubevirt_kubevirt_proto_msgTypes[38]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *ListNetworkRequest) GetNamespace() string {
	if x != nil {
		if x.xxx_hidden_Namespace != nil {
			return *x.xxx_hidden_Namespace
		}
		return ""
	}
	return ""
}

func (x *ListNetworkRequest) SetNamespace(v string) {
	x.xxx_hidden_Namespace = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 0, 1)
}

func (x *ListNetworkRequest) HasNamespace() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 0)
}

func (x *ListNetworkRequest) ClearNamespace() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 0)
	x.xxx_hidden_Namespace = nil
}

type ListNetworkRequest_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	Namespace *string
}

func (b0 ListNetworkRequest_builder) Build() *ListNetworkRequest {
	m0 := &ListNetworkRequest{}
	b, x := &b0, m0
	_, _ = b, x
	if b.Namespace != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 0, 1)
		x.xxx_hidden_Namespace = b.Namespace
	}
	return m0
}

type ListNetworkResponse struct {
	state               protoimpl.MessageState `protogen:"opaque.v1"`
	xxx_hidden_Networks *[]*Network            `protobuf:"bytes,1,rep,name=networks"`
	unknownFields       protoimpl.UnknownFields
	sizeCache           protoimpl.SizeCache
}

func (x *ListNetworkResponse) Reset() {
	*x = ListNetworkResponse{}
	mi := &file_api_kubevirt_kubevirt_proto_msgTypes[39]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListNetworkResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListNetworkResponse) ProtoMessage() {}

func (x *ListNetworkResponse) ProtoReflect() protoreflect.Message {
	mi := &file_api_kubevirt_kubevirt_proto_msgTypes[39]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *ListNetworkResponse) GetNetworks() []*Network {
	if x != nil {
		if x.xxx_hidden_Networks != nil {
			return *x.xxx_hidden_Networks
		}
	}
	return nil
}

func (x *ListNetworkResponse) SetNetworks(v []*Network) {
	x.xxx_hidden_Networks = &v
}

type ListNetworkResponse_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	Networks []*Network
}

func (b0 ListNetworkResponse_builder) Build() *ListNetworkResponse {
	m0 := &ListNetworkResponse{}
	b, x := &b0, m0
	_, _ = b, x
	x.xxx_hidden_Networks = &b.Networks
	return m0
}

type GetNetworkRequest struct {
	state                  protoimpl.MessageState `protogen:"opaque.v1"`
	xxx_hidden_Name        *string                `protobuf:"bytes,1,opt,name=name"`
	xxx_hidden_Namespace   *string                `protobuf:"bytes,2,opt,name=namespace"`
	XXX_raceDetectHookData protoimpl.RaceDetectHookData
	XXX_presence           [1]uint32
	unknownFields          protoimpl.UnknownFields
	sizeCache              protoimpl.SizeCache
}

func (x *GetNetworkRequest) Reset() {
	*x = GetNetworkRequest{}
	mi := &file_api_kubevirt_kubevirt_proto_msgTypes[40]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetNetworkRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetNetworkRequest) ProtoMessage() {}

func (x *GetNetworkRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_kubevirt_kubevirt_proto_msgTypes[40]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *GetNetworkRequest) GetName() string {
	if x != nil {
		if x.xxx_hidden_Name != nil {
			return *x.xxx_hidden_Name
		}
		return ""
	}
	return ""
}

func (x *GetNetworkRequest) GetNamespace() string {
	if x != nil {
		if x.xxx_hidden_Namespace != nil {
			return *x.xxx_hidden_Namespace
		}
		return ""
	}
	return ""
}

func (x *GetNetworkRequest) SetName(v string) {
	x.xxx_hidden_Name = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 0, 2)
}

func (x *GetNetworkRequest) SetNamespace(v string) {
	x.xxx_hidden_Namespace = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 1, 2)
}

func (x *GetNetworkRequest) HasName() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 0)
}

func (x *GetNetworkRequest) HasNamespace() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 1)
}

func (x *GetNetworkRequest) ClearName() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 0)
	x.xxx_hidden_Name = nil
}

func (x *GetNetworkRequest) ClearNamespace() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 1)
	x.xxx_hidden_Namespace = nil
}

type GetNetworkRequest_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	Name      *string
	Namespace *string
}

func (b0 GetNetworkRequest_builder) Build() *GetNetworkRequest {
	m0 := &GetNetworkRequest{}
	b, x := &b0, m0
	_, _ = b, x
	if b.Name != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 0, 2)
		x.xxx_hidden_Name = b.Name
	}
	if b.Namespace != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 1, 2)
		x.xxx_hidden_Namespace = b.Namespace
	}
	return m0
}

type DeleteNetworkRequest struct {
	state                  protoimpl.MessageState `protogen:"opaque.v1"`
	xxx_hidden_Name        *string                `protobuf:"bytes,1,opt,name=name"`
	xxx_hidden_Namespace   *string                `protobuf:"bytes,2,opt,name=namespace"`
	XXX_raceDetectHookData protoimpl.RaceDetectHookData
	XXX_presence           [1]uint32
	unknownFields          protoimpl.UnknownFields
	sizeCache              protoimpl.SizeCache
}

func (x *DeleteNetworkRequest) Reset() {
	*x = DeleteNetworkRequest{}
	mi := &file_api_kubevirt_kubevirt_proto_msgTypes[41]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DeleteNetworkRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteNetworkRequest) ProtoMessage() {}

func (x *DeleteNetworkRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_kubevirt_kubevirt_proto_msgTypes[41]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *DeleteNetworkRequest) GetName() string {
	if x != nil {
		if x.xxx_hidden_Name != nil {
			return *x.xxx_hidden_Name
		}
		return ""
	}
	return ""
}

func (x *DeleteNetworkRequest) GetNamespace() string {
	if x != nil {
		if x.xxx_hidden_Namespace != nil {
			return *x.xxx_hidden_Namespace
		}
		return ""
	}
	return ""
}

func (x *DeleteNetworkRequest) SetName(v string) {
	x.xxx_hidden_Name = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 0, 2)
}

func (x *DeleteNetworkRequest) SetNamespace(v string) {
	x.xxx_hidden_Namespace = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 1, 2)
}

func (x *DeleteNetworkRequest) HasName() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 0)
}

func (x *DeleteNetworkRequest) HasNamespace() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 1)
}

func (x *DeleteNetworkRequest) ClearName() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 0)
	x.xxx_hidden_Name = nil
}

func (x *DeleteNetworkRequest) ClearNamespace() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 1)
	x.xxx_hidden_Namespace = nil
}

type DeleteNetworkRequest_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	Name      *string
	Namespace *string
}

func (b0 DeleteNetworkRequest_builder) Build() *DeleteNetworkRequest {
	m0 := &DeleteNetworkRequest{}
	b, x := &b0, m0
	_, _ = b, x
	if b.Name != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 0, 2)
		x.xxx_hidden_Name = b.Name
	}
	if b.Namespace != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 1, 2)
		x.xxx_hidden_Namespace = b.Namespace
	}
	return m0
}

type UpdateNetworkRequest struct {
	state              protoimpl.MessageState `protogen:"opaque.v1"`
	xxx_hidden_Network *Network               `protobuf:"bytes,1,opt,name=network"`
	unknownFields      protoimpl.UnknownFields
	sizeCache          protoimpl.SizeCache
}

func (x *UpdateNetworkRequest) Reset() {
	*x = UpdateNetworkRequest{}
	mi := &file_api_kubevirt_kubevirt_proto_msgTypes[42]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UpdateNetworkRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateNetworkRequest) ProtoMessage() {}

func (x *UpdateNetworkRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_kubevirt_kubevirt_proto_msgTypes[42]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *UpdateNetworkRequest) GetNetwork() *Network {
	if x != nil {
		return x.xxx_hidden_Network
	}
	return nil
}

func (x *UpdateNetworkRequest) SetNetwork(v *Network) {
	x.xxx_hidden_Network = v
}

func (x *UpdateNetworkRequest) HasNetwork() bool {
	if x == nil {
		return false
	}
	return x.xxx_hidden_Network != nil
}

func (x *UpdateNetworkRequest) ClearNetwork() {
	x.xxx_hidden_Network = nil
}

type UpdateNetworkRequest_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	Network *Network
}

func (b0 UpdateNetworkRequest_builder) Build() *UpdateNetworkRequest {
	m0 := &UpdateNetworkRequest{}
	b, x := &b0, m0
	_, _ = b, x
	x.xxx_hidden_Network = b.Network
	return m0
}

type CreateFlavorRequest struct {
	state             protoimpl.MessageState `protogen:"opaque.v1"`
	xxx_hidden_Flavor *Flavor                `protobuf:"bytes,1,opt,name=flavor"`
	unknownFields     protoimpl.UnknownFields
	sizeCache         protoimpl.SizeCache
}

func (x *CreateFlavorRequest) Reset() {
	*x = CreateFlavorRequest{}
	mi := &file_api_kubevirt_kubevirt_proto_msgTypes[43]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CreateFlavorRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateFlavorRequest) ProtoMessage() {}

func (x *CreateFlavorRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_kubevirt_kubevirt_proto_msgTypes[43]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *CreateFlavorRequest) GetFlavor() *Flavor {
	if x != nil {
		return x.xxx_hidden_Flavor
	}
	return nil
}

func (x *CreateFlavorRequest) SetFlavor(v *Flavor) {
	x.xxx_hidden_Flavor = v
}

func (x *CreateFlavorRequest) HasFlavor() bool {
	if x == nil {
		return false
	}
	return x.xxx_hidden_Flavor != nil
}

func (x *CreateFlavorRequest) ClearFlavor() {
	x.xxx_hidden_Flavor = nil
}

type CreateFlavorRequest_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	Flavor *Flavor
}

func (b0 CreateFlavorRequest_builder) Build() *CreateFlavorRequest {
	m0 := &CreateFlavorRequest{}
	b, x := &b0, m0
	_, _ = b, x
	x.xxx_hidden_Flavor = b.Flavor
	return m0
}

type ListFlavorRequest struct {
	state                  protoimpl.MessageState `protogen:"opaque.v1"`
	xxx_hidden_Namespace   *string                `protobuf:"bytes,1,opt,name=namespace"`
	XXX_raceDetectHookData protoimpl.RaceDetectHookData
	XXX_presence           [1]uint32
	unknownFields          protoimpl.UnknownFields
	sizeCache              protoimpl.SizeCache
}

func (x *ListFlavorRequest) Reset() {
	*x = ListFlavorRequest{}
	mi := &file_api_kubevirt_kubevirt_proto_msgTypes[44]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListFlavorRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListFlavorRequest) ProtoMessage() {}

func (x *ListFlavorRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_kubevirt_kubevirt_proto_msgTypes[44]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *ListFlavorRequest) GetNamespace() string {
	if x != nil {
		if x.xxx_hidden_Namespace != nil {
			return *x.xxx_hidden_Namespace
		}
		return ""
	}
	return ""
}

func (x *ListFlavorRequest) SetNamespace(v string) {
	x.xxx_hidden_Namespace = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 0, 1)
}

func (x *ListFlavorRequest) HasNamespace() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 0)
}

func (x *ListFlavorRequest) ClearNamespace() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 0)
	x.xxx_hidden_Namespace = nil
}

type ListFlavorRequest_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	Namespace *string
}

func (b0 ListFlavorRequest_builder) Build() *ListFlavorRequest {
	m0 := &ListFlavorRequest{}
	b, x := &b0, m0
	_, _ = b, x
	if b.Namespace != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 0, 1)
		x.xxx_hidden_Namespace = b.Namespace
	}
	return m0
}

type ListFlavorResponse struct {
	state              protoimpl.MessageState `protogen:"opaque.v1"`
	xxx_hidden_Flavors *[]*Flavor             `protobuf:"bytes,1,rep,name=flavors"`
	unknownFields      protoimpl.UnknownFields
	sizeCache          protoimpl.SizeCache
}

func (x *ListFlavorResponse) Reset() {
	*x = ListFlavorResponse{}
	mi := &file_api_kubevirt_kubevirt_proto_msgTypes[45]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListFlavorResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListFlavorResponse) ProtoMessage() {}

func (x *ListFlavorResponse) ProtoReflect() protoreflect.Message {
	mi := &file_api_kubevirt_kubevirt_proto_msgTypes[45]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *ListFlavorResponse) GetFlavors() []*Flavor {
	if x != nil {
		if x.xxx_hidden_Flavors != nil {
			return *x.xxx_hidden_Flavors
		}
	}
	return nil
}

func (x *ListFlavorResponse) SetFlavors(v []*Flavor) {
	x.xxx_hidden_Flavors = &v
}

type ListFlavorResponse_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	Flavors []*Flavor
}

func (b0 ListFlavorResponse_builder) Build() *ListFlavorResponse {
	m0 := &ListFlavorResponse{}
	b, x := &b0, m0
	_, _ = b, x
	x.xxx_hidden_Flavors = &b.Flavors
	return m0
}

type GetFlavorRequest struct {
	state                  protoimpl.MessageState `protogen:"opaque.v1"`
	xxx_hidden_Name        *string                `protobuf:"bytes,1,opt,name=name"`
	xxx_hidden_Namespace   *string                `protobuf:"bytes,2,opt,name=namespace"`
	XXX_raceDetectHookData protoimpl.RaceDetectHookData
	XXX_presence           [1]uint32
	unknownFields          protoimpl.UnknownFields
	sizeCache              protoimpl.SizeCache
}

func (x *GetFlavorRequest) Reset() {
	*x = GetFlavorRequest{}
	mi := &file_api_kubevirt_kubevirt_proto_msgTypes[46]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetFlavorRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetFlavorRequest) ProtoMessage() {}

func (x *GetFlavorRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_kubevirt_kubevirt_proto_msgTypes[46]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *GetFlavorRequest) GetName() string {
	if x != nil {
		if x.xxx_hidden_Name != nil {
			return *x.xxx_hidden_Name
		}
		return ""
	}
	return ""
}

func (x *GetFlavorRequest) GetNamespace() string {
	if x != nil {
		if x.xxx_hidden_Namespace != nil {
			return *x.xxx_hidden_Namespace
		}
		return ""
	}
	return ""
}

func (x *GetFlavorRequest) SetName(v string) {
	x.xxx_hidden_Name = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 0, 2)
}

func (x *GetFlavorRequest) SetNamespace(v string) {
	x.xxx_hidden_Namespace = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 1, 2)
}

func (x *GetFlavorRequest) HasName() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 0)
}

func (x *GetFlavorRequest) HasNamespace() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 1)
}

func (x *GetFlavorRequest) ClearName() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 0)
	x.xxx_hidden_Name = nil
}

func (x *GetFlavorRequest) ClearNamespace() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 1)
	x.xxx_hidden_Namespace = nil
}

type GetFlavorRequest_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	Name      *string
	Namespace *string
}

func (b0 GetFlavorRequest_builder) Build() *GetFlavorRequest {
	m0 := &GetFlavorRequest{}
	b, x := &b0, m0
	_, _ = b, x
	if b.Name != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 0, 2)
		x.xxx_hidden_Name = b.Name
	}
	if b.Namespace != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 1, 2)
		x.xxx_hidden_Namespace = b.Namespace
	}
	return m0
}

type DeleteFlavorRequest struct {
	state                  protoimpl.MessageState `protogen:"opaque.v1"`
	xxx_hidden_Name        *string                `protobuf:"bytes,1,opt,name=name"`
	xxx_hidden_Namespace   *string                `protobuf:"bytes,2,opt,name=namespace"`
	XXX_raceDetectHookData protoimpl.RaceDetectHookData
	XXX_presence           [1]uint32
	unknownFields          protoimpl.UnknownFields
	sizeCache              protoimpl.SizeCache
}

func (x *DeleteFlavorRequest) Reset() {
	*x = DeleteFlavorRequest{}
	mi := &file_api_kubevirt_kubevirt_proto_msgTypes[47]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DeleteFlavorRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteFlavorRequest) ProtoMessage() {}

func (x *DeleteFlavorRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_kubevirt_kubevirt_proto_msgTypes[47]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *DeleteFlavorRequest) GetName() string {
	if x != nil {
		if x.xxx_hidden_Name != nil {
			return *x.xxx_hidden_Name
		}
		return ""
	}
	return ""
}

func (x *DeleteFlavorRequest) GetNamespace() string {
	if x != nil {
		if x.xxx_hidden_Namespace != nil {
			return *x.xxx_hidden_Namespace
		}
		return ""
	}
	return ""
}

func (x *DeleteFlavorRequest) SetName(v string) {
	x.xxx_hidden_Name = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 0, 2)
}

func (x *DeleteFlavorRequest) SetNamespace(v string) {
	x.xxx_hidden_Namespace = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 1, 2)
}

func (x *DeleteFlavorRequest) HasName() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 0)
}

func (x *DeleteFlavorRequest) HasNamespace() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 1)
}

func (x *DeleteFlavorRequest) ClearName() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 0)
	x.xxx_hidden_Name = nil
}

func (x *DeleteFlavorRequest) ClearNamespace() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 1)
	x.xxx_hidden_Namespace = nil
}

type DeleteFlavorRequest_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	Name      *string
	Namespace *string
}

func (b0 DeleteFlavorRequest_builder) Build() *DeleteFlavorRequest {
	m0 := &DeleteFlavorRequest{}
	b, x := &b0, m0
	_, _ = b, x
	if b.Name != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 0, 2)
		x.xxx_hidden_Name = b.Name
	}
	if b.Namespace != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 1, 2)
		x.xxx_hidden_Namespace = b.Namespace
	}
	return m0
}

type VMOperations_Status struct {
	state                  protoimpl.MessageState `protogen:"opaque.v1"`
	xxx_hidden_Status      OpStatus               `protobuf:"varint,1,opt,name=status,enum=otterscale.kubevirt.v1.OpStatus"`
	xxx_hidden_Message     *string                `protobuf:"bytes,2,opt,name=message"`
	xxx_hidden_Reason      *string                `protobuf:"bytes,3,opt,name=reason"`
	XXX_raceDetectHookData protoimpl.RaceDetectHookData
	XXX_presence           [1]uint32
	unknownFields          protoimpl.UnknownFields
	sizeCache              protoimpl.SizeCache
}

func (x *VMOperations_Status) Reset() {
	*x = VMOperations_Status{}
	mi := &file_api_kubevirt_kubevirt_proto_msgTypes[48]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *VMOperations_Status) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*VMOperations_Status) ProtoMessage() {}

func (x *VMOperations_Status) ProtoReflect() protoreflect.Message {
	mi := &file_api_kubevirt_kubevirt_proto_msgTypes[48]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *VMOperations_Status) GetStatus() OpStatus {
	if x != nil {
		if protoimpl.X.Present(&(x.XXX_presence[0]), 0) {
			return x.xxx_hidden_Status
		}
	}
	return OpStatus_IN_PROGRESS
}

func (x *VMOperations_Status) GetMessage() string {
	if x != nil {
		if x.xxx_hidden_Message != nil {
			return *x.xxx_hidden_Message
		}
		return ""
	}
	return ""
}

func (x *VMOperations_Status) GetReason() string {
	if x != nil {
		if x.xxx_hidden_Reason != nil {
			return *x.xxx_hidden_Reason
		}
		return ""
	}
	return ""
}

func (x *VMOperations_Status) SetStatus(v OpStatus) {
	x.xxx_hidden_Status = v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 0, 3)
}

func (x *VMOperations_Status) SetMessage(v string) {
	x.xxx_hidden_Message = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 1, 3)
}

func (x *VMOperations_Status) SetReason(v string) {
	x.xxx_hidden_Reason = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 2, 3)
}

func (x *VMOperations_Status) HasStatus() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 0)
}

func (x *VMOperations_Status) HasMessage() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 1)
}

func (x *VMOperations_Status) HasReason() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 2)
}

func (x *VMOperations_Status) ClearStatus() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 0)
	x.xxx_hidden_Status = OpStatus_IN_PROGRESS
}

func (x *VMOperations_Status) ClearMessage() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 1)
	x.xxx_hidden_Message = nil
}

func (x *VMOperations_Status) ClearReason() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 2)
	x.xxx_hidden_Reason = nil
}

type VMOperations_Status_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	Status  *OpStatus
	Message *string
	Reason  *string
}

func (b0 VMOperations_Status_builder) Build() *VMOperations_Status {
	m0 := &VMOperations_Status{}
	b, x := &b0, m0
	_, _ = b, x
	if b.Status != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 0, 3)
		x.xxx_hidden_Status = *b.Status
	}
	if b.Message != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 1, 3)
		x.xxx_hidden_Message = b.Message
	}
	if b.Reason != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 2, 3)
		x.xxx_hidden_Reason = b.Reason
	}
	return m0
}

var File_api_kubevirt_kubevirt_proto protoreflect.FileDescriptor

const file_api_kubevirt_kubevirt_proto_rawDesc = "" +
	"\n" +
	"\x1bapi/kubevirt/kubevirt.proto\x12\x16otterscale.kubevirt.v1\x1a\x1bgoogle/protobuf/empty.proto\x1a\x1fgoogle/protobuf/timestamp.proto\"\xa7\x04\n" +
	"\x0eVirtualMachine\x12\x12\n" +
	"\x04name\x18\x01 \x01(\tR\x04name\x12\x1c\n" +
	"\tnamespace\x18\x02 \x01(\tR\tnamespace\x126\n" +
	"\x06flavor\x18\x03 \x01(\v2\x1e.otterscale.kubevirt.v1.FlavorR\x06flavor\x129\n" +
	"\anetwork\x18\x04 \x01(\v2\x1f.otterscale.kubevirt.v1.NetworkR\anetwork\x12E\n" +
	"\fdata_volumes\x18\x05 \x03(\v2\".otterscale.kubevirt.v1.DataVolumeR\vdataVolumes\x128\n" +
	"\x06status\x18\x06 \x01(\x0e2 .otterscale.kubevirt.v1.VMStatusR\x06status\x12>\n" +
	"\bsnapshot\x18\a \x01(\v2\".otterscale.kubevirt.v1.VMSnapshotR\bsnapshot\x125\n" +
	"\x05clone\x18\b \x01(\v2\x1f.otterscale.kubevirt.v1.VMCloneR\x05clone\x12;\n" +
	"\arestore\x18\t \x01(\v2!.otterscale.kubevirt.v1.VMRestoreR\arestore\x12;\n" +
	"\amigrate\x18\n" +
	" \x01(\v2!.otterscale.kubevirt.v1.VMMigrateR\amigrate\"\xbc\x02\n" +
	"\fVMOperations\x12\x12\n" +
	"\x04name\x18\x01 \x01(\tR\x04name\x12;\n" +
	"\vcreate_time\x18\x02 \x01(\v2\x1a.google.protobuf.TimestampR\n" +
	"createTime\x12 \n" +
	"\vdescription\x18\x03 \x01(\tR\vdescription\x12C\n" +
	"\x06status\x18\x04 \x01(\v2+.otterscale.kubevirt.v1.VMOperations.StatusR\x06status\x1at\n" +
	"\x06Status\x128\n" +
	"\x06status\x18\x01 \x01(\x0e2 .otterscale.kubevirt.v1.OpStatusR\x06status\x12\x18\n" +
	"\amessage\x18\x02 \x01(\tR\amessage\x12\x16\n" +
	"\x06reason\x18\x03 \x01(\tR\x06reason\"D\n" +
	"\n" +
	"VMSnapshot\x126\n" +
	"\x03ops\x18\x01 \x01(\v2$.otterscale.kubevirt.v1.VMOperationsR\x03ops\"A\n" +
	"\aVMClone\x126\n" +
	"\x03ops\x18\x01 \x01(\v2$.otterscale.kubevirt.v1.VMOperationsR\x03ops\"C\n" +
	"\tVMRestore\x126\n" +
	"\x03ops\x18\x01 \x01(\v2$.otterscale.kubevirt.v1.VMOperationsR\x03ops\"C\n" +
	"\tVMMigrate\x126\n" +
	"\x03ops\x18\x01 \x01(\v2$.otterscale.kubevirt.v1.VMOperationsR\x03ops\"H\n" +
	"\x06Flavor\x12\x1b\n" +
	"\tcpu_cores\x18\x01 \x01(\x02R\bcpuCores\x12!\n" +
	"\fmemory_bytes\x18\x02 \x01(\x03R\vmemoryBytes\"\x8d\x01\n" +
	"\n" +
	"DataVolume\x12\x12\n" +
	"\x04type\x18\x01 \x01(\tR\x04type\x12\x12\n" +
	"\x04name\x18\x02 \x01(\tR\x04name\x12\x1c\n" +
	"\tnamespace\x18\x03 \x01(\tR\tnamespace\x12\x16\n" +
	"\x06source\x18\x04 \x01(\tR\x06source\x12!\n" +
	"\fvolume_bytes\x18\x05 \x01(\x03R\vvolumeBytes\"\xb6\x01\n" +
	"\aNetwork\x12\x12\n" +
	"\x04name\x18\x01 \x01(\tR\x04name\x12\x1c\n" +
	"\tnamespace\x18\x02 \x01(\tR\tnamespace\x12!\n" +
	"\fservice_type\x18\x03 \x01(\tR\vserviceType\x12\x12\n" +
	"\x04port\x18\x04 \x01(\x05R\x04port\x12\x1b\n" +
	"\tnode_port\x18\x05 \x01(\x05R\bnodePort\x12%\n" +
	"\x0econtainer_port\x18\x06 \x01(\x05R\rcontainerPort\"0\n" +
	"\x06Device\x12\x12\n" +
	"\x04name\x18\x01 \x01(\tR\x04name\x12\x12\n" +
	"\x04type\x18\x02 \x01(\tR\x04type\".\n" +
	"\x04Disk\x12\x12\n" +
	"\x04name\x18\x01 \x01(\tR\x04name\x12\x12\n" +
	"\x04type\x18\x02 \x01(\tR\x04type\"3\n" +
	"\tUSBDevice\x12\x12\n" +
	"\x04name\x18\x01 \x01(\tR\x04name\x12\x12\n" +
	"\x04type\x18\x02 \x01(\tR\x04type\"4\n" +
	"\n" +
	"PCIeDevice\x12\x12\n" +
	"\x04name\x18\x01 \x01(\tR\x04name\x12\x12\n" +
	"\x04type\x18\x02 \x01(\tR\x04type\"9\n" +
	"\x19ListVirtualMachineRequest\x12\x1c\n" +
	"\tnamespace\x18\x01 \x01(\tR\tnamespace\"o\n" +
	"\x1aListVirtualMachineResponse\x12Q\n" +
	"\x10virtual_machines\x18\x01 \x03(\v2&.otterscale.kubevirt.v1.VirtualMachineR\x0fvirtualMachines\"L\n" +
	"\x18GetVirtualMachineRequest\x12\x12\n" +
	"\x04name\x18\x01 \x01(\tR\x04name\x12\x1c\n" +
	"\tnamespace\x18\x02 \x01(\tR\tnamespace\"l\n" +
	"\x19GetVirtualMachineResponse\x12O\n" +
	"\x0fvirtual_machine\x18\x01 \x01(\v2&.otterscale.kubevirt.v1.VirtualMachineR\x0evirtualMachine\"\xa6\x03\n" +
	"\x1bCreateVirtualMachineRequest\x12\x12\n" +
	"\x04name\x18\x01 \x01(\tR\x04name\x12\x1c\n" +
	"\tnamespace\x18\x02 \x01(\tR\tnamespace\x12C\n" +
	"\vdata_volume\x18\x03 \x01(\v2\".otterscale.kubevirt.v1.DataVolumeR\n" +
	"dataVolume\x12!\n" +
	"\fnetwork_name\x18\x04 \x01(\tR\vnetworkName\x12\x16\n" +
	"\x06flavor\x18\x05 \x01(\tR\x06flavor\x12\x16\n" +
	"\x06script\x18\x06 \x01(\tR\x06script\x122\n" +
	"\x05disks\x18\a \x03(\v2\x1c.otterscale.kubevirt.v1.DiskR\x05disks\x12B\n" +
	"\vusb_devices\x18\b \x03(\v2!.otterscale.kubevirt.v1.USBDeviceR\n" +
	"usbDevices\x12E\n" +
	"\fpcie_devices\x18\t \x03(\v2\".otterscale.kubevirt.v1.PCIeDeviceR\vpcieDevices\"o\n" +
	"\x1cCreateVirtualMachineResponse\x12O\n" +
	"\x0fvirtual_machine\x18\x01 \x01(\v2&.otterscale.kubevirt.v1.VirtualMachineR\x0evirtualMachine\"\xa6\x02\n" +
	"\x1bUpdateVirtualMachineRequest\x12\x12\n" +
	"\x04name\x18\x01 \x01(\tR\x04name\x12\x1c\n" +
	"\tnamespace\x18\x02 \x01(\tR\tnamespace\x12\x16\n" +
	"\x06flavor\x18\x03 \x01(\tR\x06flavor\x122\n" +
	"\x05disks\x18\x04 \x03(\v2\x1c.otterscale.kubevirt.v1.DiskR\x05disks\x12B\n" +
	"\vusb_devices\x18\x05 \x03(\v2!.otterscale.kubevirt.v1.USBDeviceR\n" +
	"usbDevices\x12E\n" +
	"\fpcie_devices\x18\x06 \x03(\v2\".otterscale.kubevirt.v1.PCIeDeviceR\vpcieDevices\"o\n" +
	"\x1cUpdateVirtualMachineResponse\x12O\n" +
	"\x0fvirtual_machine\x18\x01 \x01(\v2&.otterscale.kubevirt.v1.VirtualMachineR\x0evirtualMachine\"O\n" +
	"\x1bDeleteVirtualMachineRequest\x12\x12\n" +
	"\x04name\x18\x01 \x01(\tR\x04name\x12\x1c\n" +
	"\tnamespace\x18\x02 \x01(\tR\tnamespace\"L\n" +
	"\x1cDeleteVirtualMachineResponse\x12,\n" +
	"\x05empty\x18\x01 \x01(\v2\x16.google.protobuf.EmptyR\x05empty\"|\n" +
	"\x1dSnapshotVirtualMachineRequest\x12\x17\n" +
	"\avm_name\x18\x01 \x01(\tR\x06vmName\x12!\n" +
	"\fvm_namespace\x18\x02 \x01(\tR\vvmNamespace\x12\x1f\n" +
	"\vtarget_name\x18\x03 \x01(\tR\n" +
	"targetName\"y\n" +
	"\x1aCloneVirtualMachineRequest\x12\x17\n" +
	"\avm_name\x18\x01 \x01(\tR\x06vmName\x12!\n" +
	"\fvm_namespace\x18\x02 \x01(\tR\vvmNamespace\x12\x1f\n" +
	"\vtarget_name\x18\x03 \x01(\tR\n" +
	"targetName\"\\\n" +
	"\x1cRestoreVirtualMachineRequest\x12\x17\n" +
	"\avm_name\x18\x01 \x01(\tR\x06vmName\x12#\n" +
	"\rsnapshot_name\x18\x02 \x01(\tR\fsnapshotName\"Z\n" +
	"\x1cMigrateVirtualMachineRequest\x12\x17\n" +
	"\avm_name\x18\x01 \x01(\tR\x06vmName\x12!\n" +
	"\fvm_namespace\x18\x02 \x01(\tR\vvmNamespace\"5\n" +
	"\x1aStartVirtualMachineRequest\x12\x17\n" +
	"\avm_name\x18\x01 \x01(\tR\x06vmName\"4\n" +
	"\x19StopVirtualMachineRequest\x12\x17\n" +
	"\avm_name\x18\x01 \x01(\tR\x06vmName\"5\n" +
	"\x1aPauseVirtualMachineRequest\x12\x17\n" +
	"\avm_name\x18\x01 \x01(\tR\x06vmName\"7\n" +
	"\x1cUnpauseVirtualMachineRequest\x12\x17\n" +
	"\avm_name\x18\x01 \x01(\tR\x06vmName\"^\n" +
	"\x17CreateDataVolumeRequest\x12C\n" +
	"\vdata_volume\x18\x01 \x01(\v2\".otterscale.kubevirt.v1.DataVolumeR\n" +
	"dataVolume\"5\n" +
	"\x15ListDataVolumeRequest\x12\x1c\n" +
	"\tnamespace\x18\x01 \x01(\tR\tnamespace\"_\n" +
	"\x16ListDataVolumeResponse\x12E\n" +
	"\fdata_volumes\x18\x01 \x03(\v2\".otterscale.kubevirt.v1.DataVolumeR\vdataVolumes\"H\n" +
	"\x14GetDataVolumeRequest\x12\x12\n" +
	"\x04name\x18\x01 \x01(\tR\x04name\x12\x1c\n" +
	"\tnamespace\x18\x02 \x01(\tR\tnamespace\"K\n" +
	"\x17DeleteDataVolumeRequest\x12\x12\n" +
	"\x04name\x18\x01 \x01(\tR\x04name\x12\x1c\n" +
	"\tnamespace\x18\x02 \x01(\tR\tnamespace\"j\n" +
	"\x17ExtendDataVolumeRequest\x12\x12\n" +
	"\x04name\x18\x01 \x01(\tR\x04name\x12\x1c\n" +
	"\tnamespace\x18\x02 \x01(\tR\tnamespace\x12\x1d\n" +
	"\n" +
	"size_bytes\x18\x03 \x01(\x03R\tsizeBytes\"Q\n" +
	"\x14CreateNetworkRequest\x129\n" +
	"\anetwork\x18\x01 \x01(\v2\x1f.otterscale.kubevirt.v1.NetworkR\anetwork\"2\n" +
	"\x12ListNetworkRequest\x12\x1c\n" +
	"\tnamespace\x18\x01 \x01(\tR\tnamespace\"R\n" +
	"\x13ListNetworkResponse\x12;\n" +
	"\bnetworks\x18\x01 \x03(\v2\x1f.otterscale.kubevirt.v1.NetworkR\bnetworks\"E\n" +
	"\x11GetNetworkRequest\x12\x12\n" +
	"\x04name\x18\x01 \x01(\tR\x04name\x12\x1c\n" +
	"\tnamespace\x18\x02 \x01(\tR\tnamespace\"H\n" +
	"\x14DeleteNetworkRequest\x12\x12\n" +
	"\x04name\x18\x01 \x01(\tR\x04name\x12\x1c\n" +
	"\tnamespace\x18\x02 \x01(\tR\tnamespace\"Q\n" +
	"\x14UpdateNetworkRequest\x129\n" +
	"\anetwork\x18\x01 \x01(\v2\x1f.otterscale.kubevirt.v1.NetworkR\anetwork\"M\n" +
	"\x13CreateFlavorRequest\x126\n" +
	"\x06flavor\x18\x01 \x01(\v2\x1e.otterscale.kubevirt.v1.FlavorR\x06flavor\"1\n" +
	"\x11ListFlavorRequest\x12\x1c\n" +
	"\tnamespace\x18\x01 \x01(\tR\tnamespace\"N\n" +
	"\x12ListFlavorResponse\x128\n" +
	"\aflavors\x18\x01 \x03(\v2\x1e.otterscale.kubevirt.v1.FlavorR\aflavors\"D\n" +
	"\x10GetFlavorRequest\x12\x12\n" +
	"\x04name\x18\x01 \x01(\tR\x04name\x12\x1c\n" +
	"\tnamespace\x18\x02 \x01(\tR\tnamespace\"G\n" +
	"\x13DeleteFlavorRequest\x12\x12\n" +
	"\x04name\x18\x01 \x01(\tR\x04name\x12\x1c\n" +
	"\tnamespace\x18\x02 \x01(\tR\tnamespace*}\n" +
	"\bVMStatus\x12\v\n" +
	"\aUNKNOWN\x10\x00\x12\x10\n" +
	"\fPROVISIONING\x10\x01\x12\f\n" +
	"\bSTARTING\x10\x02\x12\v\n" +
	"\aRUNNING\x10\x03\x12\x0f\n" +
	"\vTERMINATING\x10\x04\x12\v\n" +
	"\aSTOPPED\x10\x05\x12\n" +
	"\n" +
	"\x06PAUSED\x10\x06\x12\r\n" +
	"\tMIGRATING\x10\a*6\n" +
	"\bOpStatus\x12\x0f\n" +
	"\vIN_PROGRESS\x10\x00\x12\r\n" +
	"\tSUCCEEDED\x10\x01\x12\n" +
	"\n" +
	"\x06FAILED\x10\x022\xd3\x15\n" +
	"\x0eMachineService\x12{\n" +
	"\x12ListVirtualMachine\x121.otterscale.kubevirt.v1.ListVirtualMachineRequest\x1a2.otterscale.kubevirt.v1.ListVirtualMachineResponse\x12x\n" +
	"\x11GetVirtualMachine\x120.otterscale.kubevirt.v1.GetVirtualMachineRequest\x1a1.otterscale.kubevirt.v1.GetVirtualMachineResponse\x12\x81\x01\n" +
	"\x14CreateVirtualMachine\x123.otterscale.kubevirt.v1.CreateVirtualMachineRequest\x1a4.otterscale.kubevirt.v1.CreateVirtualMachineResponse\x12\x81\x01\n" +
	"\x14DeleteVirtualMachine\x123.otterscale.kubevirt.v1.DeleteVirtualMachineRequest\x1a4.otterscale.kubevirt.v1.DeleteVirtualMachineResponse\x12\x81\x01\n" +
	"\x14UpdateVirtualMachine\x123.otterscale.kubevirt.v1.UpdateVirtualMachineRequest\x1a4.otterscale.kubevirt.v1.UpdateVirtualMachineResponse\x12a\n" +
	"\x13CloneVirtualMachine\x122.otterscale.kubevirt.v1.CloneVirtualMachineRequest\x1a\x16.google.protobuf.Empty\x12g\n" +
	"\x16SnapshotVirtualMachine\x125.otterscale.kubevirt.v1.SnapshotVirtualMachineRequest\x1a\x16.google.protobuf.Empty\x12e\n" +
	"\x15RestoreVirtualMachine\x124.otterscale.kubevirt.v1.RestoreVirtualMachineRequest\x1a\x16.google.protobuf.Empty\x12a\n" +
	"\x13StartVirtualMachine\x122.otterscale.kubevirt.v1.StartVirtualMachineRequest\x1a\x16.google.protobuf.Empty\x12_\n" +
	"\x12StopVirtualMachine\x121.otterscale.kubevirt.v1.StopVirtualMachineRequest\x1a\x16.google.protobuf.Empty\x12a\n" +
	"\x13PauseVirtualMachine\x122.otterscale.kubevirt.v1.PauseVirtualMachineRequest\x1a\x16.google.protobuf.Empty\x12e\n" +
	"\x15UnpauseVirtualMachine\x124.otterscale.kubevirt.v1.UnpauseVirtualMachineRequest\x1a\x16.google.protobuf.Empty\x12e\n" +
	"\x15MigrateVirtualMachine\x124.otterscale.kubevirt.v1.MigrateVirtualMachineRequest\x1a\x16.google.protobuf.Empty\x12[\n" +
	"\x10CreateDataVolume\x12/.otterscale.kubevirt.v1.CreateDataVolumeRequest\x1a\x16.google.protobuf.Empty\x12a\n" +
	"\rGetDataVolume\x12,.otterscale.kubevirt.v1.GetDataVolumeRequest\x1a\".otterscale.kubevirt.v1.DataVolume\x12o\n" +
	"\x0eListDataVolume\x12-.otterscale.kubevirt.v1.ListDataVolumeRequest\x1a..otterscale.kubevirt.v1.ListDataVolumeResponse\x12[\n" +
	"\x10DeleteDataVolume\x12/.otterscale.kubevirt.v1.DeleteDataVolumeRequest\x1a\x16.google.protobuf.Empty\x12[\n" +
	"\x10ExtendDataVolume\x12/.otterscale.kubevirt.v1.ExtendDataVolumeRequest\x1a\x16.google.protobuf.Empty\x12U\n" +
	"\rCreateNetwork\x12,.otterscale.kubevirt.v1.CreateNetworkRequest\x1a\x16.google.protobuf.Empty\x12X\n" +
	"\n" +
	"GetNetwork\x12).otterscale.kubevirt.v1.GetNetworkRequest\x1a\x1f.otterscale.kubevirt.v1.Network\x12f\n" +
	"\vListNetwork\x12*.otterscale.kubevirt.v1.ListNetworkRequest\x1a+.otterscale.kubevirt.v1.ListNetworkResponse\x12U\n" +
	"\rDeleteNetwork\x12,.otterscale.kubevirt.v1.DeleteNetworkRequest\x1a\x16.google.protobuf.Empty\x12U\n" +
	"\rUpdateNetwork\x12,.otterscale.kubevirt.v1.UpdateNetworkRequest\x1a\x16.google.protobuf.Empty\x12S\n" +
	"\fCreateFlavor\x12+.otterscale.kubevirt.v1.CreateFlavorRequest\x1a\x16.google.protobuf.Empty\x12U\n" +
	"\tGetFlavor\x12(.otterscale.kubevirt.v1.GetFlavorRequest\x1a\x1e.otterscale.kubevirt.v1.Flavor\x12c\n" +
	"\n" +
	"ListFlavor\x12).otterscale.kubevirt.v1.ListFlavorRequest\x1a*.otterscale.kubevirt.v1.ListFlavorResponse\x12S\n" +
	"\fDeleteFlavor\x12+.otterscale.kubevirt.v1.DeleteFlavorRequest\x1a\x16.google.protobuf.EmptyB2Z0github.com/openhdc/otterscale/api/kubevirt/v1;pbb\beditionsp\xe8\a"

var file_api_kubevirt_kubevirt_proto_enumTypes = make([]protoimpl.EnumInfo, 2)
var file_api_kubevirt_kubevirt_proto_msgTypes = make([]protoimpl.MessageInfo, 49)
var file_api_kubevirt_kubevirt_proto_goTypes = []any{
	(VMStatus)(0),                         // 0: otterscale.kubevirt.v1.VMStatus
	(OpStatus)(0),                         // 1: otterscale.kubevirt.v1.OpStatus
	(*VirtualMachine)(nil),                // 2: otterscale.kubevirt.v1.VirtualMachine
	(*VMOperations)(nil),                  // 3: otterscale.kubevirt.v1.VMOperations
	(*VMSnapshot)(nil),                    // 4: otterscale.kubevirt.v1.VMSnapshot
	(*VMClone)(nil),                       // 5: otterscale.kubevirt.v1.VMClone
	(*VMRestore)(nil),                     // 6: otterscale.kubevirt.v1.VMRestore
	(*VMMigrate)(nil),                     // 7: otterscale.kubevirt.v1.VMMigrate
	(*Flavor)(nil),                        // 8: otterscale.kubevirt.v1.Flavor
	(*DataVolume)(nil),                    // 9: otterscale.kubevirt.v1.DataVolume
	(*Network)(nil),                       // 10: otterscale.kubevirt.v1.Network
	(*Device)(nil),                        // 11: otterscale.kubevirt.v1.Device
	(*Disk)(nil),                          // 12: otterscale.kubevirt.v1.Disk
	(*USBDevice)(nil),                     // 13: otterscale.kubevirt.v1.USBDevice
	(*PCIeDevice)(nil),                    // 14: otterscale.kubevirt.v1.PCIeDevice
	(*ListVirtualMachineRequest)(nil),     // 15: otterscale.kubevirt.v1.ListVirtualMachineRequest
	(*ListVirtualMachineResponse)(nil),    // 16: otterscale.kubevirt.v1.ListVirtualMachineResponse
	(*GetVirtualMachineRequest)(nil),      // 17: otterscale.kubevirt.v1.GetVirtualMachineRequest
	(*GetVirtualMachineResponse)(nil),     // 18: otterscale.kubevirt.v1.GetVirtualMachineResponse
	(*CreateVirtualMachineRequest)(nil),   // 19: otterscale.kubevirt.v1.CreateVirtualMachineRequest
	(*CreateVirtualMachineResponse)(nil),  // 20: otterscale.kubevirt.v1.CreateVirtualMachineResponse
	(*UpdateVirtualMachineRequest)(nil),   // 21: otterscale.kubevirt.v1.UpdateVirtualMachineRequest
	(*UpdateVirtualMachineResponse)(nil),  // 22: otterscale.kubevirt.v1.UpdateVirtualMachineResponse
	(*DeleteVirtualMachineRequest)(nil),   // 23: otterscale.kubevirt.v1.DeleteVirtualMachineRequest
	(*DeleteVirtualMachineResponse)(nil),  // 24: otterscale.kubevirt.v1.DeleteVirtualMachineResponse
	(*SnapshotVirtualMachineRequest)(nil), // 25: otterscale.kubevirt.v1.SnapshotVirtualMachineRequest
	(*CloneVirtualMachineRequest)(nil),    // 26: otterscale.kubevirt.v1.CloneVirtualMachineRequest
	(*RestoreVirtualMachineRequest)(nil),  // 27: otterscale.kubevirt.v1.RestoreVirtualMachineRequest
	(*MigrateVirtualMachineRequest)(nil),  // 28: otterscale.kubevirt.v1.MigrateVirtualMachineRequest
	(*StartVirtualMachineRequest)(nil),    // 29: otterscale.kubevirt.v1.StartVirtualMachineRequest
	(*StopVirtualMachineRequest)(nil),     // 30: otterscale.kubevirt.v1.StopVirtualMachineRequest
	(*PauseVirtualMachineRequest)(nil),    // 31: otterscale.kubevirt.v1.PauseVirtualMachineRequest
	(*UnpauseVirtualMachineRequest)(nil),  // 32: otterscale.kubevirt.v1.UnpauseVirtualMachineRequest
	(*CreateDataVolumeRequest)(nil),       // 33: otterscale.kubevirt.v1.CreateDataVolumeRequest
	(*ListDataVolumeRequest)(nil),         // 34: otterscale.kubevirt.v1.ListDataVolumeRequest
	(*ListDataVolumeResponse)(nil),        // 35: otterscale.kubevirt.v1.ListDataVolumeResponse
	(*GetDataVolumeRequest)(nil),          // 36: otterscale.kubevirt.v1.GetDataVolumeRequest
	(*DeleteDataVolumeRequest)(nil),       // 37: otterscale.kubevirt.v1.DeleteDataVolumeRequest
	(*ExtendDataVolumeRequest)(nil),       // 38: otterscale.kubevirt.v1.ExtendDataVolumeRequest
	(*CreateNetworkRequest)(nil),          // 39: otterscale.kubevirt.v1.CreateNetworkRequest
	(*ListNetworkRequest)(nil),            // 40: otterscale.kubevirt.v1.ListNetworkRequest
	(*ListNetworkResponse)(nil),           // 41: otterscale.kubevirt.v1.ListNetworkResponse
	(*GetNetworkRequest)(nil),             // 42: otterscale.kubevirt.v1.GetNetworkRequest
	(*DeleteNetworkRequest)(nil),          // 43: otterscale.kubevirt.v1.DeleteNetworkRequest
	(*UpdateNetworkRequest)(nil),          // 44: otterscale.kubevirt.v1.UpdateNetworkRequest
	(*CreateFlavorRequest)(nil),           // 45: otterscale.kubevirt.v1.CreateFlavorRequest
	(*ListFlavorRequest)(nil),             // 46: otterscale.kubevirt.v1.ListFlavorRequest
	(*ListFlavorResponse)(nil),            // 47: otterscale.kubevirt.v1.ListFlavorResponse
	(*GetFlavorRequest)(nil),              // 48: otterscale.kubevirt.v1.GetFlavorRequest
	(*DeleteFlavorRequest)(nil),           // 49: otterscale.kubevirt.v1.DeleteFlavorRequest
	(*VMOperations_Status)(nil),           // 50: otterscale.kubevirt.v1.VMOperations.Status
	(*timestamppb.Timestamp)(nil),         // 51: google.protobuf.Timestamp
	(*emptypb.Empty)(nil),                 // 52: google.protobuf.Empty
}
var file_api_kubevirt_kubevirt_proto_depIdxs = []int32{
	8,  // 0: otterscale.kubevirt.v1.VirtualMachine.flavor:type_name -> otterscale.kubevirt.v1.Flavor
	10, // 1: otterscale.kubevirt.v1.VirtualMachine.network:type_name -> otterscale.kubevirt.v1.Network
	9,  // 2: otterscale.kubevirt.v1.VirtualMachine.data_volumes:type_name -> otterscale.kubevirt.v1.DataVolume
	0,  // 3: otterscale.kubevirt.v1.VirtualMachine.status:type_name -> otterscale.kubevirt.v1.VMStatus
	4,  // 4: otterscale.kubevirt.v1.VirtualMachine.snapshot:type_name -> otterscale.kubevirt.v1.VMSnapshot
	5,  // 5: otterscale.kubevirt.v1.VirtualMachine.clone:type_name -> otterscale.kubevirt.v1.VMClone
	6,  // 6: otterscale.kubevirt.v1.VirtualMachine.restore:type_name -> otterscale.kubevirt.v1.VMRestore
	7,  // 7: otterscale.kubevirt.v1.VirtualMachine.migrate:type_name -> otterscale.kubevirt.v1.VMMigrate
	51, // 8: otterscale.kubevirt.v1.VMOperations.create_time:type_name -> google.protobuf.Timestamp
	50, // 9: otterscale.kubevirt.v1.VMOperations.status:type_name -> otterscale.kubevirt.v1.VMOperations.Status
	3,  // 10: otterscale.kubevirt.v1.VMSnapshot.ops:type_name -> otterscale.kubevirt.v1.VMOperations
	3,  // 11: otterscale.kubevirt.v1.VMClone.ops:type_name -> otterscale.kubevirt.v1.VMOperations
	3,  // 12: otterscale.kubevirt.v1.VMRestore.ops:type_name -> otterscale.kubevirt.v1.VMOperations
	3,  // 13: otterscale.kubevirt.v1.VMMigrate.ops:type_name -> otterscale.kubevirt.v1.VMOperations
	2,  // 14: otterscale.kubevirt.v1.ListVirtualMachineResponse.virtual_machines:type_name -> otterscale.kubevirt.v1.VirtualMachine
	2,  // 15: otterscale.kubevirt.v1.GetVirtualMachineResponse.virtual_machine:type_name -> otterscale.kubevirt.v1.VirtualMachine
	9,  // 16: otterscale.kubevirt.v1.CreateVirtualMachineRequest.data_volume:type_name -> otterscale.kubevirt.v1.DataVolume
	12, // 17: otterscale.kubevirt.v1.CreateVirtualMachineRequest.disks:type_name -> otterscale.kubevirt.v1.Disk
	13, // 18: otterscale.kubevirt.v1.CreateVirtualMachineRequest.usb_devices:type_name -> otterscale.kubevirt.v1.USBDevice
	14, // 19: otterscale.kubevirt.v1.CreateVirtualMachineRequest.pcie_devices:type_name -> otterscale.kubevirt.v1.PCIeDevice
	2,  // 20: otterscale.kubevirt.v1.CreateVirtualMachineResponse.virtual_machine:type_name -> otterscale.kubevirt.v1.VirtualMachine
	12, // 21: otterscale.kubevirt.v1.UpdateVirtualMachineRequest.disks:type_name -> otterscale.kubevirt.v1.Disk
	13, // 22: otterscale.kubevirt.v1.UpdateVirtualMachineRequest.usb_devices:type_name -> otterscale.kubevirt.v1.USBDevice
	14, // 23: otterscale.kubevirt.v1.UpdateVirtualMachineRequest.pcie_devices:type_name -> otterscale.kubevirt.v1.PCIeDevice
	2,  // 24: otterscale.kubevirt.v1.UpdateVirtualMachineResponse.virtual_machine:type_name -> otterscale.kubevirt.v1.VirtualMachine
	52, // 25: otterscale.kubevirt.v1.DeleteVirtualMachineResponse.empty:type_name -> google.protobuf.Empty
	9,  // 26: otterscale.kubevirt.v1.CreateDataVolumeRequest.data_volume:type_name -> otterscale.kubevirt.v1.DataVolume
	9,  // 27: otterscale.kubevirt.v1.ListDataVolumeResponse.data_volumes:type_name -> otterscale.kubevirt.v1.DataVolume
	10, // 28: otterscale.kubevirt.v1.CreateNetworkRequest.network:type_name -> otterscale.kubevirt.v1.Network
	10, // 29: otterscale.kubevirt.v1.ListNetworkResponse.networks:type_name -> otterscale.kubevirt.v1.Network
	10, // 30: otterscale.kubevirt.v1.UpdateNetworkRequest.network:type_name -> otterscale.kubevirt.v1.Network
	8,  // 31: otterscale.kubevirt.v1.CreateFlavorRequest.flavor:type_name -> otterscale.kubevirt.v1.Flavor
	8,  // 32: otterscale.kubevirt.v1.ListFlavorResponse.flavors:type_name -> otterscale.kubevirt.v1.Flavor
	1,  // 33: otterscale.kubevirt.v1.VMOperations.Status.status:type_name -> otterscale.kubevirt.v1.OpStatus
	15, // 34: otterscale.kubevirt.v1.MachineService.ListVirtualMachine:input_type -> otterscale.kubevirt.v1.ListVirtualMachineRequest
	17, // 35: otterscale.kubevirt.v1.MachineService.GetVirtualMachine:input_type -> otterscale.kubevirt.v1.GetVirtualMachineRequest
	19, // 36: otterscale.kubevirt.v1.MachineService.CreateVirtualMachine:input_type -> otterscale.kubevirt.v1.CreateVirtualMachineRequest
	23, // 37: otterscale.kubevirt.v1.MachineService.DeleteVirtualMachine:input_type -> otterscale.kubevirt.v1.DeleteVirtualMachineRequest
	21, // 38: otterscale.kubevirt.v1.MachineService.UpdateVirtualMachine:input_type -> otterscale.kubevirt.v1.UpdateVirtualMachineRequest
	26, // 39: otterscale.kubevirt.v1.MachineService.CloneVirtualMachine:input_type -> otterscale.kubevirt.v1.CloneVirtualMachineRequest
	25, // 40: otterscale.kubevirt.v1.MachineService.SnapshotVirtualMachine:input_type -> otterscale.kubevirt.v1.SnapshotVirtualMachineRequest
	27, // 41: otterscale.kubevirt.v1.MachineService.RestoreVirtualMachine:input_type -> otterscale.kubevirt.v1.RestoreVirtualMachineRequest
	29, // 42: otterscale.kubevirt.v1.MachineService.StartVirtualMachine:input_type -> otterscale.kubevirt.v1.StartVirtualMachineRequest
	30, // 43: otterscale.kubevirt.v1.MachineService.StopVirtualMachine:input_type -> otterscale.kubevirt.v1.StopVirtualMachineRequest
	31, // 44: otterscale.kubevirt.v1.MachineService.PauseVirtualMachine:input_type -> otterscale.kubevirt.v1.PauseVirtualMachineRequest
	32, // 45: otterscale.kubevirt.v1.MachineService.UnpauseVirtualMachine:input_type -> otterscale.kubevirt.v1.UnpauseVirtualMachineRequest
	28, // 46: otterscale.kubevirt.v1.MachineService.MigrateVirtualMachine:input_type -> otterscale.kubevirt.v1.MigrateVirtualMachineRequest
	33, // 47: otterscale.kubevirt.v1.MachineService.CreateDataVolume:input_type -> otterscale.kubevirt.v1.CreateDataVolumeRequest
	36, // 48: otterscale.kubevirt.v1.MachineService.GetDataVolume:input_type -> otterscale.kubevirt.v1.GetDataVolumeRequest
	34, // 49: otterscale.kubevirt.v1.MachineService.ListDataVolume:input_type -> otterscale.kubevirt.v1.ListDataVolumeRequest
	37, // 50: otterscale.kubevirt.v1.MachineService.DeleteDataVolume:input_type -> otterscale.kubevirt.v1.DeleteDataVolumeRequest
	38, // 51: otterscale.kubevirt.v1.MachineService.ExtendDataVolume:input_type -> otterscale.kubevirt.v1.ExtendDataVolumeRequest
	39, // 52: otterscale.kubevirt.v1.MachineService.CreateNetwork:input_type -> otterscale.kubevirt.v1.CreateNetworkRequest
	42, // 53: otterscale.kubevirt.v1.MachineService.GetNetwork:input_type -> otterscale.kubevirt.v1.GetNetworkRequest
	40, // 54: otterscale.kubevirt.v1.MachineService.ListNetwork:input_type -> otterscale.kubevirt.v1.ListNetworkRequest
	43, // 55: otterscale.kubevirt.v1.MachineService.DeleteNetwork:input_type -> otterscale.kubevirt.v1.DeleteNetworkRequest
	44, // 56: otterscale.kubevirt.v1.MachineService.UpdateNetwork:input_type -> otterscale.kubevirt.v1.UpdateNetworkRequest
	45, // 57: otterscale.kubevirt.v1.MachineService.CreateFlavor:input_type -> otterscale.kubevirt.v1.CreateFlavorRequest
	48, // 58: otterscale.kubevirt.v1.MachineService.GetFlavor:input_type -> otterscale.kubevirt.v1.GetFlavorRequest
	46, // 59: otterscale.kubevirt.v1.MachineService.ListFlavor:input_type -> otterscale.kubevirt.v1.ListFlavorRequest
	49, // 60: otterscale.kubevirt.v1.MachineService.DeleteFlavor:input_type -> otterscale.kubevirt.v1.DeleteFlavorRequest
	16, // 61: otterscale.kubevirt.v1.MachineService.ListVirtualMachine:output_type -> otterscale.kubevirt.v1.ListVirtualMachineResponse
	18, // 62: otterscale.kubevirt.v1.MachineService.GetVirtualMachine:output_type -> otterscale.kubevirt.v1.GetVirtualMachineResponse
	20, // 63: otterscale.kubevirt.v1.MachineService.CreateVirtualMachine:output_type -> otterscale.kubevirt.v1.CreateVirtualMachineResponse
	24, // 64: otterscale.kubevirt.v1.MachineService.DeleteVirtualMachine:output_type -> otterscale.kubevirt.v1.DeleteVirtualMachineResponse
	22, // 65: otterscale.kubevirt.v1.MachineService.UpdateVirtualMachine:output_type -> otterscale.kubevirt.v1.UpdateVirtualMachineResponse
	52, // 66: otterscale.kubevirt.v1.MachineService.CloneVirtualMachine:output_type -> google.protobuf.Empty
	52, // 67: otterscale.kubevirt.v1.MachineService.SnapshotVirtualMachine:output_type -> google.protobuf.Empty
	52, // 68: otterscale.kubevirt.v1.MachineService.RestoreVirtualMachine:output_type -> google.protobuf.Empty
	52, // 69: otterscale.kubevirt.v1.MachineService.StartVirtualMachine:output_type -> google.protobuf.Empty
	52, // 70: otterscale.kubevirt.v1.MachineService.StopVirtualMachine:output_type -> google.protobuf.Empty
	52, // 71: otterscale.kubevirt.v1.MachineService.PauseVirtualMachine:output_type -> google.protobuf.Empty
	52, // 72: otterscale.kubevirt.v1.MachineService.UnpauseVirtualMachine:output_type -> google.protobuf.Empty
	52, // 73: otterscale.kubevirt.v1.MachineService.MigrateVirtualMachine:output_type -> google.protobuf.Empty
	52, // 74: otterscale.kubevirt.v1.MachineService.CreateDataVolume:output_type -> google.protobuf.Empty
	9,  // 75: otterscale.kubevirt.v1.MachineService.GetDataVolume:output_type -> otterscale.kubevirt.v1.DataVolume
	35, // 76: otterscale.kubevirt.v1.MachineService.ListDataVolume:output_type -> otterscale.kubevirt.v1.ListDataVolumeResponse
	52, // 77: otterscale.kubevirt.v1.MachineService.DeleteDataVolume:output_type -> google.protobuf.Empty
	52, // 78: otterscale.kubevirt.v1.MachineService.ExtendDataVolume:output_type -> google.protobuf.Empty
	52, // 79: otterscale.kubevirt.v1.MachineService.CreateNetwork:output_type -> google.protobuf.Empty
	10, // 80: otterscale.kubevirt.v1.MachineService.GetNetwork:output_type -> otterscale.kubevirt.v1.Network
	41, // 81: otterscale.kubevirt.v1.MachineService.ListNetwork:output_type -> otterscale.kubevirt.v1.ListNetworkResponse
	52, // 82: otterscale.kubevirt.v1.MachineService.DeleteNetwork:output_type -> google.protobuf.Empty
	52, // 83: otterscale.kubevirt.v1.MachineService.UpdateNetwork:output_type -> google.protobuf.Empty
	52, // 84: otterscale.kubevirt.v1.MachineService.CreateFlavor:output_type -> google.protobuf.Empty
	8,  // 85: otterscale.kubevirt.v1.MachineService.GetFlavor:output_type -> otterscale.kubevirt.v1.Flavor
	47, // 86: otterscale.kubevirt.v1.MachineService.ListFlavor:output_type -> otterscale.kubevirt.v1.ListFlavorResponse
	52, // 87: otterscale.kubevirt.v1.MachineService.DeleteFlavor:output_type -> google.protobuf.Empty
	61, // [61:88] is the sub-list for method output_type
	34, // [34:61] is the sub-list for method input_type
	34, // [34:34] is the sub-list for extension type_name
	34, // [34:34] is the sub-list for extension extendee
	0,  // [0:34] is the sub-list for field type_name
}

func init() { file_api_kubevirt_kubevirt_proto_init() }
func file_api_kubevirt_kubevirt_proto_init() {
	if File_api_kubevirt_kubevirt_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_api_kubevirt_kubevirt_proto_rawDesc), len(file_api_kubevirt_kubevirt_proto_rawDesc)),
			NumEnums:      2,
			NumMessages:   49,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_api_kubevirt_kubevirt_proto_goTypes,
		DependencyIndexes: file_api_kubevirt_kubevirt_proto_depIdxs,
		EnumInfos:         file_api_kubevirt_kubevirt_proto_enumTypes,
		MessageInfos:      file_api_kubevirt_kubevirt_proto_msgTypes,
	}.Build()
	File_api_kubevirt_kubevirt_proto = out.File
	file_api_kubevirt_kubevirt_proto_goTypes = nil
	file_api_kubevirt_kubevirt_proto_depIdxs = nil
}
