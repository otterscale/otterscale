// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.6
// 	protoc        v6.31.0
// source: api/kubevirt/v1/kubevirt.proto

package pb

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	emptypb "google.golang.org/protobuf/types/known/emptypb"
	timestamppb "google.golang.org/protobuf/types/known/timestamppb"
	reflect "reflect"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type VirtualMachine_VirtualMachineStatus int32

const (
	VirtualMachine_UNSPECIFIED  VirtualMachine_VirtualMachineStatus = 0
	VirtualMachine_PROVISIONING VirtualMachine_VirtualMachineStatus = 1
	VirtualMachine_STARTING     VirtualMachine_VirtualMachineStatus = 2
	VirtualMachine_RUNNING      VirtualMachine_VirtualMachineStatus = 3
	VirtualMachine_TERMINATING  VirtualMachine_VirtualMachineStatus = 4
	VirtualMachine_STOPPED      VirtualMachine_VirtualMachineStatus = 5
	VirtualMachine_PAUSED       VirtualMachine_VirtualMachineStatus = 6
	VirtualMachine_MIGRATING    VirtualMachine_VirtualMachineStatus = 7
)

// Enum value maps for VirtualMachine_VirtualMachineStatus.
var (
	VirtualMachine_VirtualMachineStatus_name = map[int32]string{
		0: "UNSPECIFIED",
		1: "PROVISIONING",
		2: "STARTING",
		3: "RUNNING",
		4: "TERMINATING",
		5: "STOPPED",
		6: "PAUSED",
		7: "MIGRATING",
	}
	VirtualMachine_VirtualMachineStatus_value = map[string]int32{
		"UNSPECIFIED":  0,
		"PROVISIONING": 1,
		"STARTING":     2,
		"RUNNING":      3,
		"TERMINATING":  4,
		"STOPPED":      5,
		"PAUSED":       6,
		"MIGRATING":    7,
	}
)

func (x VirtualMachine_VirtualMachineStatus) Enum() *VirtualMachine_VirtualMachineStatus {
	p := new(VirtualMachine_VirtualMachineStatus)
	*p = x
	return p
}

func (x VirtualMachine_VirtualMachineStatus) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (VirtualMachine_VirtualMachineStatus) Descriptor() protoreflect.EnumDescriptor {
	return file_api_kubevirt_v1_kubevirt_proto_enumTypes[0].Descriptor()
}

func (VirtualMachine_VirtualMachineStatus) Type() protoreflect.EnumType {
	return &file_api_kubevirt_v1_kubevirt_proto_enumTypes[0]
}

func (x VirtualMachine_VirtualMachineStatus) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

type VirtualMachine_Operation_OperationResult_OperationStatus int32

const (
	VirtualMachine_Operation_OperationResult_OPERATION_STATUS_UNSPECIFIED VirtualMachine_Operation_OperationResult_OperationStatus = 0
	VirtualMachine_Operation_OperationResult_OPERATION_STATUS_IN_PROGRESS VirtualMachine_Operation_OperationResult_OperationStatus = 1
	VirtualMachine_Operation_OperationResult_OPERATION_STATUS_SUCCEEDED   VirtualMachine_Operation_OperationResult_OperationStatus = 2
	VirtualMachine_Operation_OperationResult_OPERATION_STATUS_FAILED      VirtualMachine_Operation_OperationResult_OperationStatus = 3
)

// Enum value maps for VirtualMachine_Operation_OperationResult_OperationStatus.
var (
	VirtualMachine_Operation_OperationResult_OperationStatus_name = map[int32]string{
		0: "OPERATION_STATUS_UNSPECIFIED",
		1: "OPERATION_STATUS_IN_PROGRESS",
		2: "OPERATION_STATUS_SUCCEEDED",
		3: "OPERATION_STATUS_FAILED",
	}
	VirtualMachine_Operation_OperationResult_OperationStatus_value = map[string]int32{
		"OPERATION_STATUS_UNSPECIFIED": 0,
		"OPERATION_STATUS_IN_PROGRESS": 1,
		"OPERATION_STATUS_SUCCEEDED":   2,
		"OPERATION_STATUS_FAILED":      3,
	}
)

func (x VirtualMachine_Operation_OperationResult_OperationStatus) Enum() *VirtualMachine_Operation_OperationResult_OperationStatus {
	p := new(VirtualMachine_Operation_OperationResult_OperationStatus)
	*p = x
	return p
}

func (x VirtualMachine_Operation_OperationResult_OperationStatus) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (VirtualMachine_Operation_OperationResult_OperationStatus) Descriptor() protoreflect.EnumDescriptor {
	return file_api_kubevirt_v1_kubevirt_proto_enumTypes[1].Descriptor()
}

func (VirtualMachine_Operation_OperationResult_OperationStatus) Type() protoreflect.EnumType {
	return &file_api_kubevirt_v1_kubevirt_proto_enumTypes[1]
}

func (x VirtualMachine_Operation_OperationResult_OperationStatus) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Common messages
type Metadata struct {
	state                  protoimpl.MessageState `protogen:"opaque.v1"`
	xxx_hidden_Name        *string                `protobuf:"bytes,1,opt,name=name"`
	xxx_hidden_Namespace   *string                `protobuf:"bytes,2,opt,name=namespace"`
	xxx_hidden_Labels      map[string]string      `protobuf:"bytes,3,rep,name=labels" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	xxx_hidden_Annotations map[string]string      `protobuf:"bytes,4,rep,name=annotations" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	xxx_hidden_CreatedAt   *timestamppb.Timestamp `protobuf:"bytes,5,opt,name=created_at,json=createdAt"`
	xxx_hidden_UpdatedAt   *timestamppb.Timestamp `protobuf:"bytes,6,opt,name=updated_at,json=updatedAt"`
	XXX_raceDetectHookData protoimpl.RaceDetectHookData
	XXX_presence           [1]uint32
	unknownFields          protoimpl.UnknownFields
	sizeCache              protoimpl.SizeCache
}

func (x *Metadata) Reset() {
	*x = Metadata{}
	mi := &file_api_kubevirt_v1_kubevirt_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Metadata) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Metadata) ProtoMessage() {}

func (x *Metadata) ProtoReflect() protoreflect.Message {
	mi := &file_api_kubevirt_v1_kubevirt_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *Metadata) GetName() string {
	if x != nil {
		if x.xxx_hidden_Name != nil {
			return *x.xxx_hidden_Name
		}
		return ""
	}
	return ""
}

func (x *Metadata) GetNamespace() string {
	if x != nil {
		if x.xxx_hidden_Namespace != nil {
			return *x.xxx_hidden_Namespace
		}
		return ""
	}
	return ""
}

func (x *Metadata) GetLabels() map[string]string {
	if x != nil {
		return x.xxx_hidden_Labels
	}
	return nil
}

func (x *Metadata) GetAnnotations() map[string]string {
	if x != nil {
		return x.xxx_hidden_Annotations
	}
	return nil
}

func (x *Metadata) GetCreatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.xxx_hidden_CreatedAt
	}
	return nil
}

func (x *Metadata) GetUpdatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.xxx_hidden_UpdatedAt
	}
	return nil
}

func (x *Metadata) SetName(v string) {
	x.xxx_hidden_Name = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 0, 6)
}

func (x *Metadata) SetNamespace(v string) {
	x.xxx_hidden_Namespace = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 1, 6)
}

func (x *Metadata) SetLabels(v map[string]string) {
	x.xxx_hidden_Labels = v
}

func (x *Metadata) SetAnnotations(v map[string]string) {
	x.xxx_hidden_Annotations = v
}

func (x *Metadata) SetCreatedAt(v *timestamppb.Timestamp) {
	x.xxx_hidden_CreatedAt = v
}

func (x *Metadata) SetUpdatedAt(v *timestamppb.Timestamp) {
	x.xxx_hidden_UpdatedAt = v
}

func (x *Metadata) HasName() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 0)
}

func (x *Metadata) HasNamespace() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 1)
}

func (x *Metadata) HasCreatedAt() bool {
	if x == nil {
		return false
	}
	return x.xxx_hidden_CreatedAt != nil
}

func (x *Metadata) HasUpdatedAt() bool {
	if x == nil {
		return false
	}
	return x.xxx_hidden_UpdatedAt != nil
}

func (x *Metadata) ClearName() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 0)
	x.xxx_hidden_Name = nil
}

func (x *Metadata) ClearNamespace() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 1)
	x.xxx_hidden_Namespace = nil
}

func (x *Metadata) ClearCreatedAt() {
	x.xxx_hidden_CreatedAt = nil
}

func (x *Metadata) ClearUpdatedAt() {
	x.xxx_hidden_UpdatedAt = nil
}

type Metadata_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	Name        *string
	Namespace   *string
	Labels      map[string]string
	Annotations map[string]string
	CreatedAt   *timestamppb.Timestamp
	UpdatedAt   *timestamppb.Timestamp
}

func (b0 Metadata_builder) Build() *Metadata {
	m0 := &Metadata{}
	b, x := &b0, m0
	_, _ = b, x
	if b.Name != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 0, 6)
		x.xxx_hidden_Name = b.Name
	}
	if b.Namespace != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 1, 6)
		x.xxx_hidden_Namespace = b.Namespace
	}
	x.xxx_hidden_Labels = b.Labels
	x.xxx_hidden_Annotations = b.Annotations
	x.xxx_hidden_CreatedAt = b.CreatedAt
	x.xxx_hidden_UpdatedAt = b.UpdatedAt
	return m0
}

// Virtual Machine messages
type VirtualMachine struct {
	state                  protoimpl.MessageState              `protogen:"opaque.v1"`
	xxx_hidden_Metadata    *Metadata                           `protobuf:"bytes,1,opt,name=metadata"`
	xxx_hidden_Spec        *VirtualMachineSpec                 `protobuf:"bytes,11,opt,name=spec"`
	xxx_hidden_Status      VirtualMachine_VirtualMachineStatus `protobuf:"varint,12,opt,name=status,enum=otterscale.kubevirt.v1.VirtualMachine_VirtualMachineStatus"`
	xxx_hidden_Snapshots   *[]*VirtualMachine_Operation        `protobuf:"bytes,21,rep,name=snapshots"`
	xxx_hidden_Clones      *[]*VirtualMachine_Operation        `protobuf:"bytes,22,rep,name=clones"`
	xxx_hidden_Migrates    *[]*VirtualMachine_Operation        `protobuf:"bytes,23,rep,name=migrates"`
	xxx_hidden_Restores    *[]*VirtualMachine_Operation        `protobuf:"bytes,24,rep,name=restores"`
	XXX_raceDetectHookData protoimpl.RaceDetectHookData
	XXX_presence           [1]uint32
	unknownFields          protoimpl.UnknownFields
	sizeCache              protoimpl.SizeCache
}

func (x *VirtualMachine) Reset() {
	*x = VirtualMachine{}
	mi := &file_api_kubevirt_v1_kubevirt_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *VirtualMachine) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*VirtualMachine) ProtoMessage() {}

func (x *VirtualMachine) ProtoReflect() protoreflect.Message {
	mi := &file_api_kubevirt_v1_kubevirt_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *VirtualMachine) GetMetadata() *Metadata {
	if x != nil {
		return x.xxx_hidden_Metadata
	}
	return nil
}

func (x *VirtualMachine) GetSpec() *VirtualMachineSpec {
	if x != nil {
		return x.xxx_hidden_Spec
	}
	return nil
}

func (x *VirtualMachine) GetStatus() VirtualMachine_VirtualMachineStatus {
	if x != nil {
		if protoimpl.X.Present(&(x.XXX_presence[0]), 2) {
			return x.xxx_hidden_Status
		}
	}
	return VirtualMachine_UNSPECIFIED
}

func (x *VirtualMachine) GetSnapshots() []*VirtualMachine_Operation {
	if x != nil {
		if x.xxx_hidden_Snapshots != nil {
			return *x.xxx_hidden_Snapshots
		}
	}
	return nil
}

func (x *VirtualMachine) GetClones() []*VirtualMachine_Operation {
	if x != nil {
		if x.xxx_hidden_Clones != nil {
			return *x.xxx_hidden_Clones
		}
	}
	return nil
}

func (x *VirtualMachine) GetMigrates() []*VirtualMachine_Operation {
	if x != nil {
		if x.xxx_hidden_Migrates != nil {
			return *x.xxx_hidden_Migrates
		}
	}
	return nil
}

func (x *VirtualMachine) GetRestores() []*VirtualMachine_Operation {
	if x != nil {
		if x.xxx_hidden_Restores != nil {
			return *x.xxx_hidden_Restores
		}
	}
	return nil
}

func (x *VirtualMachine) SetMetadata(v *Metadata) {
	x.xxx_hidden_Metadata = v
}

func (x *VirtualMachine) SetSpec(v *VirtualMachineSpec) {
	x.xxx_hidden_Spec = v
}

func (x *VirtualMachine) SetStatus(v VirtualMachine_VirtualMachineStatus) {
	x.xxx_hidden_Status = v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 2, 7)
}

func (x *VirtualMachine) SetSnapshots(v []*VirtualMachine_Operation) {
	x.xxx_hidden_Snapshots = &v
}

func (x *VirtualMachine) SetClones(v []*VirtualMachine_Operation) {
	x.xxx_hidden_Clones = &v
}

func (x *VirtualMachine) SetMigrates(v []*VirtualMachine_Operation) {
	x.xxx_hidden_Migrates = &v
}

func (x *VirtualMachine) SetRestores(v []*VirtualMachine_Operation) {
	x.xxx_hidden_Restores = &v
}

func (x *VirtualMachine) HasMetadata() bool {
	if x == nil {
		return false
	}
	return x.xxx_hidden_Metadata != nil
}

func (x *VirtualMachine) HasSpec() bool {
	if x == nil {
		return false
	}
	return x.xxx_hidden_Spec != nil
}

func (x *VirtualMachine) HasStatus() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 2)
}

func (x *VirtualMachine) ClearMetadata() {
	x.xxx_hidden_Metadata = nil
}

func (x *VirtualMachine) ClearSpec() {
	x.xxx_hidden_Spec = nil
}

func (x *VirtualMachine) ClearStatus() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 2)
	x.xxx_hidden_Status = VirtualMachine_UNSPECIFIED
}

type VirtualMachine_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	Metadata  *Metadata
	Spec      *VirtualMachineSpec
	Status    *VirtualMachine_VirtualMachineStatus
	Snapshots []*VirtualMachine_Operation
	Clones    []*VirtualMachine_Operation
	Migrates  []*VirtualMachine_Operation
	Restores  []*VirtualMachine_Operation
}

func (b0 VirtualMachine_builder) Build() *VirtualMachine {
	m0 := &VirtualMachine{}
	b, x := &b0, m0
	_, _ = b, x
	x.xxx_hidden_Metadata = b.Metadata
	x.xxx_hidden_Spec = b.Spec
	if b.Status != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 2, 7)
		x.xxx_hidden_Status = *b.Status
	}
	x.xxx_hidden_Snapshots = &b.Snapshots
	x.xxx_hidden_Clones = &b.Clones
	x.xxx_hidden_Migrates = &b.Migrates
	x.xxx_hidden_Restores = &b.Restores
	return m0
}

type VirtualMachineSpec struct {
	state                    protoimpl.MessageState `protogen:"opaque.v1"`
	xxx_hidden_FlavorName    *string                `protobuf:"bytes,1,opt,name=flavor_name,json=flavorName"`
	xxx_hidden_NetworkName   *string                `protobuf:"bytes,2,opt,name=network_name,json=networkName"`
	xxx_hidden_StartupScript *string                `protobuf:"bytes,3,opt,name=startup_script,json=startupScript"`
	xxx_hidden_DataVolumes   []string               `protobuf:"bytes,11,rep,name=data_volumes,json=dataVolumes"`
	xxx_hidden_Devices       *[]*Device             `protobuf:"bytes,12,rep,name=devices"`
	XXX_raceDetectHookData   protoimpl.RaceDetectHookData
	XXX_presence             [1]uint32
	unknownFields            protoimpl.UnknownFields
	sizeCache                protoimpl.SizeCache
}

func (x *VirtualMachineSpec) Reset() {
	*x = VirtualMachineSpec{}
	mi := &file_api_kubevirt_v1_kubevirt_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *VirtualMachineSpec) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*VirtualMachineSpec) ProtoMessage() {}

func (x *VirtualMachineSpec) ProtoReflect() protoreflect.Message {
	mi := &file_api_kubevirt_v1_kubevirt_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *VirtualMachineSpec) GetFlavorName() string {
	if x != nil {
		if x.xxx_hidden_FlavorName != nil {
			return *x.xxx_hidden_FlavorName
		}
		return ""
	}
	return ""
}

func (x *VirtualMachineSpec) GetNetworkName() string {
	if x != nil {
		if x.xxx_hidden_NetworkName != nil {
			return *x.xxx_hidden_NetworkName
		}
		return ""
	}
	return ""
}

func (x *VirtualMachineSpec) GetStartupScript() string {
	if x != nil {
		if x.xxx_hidden_StartupScript != nil {
			return *x.xxx_hidden_StartupScript
		}
		return ""
	}
	return ""
}

func (x *VirtualMachineSpec) GetDataVolumes() []string {
	if x != nil {
		return x.xxx_hidden_DataVolumes
	}
	return nil
}

func (x *VirtualMachineSpec) GetDevices() []*Device {
	if x != nil {
		if x.xxx_hidden_Devices != nil {
			return *x.xxx_hidden_Devices
		}
	}
	return nil
}

func (x *VirtualMachineSpec) SetFlavorName(v string) {
	x.xxx_hidden_FlavorName = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 0, 5)
}

func (x *VirtualMachineSpec) SetNetworkName(v string) {
	x.xxx_hidden_NetworkName = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 1, 5)
}

func (x *VirtualMachineSpec) SetStartupScript(v string) {
	x.xxx_hidden_StartupScript = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 2, 5)
}

func (x *VirtualMachineSpec) SetDataVolumes(v []string) {
	x.xxx_hidden_DataVolumes = v
}

func (x *VirtualMachineSpec) SetDevices(v []*Device) {
	x.xxx_hidden_Devices = &v
}

func (x *VirtualMachineSpec) HasFlavorName() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 0)
}

func (x *VirtualMachineSpec) HasNetworkName() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 1)
}

func (x *VirtualMachineSpec) HasStartupScript() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 2)
}

func (x *VirtualMachineSpec) ClearFlavorName() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 0)
	x.xxx_hidden_FlavorName = nil
}

func (x *VirtualMachineSpec) ClearNetworkName() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 1)
	x.xxx_hidden_NetworkName = nil
}

func (x *VirtualMachineSpec) ClearStartupScript() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 2)
	x.xxx_hidden_StartupScript = nil
}

type VirtualMachineSpec_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	FlavorName    *string
	NetworkName   *string
	StartupScript *string
	DataVolumes   []string
	// useb, pcie, disk ...
	Devices []*Device
}

func (b0 VirtualMachineSpec_builder) Build() *VirtualMachineSpec {
	m0 := &VirtualMachineSpec{}
	b, x := &b0, m0
	_, _ = b, x
	if b.FlavorName != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 0, 5)
		x.xxx_hidden_FlavorName = b.FlavorName
	}
	if b.NetworkName != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 1, 5)
		x.xxx_hidden_NetworkName = b.NetworkName
	}
	if b.StartupScript != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 2, 5)
		x.xxx_hidden_StartupScript = b.StartupScript
	}
	x.xxx_hidden_DataVolumes = b.DataVolumes
	x.xxx_hidden_Devices = &b.Devices
	return m0
}

// Resource definitions
type Flavor struct {
	state                  protoimpl.MessageState `protogen:"opaque.v1"`
	xxx_hidden_Metadata    *Metadata              `protobuf:"bytes,1,opt,name=metadata"`
	xxx_hidden_CpuCores    float32                `protobuf:"fixed32,2,opt,name=cpu_cores,json=cpuCores"`
	xxx_hidden_MemoryBytes int64                  `protobuf:"varint,3,opt,name=memory_bytes,json=memoryBytes"`
	XXX_raceDetectHookData protoimpl.RaceDetectHookData
	XXX_presence           [1]uint32
	unknownFields          protoimpl.UnknownFields
	sizeCache              protoimpl.SizeCache
}

func (x *Flavor) Reset() {
	*x = Flavor{}
	mi := &file_api_kubevirt_v1_kubevirt_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Flavor) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Flavor) ProtoMessage() {}

func (x *Flavor) ProtoReflect() protoreflect.Message {
	mi := &file_api_kubevirt_v1_kubevirt_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *Flavor) GetMetadata() *Metadata {
	if x != nil {
		return x.xxx_hidden_Metadata
	}
	return nil
}

func (x *Flavor) GetCpuCores() float32 {
	if x != nil {
		return x.xxx_hidden_CpuCores
	}
	return 0
}

func (x *Flavor) GetMemoryBytes() int64 {
	if x != nil {
		return x.xxx_hidden_MemoryBytes
	}
	return 0
}

func (x *Flavor) SetMetadata(v *Metadata) {
	x.xxx_hidden_Metadata = v
}

func (x *Flavor) SetCpuCores(v float32) {
	x.xxx_hidden_CpuCores = v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 1, 3)
}

func (x *Flavor) SetMemoryBytes(v int64) {
	x.xxx_hidden_MemoryBytes = v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 2, 3)
}

func (x *Flavor) HasMetadata() bool {
	if x == nil {
		return false
	}
	return x.xxx_hidden_Metadata != nil
}

func (x *Flavor) HasCpuCores() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 1)
}

func (x *Flavor) HasMemoryBytes() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 2)
}

func (x *Flavor) ClearMetadata() {
	x.xxx_hidden_Metadata = nil
}

func (x *Flavor) ClearCpuCores() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 1)
	x.xxx_hidden_CpuCores = 0
}

func (x *Flavor) ClearMemoryBytes() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 2)
	x.xxx_hidden_MemoryBytes = 0
}

type Flavor_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	Metadata    *Metadata
	CpuCores    *float32
	MemoryBytes *int64
}

func (b0 Flavor_builder) Build() *Flavor {
	m0 := &Flavor{}
	b, x := &b0, m0
	_, _ = b, x
	x.xxx_hidden_Metadata = b.Metadata
	if b.CpuCores != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 1, 3)
		x.xxx_hidden_CpuCores = *b.CpuCores
	}
	if b.MemoryBytes != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 2, 3)
		x.xxx_hidden_MemoryBytes = *b.MemoryBytes
	}
	return m0
}

type DataVolume struct {
	state                  protoimpl.MessageState `protogen:"opaque.v1"`
	xxx_hidden_Metadata    *Metadata              `protobuf:"bytes,1,opt,name=metadata"`
	xxx_hidden_Source      *string                `protobuf:"bytes,2,opt,name=source"`
	xxx_hidden_Type        *string                `protobuf:"bytes,3,opt,name=type"`
	xxx_hidden_SizeBytes   int64                  `protobuf:"varint,4,opt,name=size_bytes,json=sizeBytes"`
	XXX_raceDetectHookData protoimpl.RaceDetectHookData
	XXX_presence           [1]uint32
	unknownFields          protoimpl.UnknownFields
	sizeCache              protoimpl.SizeCache
}

func (x *DataVolume) Reset() {
	*x = DataVolume{}
	mi := &file_api_kubevirt_v1_kubevirt_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DataVolume) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DataVolume) ProtoMessage() {}

func (x *DataVolume) ProtoReflect() protoreflect.Message {
	mi := &file_api_kubevirt_v1_kubevirt_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *DataVolume) GetMetadata() *Metadata {
	if x != nil {
		return x.xxx_hidden_Metadata
	}
	return nil
}

func (x *DataVolume) GetSource() string {
	if x != nil {
		if x.xxx_hidden_Source != nil {
			return *x.xxx_hidden_Source
		}
		return ""
	}
	return ""
}

func (x *DataVolume) GetType() string {
	if x != nil {
		if x.xxx_hidden_Type != nil {
			return *x.xxx_hidden_Type
		}
		return ""
	}
	return ""
}

func (x *DataVolume) GetSizeBytes() int64 {
	if x != nil {
		return x.xxx_hidden_SizeBytes
	}
	return 0
}

func (x *DataVolume) SetMetadata(v *Metadata) {
	x.xxx_hidden_Metadata = v
}

func (x *DataVolume) SetSource(v string) {
	x.xxx_hidden_Source = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 1, 4)
}

func (x *DataVolume) SetType(v string) {
	x.xxx_hidden_Type = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 2, 4)
}

func (x *DataVolume) SetSizeBytes(v int64) {
	x.xxx_hidden_SizeBytes = v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 3, 4)
}

func (x *DataVolume) HasMetadata() bool {
	if x == nil {
		return false
	}
	return x.xxx_hidden_Metadata != nil
}

func (x *DataVolume) HasSource() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 1)
}

func (x *DataVolume) HasType() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 2)
}

func (x *DataVolume) HasSizeBytes() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 3)
}

func (x *DataVolume) ClearMetadata() {
	x.xxx_hidden_Metadata = nil
}

func (x *DataVolume) ClearSource() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 1)
	x.xxx_hidden_Source = nil
}

func (x *DataVolume) ClearType() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 2)
	x.xxx_hidden_Type = nil
}

func (x *DataVolume) ClearSizeBytes() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 3)
	x.xxx_hidden_SizeBytes = 0
}

type DataVolume_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	Metadata  *Metadata
	Source    *string
	Type      *string
	SizeBytes *int64
}

func (b0 DataVolume_builder) Build() *DataVolume {
	m0 := &DataVolume{}
	b, x := &b0, m0
	_, _ = b, x
	x.xxx_hidden_Metadata = b.Metadata
	if b.Source != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 1, 4)
		x.xxx_hidden_Source = b.Source
	}
	if b.Type != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 2, 4)
		x.xxx_hidden_Type = b.Type
	}
	if b.SizeBytes != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 3, 4)
		x.xxx_hidden_SizeBytes = *b.SizeBytes
	}
	return m0
}

type Network struct {
	state                    protoimpl.MessageState `protogen:"opaque.v1"`
	xxx_hidden_Metadata      *Metadata              `protobuf:"bytes,1,opt,name=metadata"`
	xxx_hidden_ServiceType   *string                `protobuf:"bytes,2,opt,name=service_type,json=serviceType"`
	xxx_hidden_Port          int32                  `protobuf:"varint,3,opt,name=port"`
	xxx_hidden_NodePort      int32                  `protobuf:"varint,4,opt,name=node_port,json=nodePort"`
	xxx_hidden_ContainerPort int32                  `protobuf:"varint,5,opt,name=container_port,json=containerPort"`
	XXX_raceDetectHookData   protoimpl.RaceDetectHookData
	XXX_presence             [1]uint32
	unknownFields            protoimpl.UnknownFields
	sizeCache                protoimpl.SizeCache
}

func (x *Network) Reset() {
	*x = Network{}
	mi := &file_api_kubevirt_v1_kubevirt_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Network) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Network) ProtoMessage() {}

func (x *Network) ProtoReflect() protoreflect.Message {
	mi := &file_api_kubevirt_v1_kubevirt_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *Network) GetMetadata() *Metadata {
	if x != nil {
		return x.xxx_hidden_Metadata
	}
	return nil
}

func (x *Network) GetServiceType() string {
	if x != nil {
		if x.xxx_hidden_ServiceType != nil {
			return *x.xxx_hidden_ServiceType
		}
		return ""
	}
	return ""
}

func (x *Network) GetPort() int32 {
	if x != nil {
		return x.xxx_hidden_Port
	}
	return 0
}

func (x *Network) GetNodePort() int32 {
	if x != nil {
		return x.xxx_hidden_NodePort
	}
	return 0
}

func (x *Network) GetContainerPort() int32 {
	if x != nil {
		return x.xxx_hidden_ContainerPort
	}
	return 0
}

func (x *Network) SetMetadata(v *Metadata) {
	x.xxx_hidden_Metadata = v
}

func (x *Network) SetServiceType(v string) {
	x.xxx_hidden_ServiceType = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 1, 5)
}

func (x *Network) SetPort(v int32) {
	x.xxx_hidden_Port = v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 2, 5)
}

func (x *Network) SetNodePort(v int32) {
	x.xxx_hidden_NodePort = v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 3, 5)
}

func (x *Network) SetContainerPort(v int32) {
	x.xxx_hidden_ContainerPort = v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 4, 5)
}

func (x *Network) HasMetadata() bool {
	if x == nil {
		return false
	}
	return x.xxx_hidden_Metadata != nil
}

func (x *Network) HasServiceType() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 1)
}

func (x *Network) HasPort() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 2)
}

func (x *Network) HasNodePort() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 3)
}

func (x *Network) HasContainerPort() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 4)
}

func (x *Network) ClearMetadata() {
	x.xxx_hidden_Metadata = nil
}

func (x *Network) ClearServiceType() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 1)
	x.xxx_hidden_ServiceType = nil
}

func (x *Network) ClearPort() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 2)
	x.xxx_hidden_Port = 0
}

func (x *Network) ClearNodePort() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 3)
	x.xxx_hidden_NodePort = 0
}

func (x *Network) ClearContainerPort() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 4)
	x.xxx_hidden_ContainerPort = 0
}

type Network_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	Metadata      *Metadata
	ServiceType   *string
	Port          *int32
	NodePort      *int32
	ContainerPort *int32
}

func (b0 Network_builder) Build() *Network {
	m0 := &Network{}
	b, x := &b0, m0
	_, _ = b, x
	x.xxx_hidden_Metadata = b.Metadata
	if b.ServiceType != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 1, 5)
		x.xxx_hidden_ServiceType = b.ServiceType
	}
	if b.Port != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 2, 5)
		x.xxx_hidden_Port = *b.Port
	}
	if b.NodePort != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 3, 5)
		x.xxx_hidden_NodePort = *b.NodePort
	}
	if b.ContainerPort != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 4, 5)
		x.xxx_hidden_ContainerPort = *b.ContainerPort
	}
	return m0
}

type Device struct {
	state                  protoimpl.MessageState `protogen:"opaque.v1"`
	xxx_hidden_Name        *string                `protobuf:"bytes,1,opt,name=name"`
	xxx_hidden_Type        *string                `protobuf:"bytes,2,opt,name=type"`
	XXX_raceDetectHookData protoimpl.RaceDetectHookData
	XXX_presence           [1]uint32
	unknownFields          protoimpl.UnknownFields
	sizeCache              protoimpl.SizeCache
}

func (x *Device) Reset() {
	*x = Device{}
	mi := &file_api_kubevirt_v1_kubevirt_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Device) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Device) ProtoMessage() {}

func (x *Device) ProtoReflect() protoreflect.Message {
	mi := &file_api_kubevirt_v1_kubevirt_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *Device) GetName() string {
	if x != nil {
		if x.xxx_hidden_Name != nil {
			return *x.xxx_hidden_Name
		}
		return ""
	}
	return ""
}

func (x *Device) GetType() string {
	if x != nil {
		if x.xxx_hidden_Type != nil {
			return *x.xxx_hidden_Type
		}
		return ""
	}
	return ""
}

func (x *Device) SetName(v string) {
	x.xxx_hidden_Name = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 0, 2)
}

func (x *Device) SetType(v string) {
	x.xxx_hidden_Type = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 1, 2)
}

func (x *Device) HasName() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 0)
}

func (x *Device) HasType() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 1)
}

func (x *Device) ClearName() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 0)
	x.xxx_hidden_Name = nil
}

func (x *Device) ClearType() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 1)
	x.xxx_hidden_Type = nil
}

type Device_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	Name *string
	Type *string
}

func (b0 Device_builder) Build() *Device {
	m0 := &Device{}
	b, x := &b0, m0
	_, _ = b, x
	if b.Name != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 0, 2)
		x.xxx_hidden_Name = b.Name
	}
	if b.Type != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 1, 2)
		x.xxx_hidden_Type = b.Type
	}
	return m0
}

// Request/Response messages
type ListVirtualMachinesRequest struct {
	state                  protoimpl.MessageState `protogen:"opaque.v1"`
	xxx_hidden_Namespace   *string                `protobuf:"bytes,1,opt,name=namespace"`
	XXX_raceDetectHookData protoimpl.RaceDetectHookData
	XXX_presence           [1]uint32
	unknownFields          protoimpl.UnknownFields
	sizeCache              protoimpl.SizeCache
}

func (x *ListVirtualMachinesRequest) Reset() {
	*x = ListVirtualMachinesRequest{}
	mi := &file_api_kubevirt_v1_kubevirt_proto_msgTypes[7]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListVirtualMachinesRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListVirtualMachinesRequest) ProtoMessage() {}

func (x *ListVirtualMachinesRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_kubevirt_v1_kubevirt_proto_msgTypes[7]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *ListVirtualMachinesRequest) GetNamespace() string {
	if x != nil {
		if x.xxx_hidden_Namespace != nil {
			return *x.xxx_hidden_Namespace
		}
		return ""
	}
	return ""
}

func (x *ListVirtualMachinesRequest) SetNamespace(v string) {
	x.xxx_hidden_Namespace = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 0, 1)
}

func (x *ListVirtualMachinesRequest) HasNamespace() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 0)
}

func (x *ListVirtualMachinesRequest) ClearNamespace() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 0)
	x.xxx_hidden_Namespace = nil
}

type ListVirtualMachinesRequest_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	Namespace *string
}

func (b0 ListVirtualMachinesRequest_builder) Build() *ListVirtualMachinesRequest {
	m0 := &ListVirtualMachinesRequest{}
	b, x := &b0, m0
	_, _ = b, x
	if b.Namespace != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 0, 1)
		x.xxx_hidden_Namespace = b.Namespace
	}
	return m0
}

type ListVirtualMachinesResponse struct {
	state            protoimpl.MessageState `protogen:"opaque.v1"`
	xxx_hidden_Items *[]*VirtualMachine     `protobuf:"bytes,1,rep,name=items"`
	unknownFields    protoimpl.UnknownFields
	sizeCache        protoimpl.SizeCache
}

func (x *ListVirtualMachinesResponse) Reset() {
	*x = ListVirtualMachinesResponse{}
	mi := &file_api_kubevirt_v1_kubevirt_proto_msgTypes[8]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListVirtualMachinesResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListVirtualMachinesResponse) ProtoMessage() {}

func (x *ListVirtualMachinesResponse) ProtoReflect() protoreflect.Message {
	mi := &file_api_kubevirt_v1_kubevirt_proto_msgTypes[8]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *ListVirtualMachinesResponse) GetItems() []*VirtualMachine {
	if x != nil {
		if x.xxx_hidden_Items != nil {
			return *x.xxx_hidden_Items
		}
	}
	return nil
}

func (x *ListVirtualMachinesResponse) SetItems(v []*VirtualMachine) {
	x.xxx_hidden_Items = &v
}

type ListVirtualMachinesResponse_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	Items []*VirtualMachine
}

func (b0 ListVirtualMachinesResponse_builder) Build() *ListVirtualMachinesResponse {
	m0 := &ListVirtualMachinesResponse{}
	b, x := &b0, m0
	_, _ = b, x
	x.xxx_hidden_Items = &b.Items
	return m0
}

type GetVirtualMachineRequest struct {
	state                  protoimpl.MessageState `protogen:"opaque.v1"`
	xxx_hidden_Name        *string                `protobuf:"bytes,1,opt,name=name"`
	xxx_hidden_Namespace   *string                `protobuf:"bytes,2,opt,name=namespace"`
	XXX_raceDetectHookData protoimpl.RaceDetectHookData
	XXX_presence           [1]uint32
	unknownFields          protoimpl.UnknownFields
	sizeCache              protoimpl.SizeCache
}

func (x *GetVirtualMachineRequest) Reset() {
	*x = GetVirtualMachineRequest{}
	mi := &file_api_kubevirt_v1_kubevirt_proto_msgTypes[9]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetVirtualMachineRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetVirtualMachineRequest) ProtoMessage() {}

func (x *GetVirtualMachineRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_kubevirt_v1_kubevirt_proto_msgTypes[9]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *GetVirtualMachineRequest) GetName() string {
	if x != nil {
		if x.xxx_hidden_Name != nil {
			return *x.xxx_hidden_Name
		}
		return ""
	}
	return ""
}

func (x *GetVirtualMachineRequest) GetNamespace() string {
	if x != nil {
		if x.xxx_hidden_Namespace != nil {
			return *x.xxx_hidden_Namespace
		}
		return ""
	}
	return ""
}

func (x *GetVirtualMachineRequest) SetName(v string) {
	x.xxx_hidden_Name = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 0, 2)
}

func (x *GetVirtualMachineRequest) SetNamespace(v string) {
	x.xxx_hidden_Namespace = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 1, 2)
}

func (x *GetVirtualMachineRequest) HasName() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 0)
}

func (x *GetVirtualMachineRequest) HasNamespace() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 1)
}

func (x *GetVirtualMachineRequest) ClearName() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 0)
	x.xxx_hidden_Name = nil
}

func (x *GetVirtualMachineRequest) ClearNamespace() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 1)
	x.xxx_hidden_Namespace = nil
}

type GetVirtualMachineRequest_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	Name      *string
	Namespace *string
}

func (b0 GetVirtualMachineRequest_builder) Build() *GetVirtualMachineRequest {
	m0 := &GetVirtualMachineRequest{}
	b, x := &b0, m0
	_, _ = b, x
	if b.Name != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 0, 2)
		x.xxx_hidden_Name = b.Name
	}
	if b.Namespace != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 1, 2)
		x.xxx_hidden_Namespace = b.Namespace
	}
	return m0
}

type CreateVirtualMachineRequest struct {
	state               protoimpl.MessageState `protogen:"opaque.v1"`
	xxx_hidden_Metadata *Metadata              `protobuf:"bytes,2,opt,name=metadata"`
	xxx_hidden_Spec     *VirtualMachineSpec    `protobuf:"bytes,1,opt,name=spec"`
	unknownFields       protoimpl.UnknownFields
	sizeCache           protoimpl.SizeCache
}

func (x *CreateVirtualMachineRequest) Reset() {
	*x = CreateVirtualMachineRequest{}
	mi := &file_api_kubevirt_v1_kubevirt_proto_msgTypes[10]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CreateVirtualMachineRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateVirtualMachineRequest) ProtoMessage() {}

func (x *CreateVirtualMachineRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_kubevirt_v1_kubevirt_proto_msgTypes[10]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *CreateVirtualMachineRequest) GetMetadata() *Metadata {
	if x != nil {
		return x.xxx_hidden_Metadata
	}
	return nil
}

func (x *CreateVirtualMachineRequest) GetSpec() *VirtualMachineSpec {
	if x != nil {
		return x.xxx_hidden_Spec
	}
	return nil
}

func (x *CreateVirtualMachineRequest) SetMetadata(v *Metadata) {
	x.xxx_hidden_Metadata = v
}

func (x *CreateVirtualMachineRequest) SetSpec(v *VirtualMachineSpec) {
	x.xxx_hidden_Spec = v
}

func (x *CreateVirtualMachineRequest) HasMetadata() bool {
	if x == nil {
		return false
	}
	return x.xxx_hidden_Metadata != nil
}

func (x *CreateVirtualMachineRequest) HasSpec() bool {
	if x == nil {
		return false
	}
	return x.xxx_hidden_Spec != nil
}

func (x *CreateVirtualMachineRequest) ClearMetadata() {
	x.xxx_hidden_Metadata = nil
}

func (x *CreateVirtualMachineRequest) ClearSpec() {
	x.xxx_hidden_Spec = nil
}

type CreateVirtualMachineRequest_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	Metadata *Metadata
	Spec     *VirtualMachineSpec
}

func (b0 CreateVirtualMachineRequest_builder) Build() *CreateVirtualMachineRequest {
	m0 := &CreateVirtualMachineRequest{}
	b, x := &b0, m0
	_, _ = b, x
	x.xxx_hidden_Metadata = b.Metadata
	x.xxx_hidden_Spec = b.Spec
	return m0
}

type UpdateVirtualMachineRequest struct {
	state               protoimpl.MessageState `protogen:"opaque.v1"`
	xxx_hidden_Metadata *Metadata              `protobuf:"bytes,2,opt,name=metadata"`
	xxx_hidden_Spec     *VirtualMachineSpec    `protobuf:"bytes,3,opt,name=spec"`
	unknownFields       protoimpl.UnknownFields
	sizeCache           protoimpl.SizeCache
}

func (x *UpdateVirtualMachineRequest) Reset() {
	*x = UpdateVirtualMachineRequest{}
	mi := &file_api_kubevirt_v1_kubevirt_proto_msgTypes[11]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UpdateVirtualMachineRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateVirtualMachineRequest) ProtoMessage() {}

func (x *UpdateVirtualMachineRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_kubevirt_v1_kubevirt_proto_msgTypes[11]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *UpdateVirtualMachineRequest) GetMetadata() *Metadata {
	if x != nil {
		return x.xxx_hidden_Metadata
	}
	return nil
}

func (x *UpdateVirtualMachineRequest) GetSpec() *VirtualMachineSpec {
	if x != nil {
		return x.xxx_hidden_Spec
	}
	return nil
}

func (x *UpdateVirtualMachineRequest) SetMetadata(v *Metadata) {
	x.xxx_hidden_Metadata = v
}

func (x *UpdateVirtualMachineRequest) SetSpec(v *VirtualMachineSpec) {
	x.xxx_hidden_Spec = v
}

func (x *UpdateVirtualMachineRequest) HasMetadata() bool {
	if x == nil {
		return false
	}
	return x.xxx_hidden_Metadata != nil
}

func (x *UpdateVirtualMachineRequest) HasSpec() bool {
	if x == nil {
		return false
	}
	return x.xxx_hidden_Spec != nil
}

func (x *UpdateVirtualMachineRequest) ClearMetadata() {
	x.xxx_hidden_Metadata = nil
}

func (x *UpdateVirtualMachineRequest) ClearSpec() {
	x.xxx_hidden_Spec = nil
}

type UpdateVirtualMachineRequest_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	Metadata *Metadata
	Spec     *VirtualMachineSpec
}

func (b0 UpdateVirtualMachineRequest_builder) Build() *UpdateVirtualMachineRequest {
	m0 := &UpdateVirtualMachineRequest{}
	b, x := &b0, m0
	_, _ = b, x
	x.xxx_hidden_Metadata = b.Metadata
	x.xxx_hidden_Spec = b.Spec
	return m0
}

type DeleteVirtualMachineRequest struct {
	state                  protoimpl.MessageState `protogen:"opaque.v1"`
	xxx_hidden_Name        *string                `protobuf:"bytes,1,opt,name=name"`
	xxx_hidden_Namespace   *string                `protobuf:"bytes,2,opt,name=namespace"`
	XXX_raceDetectHookData protoimpl.RaceDetectHookData
	XXX_presence           [1]uint32
	unknownFields          protoimpl.UnknownFields
	sizeCache              protoimpl.SizeCache
}

func (x *DeleteVirtualMachineRequest) Reset() {
	*x = DeleteVirtualMachineRequest{}
	mi := &file_api_kubevirt_v1_kubevirt_proto_msgTypes[12]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DeleteVirtualMachineRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteVirtualMachineRequest) ProtoMessage() {}

func (x *DeleteVirtualMachineRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_kubevirt_v1_kubevirt_proto_msgTypes[12]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *DeleteVirtualMachineRequest) GetName() string {
	if x != nil {
		if x.xxx_hidden_Name != nil {
			return *x.xxx_hidden_Name
		}
		return ""
	}
	return ""
}

func (x *DeleteVirtualMachineRequest) GetNamespace() string {
	if x != nil {
		if x.xxx_hidden_Namespace != nil {
			return *x.xxx_hidden_Namespace
		}
		return ""
	}
	return ""
}

func (x *DeleteVirtualMachineRequest) SetName(v string) {
	x.xxx_hidden_Name = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 0, 2)
}

func (x *DeleteVirtualMachineRequest) SetNamespace(v string) {
	x.xxx_hidden_Namespace = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 1, 2)
}

func (x *DeleteVirtualMachineRequest) HasName() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 0)
}

func (x *DeleteVirtualMachineRequest) HasNamespace() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 1)
}

func (x *DeleteVirtualMachineRequest) ClearName() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 0)
	x.xxx_hidden_Name = nil
}

func (x *DeleteVirtualMachineRequest) ClearNamespace() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 1)
	x.xxx_hidden_Namespace = nil
}

type DeleteVirtualMachineRequest_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	Name      *string
	Namespace *string
}

func (b0 DeleteVirtualMachineRequest_builder) Build() *DeleteVirtualMachineRequest {
	m0 := &DeleteVirtualMachineRequest{}
	b, x := &b0, m0
	_, _ = b, x
	if b.Name != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 0, 2)
		x.xxx_hidden_Name = b.Name
	}
	if b.Namespace != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 1, 2)
		x.xxx_hidden_Namespace = b.Namespace
	}
	return m0
}

type StartVirtualMachineRequest struct {
	state                  protoimpl.MessageState `protogen:"opaque.v1"`
	xxx_hidden_Name        *string                `protobuf:"bytes,1,opt,name=name"`
	xxx_hidden_Namespace   *string                `protobuf:"bytes,2,opt,name=namespace"`
	XXX_raceDetectHookData protoimpl.RaceDetectHookData
	XXX_presence           [1]uint32
	unknownFields          protoimpl.UnknownFields
	sizeCache              protoimpl.SizeCache
}

func (x *StartVirtualMachineRequest) Reset() {
	*x = StartVirtualMachineRequest{}
	mi := &file_api_kubevirt_v1_kubevirt_proto_msgTypes[13]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *StartVirtualMachineRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StartVirtualMachineRequest) ProtoMessage() {}

func (x *StartVirtualMachineRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_kubevirt_v1_kubevirt_proto_msgTypes[13]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *StartVirtualMachineRequest) GetName() string {
	if x != nil {
		if x.xxx_hidden_Name != nil {
			return *x.xxx_hidden_Name
		}
		return ""
	}
	return ""
}

func (x *StartVirtualMachineRequest) GetNamespace() string {
	if x != nil {
		if x.xxx_hidden_Namespace != nil {
			return *x.xxx_hidden_Namespace
		}
		return ""
	}
	return ""
}

func (x *StartVirtualMachineRequest) SetName(v string) {
	x.xxx_hidden_Name = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 0, 2)
}

func (x *StartVirtualMachineRequest) SetNamespace(v string) {
	x.xxx_hidden_Namespace = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 1, 2)
}

func (x *StartVirtualMachineRequest) HasName() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 0)
}

func (x *StartVirtualMachineRequest) HasNamespace() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 1)
}

func (x *StartVirtualMachineRequest) ClearName() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 0)
	x.xxx_hidden_Name = nil
}

func (x *StartVirtualMachineRequest) ClearNamespace() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 1)
	x.xxx_hidden_Namespace = nil
}

type StartVirtualMachineRequest_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	Name      *string
	Namespace *string
}

func (b0 StartVirtualMachineRequest_builder) Build() *StartVirtualMachineRequest {
	m0 := &StartVirtualMachineRequest{}
	b, x := &b0, m0
	_, _ = b, x
	if b.Name != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 0, 2)
		x.xxx_hidden_Name = b.Name
	}
	if b.Namespace != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 1, 2)
		x.xxx_hidden_Namespace = b.Namespace
	}
	return m0
}

type StopVirtualMachineRequest struct {
	state                  protoimpl.MessageState `protogen:"opaque.v1"`
	xxx_hidden_Name        *string                `protobuf:"bytes,1,opt,name=name"`
	xxx_hidden_Namespace   *string                `protobuf:"bytes,2,opt,name=namespace"`
	XXX_raceDetectHookData protoimpl.RaceDetectHookData
	XXX_presence           [1]uint32
	unknownFields          protoimpl.UnknownFields
	sizeCache              protoimpl.SizeCache
}

func (x *StopVirtualMachineRequest) Reset() {
	*x = StopVirtualMachineRequest{}
	mi := &file_api_kubevirt_v1_kubevirt_proto_msgTypes[14]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *StopVirtualMachineRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StopVirtualMachineRequest) ProtoMessage() {}

func (x *StopVirtualMachineRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_kubevirt_v1_kubevirt_proto_msgTypes[14]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *StopVirtualMachineRequest) GetName() string {
	if x != nil {
		if x.xxx_hidden_Name != nil {
			return *x.xxx_hidden_Name
		}
		return ""
	}
	return ""
}

func (x *StopVirtualMachineRequest) GetNamespace() string {
	if x != nil {
		if x.xxx_hidden_Namespace != nil {
			return *x.xxx_hidden_Namespace
		}
		return ""
	}
	return ""
}

func (x *StopVirtualMachineRequest) SetName(v string) {
	x.xxx_hidden_Name = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 0, 2)
}

func (x *StopVirtualMachineRequest) SetNamespace(v string) {
	x.xxx_hidden_Namespace = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 1, 2)
}

func (x *StopVirtualMachineRequest) HasName() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 0)
}

func (x *StopVirtualMachineRequest) HasNamespace() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 1)
}

func (x *StopVirtualMachineRequest) ClearName() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 0)
	x.xxx_hidden_Name = nil
}

func (x *StopVirtualMachineRequest) ClearNamespace() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 1)
	x.xxx_hidden_Namespace = nil
}

type StopVirtualMachineRequest_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	Name      *string
	Namespace *string
}

func (b0 StopVirtualMachineRequest_builder) Build() *StopVirtualMachineRequest {
	m0 := &StopVirtualMachineRequest{}
	b, x := &b0, m0
	_, _ = b, x
	if b.Name != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 0, 2)
		x.xxx_hidden_Name = b.Name
	}
	if b.Namespace != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 1, 2)
		x.xxx_hidden_Namespace = b.Namespace
	}
	return m0
}

type PauseVirtualMachineRequest struct {
	state                  protoimpl.MessageState `protogen:"opaque.v1"`
	xxx_hidden_Name        *string                `protobuf:"bytes,1,opt,name=name"`
	xxx_hidden_Namespace   *string                `protobuf:"bytes,2,opt,name=namespace"`
	XXX_raceDetectHookData protoimpl.RaceDetectHookData
	XXX_presence           [1]uint32
	unknownFields          protoimpl.UnknownFields
	sizeCache              protoimpl.SizeCache
}

func (x *PauseVirtualMachineRequest) Reset() {
	*x = PauseVirtualMachineRequest{}
	mi := &file_api_kubevirt_v1_kubevirt_proto_msgTypes[15]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *PauseVirtualMachineRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PauseVirtualMachineRequest) ProtoMessage() {}

func (x *PauseVirtualMachineRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_kubevirt_v1_kubevirt_proto_msgTypes[15]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *PauseVirtualMachineRequest) GetName() string {
	if x != nil {
		if x.xxx_hidden_Name != nil {
			return *x.xxx_hidden_Name
		}
		return ""
	}
	return ""
}

func (x *PauseVirtualMachineRequest) GetNamespace() string {
	if x != nil {
		if x.xxx_hidden_Namespace != nil {
			return *x.xxx_hidden_Namespace
		}
		return ""
	}
	return ""
}

func (x *PauseVirtualMachineRequest) SetName(v string) {
	x.xxx_hidden_Name = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 0, 2)
}

func (x *PauseVirtualMachineRequest) SetNamespace(v string) {
	x.xxx_hidden_Namespace = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 1, 2)
}

func (x *PauseVirtualMachineRequest) HasName() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 0)
}

func (x *PauseVirtualMachineRequest) HasNamespace() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 1)
}

func (x *PauseVirtualMachineRequest) ClearName() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 0)
	x.xxx_hidden_Name = nil
}

func (x *PauseVirtualMachineRequest) ClearNamespace() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 1)
	x.xxx_hidden_Namespace = nil
}

type PauseVirtualMachineRequest_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	Name      *string
	Namespace *string
}

func (b0 PauseVirtualMachineRequest_builder) Build() *PauseVirtualMachineRequest {
	m0 := &PauseVirtualMachineRequest{}
	b, x := &b0, m0
	_, _ = b, x
	if b.Name != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 0, 2)
		x.xxx_hidden_Name = b.Name
	}
	if b.Namespace != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 1, 2)
		x.xxx_hidden_Namespace = b.Namespace
	}
	return m0
}

type UnpauseVirtualMachineRequest struct {
	state                  protoimpl.MessageState `protogen:"opaque.v1"`
	xxx_hidden_Name        *string                `protobuf:"bytes,1,opt,name=name"`
	xxx_hidden_Namespace   *string                `protobuf:"bytes,2,opt,name=namespace"`
	XXX_raceDetectHookData protoimpl.RaceDetectHookData
	XXX_presence           [1]uint32
	unknownFields          protoimpl.UnknownFields
	sizeCache              protoimpl.SizeCache
}

func (x *UnpauseVirtualMachineRequest) Reset() {
	*x = UnpauseVirtualMachineRequest{}
	mi := &file_api_kubevirt_v1_kubevirt_proto_msgTypes[16]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UnpauseVirtualMachineRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UnpauseVirtualMachineRequest) ProtoMessage() {}

func (x *UnpauseVirtualMachineRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_kubevirt_v1_kubevirt_proto_msgTypes[16]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *UnpauseVirtualMachineRequest) GetName() string {
	if x != nil {
		if x.xxx_hidden_Name != nil {
			return *x.xxx_hidden_Name
		}
		return ""
	}
	return ""
}

func (x *UnpauseVirtualMachineRequest) GetNamespace() string {
	if x != nil {
		if x.xxx_hidden_Namespace != nil {
			return *x.xxx_hidden_Namespace
		}
		return ""
	}
	return ""
}

func (x *UnpauseVirtualMachineRequest) SetName(v string) {
	x.xxx_hidden_Name = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 0, 2)
}

func (x *UnpauseVirtualMachineRequest) SetNamespace(v string) {
	x.xxx_hidden_Namespace = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 1, 2)
}

func (x *UnpauseVirtualMachineRequest) HasName() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 0)
}

func (x *UnpauseVirtualMachineRequest) HasNamespace() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 1)
}

func (x *UnpauseVirtualMachineRequest) ClearName() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 0)
	x.xxx_hidden_Name = nil
}

func (x *UnpauseVirtualMachineRequest) ClearNamespace() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 1)
	x.xxx_hidden_Namespace = nil
}

type UnpauseVirtualMachineRequest_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	Name      *string
	Namespace *string
}

func (b0 UnpauseVirtualMachineRequest_builder) Build() *UnpauseVirtualMachineRequest {
	m0 := &UnpauseVirtualMachineRequest{}
	b, x := &b0, m0
	_, _ = b, x
	if b.Name != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 0, 2)
		x.xxx_hidden_Name = b.Name
	}
	if b.Namespace != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 1, 2)
		x.xxx_hidden_Namespace = b.Namespace
	}
	return m0
}

type SnapshotVirtualMachineRequest struct {
	state                   protoimpl.MessageState `protogen:"opaque.v1"`
	xxx_hidden_Name         *string                `protobuf:"bytes,1,opt,name=name"`
	xxx_hidden_Namespace    *string                `protobuf:"bytes,2,opt,name=namespace"`
	xxx_hidden_SnapshotName *string                `protobuf:"bytes,3,opt,name=snapshot_name,json=snapshotName"`
	XXX_raceDetectHookData  protoimpl.RaceDetectHookData
	XXX_presence            [1]uint32
	unknownFields           protoimpl.UnknownFields
	sizeCache               protoimpl.SizeCache
}

func (x *SnapshotVirtualMachineRequest) Reset() {
	*x = SnapshotVirtualMachineRequest{}
	mi := &file_api_kubevirt_v1_kubevirt_proto_msgTypes[17]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SnapshotVirtualMachineRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SnapshotVirtualMachineRequest) ProtoMessage() {}

func (x *SnapshotVirtualMachineRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_kubevirt_v1_kubevirt_proto_msgTypes[17]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *SnapshotVirtualMachineRequest) GetName() string {
	if x != nil {
		if x.xxx_hidden_Name != nil {
			return *x.xxx_hidden_Name
		}
		return ""
	}
	return ""
}

func (x *SnapshotVirtualMachineRequest) GetNamespace() string {
	if x != nil {
		if x.xxx_hidden_Namespace != nil {
			return *x.xxx_hidden_Namespace
		}
		return ""
	}
	return ""
}

func (x *SnapshotVirtualMachineRequest) GetSnapshotName() string {
	if x != nil {
		if x.xxx_hidden_SnapshotName != nil {
			return *x.xxx_hidden_SnapshotName
		}
		return ""
	}
	return ""
}

func (x *SnapshotVirtualMachineRequest) SetName(v string) {
	x.xxx_hidden_Name = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 0, 3)
}

func (x *SnapshotVirtualMachineRequest) SetNamespace(v string) {
	x.xxx_hidden_Namespace = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 1, 3)
}

func (x *SnapshotVirtualMachineRequest) SetSnapshotName(v string) {
	x.xxx_hidden_SnapshotName = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 2, 3)
}

func (x *SnapshotVirtualMachineRequest) HasName() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 0)
}

func (x *SnapshotVirtualMachineRequest) HasNamespace() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 1)
}

func (x *SnapshotVirtualMachineRequest) HasSnapshotName() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 2)
}

func (x *SnapshotVirtualMachineRequest) ClearName() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 0)
	x.xxx_hidden_Name = nil
}

func (x *SnapshotVirtualMachineRequest) ClearNamespace() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 1)
	x.xxx_hidden_Namespace = nil
}

func (x *SnapshotVirtualMachineRequest) ClearSnapshotName() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 2)
	x.xxx_hidden_SnapshotName = nil
}

type SnapshotVirtualMachineRequest_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	Name         *string
	Namespace    *string
	SnapshotName *string
}

func (b0 SnapshotVirtualMachineRequest_builder) Build() *SnapshotVirtualMachineRequest {
	m0 := &SnapshotVirtualMachineRequest{}
	b, x := &b0, m0
	_, _ = b, x
	if b.Name != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 0, 3)
		x.xxx_hidden_Name = b.Name
	}
	if b.Namespace != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 1, 3)
		x.xxx_hidden_Namespace = b.Namespace
	}
	if b.SnapshotName != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 2, 3)
		x.xxx_hidden_SnapshotName = b.SnapshotName
	}
	return m0
}

type CloneVirtualMachineRequest struct {
	state                      protoimpl.MessageState `protogen:"opaque.v1"`
	xxx_hidden_TargetName      *string                `protobuf:"bytes,1,opt,name=target_name,json=targetName"`
	xxx_hidden_TargetNamespace *string                `protobuf:"bytes,2,opt,name=target_namespace,json=targetNamespace"`
	xxx_hidden_SourceName      *string                `protobuf:"bytes,3,opt,name=source_name,json=sourceName"`
	xxx_hidden_SourceNamespace *string                `protobuf:"bytes,4,opt,name=source_namespace,json=sourceNamespace"`
	XXX_raceDetectHookData     protoimpl.RaceDetectHookData
	XXX_presence               [1]uint32
	unknownFields              protoimpl.UnknownFields
	sizeCache                  protoimpl.SizeCache
}

func (x *CloneVirtualMachineRequest) Reset() {
	*x = CloneVirtualMachineRequest{}
	mi := &file_api_kubevirt_v1_kubevirt_proto_msgTypes[18]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CloneVirtualMachineRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CloneVirtualMachineRequest) ProtoMessage() {}

func (x *CloneVirtualMachineRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_kubevirt_v1_kubevirt_proto_msgTypes[18]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *CloneVirtualMachineRequest) GetTargetName() string {
	if x != nil {
		if x.xxx_hidden_TargetName != nil {
			return *x.xxx_hidden_TargetName
		}
		return ""
	}
	return ""
}

func (x *CloneVirtualMachineRequest) GetTargetNamespace() string {
	if x != nil {
		if x.xxx_hidden_TargetNamespace != nil {
			return *x.xxx_hidden_TargetNamespace
		}
		return ""
	}
	return ""
}

func (x *CloneVirtualMachineRequest) GetSourceName() string {
	if x != nil {
		if x.xxx_hidden_SourceName != nil {
			return *x.xxx_hidden_SourceName
		}
		return ""
	}
	return ""
}

func (x *CloneVirtualMachineRequest) GetSourceNamespace() string {
	if x != nil {
		if x.xxx_hidden_SourceNamespace != nil {
			return *x.xxx_hidden_SourceNamespace
		}
		return ""
	}
	return ""
}

func (x *CloneVirtualMachineRequest) SetTargetName(v string) {
	x.xxx_hidden_TargetName = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 0, 4)
}

func (x *CloneVirtualMachineRequest) SetTargetNamespace(v string) {
	x.xxx_hidden_TargetNamespace = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 1, 4)
}

func (x *CloneVirtualMachineRequest) SetSourceName(v string) {
	x.xxx_hidden_SourceName = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 2, 4)
}

func (x *CloneVirtualMachineRequest) SetSourceNamespace(v string) {
	x.xxx_hidden_SourceNamespace = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 3, 4)
}

func (x *CloneVirtualMachineRequest) HasTargetName() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 0)
}

func (x *CloneVirtualMachineRequest) HasTargetNamespace() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 1)
}

func (x *CloneVirtualMachineRequest) HasSourceName() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 2)
}

func (x *CloneVirtualMachineRequest) HasSourceNamespace() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 3)
}

func (x *CloneVirtualMachineRequest) ClearTargetName() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 0)
	x.xxx_hidden_TargetName = nil
}

func (x *CloneVirtualMachineRequest) ClearTargetNamespace() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 1)
	x.xxx_hidden_TargetNamespace = nil
}

func (x *CloneVirtualMachineRequest) ClearSourceName() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 2)
	x.xxx_hidden_SourceName = nil
}

func (x *CloneVirtualMachineRequest) ClearSourceNamespace() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 3)
	x.xxx_hidden_SourceNamespace = nil
}

type CloneVirtualMachineRequest_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	TargetName      *string
	TargetNamespace *string
	SourceName      *string
	SourceNamespace *string
}

func (b0 CloneVirtualMachineRequest_builder) Build() *CloneVirtualMachineRequest {
	m0 := &CloneVirtualMachineRequest{}
	b, x := &b0, m0
	_, _ = b, x
	if b.TargetName != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 0, 4)
		x.xxx_hidden_TargetName = b.TargetName
	}
	if b.TargetNamespace != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 1, 4)
		x.xxx_hidden_TargetNamespace = b.TargetNamespace
	}
	if b.SourceName != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 2, 4)
		x.xxx_hidden_SourceName = b.SourceName
	}
	if b.SourceNamespace != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 3, 4)
		x.xxx_hidden_SourceNamespace = b.SourceNamespace
	}
	return m0
}

type RestoreVirtualMachineRequest struct {
	state                   protoimpl.MessageState `protogen:"opaque.v1"`
	xxx_hidden_Name         *string                `protobuf:"bytes,1,opt,name=name"`
	xxx_hidden_Namespace    *string                `protobuf:"bytes,2,opt,name=namespace"`
	xxx_hidden_SnapshotName *string                `protobuf:"bytes,3,opt,name=snapshot_name,json=snapshotName"`
	XXX_raceDetectHookData  protoimpl.RaceDetectHookData
	XXX_presence            [1]uint32
	unknownFields           protoimpl.UnknownFields
	sizeCache               protoimpl.SizeCache
}

func (x *RestoreVirtualMachineRequest) Reset() {
	*x = RestoreVirtualMachineRequest{}
	mi := &file_api_kubevirt_v1_kubevirt_proto_msgTypes[19]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RestoreVirtualMachineRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RestoreVirtualMachineRequest) ProtoMessage() {}

func (x *RestoreVirtualMachineRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_kubevirt_v1_kubevirt_proto_msgTypes[19]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *RestoreVirtualMachineRequest) GetName() string {
	if x != nil {
		if x.xxx_hidden_Name != nil {
			return *x.xxx_hidden_Name
		}
		return ""
	}
	return ""
}

func (x *RestoreVirtualMachineRequest) GetNamespace() string {
	if x != nil {
		if x.xxx_hidden_Namespace != nil {
			return *x.xxx_hidden_Namespace
		}
		return ""
	}
	return ""
}

func (x *RestoreVirtualMachineRequest) GetSnapshotName() string {
	if x != nil {
		if x.xxx_hidden_SnapshotName != nil {
			return *x.xxx_hidden_SnapshotName
		}
		return ""
	}
	return ""
}

func (x *RestoreVirtualMachineRequest) SetName(v string) {
	x.xxx_hidden_Name = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 0, 3)
}

func (x *RestoreVirtualMachineRequest) SetNamespace(v string) {
	x.xxx_hidden_Namespace = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 1, 3)
}

func (x *RestoreVirtualMachineRequest) SetSnapshotName(v string) {
	x.xxx_hidden_SnapshotName = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 2, 3)
}

func (x *RestoreVirtualMachineRequest) HasName() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 0)
}

func (x *RestoreVirtualMachineRequest) HasNamespace() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 1)
}

func (x *RestoreVirtualMachineRequest) HasSnapshotName() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 2)
}

func (x *RestoreVirtualMachineRequest) ClearName() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 0)
	x.xxx_hidden_Name = nil
}

func (x *RestoreVirtualMachineRequest) ClearNamespace() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 1)
	x.xxx_hidden_Namespace = nil
}

func (x *RestoreVirtualMachineRequest) ClearSnapshotName() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 2)
	x.xxx_hidden_SnapshotName = nil
}

type RestoreVirtualMachineRequest_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	Name         *string
	Namespace    *string
	SnapshotName *string
}

func (b0 RestoreVirtualMachineRequest_builder) Build() *RestoreVirtualMachineRequest {
	m0 := &RestoreVirtualMachineRequest{}
	b, x := &b0, m0
	_, _ = b, x
	if b.Name != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 0, 3)
		x.xxx_hidden_Name = b.Name
	}
	if b.Namespace != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 1, 3)
		x.xxx_hidden_Namespace = b.Namespace
	}
	if b.SnapshotName != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 2, 3)
		x.xxx_hidden_SnapshotName = b.SnapshotName
	}
	return m0
}

type MigrateVirtualMachineRequest struct {
	state                  protoimpl.MessageState `protogen:"opaque.v1"`
	xxx_hidden_Name        *string                `protobuf:"bytes,1,opt,name=name"`
	xxx_hidden_Namespace   *string                `protobuf:"bytes,2,opt,name=namespace"`
	xxx_hidden_TargetNode  *string                `protobuf:"bytes,3,opt,name=target_node,json=targetNode"`
	XXX_raceDetectHookData protoimpl.RaceDetectHookData
	XXX_presence           [1]uint32
	unknownFields          protoimpl.UnknownFields
	sizeCache              protoimpl.SizeCache
}

func (x *MigrateVirtualMachineRequest) Reset() {
	*x = MigrateVirtualMachineRequest{}
	mi := &file_api_kubevirt_v1_kubevirt_proto_msgTypes[20]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *MigrateVirtualMachineRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MigrateVirtualMachineRequest) ProtoMessage() {}

func (x *MigrateVirtualMachineRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_kubevirt_v1_kubevirt_proto_msgTypes[20]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *MigrateVirtualMachineRequest) GetName() string {
	if x != nil {
		if x.xxx_hidden_Name != nil {
			return *x.xxx_hidden_Name
		}
		return ""
	}
	return ""
}

func (x *MigrateVirtualMachineRequest) GetNamespace() string {
	if x != nil {
		if x.xxx_hidden_Namespace != nil {
			return *x.xxx_hidden_Namespace
		}
		return ""
	}
	return ""
}

func (x *MigrateVirtualMachineRequest) GetTargetNode() string {
	if x != nil {
		if x.xxx_hidden_TargetNode != nil {
			return *x.xxx_hidden_TargetNode
		}
		return ""
	}
	return ""
}

func (x *MigrateVirtualMachineRequest) SetName(v string) {
	x.xxx_hidden_Name = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 0, 3)
}

func (x *MigrateVirtualMachineRequest) SetNamespace(v string) {
	x.xxx_hidden_Namespace = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 1, 3)
}

func (x *MigrateVirtualMachineRequest) SetTargetNode(v string) {
	x.xxx_hidden_TargetNode = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 2, 3)
}

func (x *MigrateVirtualMachineRequest) HasName() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 0)
}

func (x *MigrateVirtualMachineRequest) HasNamespace() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 1)
}

func (x *MigrateVirtualMachineRequest) HasTargetNode() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 2)
}

func (x *MigrateVirtualMachineRequest) ClearName() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 0)
	x.xxx_hidden_Name = nil
}

func (x *MigrateVirtualMachineRequest) ClearNamespace() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 1)
	x.xxx_hidden_Namespace = nil
}

func (x *MigrateVirtualMachineRequest) ClearTargetNode() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 2)
	x.xxx_hidden_TargetNode = nil
}

type MigrateVirtualMachineRequest_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	Name      *string
	Namespace *string
	// [TODO]
	TargetNode *string
}

func (b0 MigrateVirtualMachineRequest_builder) Build() *MigrateVirtualMachineRequest {
	m0 := &MigrateVirtualMachineRequest{}
	b, x := &b0, m0
	_, _ = b, x
	if b.Name != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 0, 3)
		x.xxx_hidden_Name = b.Name
	}
	if b.Namespace != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 1, 3)
		x.xxx_hidden_Namespace = b.Namespace
	}
	if b.TargetNode != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 2, 3)
		x.xxx_hidden_TargetNode = b.TargetNode
	}
	return m0
}

type CreateDataVolumeRequest struct {
	state                 protoimpl.MessageState `protogen:"opaque.v1"`
	xxx_hidden_DataVolume *DataVolume            `protobuf:"bytes,1,opt,name=data_volume,json=dataVolume"`
	unknownFields         protoimpl.UnknownFields
	sizeCache             protoimpl.SizeCache
}

func (x *CreateDataVolumeRequest) Reset() {
	*x = CreateDataVolumeRequest{}
	mi := &file_api_kubevirt_v1_kubevirt_proto_msgTypes[21]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CreateDataVolumeRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateDataVolumeRequest) ProtoMessage() {}

func (x *CreateDataVolumeRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_kubevirt_v1_kubevirt_proto_msgTypes[21]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *CreateDataVolumeRequest) GetDataVolume() *DataVolume {
	if x != nil {
		return x.xxx_hidden_DataVolume
	}
	return nil
}

func (x *CreateDataVolumeRequest) SetDataVolume(v *DataVolume) {
	x.xxx_hidden_DataVolume = v
}

func (x *CreateDataVolumeRequest) HasDataVolume() bool {
	if x == nil {
		return false
	}
	return x.xxx_hidden_DataVolume != nil
}

func (x *CreateDataVolumeRequest) ClearDataVolume() {
	x.xxx_hidden_DataVolume = nil
}

type CreateDataVolumeRequest_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	DataVolume *DataVolume
}

func (b0 CreateDataVolumeRequest_builder) Build() *CreateDataVolumeRequest {
	m0 := &CreateDataVolumeRequest{}
	b, x := &b0, m0
	_, _ = b, x
	x.xxx_hidden_DataVolume = b.DataVolume
	return m0
}

type ListDataVolumesRequest struct {
	state                  protoimpl.MessageState `protogen:"opaque.v1"`
	xxx_hidden_Namespace   *string                `protobuf:"bytes,1,opt,name=namespace"`
	XXX_raceDetectHookData protoimpl.RaceDetectHookData
	XXX_presence           [1]uint32
	unknownFields          protoimpl.UnknownFields
	sizeCache              protoimpl.SizeCache
}

func (x *ListDataVolumesRequest) Reset() {
	*x = ListDataVolumesRequest{}
	mi := &file_api_kubevirt_v1_kubevirt_proto_msgTypes[22]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListDataVolumesRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListDataVolumesRequest) ProtoMessage() {}

func (x *ListDataVolumesRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_kubevirt_v1_kubevirt_proto_msgTypes[22]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *ListDataVolumesRequest) GetNamespace() string {
	if x != nil {
		if x.xxx_hidden_Namespace != nil {
			return *x.xxx_hidden_Namespace
		}
		return ""
	}
	return ""
}

func (x *ListDataVolumesRequest) SetNamespace(v string) {
	x.xxx_hidden_Namespace = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 0, 1)
}

func (x *ListDataVolumesRequest) HasNamespace() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 0)
}

func (x *ListDataVolumesRequest) ClearNamespace() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 0)
	x.xxx_hidden_Namespace = nil
}

type ListDataVolumesRequest_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	Namespace *string
}

func (b0 ListDataVolumesRequest_builder) Build() *ListDataVolumesRequest {
	m0 := &ListDataVolumesRequest{}
	b, x := &b0, m0
	_, _ = b, x
	if b.Namespace != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 0, 1)
		x.xxx_hidden_Namespace = b.Namespace
	}
	return m0
}

type ListDataVolumesResponse struct {
	state            protoimpl.MessageState `protogen:"opaque.v1"`
	xxx_hidden_Items *[]*DataVolume         `protobuf:"bytes,1,rep,name=items"`
	unknownFields    protoimpl.UnknownFields
	sizeCache        protoimpl.SizeCache
}

func (x *ListDataVolumesResponse) Reset() {
	*x = ListDataVolumesResponse{}
	mi := &file_api_kubevirt_v1_kubevirt_proto_msgTypes[23]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListDataVolumesResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListDataVolumesResponse) ProtoMessage() {}

func (x *ListDataVolumesResponse) ProtoReflect() protoreflect.Message {
	mi := &file_api_kubevirt_v1_kubevirt_proto_msgTypes[23]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *ListDataVolumesResponse) GetItems() []*DataVolume {
	if x != nil {
		if x.xxx_hidden_Items != nil {
			return *x.xxx_hidden_Items
		}
	}
	return nil
}

func (x *ListDataVolumesResponse) SetItems(v []*DataVolume) {
	x.xxx_hidden_Items = &v
}

type ListDataVolumesResponse_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	Items []*DataVolume
}

func (b0 ListDataVolumesResponse_builder) Build() *ListDataVolumesResponse {
	m0 := &ListDataVolumesResponse{}
	b, x := &b0, m0
	_, _ = b, x
	x.xxx_hidden_Items = &b.Items
	return m0
}

type GetDataVolumeRequest struct {
	state                  protoimpl.MessageState `protogen:"opaque.v1"`
	xxx_hidden_Name        *string                `protobuf:"bytes,1,opt,name=name"`
	xxx_hidden_Namespace   *string                `protobuf:"bytes,2,opt,name=namespace"`
	XXX_raceDetectHookData protoimpl.RaceDetectHookData
	XXX_presence           [1]uint32
	unknownFields          protoimpl.UnknownFields
	sizeCache              protoimpl.SizeCache
}

func (x *GetDataVolumeRequest) Reset() {
	*x = GetDataVolumeRequest{}
	mi := &file_api_kubevirt_v1_kubevirt_proto_msgTypes[24]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetDataVolumeRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetDataVolumeRequest) ProtoMessage() {}

func (x *GetDataVolumeRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_kubevirt_v1_kubevirt_proto_msgTypes[24]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *GetDataVolumeRequest) GetName() string {
	if x != nil {
		if x.xxx_hidden_Name != nil {
			return *x.xxx_hidden_Name
		}
		return ""
	}
	return ""
}

func (x *GetDataVolumeRequest) GetNamespace() string {
	if x != nil {
		if x.xxx_hidden_Namespace != nil {
			return *x.xxx_hidden_Namespace
		}
		return ""
	}
	return ""
}

func (x *GetDataVolumeRequest) SetName(v string) {
	x.xxx_hidden_Name = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 0, 2)
}

func (x *GetDataVolumeRequest) SetNamespace(v string) {
	x.xxx_hidden_Namespace = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 1, 2)
}

func (x *GetDataVolumeRequest) HasName() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 0)
}

func (x *GetDataVolumeRequest) HasNamespace() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 1)
}

func (x *GetDataVolumeRequest) ClearName() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 0)
	x.xxx_hidden_Name = nil
}

func (x *GetDataVolumeRequest) ClearNamespace() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 1)
	x.xxx_hidden_Namespace = nil
}

type GetDataVolumeRequest_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	Name      *string
	Namespace *string
}

func (b0 GetDataVolumeRequest_builder) Build() *GetDataVolumeRequest {
	m0 := &GetDataVolumeRequest{}
	b, x := &b0, m0
	_, _ = b, x
	if b.Name != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 0, 2)
		x.xxx_hidden_Name = b.Name
	}
	if b.Namespace != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 1, 2)
		x.xxx_hidden_Namespace = b.Namespace
	}
	return m0
}

type DeleteDataVolumeRequest struct {
	state                  protoimpl.MessageState `protogen:"opaque.v1"`
	xxx_hidden_Name        *string                `protobuf:"bytes,1,opt,name=name"`
	xxx_hidden_Namespace   *string                `protobuf:"bytes,2,opt,name=namespace"`
	XXX_raceDetectHookData protoimpl.RaceDetectHookData
	XXX_presence           [1]uint32
	unknownFields          protoimpl.UnknownFields
	sizeCache              protoimpl.SizeCache
}

func (x *DeleteDataVolumeRequest) Reset() {
	*x = DeleteDataVolumeRequest{}
	mi := &file_api_kubevirt_v1_kubevirt_proto_msgTypes[25]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DeleteDataVolumeRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteDataVolumeRequest) ProtoMessage() {}

func (x *DeleteDataVolumeRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_kubevirt_v1_kubevirt_proto_msgTypes[25]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *DeleteDataVolumeRequest) GetName() string {
	if x != nil {
		if x.xxx_hidden_Name != nil {
			return *x.xxx_hidden_Name
		}
		return ""
	}
	return ""
}

func (x *DeleteDataVolumeRequest) GetNamespace() string {
	if x != nil {
		if x.xxx_hidden_Namespace != nil {
			return *x.xxx_hidden_Namespace
		}
		return ""
	}
	return ""
}

func (x *DeleteDataVolumeRequest) SetName(v string) {
	x.xxx_hidden_Name = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 0, 2)
}

func (x *DeleteDataVolumeRequest) SetNamespace(v string) {
	x.xxx_hidden_Namespace = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 1, 2)
}

func (x *DeleteDataVolumeRequest) HasName() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 0)
}

func (x *DeleteDataVolumeRequest) HasNamespace() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 1)
}

func (x *DeleteDataVolumeRequest) ClearName() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 0)
	x.xxx_hidden_Name = nil
}

func (x *DeleteDataVolumeRequest) ClearNamespace() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 1)
	x.xxx_hidden_Namespace = nil
}

type DeleteDataVolumeRequest_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	Name      *string
	Namespace *string
}

func (b0 DeleteDataVolumeRequest_builder) Build() *DeleteDataVolumeRequest {
	m0 := &DeleteDataVolumeRequest{}
	b, x := &b0, m0
	_, _ = b, x
	if b.Name != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 0, 2)
		x.xxx_hidden_Name = b.Name
	}
	if b.Namespace != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 1, 2)
		x.xxx_hidden_Namespace = b.Namespace
	}
	return m0
}

type ExtendDataVolumeRequest struct {
	state                  protoimpl.MessageState `protogen:"opaque.v1"`
	xxx_hidden_Name        *string                `protobuf:"bytes,1,opt,name=name"`
	xxx_hidden_Namespace   *string                `protobuf:"bytes,2,opt,name=namespace"`
	xxx_hidden_SizeBytes   int64                  `protobuf:"varint,3,opt,name=size_bytes,json=sizeBytes"`
	XXX_raceDetectHookData protoimpl.RaceDetectHookData
	XXX_presence           [1]uint32
	unknownFields          protoimpl.UnknownFields
	sizeCache              protoimpl.SizeCache
}

func (x *ExtendDataVolumeRequest) Reset() {
	*x = ExtendDataVolumeRequest{}
	mi := &file_api_kubevirt_v1_kubevirt_proto_msgTypes[26]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ExtendDataVolumeRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ExtendDataVolumeRequest) ProtoMessage() {}

func (x *ExtendDataVolumeRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_kubevirt_v1_kubevirt_proto_msgTypes[26]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *ExtendDataVolumeRequest) GetName() string {
	if x != nil {
		if x.xxx_hidden_Name != nil {
			return *x.xxx_hidden_Name
		}
		return ""
	}
	return ""
}

func (x *ExtendDataVolumeRequest) GetNamespace() string {
	if x != nil {
		if x.xxx_hidden_Namespace != nil {
			return *x.xxx_hidden_Namespace
		}
		return ""
	}
	return ""
}

func (x *ExtendDataVolumeRequest) GetSizeBytes() int64 {
	if x != nil {
		return x.xxx_hidden_SizeBytes
	}
	return 0
}

func (x *ExtendDataVolumeRequest) SetName(v string) {
	x.xxx_hidden_Name = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 0, 3)
}

func (x *ExtendDataVolumeRequest) SetNamespace(v string) {
	x.xxx_hidden_Namespace = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 1, 3)
}

func (x *ExtendDataVolumeRequest) SetSizeBytes(v int64) {
	x.xxx_hidden_SizeBytes = v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 2, 3)
}

func (x *ExtendDataVolumeRequest) HasName() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 0)
}

func (x *ExtendDataVolumeRequest) HasNamespace() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 1)
}

func (x *ExtendDataVolumeRequest) HasSizeBytes() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 2)
}

func (x *ExtendDataVolumeRequest) ClearName() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 0)
	x.xxx_hidden_Name = nil
}

func (x *ExtendDataVolumeRequest) ClearNamespace() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 1)
	x.xxx_hidden_Namespace = nil
}

func (x *ExtendDataVolumeRequest) ClearSizeBytes() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 2)
	x.xxx_hidden_SizeBytes = 0
}

type ExtendDataVolumeRequest_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	Name      *string
	Namespace *string
	SizeBytes *int64
}

func (b0 ExtendDataVolumeRequest_builder) Build() *ExtendDataVolumeRequest {
	m0 := &ExtendDataVolumeRequest{}
	b, x := &b0, m0
	_, _ = b, x
	if b.Name != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 0, 3)
		x.xxx_hidden_Name = b.Name
	}
	if b.Namespace != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 1, 3)
		x.xxx_hidden_Namespace = b.Namespace
	}
	if b.SizeBytes != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 2, 3)
		x.xxx_hidden_SizeBytes = *b.SizeBytes
	}
	return m0
}

type CreateNetworkRequest struct {
	state              protoimpl.MessageState `protogen:"opaque.v1"`
	xxx_hidden_Network *Network               `protobuf:"bytes,1,opt,name=network"`
	unknownFields      protoimpl.UnknownFields
	sizeCache          protoimpl.SizeCache
}

func (x *CreateNetworkRequest) Reset() {
	*x = CreateNetworkRequest{}
	mi := &file_api_kubevirt_v1_kubevirt_proto_msgTypes[27]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CreateNetworkRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateNetworkRequest) ProtoMessage() {}

func (x *CreateNetworkRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_kubevirt_v1_kubevirt_proto_msgTypes[27]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *CreateNetworkRequest) GetNetwork() *Network {
	if x != nil {
		return x.xxx_hidden_Network
	}
	return nil
}

func (x *CreateNetworkRequest) SetNetwork(v *Network) {
	x.xxx_hidden_Network = v
}

func (x *CreateNetworkRequest) HasNetwork() bool {
	if x == nil {
		return false
	}
	return x.xxx_hidden_Network != nil
}

func (x *CreateNetworkRequest) ClearNetwork() {
	x.xxx_hidden_Network = nil
}

type CreateNetworkRequest_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	Network *Network
}

func (b0 CreateNetworkRequest_builder) Build() *CreateNetworkRequest {
	m0 := &CreateNetworkRequest{}
	b, x := &b0, m0
	_, _ = b, x
	x.xxx_hidden_Network = b.Network
	return m0
}

type ListNetworksRequest struct {
	state                  protoimpl.MessageState `protogen:"opaque.v1"`
	xxx_hidden_Namespace   *string                `protobuf:"bytes,1,opt,name=namespace"`
	XXX_raceDetectHookData protoimpl.RaceDetectHookData
	XXX_presence           [1]uint32
	unknownFields          protoimpl.UnknownFields
	sizeCache              protoimpl.SizeCache
}

func (x *ListNetworksRequest) Reset() {
	*x = ListNetworksRequest{}
	mi := &file_api_kubevirt_v1_kubevirt_proto_msgTypes[28]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListNetworksRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListNetworksRequest) ProtoMessage() {}

func (x *ListNetworksRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_kubevirt_v1_kubevirt_proto_msgTypes[28]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *ListNetworksRequest) GetNamespace() string {
	if x != nil {
		if x.xxx_hidden_Namespace != nil {
			return *x.xxx_hidden_Namespace
		}
		return ""
	}
	return ""
}

func (x *ListNetworksRequest) SetNamespace(v string) {
	x.xxx_hidden_Namespace = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 0, 1)
}

func (x *ListNetworksRequest) HasNamespace() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 0)
}

func (x *ListNetworksRequest) ClearNamespace() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 0)
	x.xxx_hidden_Namespace = nil
}

type ListNetworksRequest_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	Namespace *string
}

func (b0 ListNetworksRequest_builder) Build() *ListNetworksRequest {
	m0 := &ListNetworksRequest{}
	b, x := &b0, m0
	_, _ = b, x
	if b.Namespace != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 0, 1)
		x.xxx_hidden_Namespace = b.Namespace
	}
	return m0
}

type ListNetworksResponse struct {
	state            protoimpl.MessageState `protogen:"opaque.v1"`
	xxx_hidden_Items *[]*Network            `protobuf:"bytes,1,rep,name=items"`
	unknownFields    protoimpl.UnknownFields
	sizeCache        protoimpl.SizeCache
}

func (x *ListNetworksResponse) Reset() {
	*x = ListNetworksResponse{}
	mi := &file_api_kubevirt_v1_kubevirt_proto_msgTypes[29]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListNetworksResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListNetworksResponse) ProtoMessage() {}

func (x *ListNetworksResponse) ProtoReflect() protoreflect.Message {
	mi := &file_api_kubevirt_v1_kubevirt_proto_msgTypes[29]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *ListNetworksResponse) GetItems() []*Network {
	if x != nil {
		if x.xxx_hidden_Items != nil {
			return *x.xxx_hidden_Items
		}
	}
	return nil
}

func (x *ListNetworksResponse) SetItems(v []*Network) {
	x.xxx_hidden_Items = &v
}

type ListNetworksResponse_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	Items []*Network
}

func (b0 ListNetworksResponse_builder) Build() *ListNetworksResponse {
	m0 := &ListNetworksResponse{}
	b, x := &b0, m0
	_, _ = b, x
	x.xxx_hidden_Items = &b.Items
	return m0
}

type GetNetworkRequest struct {
	state                  protoimpl.MessageState `protogen:"opaque.v1"`
	xxx_hidden_Name        *string                `protobuf:"bytes,1,opt,name=name"`
	xxx_hidden_Namespace   *string                `protobuf:"bytes,2,opt,name=namespace"`
	XXX_raceDetectHookData protoimpl.RaceDetectHookData
	XXX_presence           [1]uint32
	unknownFields          protoimpl.UnknownFields
	sizeCache              protoimpl.SizeCache
}

func (x *GetNetworkRequest) Reset() {
	*x = GetNetworkRequest{}
	mi := &file_api_kubevirt_v1_kubevirt_proto_msgTypes[30]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetNetworkRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetNetworkRequest) ProtoMessage() {}

func (x *GetNetworkRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_kubevirt_v1_kubevirt_proto_msgTypes[30]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *GetNetworkRequest) GetName() string {
	if x != nil {
		if x.xxx_hidden_Name != nil {
			return *x.xxx_hidden_Name
		}
		return ""
	}
	return ""
}

func (x *GetNetworkRequest) GetNamespace() string {
	if x != nil {
		if x.xxx_hidden_Namespace != nil {
			return *x.xxx_hidden_Namespace
		}
		return ""
	}
	return ""
}

func (x *GetNetworkRequest) SetName(v string) {
	x.xxx_hidden_Name = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 0, 2)
}

func (x *GetNetworkRequest) SetNamespace(v string) {
	x.xxx_hidden_Namespace = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 1, 2)
}

func (x *GetNetworkRequest) HasName() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 0)
}

func (x *GetNetworkRequest) HasNamespace() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 1)
}

func (x *GetNetworkRequest) ClearName() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 0)
	x.xxx_hidden_Name = nil
}

func (x *GetNetworkRequest) ClearNamespace() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 1)
	x.xxx_hidden_Namespace = nil
}

type GetNetworkRequest_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	Name      *string
	Namespace *string
}

func (b0 GetNetworkRequest_builder) Build() *GetNetworkRequest {
	m0 := &GetNetworkRequest{}
	b, x := &b0, m0
	_, _ = b, x
	if b.Name != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 0, 2)
		x.xxx_hidden_Name = b.Name
	}
	if b.Namespace != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 1, 2)
		x.xxx_hidden_Namespace = b.Namespace
	}
	return m0
}

type UpdateNetworkRequest struct {
	state              protoimpl.MessageState `protogen:"opaque.v1"`
	xxx_hidden_Network *Network               `protobuf:"bytes,1,opt,name=network"`
	unknownFields      protoimpl.UnknownFields
	sizeCache          protoimpl.SizeCache
}

func (x *UpdateNetworkRequest) Reset() {
	*x = UpdateNetworkRequest{}
	mi := &file_api_kubevirt_v1_kubevirt_proto_msgTypes[31]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UpdateNetworkRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateNetworkRequest) ProtoMessage() {}

func (x *UpdateNetworkRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_kubevirt_v1_kubevirt_proto_msgTypes[31]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *UpdateNetworkRequest) GetNetwork() *Network {
	if x != nil {
		return x.xxx_hidden_Network
	}
	return nil
}

func (x *UpdateNetworkRequest) SetNetwork(v *Network) {
	x.xxx_hidden_Network = v
}

func (x *UpdateNetworkRequest) HasNetwork() bool {
	if x == nil {
		return false
	}
	return x.xxx_hidden_Network != nil
}

func (x *UpdateNetworkRequest) ClearNetwork() {
	x.xxx_hidden_Network = nil
}

type UpdateNetworkRequest_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	Network *Network
}

func (b0 UpdateNetworkRequest_builder) Build() *UpdateNetworkRequest {
	m0 := &UpdateNetworkRequest{}
	b, x := &b0, m0
	_, _ = b, x
	x.xxx_hidden_Network = b.Network
	return m0
}

type DeleteNetworkRequest struct {
	state                  protoimpl.MessageState `protogen:"opaque.v1"`
	xxx_hidden_Name        *string                `protobuf:"bytes,1,opt,name=name"`
	xxx_hidden_Namespace   *string                `protobuf:"bytes,2,opt,name=namespace"`
	XXX_raceDetectHookData protoimpl.RaceDetectHookData
	XXX_presence           [1]uint32
	unknownFields          protoimpl.UnknownFields
	sizeCache              protoimpl.SizeCache
}

func (x *DeleteNetworkRequest) Reset() {
	*x = DeleteNetworkRequest{}
	mi := &file_api_kubevirt_v1_kubevirt_proto_msgTypes[32]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DeleteNetworkRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteNetworkRequest) ProtoMessage() {}

func (x *DeleteNetworkRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_kubevirt_v1_kubevirt_proto_msgTypes[32]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *DeleteNetworkRequest) GetName() string {
	if x != nil {
		if x.xxx_hidden_Name != nil {
			return *x.xxx_hidden_Name
		}
		return ""
	}
	return ""
}

func (x *DeleteNetworkRequest) GetNamespace() string {
	if x != nil {
		if x.xxx_hidden_Namespace != nil {
			return *x.xxx_hidden_Namespace
		}
		return ""
	}
	return ""
}

func (x *DeleteNetworkRequest) SetName(v string) {
	x.xxx_hidden_Name = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 0, 2)
}

func (x *DeleteNetworkRequest) SetNamespace(v string) {
	x.xxx_hidden_Namespace = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 1, 2)
}

func (x *DeleteNetworkRequest) HasName() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 0)
}

func (x *DeleteNetworkRequest) HasNamespace() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 1)
}

func (x *DeleteNetworkRequest) ClearName() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 0)
	x.xxx_hidden_Name = nil
}

func (x *DeleteNetworkRequest) ClearNamespace() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 1)
	x.xxx_hidden_Namespace = nil
}

type DeleteNetworkRequest_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	Name      *string
	Namespace *string
}

func (b0 DeleteNetworkRequest_builder) Build() *DeleteNetworkRequest {
	m0 := &DeleteNetworkRequest{}
	b, x := &b0, m0
	_, _ = b, x
	if b.Name != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 0, 2)
		x.xxx_hidden_Name = b.Name
	}
	if b.Namespace != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 1, 2)
		x.xxx_hidden_Namespace = b.Namespace
	}
	return m0
}

type CreateFlavorRequest struct {
	state             protoimpl.MessageState `protogen:"opaque.v1"`
	xxx_hidden_Flavor *Flavor                `protobuf:"bytes,1,opt,name=flavor"`
	unknownFields     protoimpl.UnknownFields
	sizeCache         protoimpl.SizeCache
}

func (x *CreateFlavorRequest) Reset() {
	*x = CreateFlavorRequest{}
	mi := &file_api_kubevirt_v1_kubevirt_proto_msgTypes[33]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CreateFlavorRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateFlavorRequest) ProtoMessage() {}

func (x *CreateFlavorRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_kubevirt_v1_kubevirt_proto_msgTypes[33]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *CreateFlavorRequest) GetFlavor() *Flavor {
	if x != nil {
		return x.xxx_hidden_Flavor
	}
	return nil
}

func (x *CreateFlavorRequest) SetFlavor(v *Flavor) {
	x.xxx_hidden_Flavor = v
}

func (x *CreateFlavorRequest) HasFlavor() bool {
	if x == nil {
		return false
	}
	return x.xxx_hidden_Flavor != nil
}

func (x *CreateFlavorRequest) ClearFlavor() {
	x.xxx_hidden_Flavor = nil
}

type CreateFlavorRequest_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	Flavor *Flavor
}

func (b0 CreateFlavorRequest_builder) Build() *CreateFlavorRequest {
	m0 := &CreateFlavorRequest{}
	b, x := &b0, m0
	_, _ = b, x
	x.xxx_hidden_Flavor = b.Flavor
	return m0
}

type ListFlavorsRequest struct {
	state                  protoimpl.MessageState `protogen:"opaque.v1"`
	xxx_hidden_Namespace   *string                `protobuf:"bytes,1,opt,name=namespace"`
	XXX_raceDetectHookData protoimpl.RaceDetectHookData
	XXX_presence           [1]uint32
	unknownFields          protoimpl.UnknownFields
	sizeCache              protoimpl.SizeCache
}

func (x *ListFlavorsRequest) Reset() {
	*x = ListFlavorsRequest{}
	mi := &file_api_kubevirt_v1_kubevirt_proto_msgTypes[34]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListFlavorsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListFlavorsRequest) ProtoMessage() {}

func (x *ListFlavorsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_kubevirt_v1_kubevirt_proto_msgTypes[34]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *ListFlavorsRequest) GetNamespace() string {
	if x != nil {
		if x.xxx_hidden_Namespace != nil {
			return *x.xxx_hidden_Namespace
		}
		return ""
	}
	return ""
}

func (x *ListFlavorsRequest) SetNamespace(v string) {
	x.xxx_hidden_Namespace = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 0, 1)
}

func (x *ListFlavorsRequest) HasNamespace() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 0)
}

func (x *ListFlavorsRequest) ClearNamespace() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 0)
	x.xxx_hidden_Namespace = nil
}

type ListFlavorsRequest_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	Namespace *string
}

func (b0 ListFlavorsRequest_builder) Build() *ListFlavorsRequest {
	m0 := &ListFlavorsRequest{}
	b, x := &b0, m0
	_, _ = b, x
	if b.Namespace != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 0, 1)
		x.xxx_hidden_Namespace = b.Namespace
	}
	return m0
}

type ListFlavorsResponse struct {
	state            protoimpl.MessageState `protogen:"opaque.v1"`
	xxx_hidden_Items *[]*Flavor             `protobuf:"bytes,1,rep,name=items"`
	unknownFields    protoimpl.UnknownFields
	sizeCache        protoimpl.SizeCache
}

func (x *ListFlavorsResponse) Reset() {
	*x = ListFlavorsResponse{}
	mi := &file_api_kubevirt_v1_kubevirt_proto_msgTypes[35]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListFlavorsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListFlavorsResponse) ProtoMessage() {}

func (x *ListFlavorsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_api_kubevirt_v1_kubevirt_proto_msgTypes[35]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *ListFlavorsResponse) GetItems() []*Flavor {
	if x != nil {
		if x.xxx_hidden_Items != nil {
			return *x.xxx_hidden_Items
		}
	}
	return nil
}

func (x *ListFlavorsResponse) SetItems(v []*Flavor) {
	x.xxx_hidden_Items = &v
}

type ListFlavorsResponse_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	Items []*Flavor
}

func (b0 ListFlavorsResponse_builder) Build() *ListFlavorsResponse {
	m0 := &ListFlavorsResponse{}
	b, x := &b0, m0
	_, _ = b, x
	x.xxx_hidden_Items = &b.Items
	return m0
}

type GetFlavorRequest struct {
	state                  protoimpl.MessageState `protogen:"opaque.v1"`
	xxx_hidden_Name        *string                `protobuf:"bytes,1,opt,name=name"`
	xxx_hidden_Namespace   *string                `protobuf:"bytes,2,opt,name=namespace"`
	XXX_raceDetectHookData protoimpl.RaceDetectHookData
	XXX_presence           [1]uint32
	unknownFields          protoimpl.UnknownFields
	sizeCache              protoimpl.SizeCache
}

func (x *GetFlavorRequest) Reset() {
	*x = GetFlavorRequest{}
	mi := &file_api_kubevirt_v1_kubevirt_proto_msgTypes[36]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetFlavorRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetFlavorRequest) ProtoMessage() {}

func (x *GetFlavorRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_kubevirt_v1_kubevirt_proto_msgTypes[36]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *GetFlavorRequest) GetName() string {
	if x != nil {
		if x.xxx_hidden_Name != nil {
			return *x.xxx_hidden_Name
		}
		return ""
	}
	return ""
}

func (x *GetFlavorRequest) GetNamespace() string {
	if x != nil {
		if x.xxx_hidden_Namespace != nil {
			return *x.xxx_hidden_Namespace
		}
		return ""
	}
	return ""
}

func (x *GetFlavorRequest) SetName(v string) {
	x.xxx_hidden_Name = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 0, 2)
}

func (x *GetFlavorRequest) SetNamespace(v string) {
	x.xxx_hidden_Namespace = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 1, 2)
}

func (x *GetFlavorRequest) HasName() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 0)
}

func (x *GetFlavorRequest) HasNamespace() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 1)
}

func (x *GetFlavorRequest) ClearName() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 0)
	x.xxx_hidden_Name = nil
}

func (x *GetFlavorRequest) ClearNamespace() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 1)
	x.xxx_hidden_Namespace = nil
}

type GetFlavorRequest_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	Name      *string
	Namespace *string
}

func (b0 GetFlavorRequest_builder) Build() *GetFlavorRequest {
	m0 := &GetFlavorRequest{}
	b, x := &b0, m0
	_, _ = b, x
	if b.Name != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 0, 2)
		x.xxx_hidden_Name = b.Name
	}
	if b.Namespace != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 1, 2)
		x.xxx_hidden_Namespace = b.Namespace
	}
	return m0
}

type DeleteFlavorRequest struct {
	state                  protoimpl.MessageState `protogen:"opaque.v1"`
	xxx_hidden_Name        *string                `protobuf:"bytes,1,opt,name=name"`
	xxx_hidden_Namespace   *string                `protobuf:"bytes,2,opt,name=namespace"`
	XXX_raceDetectHookData protoimpl.RaceDetectHookData
	XXX_presence           [1]uint32
	unknownFields          protoimpl.UnknownFields
	sizeCache              protoimpl.SizeCache
}

func (x *DeleteFlavorRequest) Reset() {
	*x = DeleteFlavorRequest{}
	mi := &file_api_kubevirt_v1_kubevirt_proto_msgTypes[37]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DeleteFlavorRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteFlavorRequest) ProtoMessage() {}

func (x *DeleteFlavorRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_kubevirt_v1_kubevirt_proto_msgTypes[37]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *DeleteFlavorRequest) GetName() string {
	if x != nil {
		if x.xxx_hidden_Name != nil {
			return *x.xxx_hidden_Name
		}
		return ""
	}
	return ""
}

func (x *DeleteFlavorRequest) GetNamespace() string {
	if x != nil {
		if x.xxx_hidden_Namespace != nil {
			return *x.xxx_hidden_Namespace
		}
		return ""
	}
	return ""
}

func (x *DeleteFlavorRequest) SetName(v string) {
	x.xxx_hidden_Name = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 0, 2)
}

func (x *DeleteFlavorRequest) SetNamespace(v string) {
	x.xxx_hidden_Namespace = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 1, 2)
}

func (x *DeleteFlavorRequest) HasName() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 0)
}

func (x *DeleteFlavorRequest) HasNamespace() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 1)
}

func (x *DeleteFlavorRequest) ClearName() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 0)
	x.xxx_hidden_Name = nil
}

func (x *DeleteFlavorRequest) ClearNamespace() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 1)
	x.xxx_hidden_Namespace = nil
}

type DeleteFlavorRequest_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	Name      *string
	Namespace *string
}

func (b0 DeleteFlavorRequest_builder) Build() *DeleteFlavorRequest {
	m0 := &DeleteFlavorRequest{}
	b, x := &b0, m0
	_, _ = b, x
	if b.Name != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 0, 2)
		x.xxx_hidden_Name = b.Name
	}
	if b.Namespace != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 1, 2)
		x.xxx_hidden_Namespace = b.Namespace
	}
	return m0
}

type VirtualMachine_Operation struct {
	state                  protoimpl.MessageState                    `protogen:"opaque.v1"`
	xxx_hidden_Name        *string                                   `protobuf:"bytes,1,opt,name=name"`
	xxx_hidden_Type        *string                                   `protobuf:"bytes,2,opt,name=type"`
	xxx_hidden_Description *string                                   `protobuf:"bytes,3,opt,name=description"`
	xxx_hidden_CreateTime  *timestamppb.Timestamp                    `protobuf:"bytes,4,opt,name=create_time,json=createTime"`
	xxx_hidden_Status      *VirtualMachine_Operation_OperationResult `protobuf:"bytes,11,opt,name=status"`
	XXX_raceDetectHookData protoimpl.RaceDetectHookData
	XXX_presence           [1]uint32
	unknownFields          protoimpl.UnknownFields
	sizeCache              protoimpl.SizeCache
}

func (x *VirtualMachine_Operation) Reset() {
	*x = VirtualMachine_Operation{}
	mi := &file_api_kubevirt_v1_kubevirt_proto_msgTypes[40]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *VirtualMachine_Operation) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*VirtualMachine_Operation) ProtoMessage() {}

func (x *VirtualMachine_Operation) ProtoReflect() protoreflect.Message {
	mi := &file_api_kubevirt_v1_kubevirt_proto_msgTypes[40]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *VirtualMachine_Operation) GetName() string {
	if x != nil {
		if x.xxx_hidden_Name != nil {
			return *x.xxx_hidden_Name
		}
		return ""
	}
	return ""
}

func (x *VirtualMachine_Operation) GetType() string {
	if x != nil {
		if x.xxx_hidden_Type != nil {
			return *x.xxx_hidden_Type
		}
		return ""
	}
	return ""
}

func (x *VirtualMachine_Operation) GetDescription() string {
	if x != nil {
		if x.xxx_hidden_Description != nil {
			return *x.xxx_hidden_Description
		}
		return ""
	}
	return ""
}

func (x *VirtualMachine_Operation) GetCreateTime() *timestamppb.Timestamp {
	if x != nil {
		return x.xxx_hidden_CreateTime
	}
	return nil
}

func (x *VirtualMachine_Operation) GetStatus() *VirtualMachine_Operation_OperationResult {
	if x != nil {
		return x.xxx_hidden_Status
	}
	return nil
}

func (x *VirtualMachine_Operation) SetName(v string) {
	x.xxx_hidden_Name = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 0, 5)
}

func (x *VirtualMachine_Operation) SetType(v string) {
	x.xxx_hidden_Type = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 1, 5)
}

func (x *VirtualMachine_Operation) SetDescription(v string) {
	x.xxx_hidden_Description = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 2, 5)
}

func (x *VirtualMachine_Operation) SetCreateTime(v *timestamppb.Timestamp) {
	x.xxx_hidden_CreateTime = v
}

func (x *VirtualMachine_Operation) SetStatus(v *VirtualMachine_Operation_OperationResult) {
	x.xxx_hidden_Status = v
}

func (x *VirtualMachine_Operation) HasName() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 0)
}

func (x *VirtualMachine_Operation) HasType() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 1)
}

func (x *VirtualMachine_Operation) HasDescription() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 2)
}

func (x *VirtualMachine_Operation) HasCreateTime() bool {
	if x == nil {
		return false
	}
	return x.xxx_hidden_CreateTime != nil
}

func (x *VirtualMachine_Operation) HasStatus() bool {
	if x == nil {
		return false
	}
	return x.xxx_hidden_Status != nil
}

func (x *VirtualMachine_Operation) ClearName() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 0)
	x.xxx_hidden_Name = nil
}

func (x *VirtualMachine_Operation) ClearType() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 1)
	x.xxx_hidden_Type = nil
}

func (x *VirtualMachine_Operation) ClearDescription() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 2)
	x.xxx_hidden_Description = nil
}

func (x *VirtualMachine_Operation) ClearCreateTime() {
	x.xxx_hidden_CreateTime = nil
}

func (x *VirtualMachine_Operation) ClearStatus() {
	x.xxx_hidden_Status = nil
}

type VirtualMachine_Operation_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	Name        *string
	Type        *string
	Description *string
	CreateTime  *timestamppb.Timestamp
	Status      *VirtualMachine_Operation_OperationResult
}

func (b0 VirtualMachine_Operation_builder) Build() *VirtualMachine_Operation {
	m0 := &VirtualMachine_Operation{}
	b, x := &b0, m0
	_, _ = b, x
	if b.Name != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 0, 5)
		x.xxx_hidden_Name = b.Name
	}
	if b.Type != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 1, 5)
		x.xxx_hidden_Type = b.Type
	}
	if b.Description != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 2, 5)
		x.xxx_hidden_Description = b.Description
	}
	x.xxx_hidden_CreateTime = b.CreateTime
	x.xxx_hidden_Status = b.Status
	return m0
}

type VirtualMachine_Operation_OperationResult struct {
	state                  protoimpl.MessageState                                   `protogen:"opaque.v1"`
	xxx_hidden_Status      VirtualMachine_Operation_OperationResult_OperationStatus `protobuf:"varint,1,opt,name=status,enum=otterscale.kubevirt.v1.VirtualMachine_Operation_OperationResult_OperationStatus"`
	xxx_hidden_Message     *string                                                  `protobuf:"bytes,2,opt,name=message"`
	xxx_hidden_Reason      *string                                                  `protobuf:"bytes,3,opt,name=reason"`
	XXX_raceDetectHookData protoimpl.RaceDetectHookData
	XXX_presence           [1]uint32
	unknownFields          protoimpl.UnknownFields
	sizeCache              protoimpl.SizeCache
}

func (x *VirtualMachine_Operation_OperationResult) Reset() {
	*x = VirtualMachine_Operation_OperationResult{}
	mi := &file_api_kubevirt_v1_kubevirt_proto_msgTypes[41]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *VirtualMachine_Operation_OperationResult) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*VirtualMachine_Operation_OperationResult) ProtoMessage() {}

func (x *VirtualMachine_Operation_OperationResult) ProtoReflect() protoreflect.Message {
	mi := &file_api_kubevirt_v1_kubevirt_proto_msgTypes[41]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *VirtualMachine_Operation_OperationResult) GetStatus() VirtualMachine_Operation_OperationResult_OperationStatus {
	if x != nil {
		if protoimpl.X.Present(&(x.XXX_presence[0]), 0) {
			return x.xxx_hidden_Status
		}
	}
	return VirtualMachine_Operation_OperationResult_OPERATION_STATUS_UNSPECIFIED
}

func (x *VirtualMachine_Operation_OperationResult) GetMessage() string {
	if x != nil {
		if x.xxx_hidden_Message != nil {
			return *x.xxx_hidden_Message
		}
		return ""
	}
	return ""
}

func (x *VirtualMachine_Operation_OperationResult) GetReason() string {
	if x != nil {
		if x.xxx_hidden_Reason != nil {
			return *x.xxx_hidden_Reason
		}
		return ""
	}
	return ""
}

func (x *VirtualMachine_Operation_OperationResult) SetStatus(v VirtualMachine_Operation_OperationResult_OperationStatus) {
	x.xxx_hidden_Status = v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 0, 3)
}

func (x *VirtualMachine_Operation_OperationResult) SetMessage(v string) {
	x.xxx_hidden_Message = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 1, 3)
}

func (x *VirtualMachine_Operation_OperationResult) SetReason(v string) {
	x.xxx_hidden_Reason = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 2, 3)
}

func (x *VirtualMachine_Operation_OperationResult) HasStatus() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 0)
}

func (x *VirtualMachine_Operation_OperationResult) HasMessage() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 1)
}

func (x *VirtualMachine_Operation_OperationResult) HasReason() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 2)
}

func (x *VirtualMachine_Operation_OperationResult) ClearStatus() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 0)
	x.xxx_hidden_Status = VirtualMachine_Operation_OperationResult_OPERATION_STATUS_UNSPECIFIED
}

func (x *VirtualMachine_Operation_OperationResult) ClearMessage() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 1)
	x.xxx_hidden_Message = nil
}

func (x *VirtualMachine_Operation_OperationResult) ClearReason() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 2)
	x.xxx_hidden_Reason = nil
}

type VirtualMachine_Operation_OperationResult_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	Status  *VirtualMachine_Operation_OperationResult_OperationStatus
	Message *string
	Reason  *string
}

func (b0 VirtualMachine_Operation_OperationResult_builder) Build() *VirtualMachine_Operation_OperationResult {
	m0 := &VirtualMachine_Operation_OperationResult{}
	b, x := &b0, m0
	_, _ = b, x
	if b.Status != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 0, 3)
		x.xxx_hidden_Status = *b.Status
	}
	if b.Message != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 1, 3)
		x.xxx_hidden_Message = b.Message
	}
	if b.Reason != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 2, 3)
		x.xxx_hidden_Reason = b.Reason
	}
	return m0
}

var File_api_kubevirt_v1_kubevirt_proto protoreflect.FileDescriptor

const file_api_kubevirt_v1_kubevirt_proto_rawDesc = "" +
	"\n" +
	"\x1eapi/kubevirt/v1/kubevirt.proto\x12\x16otterscale.kubevirt.v1\x1a\x1bgoogle/protobuf/empty.proto\x1a\x1fgoogle/protobuf/timestamp.proto\"\xc8\x03\n" +
	"\bMetadata\x12\x12\n" +
	"\x04name\x18\x01 \x01(\tR\x04name\x12\x1c\n" +
	"\tnamespace\x18\x02 \x01(\tR\tnamespace\x12D\n" +
	"\x06labels\x18\x03 \x03(\v2,.otterscale.kubevirt.v1.Metadata.LabelsEntryR\x06labels\x12S\n" +
	"\vannotations\x18\x04 \x03(\v21.otterscale.kubevirt.v1.Metadata.AnnotationsEntryR\vannotations\x129\n" +
	"\n" +
	"created_at\x18\x05 \x01(\v2\x1a.google.protobuf.TimestampR\tcreatedAt\x129\n" +
	"\n" +
	"updated_at\x18\x06 \x01(\v2\x1a.google.protobuf.TimestampR\tupdatedAt\x1a9\n" +
	"\vLabelsEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\tR\x05value:\x028\x01\x1a>\n" +
	"\x10AnnotationsEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\tR\x05value:\x028\x01\"\xdd\t\n" +
	"\x0eVirtualMachine\x12<\n" +
	"\bmetadata\x18\x01 \x01(\v2 .otterscale.kubevirt.v1.MetadataR\bmetadata\x12>\n" +
	"\x04spec\x18\v \x01(\v2*.otterscale.kubevirt.v1.VirtualMachineSpecR\x04spec\x12S\n" +
	"\x06status\x18\f \x01(\x0e2;.otterscale.kubevirt.v1.VirtualMachine.VirtualMachineStatusR\x06status\x12N\n" +
	"\tsnapshots\x18\x15 \x03(\v20.otterscale.kubevirt.v1.VirtualMachine.OperationR\tsnapshots\x12H\n" +
	"\x06clones\x18\x16 \x03(\v20.otterscale.kubevirt.v1.VirtualMachine.OperationR\x06clones\x12L\n" +
	"\bmigrates\x18\x17 \x03(\v20.otterscale.kubevirt.v1.VirtualMachine.OperationR\bmigrates\x12L\n" +
	"\brestores\x18\x18 \x03(\v20.otterscale.kubevirt.v1.VirtualMachine.OperationR\brestores\x1a\xb1\x04\n" +
	"\tOperation\x12\x12\n" +
	"\x04name\x18\x01 \x01(\tR\x04name\x12\x12\n" +
	"\x04type\x18\x02 \x01(\tR\x04type\x12 \n" +
	"\vdescription\x18\x03 \x01(\tR\vdescription\x12;\n" +
	"\vcreate_time\x18\x04 \x01(\v2\x1a.google.protobuf.TimestampR\n" +
	"createTime\x12X\n" +
	"\x06status\x18\v \x01(\v2@.otterscale.kubevirt.v1.VirtualMachine.Operation.OperationResultR\x06status\x1a\xc2\x02\n" +
	"\x0fOperationResult\x12h\n" +
	"\x06status\x18\x01 \x01(\x0e2P.otterscale.kubevirt.v1.VirtualMachine.Operation.OperationResult.OperationStatusR\x06status\x12\x18\n" +
	"\amessage\x18\x02 \x01(\tR\amessage\x12\x16\n" +
	"\x06reason\x18\x03 \x01(\tR\x06reason\"\x92\x01\n" +
	"\x0fOperationStatus\x12 \n" +
	"\x1cOPERATION_STATUS_UNSPECIFIED\x10\x00\x12 \n" +
	"\x1cOPERATION_STATUS_IN_PROGRESS\x10\x01\x12\x1e\n" +
	"\x1aOPERATION_STATUS_SUCCEEDED\x10\x02\x12\x1b\n" +
	"\x17OPERATION_STATUS_FAILED\x10\x03\"\x8d\x01\n" +
	"\x14VirtualMachineStatus\x12\x0f\n" +
	"\vUNSPECIFIED\x10\x00\x12\x10\n" +
	"\fPROVISIONING\x10\x01\x12\f\n" +
	"\bSTARTING\x10\x02\x12\v\n" +
	"\aRUNNING\x10\x03\x12\x0f\n" +
	"\vTERMINATING\x10\x04\x12\v\n" +
	"\aSTOPPED\x10\x05\x12\n" +
	"\n" +
	"\x06PAUSED\x10\x06\x12\r\n" +
	"\tMIGRATING\x10\a\"\xdc\x01\n" +
	"\x12VirtualMachineSpec\x12\x1f\n" +
	"\vflavor_name\x18\x01 \x01(\tR\n" +
	"flavorName\x12!\n" +
	"\fnetwork_name\x18\x02 \x01(\tR\vnetworkName\x12%\n" +
	"\x0estartup_script\x18\x03 \x01(\tR\rstartupScript\x12!\n" +
	"\fdata_volumes\x18\v \x03(\tR\vdataVolumes\x128\n" +
	"\adevices\x18\f \x03(\v2\x1e.otterscale.kubevirt.v1.DeviceR\adevices\"\x86\x01\n" +
	"\x06Flavor\x12<\n" +
	"\bmetadata\x18\x01 \x01(\v2 .otterscale.kubevirt.v1.MetadataR\bmetadata\x12\x1b\n" +
	"\tcpu_cores\x18\x02 \x01(\x02R\bcpuCores\x12!\n" +
	"\fmemory_bytes\x18\x03 \x01(\x03R\vmemoryBytes\"\x95\x01\n" +
	"\n" +
	"DataVolume\x12<\n" +
	"\bmetadata\x18\x01 \x01(\v2 .otterscale.kubevirt.v1.MetadataR\bmetadata\x12\x16\n" +
	"\x06source\x18\x02 \x01(\tR\x06source\x12\x12\n" +
	"\x04type\x18\x03 \x01(\tR\x04type\x12\x1d\n" +
	"\n" +
	"size_bytes\x18\x04 \x01(\x03R\tsizeBytes\"\xc2\x01\n" +
	"\aNetwork\x12<\n" +
	"\bmetadata\x18\x01 \x01(\v2 .otterscale.kubevirt.v1.MetadataR\bmetadata\x12!\n" +
	"\fservice_type\x18\x02 \x01(\tR\vserviceType\x12\x12\n" +
	"\x04port\x18\x03 \x01(\x05R\x04port\x12\x1b\n" +
	"\tnode_port\x18\x04 \x01(\x05R\bnodePort\x12%\n" +
	"\x0econtainer_port\x18\x05 \x01(\x05R\rcontainerPort\"0\n" +
	"\x06Device\x12\x12\n" +
	"\x04name\x18\x01 \x01(\tR\x04name\x12\x12\n" +
	"\x04type\x18\x02 \x01(\tR\x04type\":\n" +
	"\x1aListVirtualMachinesRequest\x12\x1c\n" +
	"\tnamespace\x18\x01 \x01(\tR\tnamespace\"[\n" +
	"\x1bListVirtualMachinesResponse\x12<\n" +
	"\x05items\x18\x01 \x03(\v2&.otterscale.kubevirt.v1.VirtualMachineR\x05items\"L\n" +
	"\x18GetVirtualMachineRequest\x12\x12\n" +
	"\x04name\x18\x01 \x01(\tR\x04name\x12\x1c\n" +
	"\tnamespace\x18\x02 \x01(\tR\tnamespace\"\x9b\x01\n" +
	"\x1bCreateVirtualMachineRequest\x12<\n" +
	"\bmetadata\x18\x02 \x01(\v2 .otterscale.kubevirt.v1.MetadataR\bmetadata\x12>\n" +
	"\x04spec\x18\x01 \x01(\v2*.otterscale.kubevirt.v1.VirtualMachineSpecR\x04spec\"\x9b\x01\n" +
	"\x1bUpdateVirtualMachineRequest\x12<\n" +
	"\bmetadata\x18\x02 \x01(\v2 .otterscale.kubevirt.v1.MetadataR\bmetadata\x12>\n" +
	"\x04spec\x18\x03 \x01(\v2*.otterscale.kubevirt.v1.VirtualMachineSpecR\x04spec\"O\n" +
	"\x1bDeleteVirtualMachineRequest\x12\x12\n" +
	"\x04name\x18\x01 \x01(\tR\x04name\x12\x1c\n" +
	"\tnamespace\x18\x02 \x01(\tR\tnamespace\"N\n" +
	"\x1aStartVirtualMachineRequest\x12\x12\n" +
	"\x04name\x18\x01 \x01(\tR\x04name\x12\x1c\n" +
	"\tnamespace\x18\x02 \x01(\tR\tnamespace\"M\n" +
	"\x19StopVirtualMachineRequest\x12\x12\n" +
	"\x04name\x18\x01 \x01(\tR\x04name\x12\x1c\n" +
	"\tnamespace\x18\x02 \x01(\tR\tnamespace\"N\n" +
	"\x1aPauseVirtualMachineRequest\x12\x12\n" +
	"\x04name\x18\x01 \x01(\tR\x04name\x12\x1c\n" +
	"\tnamespace\x18\x02 \x01(\tR\tnamespace\"P\n" +
	"\x1cUnpauseVirtualMachineRequest\x12\x12\n" +
	"\x04name\x18\x01 \x01(\tR\x04name\x12\x1c\n" +
	"\tnamespace\x18\x02 \x01(\tR\tnamespace\"v\n" +
	"\x1dSnapshotVirtualMachineRequest\x12\x12\n" +
	"\x04name\x18\x01 \x01(\tR\x04name\x12\x1c\n" +
	"\tnamespace\x18\x02 \x01(\tR\tnamespace\x12#\n" +
	"\rsnapshot_name\x18\x03 \x01(\tR\fsnapshotName\"\xb4\x01\n" +
	"\x1aCloneVirtualMachineRequest\x12\x1f\n" +
	"\vtarget_name\x18\x01 \x01(\tR\n" +
	"targetName\x12)\n" +
	"\x10target_namespace\x18\x02 \x01(\tR\x0ftargetNamespace\x12\x1f\n" +
	"\vsource_name\x18\x03 \x01(\tR\n" +
	"sourceName\x12)\n" +
	"\x10source_namespace\x18\x04 \x01(\tR\x0fsourceNamespace\"u\n" +
	"\x1cRestoreVirtualMachineRequest\x12\x12\n" +
	"\x04name\x18\x01 \x01(\tR\x04name\x12\x1c\n" +
	"\tnamespace\x18\x02 \x01(\tR\tnamespace\x12#\n" +
	"\rsnapshot_name\x18\x03 \x01(\tR\fsnapshotName\"q\n" +
	"\x1cMigrateVirtualMachineRequest\x12\x12\n" +
	"\x04name\x18\x01 \x01(\tR\x04name\x12\x1c\n" +
	"\tnamespace\x18\x02 \x01(\tR\tnamespace\x12\x1f\n" +
	"\vtarget_node\x18\x03 \x01(\tR\n" +
	"targetNode\"^\n" +
	"\x17CreateDataVolumeRequest\x12C\n" +
	"\vdata_volume\x18\x01 \x01(\v2\".otterscale.kubevirt.v1.DataVolumeR\n" +
	"dataVolume\"6\n" +
	"\x16ListDataVolumesRequest\x12\x1c\n" +
	"\tnamespace\x18\x01 \x01(\tR\tnamespace\"S\n" +
	"\x17ListDataVolumesResponse\x128\n" +
	"\x05items\x18\x01 \x03(\v2\".otterscale.kubevirt.v1.DataVolumeR\x05items\"H\n" +
	"\x14GetDataVolumeRequest\x12\x12\n" +
	"\x04name\x18\x01 \x01(\tR\x04name\x12\x1c\n" +
	"\tnamespace\x18\x02 \x01(\tR\tnamespace\"K\n" +
	"\x17DeleteDataVolumeRequest\x12\x12\n" +
	"\x04name\x18\x01 \x01(\tR\x04name\x12\x1c\n" +
	"\tnamespace\x18\x02 \x01(\tR\tnamespace\"j\n" +
	"\x17ExtendDataVolumeRequest\x12\x12\n" +
	"\x04name\x18\x01 \x01(\tR\x04name\x12\x1c\n" +
	"\tnamespace\x18\x02 \x01(\tR\tnamespace\x12\x1d\n" +
	"\n" +
	"size_bytes\x18\x03 \x01(\x03R\tsizeBytes\"Q\n" +
	"\x14CreateNetworkRequest\x129\n" +
	"\anetwork\x18\x01 \x01(\v2\x1f.otterscale.kubevirt.v1.NetworkR\anetwork\"3\n" +
	"\x13ListNetworksRequest\x12\x1c\n" +
	"\tnamespace\x18\x01 \x01(\tR\tnamespace\"M\n" +
	"\x14ListNetworksResponse\x125\n" +
	"\x05items\x18\x01 \x03(\v2\x1f.otterscale.kubevirt.v1.NetworkR\x05items\"E\n" +
	"\x11GetNetworkRequest\x12\x12\n" +
	"\x04name\x18\x01 \x01(\tR\x04name\x12\x1c\n" +
	"\tnamespace\x18\x02 \x01(\tR\tnamespace\"Q\n" +
	"\x14UpdateNetworkRequest\x129\n" +
	"\anetwork\x18\x01 \x01(\v2\x1f.otterscale.kubevirt.v1.NetworkR\anetwork\"H\n" +
	"\x14DeleteNetworkRequest\x12\x12\n" +
	"\x04name\x18\x01 \x01(\tR\x04name\x12\x1c\n" +
	"\tnamespace\x18\x02 \x01(\tR\tnamespace\"M\n" +
	"\x13CreateFlavorRequest\x126\n" +
	"\x06flavor\x18\x01 \x01(\v2\x1e.otterscale.kubevirt.v1.FlavorR\x06flavor\"2\n" +
	"\x12ListFlavorsRequest\x12\x1c\n" +
	"\tnamespace\x18\x01 \x01(\tR\tnamespace\"K\n" +
	"\x13ListFlavorsResponse\x124\n" +
	"\x05items\x18\x01 \x03(\v2\x1e.otterscale.kubevirt.v1.FlavorR\x05items\"D\n" +
	"\x10GetFlavorRequest\x12\x12\n" +
	"\x04name\x18\x01 \x01(\tR\x04name\x12\x1c\n" +
	"\tnamespace\x18\x02 \x01(\tR\tnamespace\"G\n" +
	"\x13DeleteFlavorRequest\x12\x12\n" +
	"\x04name\x18\x01 \x01(\tR\x04name\x12\x1c\n" +
	"\tnamespace\x18\x02 \x01(\tR\tnamespace2\xbe\x15\n" +
	"\x0fKubeVirtService\x12~\n" +
	"\x13ListVirtualMachines\x122.otterscale.kubevirt.v1.ListVirtualMachinesRequest\x1a3.otterscale.kubevirt.v1.ListVirtualMachinesResponse\x12m\n" +
	"\x11GetVirtualMachine\x120.otterscale.kubevirt.v1.GetVirtualMachineRequest\x1a&.otterscale.kubevirt.v1.VirtualMachine\x12s\n" +
	"\x14CreateVirtualMachine\x123.otterscale.kubevirt.v1.CreateVirtualMachineRequest\x1a&.otterscale.kubevirt.v1.VirtualMachine\x12s\n" +
	"\x14UpdateVirtualMachine\x123.otterscale.kubevirt.v1.UpdateVirtualMachineRequest\x1a&.otterscale.kubevirt.v1.VirtualMachine\x12c\n" +
	"\x14DeleteVirtualMachine\x123.otterscale.kubevirt.v1.DeleteVirtualMachineRequest\x1a\x16.google.protobuf.Empty\x12a\n" +
	"\x13StartVirtualMachine\x122.otterscale.kubevirt.v1.StartVirtualMachineRequest\x1a\x16.google.protobuf.Empty\x12_\n" +
	"\x12StopVirtualMachine\x121.otterscale.kubevirt.v1.StopVirtualMachineRequest\x1a\x16.google.protobuf.Empty\x12a\n" +
	"\x13PauseVirtualMachine\x122.otterscale.kubevirt.v1.PauseVirtualMachineRequest\x1a\x16.google.protobuf.Empty\x12e\n" +
	"\x15UnpauseVirtualMachine\x124.otterscale.kubevirt.v1.UnpauseVirtualMachineRequest\x1a\x16.google.protobuf.Empty\x12a\n" +
	"\x13CloneVirtualMachine\x122.otterscale.kubevirt.v1.CloneVirtualMachineRequest\x1a\x16.google.protobuf.Empty\x12g\n" +
	"\x16SnapshotVirtualMachine\x125.otterscale.kubevirt.v1.SnapshotVirtualMachineRequest\x1a\x16.google.protobuf.Empty\x12e\n" +
	"\x15RestoreVirtualMachine\x124.otterscale.kubevirt.v1.RestoreVirtualMachineRequest\x1a\x16.google.protobuf.Empty\x12e\n" +
	"\x15MigrateVirtualMachine\x124.otterscale.kubevirt.v1.MigrateVirtualMachineRequest\x1a\x16.google.protobuf.Empty\x12g\n" +
	"\x10CreateDataVolume\x12/.otterscale.kubevirt.v1.CreateDataVolumeRequest\x1a\".otterscale.kubevirt.v1.DataVolume\x12a\n" +
	"\rGetDataVolume\x12,.otterscale.kubevirt.v1.GetDataVolumeRequest\x1a\".otterscale.kubevirt.v1.DataVolume\x12r\n" +
	"\x0fListDataVolumes\x12..otterscale.kubevirt.v1.ListDataVolumesRequest\x1a/.otterscale.kubevirt.v1.ListDataVolumesResponse\x12[\n" +
	"\x10DeleteDataVolume\x12/.otterscale.kubevirt.v1.DeleteDataVolumeRequest\x1a\x16.google.protobuf.Empty\x12[\n" +
	"\x10ExtendDataVolume\x12/.otterscale.kubevirt.v1.ExtendDataVolumeRequest\x1a\x16.google.protobuf.Empty\x12^\n" +
	"\rCreateNetwork\x12,.otterscale.kubevirt.v1.CreateNetworkRequest\x1a\x1f.otterscale.kubevirt.v1.Network\x12X\n" +
	"\n" +
	"GetNetwork\x12).otterscale.kubevirt.v1.GetNetworkRequest\x1a\x1f.otterscale.kubevirt.v1.Network\x12i\n" +
	"\fListNetworks\x12+.otterscale.kubevirt.v1.ListNetworksRequest\x1a,.otterscale.kubevirt.v1.ListNetworksResponse\x12^\n" +
	"\rUpdateNetwork\x12,.otterscale.kubevirt.v1.UpdateNetworkRequest\x1a\x1f.otterscale.kubevirt.v1.Network\x12U\n" +
	"\rDeleteNetwork\x12,.otterscale.kubevirt.v1.DeleteNetworkRequest\x1a\x16.google.protobuf.Empty\x12[\n" +
	"\fCreateFlavor\x12+.otterscale.kubevirt.v1.CreateFlavorRequest\x1a\x1e.otterscale.kubevirt.v1.Flavor\x12U\n" +
	"\tGetFlavor\x12(.otterscale.kubevirt.v1.GetFlavorRequest\x1a\x1e.otterscale.kubevirt.v1.Flavor\x12f\n" +
	"\vListFlavors\x12*.otterscale.kubevirt.v1.ListFlavorsRequest\x1a+.otterscale.kubevirt.v1.ListFlavorsResponse\x12S\n" +
	"\fDeleteFlavor\x12+.otterscale.kubevirt.v1.DeleteFlavorRequest\x1a\x16.google.protobuf.EmptyB2Z0github.com/openhdc/otterscale/api/kubevirt/v1;pbb\beditionsp\xe8\a"

var file_api_kubevirt_v1_kubevirt_proto_enumTypes = make([]protoimpl.EnumInfo, 2)
var file_api_kubevirt_v1_kubevirt_proto_msgTypes = make([]protoimpl.MessageInfo, 42)
var file_api_kubevirt_v1_kubevirt_proto_goTypes = []any{
	(VirtualMachine_VirtualMachineStatus)(0),                      // 0: otterscale.kubevirt.v1.VirtualMachine.VirtualMachineStatus
	(VirtualMachine_Operation_OperationResult_OperationStatus)(0), // 1: otterscale.kubevirt.v1.VirtualMachine.Operation.OperationResult.OperationStatus
	(*Metadata)(nil),                                 // 2: otterscale.kubevirt.v1.Metadata
	(*VirtualMachine)(nil),                           // 3: otterscale.kubevirt.v1.VirtualMachine
	(*VirtualMachineSpec)(nil),                       // 4: otterscale.kubevirt.v1.VirtualMachineSpec
	(*Flavor)(nil),                                   // 5: otterscale.kubevirt.v1.Flavor
	(*DataVolume)(nil),                               // 6: otterscale.kubevirt.v1.DataVolume
	(*Network)(nil),                                  // 7: otterscale.kubevirt.v1.Network
	(*Device)(nil),                                   // 8: otterscale.kubevirt.v1.Device
	(*ListVirtualMachinesRequest)(nil),               // 9: otterscale.kubevirt.v1.ListVirtualMachinesRequest
	(*ListVirtualMachinesResponse)(nil),              // 10: otterscale.kubevirt.v1.ListVirtualMachinesResponse
	(*GetVirtualMachineRequest)(nil),                 // 11: otterscale.kubevirt.v1.GetVirtualMachineRequest
	(*CreateVirtualMachineRequest)(nil),              // 12: otterscale.kubevirt.v1.CreateVirtualMachineRequest
	(*UpdateVirtualMachineRequest)(nil),              // 13: otterscale.kubevirt.v1.UpdateVirtualMachineRequest
	(*DeleteVirtualMachineRequest)(nil),              // 14: otterscale.kubevirt.v1.DeleteVirtualMachineRequest
	(*StartVirtualMachineRequest)(nil),               // 15: otterscale.kubevirt.v1.StartVirtualMachineRequest
	(*StopVirtualMachineRequest)(nil),                // 16: otterscale.kubevirt.v1.StopVirtualMachineRequest
	(*PauseVirtualMachineRequest)(nil),               // 17: otterscale.kubevirt.v1.PauseVirtualMachineRequest
	(*UnpauseVirtualMachineRequest)(nil),             // 18: otterscale.kubevirt.v1.UnpauseVirtualMachineRequest
	(*SnapshotVirtualMachineRequest)(nil),            // 19: otterscale.kubevirt.v1.SnapshotVirtualMachineRequest
	(*CloneVirtualMachineRequest)(nil),               // 20: otterscale.kubevirt.v1.CloneVirtualMachineRequest
	(*RestoreVirtualMachineRequest)(nil),             // 21: otterscale.kubevirt.v1.RestoreVirtualMachineRequest
	(*MigrateVirtualMachineRequest)(nil),             // 22: otterscale.kubevirt.v1.MigrateVirtualMachineRequest
	(*CreateDataVolumeRequest)(nil),                  // 23: otterscale.kubevirt.v1.CreateDataVolumeRequest
	(*ListDataVolumesRequest)(nil),                   // 24: otterscale.kubevirt.v1.ListDataVolumesRequest
	(*ListDataVolumesResponse)(nil),                  // 25: otterscale.kubevirt.v1.ListDataVolumesResponse
	(*GetDataVolumeRequest)(nil),                     // 26: otterscale.kubevirt.v1.GetDataVolumeRequest
	(*DeleteDataVolumeRequest)(nil),                  // 27: otterscale.kubevirt.v1.DeleteDataVolumeRequest
	(*ExtendDataVolumeRequest)(nil),                  // 28: otterscale.kubevirt.v1.ExtendDataVolumeRequest
	(*CreateNetworkRequest)(nil),                     // 29: otterscale.kubevirt.v1.CreateNetworkRequest
	(*ListNetworksRequest)(nil),                      // 30: otterscale.kubevirt.v1.ListNetworksRequest
	(*ListNetworksResponse)(nil),                     // 31: otterscale.kubevirt.v1.ListNetworksResponse
	(*GetNetworkRequest)(nil),                        // 32: otterscale.kubevirt.v1.GetNetworkRequest
	(*UpdateNetworkRequest)(nil),                     // 33: otterscale.kubevirt.v1.UpdateNetworkRequest
	(*DeleteNetworkRequest)(nil),                     // 34: otterscale.kubevirt.v1.DeleteNetworkRequest
	(*CreateFlavorRequest)(nil),                      // 35: otterscale.kubevirt.v1.CreateFlavorRequest
	(*ListFlavorsRequest)(nil),                       // 36: otterscale.kubevirt.v1.ListFlavorsRequest
	(*ListFlavorsResponse)(nil),                      // 37: otterscale.kubevirt.v1.ListFlavorsResponse
	(*GetFlavorRequest)(nil),                         // 38: otterscale.kubevirt.v1.GetFlavorRequest
	(*DeleteFlavorRequest)(nil),                      // 39: otterscale.kubevirt.v1.DeleteFlavorRequest
	nil,                                              // 40: otterscale.kubevirt.v1.Metadata.LabelsEntry
	nil,                                              // 41: otterscale.kubevirt.v1.Metadata.AnnotationsEntry
	(*VirtualMachine_Operation)(nil),                 // 42: otterscale.kubevirt.v1.VirtualMachine.Operation
	(*VirtualMachine_Operation_OperationResult)(nil), // 43: otterscale.kubevirt.v1.VirtualMachine.Operation.OperationResult
	(*timestamppb.Timestamp)(nil),                    // 44: google.protobuf.Timestamp
	(*emptypb.Empty)(nil),                            // 45: google.protobuf.Empty
}
var file_api_kubevirt_v1_kubevirt_proto_depIdxs = []int32{
	40, // 0: otterscale.kubevirt.v1.Metadata.labels:type_name -> otterscale.kubevirt.v1.Metadata.LabelsEntry
	41, // 1: otterscale.kubevirt.v1.Metadata.annotations:type_name -> otterscale.kubevirt.v1.Metadata.AnnotationsEntry
	44, // 2: otterscale.kubevirt.v1.Metadata.created_at:type_name -> google.protobuf.Timestamp
	44, // 3: otterscale.kubevirt.v1.Metadata.updated_at:type_name -> google.protobuf.Timestamp
	2,  // 4: otterscale.kubevirt.v1.VirtualMachine.metadata:type_name -> otterscale.kubevirt.v1.Metadata
	4,  // 5: otterscale.kubevirt.v1.VirtualMachine.spec:type_name -> otterscale.kubevirt.v1.VirtualMachineSpec
	0,  // 6: otterscale.kubevirt.v1.VirtualMachine.status:type_name -> otterscale.kubevirt.v1.VirtualMachine.VirtualMachineStatus
	42, // 7: otterscale.kubevirt.v1.VirtualMachine.snapshots:type_name -> otterscale.kubevirt.v1.VirtualMachine.Operation
	42, // 8: otterscale.kubevirt.v1.VirtualMachine.clones:type_name -> otterscale.kubevirt.v1.VirtualMachine.Operation
	42, // 9: otterscale.kubevirt.v1.VirtualMachine.migrates:type_name -> otterscale.kubevirt.v1.VirtualMachine.Operation
	42, // 10: otterscale.kubevirt.v1.VirtualMachine.restores:type_name -> otterscale.kubevirt.v1.VirtualMachine.Operation
	8,  // 11: otterscale.kubevirt.v1.VirtualMachineSpec.devices:type_name -> otterscale.kubevirt.v1.Device
	2,  // 12: otterscale.kubevirt.v1.Flavor.metadata:type_name -> otterscale.kubevirt.v1.Metadata
	2,  // 13: otterscale.kubevirt.v1.DataVolume.metadata:type_name -> otterscale.kubevirt.v1.Metadata
	2,  // 14: otterscale.kubevirt.v1.Network.metadata:type_name -> otterscale.kubevirt.v1.Metadata
	3,  // 15: otterscale.kubevirt.v1.ListVirtualMachinesResponse.items:type_name -> otterscale.kubevirt.v1.VirtualMachine
	2,  // 16: otterscale.kubevirt.v1.CreateVirtualMachineRequest.metadata:type_name -> otterscale.kubevirt.v1.Metadata
	4,  // 17: otterscale.kubevirt.v1.CreateVirtualMachineRequest.spec:type_name -> otterscale.kubevirt.v1.VirtualMachineSpec
	2,  // 18: otterscale.kubevirt.v1.UpdateVirtualMachineRequest.metadata:type_name -> otterscale.kubevirt.v1.Metadata
	4,  // 19: otterscale.kubevirt.v1.UpdateVirtualMachineRequest.spec:type_name -> otterscale.kubevirt.v1.VirtualMachineSpec
	6,  // 20: otterscale.kubevirt.v1.CreateDataVolumeRequest.data_volume:type_name -> otterscale.kubevirt.v1.DataVolume
	6,  // 21: otterscale.kubevirt.v1.ListDataVolumesResponse.items:type_name -> otterscale.kubevirt.v1.DataVolume
	7,  // 22: otterscale.kubevirt.v1.CreateNetworkRequest.network:type_name -> otterscale.kubevirt.v1.Network
	7,  // 23: otterscale.kubevirt.v1.ListNetworksResponse.items:type_name -> otterscale.kubevirt.v1.Network
	7,  // 24: otterscale.kubevirt.v1.UpdateNetworkRequest.network:type_name -> otterscale.kubevirt.v1.Network
	5,  // 25: otterscale.kubevirt.v1.CreateFlavorRequest.flavor:type_name -> otterscale.kubevirt.v1.Flavor
	5,  // 26: otterscale.kubevirt.v1.ListFlavorsResponse.items:type_name -> otterscale.kubevirt.v1.Flavor
	44, // 27: otterscale.kubevirt.v1.VirtualMachine.Operation.create_time:type_name -> google.protobuf.Timestamp
	43, // 28: otterscale.kubevirt.v1.VirtualMachine.Operation.status:type_name -> otterscale.kubevirt.v1.VirtualMachine.Operation.OperationResult
	1,  // 29: otterscale.kubevirt.v1.VirtualMachine.Operation.OperationResult.status:type_name -> otterscale.kubevirt.v1.VirtualMachine.Operation.OperationResult.OperationStatus
	9,  // 30: otterscale.kubevirt.v1.KubeVirtService.ListVirtualMachines:input_type -> otterscale.kubevirt.v1.ListVirtualMachinesRequest
	11, // 31: otterscale.kubevirt.v1.KubeVirtService.GetVirtualMachine:input_type -> otterscale.kubevirt.v1.GetVirtualMachineRequest
	12, // 32: otterscale.kubevirt.v1.KubeVirtService.CreateVirtualMachine:input_type -> otterscale.kubevirt.v1.CreateVirtualMachineRequest
	13, // 33: otterscale.kubevirt.v1.KubeVirtService.UpdateVirtualMachine:input_type -> otterscale.kubevirt.v1.UpdateVirtualMachineRequest
	14, // 34: otterscale.kubevirt.v1.KubeVirtService.DeleteVirtualMachine:input_type -> otterscale.kubevirt.v1.DeleteVirtualMachineRequest
	15, // 35: otterscale.kubevirt.v1.KubeVirtService.StartVirtualMachine:input_type -> otterscale.kubevirt.v1.StartVirtualMachineRequest
	16, // 36: otterscale.kubevirt.v1.KubeVirtService.StopVirtualMachine:input_type -> otterscale.kubevirt.v1.StopVirtualMachineRequest
	17, // 37: otterscale.kubevirt.v1.KubeVirtService.PauseVirtualMachine:input_type -> otterscale.kubevirt.v1.PauseVirtualMachineRequest
	18, // 38: otterscale.kubevirt.v1.KubeVirtService.UnpauseVirtualMachine:input_type -> otterscale.kubevirt.v1.UnpauseVirtualMachineRequest
	20, // 39: otterscale.kubevirt.v1.KubeVirtService.CloneVirtualMachine:input_type -> otterscale.kubevirt.v1.CloneVirtualMachineRequest
	19, // 40: otterscale.kubevirt.v1.KubeVirtService.SnapshotVirtualMachine:input_type -> otterscale.kubevirt.v1.SnapshotVirtualMachineRequest
	21, // 41: otterscale.kubevirt.v1.KubeVirtService.RestoreVirtualMachine:input_type -> otterscale.kubevirt.v1.RestoreVirtualMachineRequest
	22, // 42: otterscale.kubevirt.v1.KubeVirtService.MigrateVirtualMachine:input_type -> otterscale.kubevirt.v1.MigrateVirtualMachineRequest
	23, // 43: otterscale.kubevirt.v1.KubeVirtService.CreateDataVolume:input_type -> otterscale.kubevirt.v1.CreateDataVolumeRequest
	26, // 44: otterscale.kubevirt.v1.KubeVirtService.GetDataVolume:input_type -> otterscale.kubevirt.v1.GetDataVolumeRequest
	24, // 45: otterscale.kubevirt.v1.KubeVirtService.ListDataVolumes:input_type -> otterscale.kubevirt.v1.ListDataVolumesRequest
	27, // 46: otterscale.kubevirt.v1.KubeVirtService.DeleteDataVolume:input_type -> otterscale.kubevirt.v1.DeleteDataVolumeRequest
	28, // 47: otterscale.kubevirt.v1.KubeVirtService.ExtendDataVolume:input_type -> otterscale.kubevirt.v1.ExtendDataVolumeRequest
	29, // 48: otterscale.kubevirt.v1.KubeVirtService.CreateNetwork:input_type -> otterscale.kubevirt.v1.CreateNetworkRequest
	32, // 49: otterscale.kubevirt.v1.KubeVirtService.GetNetwork:input_type -> otterscale.kubevirt.v1.GetNetworkRequest
	30, // 50: otterscale.kubevirt.v1.KubeVirtService.ListNetworks:input_type -> otterscale.kubevirt.v1.ListNetworksRequest
	33, // 51: otterscale.kubevirt.v1.KubeVirtService.UpdateNetwork:input_type -> otterscale.kubevirt.v1.UpdateNetworkRequest
	34, // 52: otterscale.kubevirt.v1.KubeVirtService.DeleteNetwork:input_type -> otterscale.kubevirt.v1.DeleteNetworkRequest
	35, // 53: otterscale.kubevirt.v1.KubeVirtService.CreateFlavor:input_type -> otterscale.kubevirt.v1.CreateFlavorRequest
	38, // 54: otterscale.kubevirt.v1.KubeVirtService.GetFlavor:input_type -> otterscale.kubevirt.v1.GetFlavorRequest
	36, // 55: otterscale.kubevirt.v1.KubeVirtService.ListFlavors:input_type -> otterscale.kubevirt.v1.ListFlavorsRequest
	39, // 56: otterscale.kubevirt.v1.KubeVirtService.DeleteFlavor:input_type -> otterscale.kubevirt.v1.DeleteFlavorRequest
	10, // 57: otterscale.kubevirt.v1.KubeVirtService.ListVirtualMachines:output_type -> otterscale.kubevirt.v1.ListVirtualMachinesResponse
	3,  // 58: otterscale.kubevirt.v1.KubeVirtService.GetVirtualMachine:output_type -> otterscale.kubevirt.v1.VirtualMachine
	3,  // 59: otterscale.kubevirt.v1.KubeVirtService.CreateVirtualMachine:output_type -> otterscale.kubevirt.v1.VirtualMachine
	3,  // 60: otterscale.kubevirt.v1.KubeVirtService.UpdateVirtualMachine:output_type -> otterscale.kubevirt.v1.VirtualMachine
	45, // 61: otterscale.kubevirt.v1.KubeVirtService.DeleteVirtualMachine:output_type -> google.protobuf.Empty
	45, // 62: otterscale.kubevirt.v1.KubeVirtService.StartVirtualMachine:output_type -> google.protobuf.Empty
	45, // 63: otterscale.kubevirt.v1.KubeVirtService.StopVirtualMachine:output_type -> google.protobuf.Empty
	45, // 64: otterscale.kubevirt.v1.KubeVirtService.PauseVirtualMachine:output_type -> google.protobuf.Empty
	45, // 65: otterscale.kubevirt.v1.KubeVirtService.UnpauseVirtualMachine:output_type -> google.protobuf.Empty
	45, // 66: otterscale.kubevirt.v1.KubeVirtService.CloneVirtualMachine:output_type -> google.protobuf.Empty
	45, // 67: otterscale.kubevirt.v1.KubeVirtService.SnapshotVirtualMachine:output_type -> google.protobuf.Empty
	45, // 68: otterscale.kubevirt.v1.KubeVirtService.RestoreVirtualMachine:output_type -> google.protobuf.Empty
	45, // 69: otterscale.kubevirt.v1.KubeVirtService.MigrateVirtualMachine:output_type -> google.protobuf.Empty
	6,  // 70: otterscale.kubevirt.v1.KubeVirtService.CreateDataVolume:output_type -> otterscale.kubevirt.v1.DataVolume
	6,  // 71: otterscale.kubevirt.v1.KubeVirtService.GetDataVolume:output_type -> otterscale.kubevirt.v1.DataVolume
	25, // 72: otterscale.kubevirt.v1.KubeVirtService.ListDataVolumes:output_type -> otterscale.kubevirt.v1.ListDataVolumesResponse
	45, // 73: otterscale.kubevirt.v1.KubeVirtService.DeleteDataVolume:output_type -> google.protobuf.Empty
	45, // 74: otterscale.kubevirt.v1.KubeVirtService.ExtendDataVolume:output_type -> google.protobuf.Empty
	7,  // 75: otterscale.kubevirt.v1.KubeVirtService.CreateNetwork:output_type -> otterscale.kubevirt.v1.Network
	7,  // 76: otterscale.kubevirt.v1.KubeVirtService.GetNetwork:output_type -> otterscale.kubevirt.v1.Network
	31, // 77: otterscale.kubevirt.v1.KubeVirtService.ListNetworks:output_type -> otterscale.kubevirt.v1.ListNetworksResponse
	7,  // 78: otterscale.kubevirt.v1.KubeVirtService.UpdateNetwork:output_type -> otterscale.kubevirt.v1.Network
	45, // 79: otterscale.kubevirt.v1.KubeVirtService.DeleteNetwork:output_type -> google.protobuf.Empty
	5,  // 80: otterscale.kubevirt.v1.KubeVirtService.CreateFlavor:output_type -> otterscale.kubevirt.v1.Flavor
	5,  // 81: otterscale.kubevirt.v1.KubeVirtService.GetFlavor:output_type -> otterscale.kubevirt.v1.Flavor
	37, // 82: otterscale.kubevirt.v1.KubeVirtService.ListFlavors:output_type -> otterscale.kubevirt.v1.ListFlavorsResponse
	45, // 83: otterscale.kubevirt.v1.KubeVirtService.DeleteFlavor:output_type -> google.protobuf.Empty
	57, // [57:84] is the sub-list for method output_type
	30, // [30:57] is the sub-list for method input_type
	30, // [30:30] is the sub-list for extension type_name
	30, // [30:30] is the sub-list for extension extendee
	0,  // [0:30] is the sub-list for field type_name
}

func init() { file_api_kubevirt_v1_kubevirt_proto_init() }
func file_api_kubevirt_v1_kubevirt_proto_init() {
	if File_api_kubevirt_v1_kubevirt_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_api_kubevirt_v1_kubevirt_proto_rawDesc), len(file_api_kubevirt_v1_kubevirt_proto_rawDesc)),
			NumEnums:      2,
			NumMessages:   42,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_api_kubevirt_v1_kubevirt_proto_goTypes,
		DependencyIndexes: file_api_kubevirt_v1_kubevirt_proto_depIdxs,
		EnumInfos:         file_api_kubevirt_v1_kubevirt_proto_enumTypes,
		MessageInfos:      file_api_kubevirt_v1_kubevirt_proto_msgTypes,
	}.Build()
	File_api_kubevirt_v1_kubevirt_proto = out.File
	file_api_kubevirt_v1_kubevirt_proto_goTypes = nil
	file_api_kubevirt_v1_kubevirt_proto_depIdxs = nil
}
