// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.8
// 	protoc        v6.32.0
// source: api/kubevirt/v1/kubevirt.proto

package pb

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	emptypb "google.golang.org/protobuf/types/known/emptypb"
	timestamppb "google.golang.org/protobuf/types/known/timestamppb"
	reflect "reflect"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type VirtualMachineServiceSpec_Type int32

const (
	VirtualMachineServiceSpec_TYPE_UNSPECIFIED VirtualMachineServiceSpec_Type = 0
	VirtualMachineServiceSpec_NODE_PORT        VirtualMachineServiceSpec_Type = 1
	VirtualMachineServiceSpec_LOAD_BALANCER    VirtualMachineServiceSpec_Type = 2
)

// Enum value maps for VirtualMachineServiceSpec_Type.
var (
	VirtualMachineServiceSpec_Type_name = map[int32]string{
		0: "TYPE_UNSPECIFIED",
		1: "NODE_PORT",
		2: "LOAD_BALANCER",
	}
	VirtualMachineServiceSpec_Type_value = map[string]int32{
		"TYPE_UNSPECIFIED": 0,
		"NODE_PORT":        1,
		"LOAD_BALANCER":    2,
	}
)

func (x VirtualMachineServiceSpec_Type) Enum() *VirtualMachineServiceSpec_Type {
	p := new(VirtualMachineServiceSpec_Type)
	*p = x
	return p
}

func (x VirtualMachineServiceSpec_Type) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (VirtualMachineServiceSpec_Type) Descriptor() protoreflect.EnumDescriptor {
	return file_api_kubevirt_v1_kubevirt_proto_enumTypes[0].Descriptor()
}

func (VirtualMachineServiceSpec_Type) Type() protoreflect.EnumType {
	return &file_api_kubevirt_v1_kubevirt_proto_enumTypes[0]
}

func (x VirtualMachineServiceSpec_Type) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

type ServicePort_Protocol int32

const (
	ServicePort_PROTOCOL_UNSPECIFIED ServicePort_Protocol = 0
	ServicePort_TCP                  ServicePort_Protocol = 1
	ServicePort_UDP                  ServicePort_Protocol = 2
)

// Enum value maps for ServicePort_Protocol.
var (
	ServicePort_Protocol_name = map[int32]string{
		0: "PROTOCOL_UNSPECIFIED",
		1: "TCP",
		2: "UDP",
	}
	ServicePort_Protocol_value = map[string]int32{
		"PROTOCOL_UNSPECIFIED": 0,
		"TCP":                  1,
		"UDP":                  2,
	}
)

func (x ServicePort_Protocol) Enum() *ServicePort_Protocol {
	p := new(ServicePort_Protocol)
	*p = x
	return p
}

func (x ServicePort_Protocol) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (ServicePort_Protocol) Descriptor() protoreflect.EnumDescriptor {
	return file_api_kubevirt_v1_kubevirt_proto_enumTypes[1].Descriptor()
}

func (ServicePort_Protocol) Type() protoreflect.EnumType {
	return &file_api_kubevirt_v1_kubevirt_proto_enumTypes[1]
}

func (x ServicePort_Protocol) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

type VirtualMachineDiskType int32

const (
	VirtualMachineDisk_UNSPECIFIED           VirtualMachineDiskType = 0
	VirtualMachineDisk_DATAVOLUME            VirtualMachineDiskType = 1
	VirtualMachineDisk_PERSISTENTVOLUMECLAIM VirtualMachineDiskType = 2
	VirtualMachineDisk_CONFIGMAP             VirtualMachineDiskType = 3
	VirtualMachineDisk_SECRET                VirtualMachineDiskType = 4
	VirtualMachineDisk_CLOUDINITNOCLOUD      VirtualMachineDiskType = 5
)

// Enum value maps for VirtualMachineDiskType.
var (
	VirtualMachineDiskType_name = map[int32]string{
		0: "UNSPECIFIED",
		1: "DATAVOLUME",
		2: "PERSISTENTVOLUMECLAIM",
		3: "CONFIGMAP",
		4: "SECRET",
		5: "CLOUDINITNOCLOUD",
	}
	VirtualMachineDiskType_value = map[string]int32{
		"UNSPECIFIED":           0,
		"DATAVOLUME":            1,
		"PERSISTENTVOLUMECLAIM": 2,
		"CONFIGMAP":             3,
		"SECRET":                4,
		"CLOUDINITNOCLOUD":      5,
	}
)

func (x VirtualMachineDiskType) Enum() *VirtualMachineDiskType {
	p := new(VirtualMachineDiskType)
	*p = x
	return p
}

func (x VirtualMachineDiskType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (VirtualMachineDiskType) Descriptor() protoreflect.EnumDescriptor {
	return file_api_kubevirt_v1_kubevirt_proto_enumTypes[2].Descriptor()
}

func (VirtualMachineDiskType) Type() protoreflect.EnumType {
	return &file_api_kubevirt_v1_kubevirt_proto_enumTypes[2]
}

func (x VirtualMachineDiskType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Common messages
type Metadata struct {
	state                  protoimpl.MessageState `protogen:"opaque.v1"`
	xxx_hidden_Name        *string                `protobuf:"bytes,1,opt,name=name"`
	xxx_hidden_Namespace   *string                `protobuf:"bytes,2,opt,name=namespace"`
	xxx_hidden_Labels      map[string]string      `protobuf:"bytes,3,rep,name=labels" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	xxx_hidden_CreatedAt   *timestamppb.Timestamp `protobuf:"bytes,5,opt,name=created_at,json=createdAt"`
	xxx_hidden_UpdatedAt   *timestamppb.Timestamp `protobuf:"bytes,6,opt,name=updated_at,json=updatedAt"`
	XXX_raceDetectHookData protoimpl.RaceDetectHookData
	XXX_presence           [1]uint32
	unknownFields          protoimpl.UnknownFields
	sizeCache              protoimpl.SizeCache
}

func (x *Metadata) Reset() {
	*x = Metadata{}
	mi := &file_api_kubevirt_v1_kubevirt_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Metadata) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Metadata) ProtoMessage() {}

func (x *Metadata) ProtoReflect() protoreflect.Message {
	mi := &file_api_kubevirt_v1_kubevirt_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *Metadata) GetName() string {
	if x != nil {
		if x.xxx_hidden_Name != nil {
			return *x.xxx_hidden_Name
		}
		return ""
	}
	return ""
}

func (x *Metadata) GetNamespace() string {
	if x != nil {
		if x.xxx_hidden_Namespace != nil {
			return *x.xxx_hidden_Namespace
		}
		return ""
	}
	return ""
}

func (x *Metadata) GetLabels() map[string]string {
	if x != nil {
		return x.xxx_hidden_Labels
	}
	return nil
}

func (x *Metadata) GetCreatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.xxx_hidden_CreatedAt
	}
	return nil
}

func (x *Metadata) GetUpdatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.xxx_hidden_UpdatedAt
	}
	return nil
}

func (x *Metadata) SetName(v string) {
	x.xxx_hidden_Name = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 0, 5)
}

func (x *Metadata) SetNamespace(v string) {
	x.xxx_hidden_Namespace = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 1, 5)
}

func (x *Metadata) SetLabels(v map[string]string) {
	x.xxx_hidden_Labels = v
}

func (x *Metadata) SetCreatedAt(v *timestamppb.Timestamp) {
	x.xxx_hidden_CreatedAt = v
}

func (x *Metadata) SetUpdatedAt(v *timestamppb.Timestamp) {
	x.xxx_hidden_UpdatedAt = v
}

func (x *Metadata) HasName() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 0)
}

func (x *Metadata) HasNamespace() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 1)
}

func (x *Metadata) HasCreatedAt() bool {
	if x == nil {
		return false
	}
	return x.xxx_hidden_CreatedAt != nil
}

func (x *Metadata) HasUpdatedAt() bool {
	if x == nil {
		return false
	}
	return x.xxx_hidden_UpdatedAt != nil
}

func (x *Metadata) ClearName() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 0)
	x.xxx_hidden_Name = nil
}

func (x *Metadata) ClearNamespace() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 1)
	x.xxx_hidden_Namespace = nil
}

func (x *Metadata) ClearCreatedAt() {
	x.xxx_hidden_CreatedAt = nil
}

func (x *Metadata) ClearUpdatedAt() {
	x.xxx_hidden_UpdatedAt = nil
}

type Metadata_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	Name      *string
	Namespace *string
	Labels    map[string]string
	CreatedAt *timestamppb.Timestamp
	UpdatedAt *timestamppb.Timestamp
}

func (b0 Metadata_builder) Build() *Metadata {
	m0 := &Metadata{}
	b, x := &b0, m0
	_, _ = b, x
	if b.Name != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 0, 5)
		x.xxx_hidden_Name = b.Name
	}
	if b.Namespace != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 1, 5)
		x.xxx_hidden_Namespace = b.Namespace
	}
	x.xxx_hidden_Labels = b.Labels
	x.xxx_hidden_CreatedAt = b.CreatedAt
	x.xxx_hidden_UpdatedAt = b.UpdatedAt
	return m0
}

// Virtual Machine messages
type VirtualMachine struct {
	state                    protoimpl.MessageState   `protogen:"opaque.v1"`
	xxx_hidden_Metadata      *Metadata                `protobuf:"bytes,1,opt,name=metadata"`
	xxx_hidden_NetworkName   *string                  `protobuf:"bytes,11,opt,name=network_name,json=networkName"`
	xxx_hidden_StartupScript *string                  `protobuf:"bytes,12,opt,name=startup_script,json=startupScript"`
	xxx_hidden_NodeName      *string                  `protobuf:"bytes,13,opt,name=node_name,json=nodeName"`
	xxx_hidden_Resoureces    *VirtualMachineResources `protobuf:"bytes,21,opt,name=resoureces"`
	xxx_hidden_Disks         *[]*VirtualMachineDisk   `protobuf:"bytes,22,rep,name=disks"`
	xxx_hidden_StatusPhase   *string                  `protobuf:"bytes,31,opt,name=status_phase,json=statusPhase"`
	XXX_raceDetectHookData   protoimpl.RaceDetectHookData
	XXX_presence             [1]uint32
	unknownFields            protoimpl.UnknownFields
	sizeCache                protoimpl.SizeCache
}

func (x *VirtualMachine) Reset() {
	*x = VirtualMachine{}
	mi := &file_api_kubevirt_v1_kubevirt_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *VirtualMachine) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*VirtualMachine) ProtoMessage() {}

func (x *VirtualMachine) ProtoReflect() protoreflect.Message {
	mi := &file_api_kubevirt_v1_kubevirt_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *VirtualMachine) GetMetadata() *Metadata {
	if x != nil {
		return x.xxx_hidden_Metadata
	}
	return nil
}

func (x *VirtualMachine) GetNetworkName() string {
	if x != nil {
		if x.xxx_hidden_NetworkName != nil {
			return *x.xxx_hidden_NetworkName
		}
		return ""
	}
	return ""
}

func (x *VirtualMachine) GetStartupScript() string {
	if x != nil {
		if x.xxx_hidden_StartupScript != nil {
			return *x.xxx_hidden_StartupScript
		}
		return ""
	}
	return ""
}

func (x *VirtualMachine) GetNodeName() string {
	if x != nil {
		if x.xxx_hidden_NodeName != nil {
			return *x.xxx_hidden_NodeName
		}
		return ""
	}
	return ""
}

func (x *VirtualMachine) GetResoureces() *VirtualMachineResources {
	if x != nil {
		return x.xxx_hidden_Resoureces
	}
	return nil
}

func (x *VirtualMachine) GetDisks() []*VirtualMachineDisk {
	if x != nil {
		if x.xxx_hidden_Disks != nil {
			return *x.xxx_hidden_Disks
		}
	}
	return nil
}

func (x *VirtualMachine) GetStatusPhase() string {
	if x != nil {
		if x.xxx_hidden_StatusPhase != nil {
			return *x.xxx_hidden_StatusPhase
		}
		return ""
	}
	return ""
}

func (x *VirtualMachine) SetMetadata(v *Metadata) {
	x.xxx_hidden_Metadata = v
}

func (x *VirtualMachine) SetNetworkName(v string) {
	x.xxx_hidden_NetworkName = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 1, 7)
}

func (x *VirtualMachine) SetStartupScript(v string) {
	x.xxx_hidden_StartupScript = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 2, 7)
}

func (x *VirtualMachine) SetNodeName(v string) {
	x.xxx_hidden_NodeName = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 3, 7)
}

func (x *VirtualMachine) SetResoureces(v *VirtualMachineResources) {
	x.xxx_hidden_Resoureces = v
}

func (x *VirtualMachine) SetDisks(v []*VirtualMachineDisk) {
	x.xxx_hidden_Disks = &v
}

func (x *VirtualMachine) SetStatusPhase(v string) {
	x.xxx_hidden_StatusPhase = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 6, 7)
}

func (x *VirtualMachine) HasMetadata() bool {
	if x == nil {
		return false
	}
	return x.xxx_hidden_Metadata != nil
}

func (x *VirtualMachine) HasNetworkName() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 1)
}

func (x *VirtualMachine) HasStartupScript() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 2)
}

func (x *VirtualMachine) HasNodeName() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 3)
}

func (x *VirtualMachine) HasResoureces() bool {
	if x == nil {
		return false
	}
	return x.xxx_hidden_Resoureces != nil
}

func (x *VirtualMachine) HasStatusPhase() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 6)
}

func (x *VirtualMachine) ClearMetadata() {
	x.xxx_hidden_Metadata = nil
}

func (x *VirtualMachine) ClearNetworkName() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 1)
	x.xxx_hidden_NetworkName = nil
}

func (x *VirtualMachine) ClearStartupScript() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 2)
	x.xxx_hidden_StartupScript = nil
}

func (x *VirtualMachine) ClearNodeName() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 3)
	x.xxx_hidden_NodeName = nil
}

func (x *VirtualMachine) ClearResoureces() {
	x.xxx_hidden_Resoureces = nil
}

func (x *VirtualMachine) ClearStatusPhase() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 6)
	x.xxx_hidden_StatusPhase = nil
}

type VirtualMachine_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	Metadata      *Metadata
	NetworkName   *string
	StartupScript *string
	NodeName      *string
	Resoureces    *VirtualMachineResources
	Disks         []*VirtualMachineDisk
	StatusPhase   *string
}

func (b0 VirtualMachine_builder) Build() *VirtualMachine {
	m0 := &VirtualMachine{}
	b, x := &b0, m0
	_, _ = b, x
	x.xxx_hidden_Metadata = b.Metadata
	if b.NetworkName != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 1, 7)
		x.xxx_hidden_NetworkName = b.NetworkName
	}
	if b.StartupScript != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 2, 7)
		x.xxx_hidden_StartupScript = b.StartupScript
	}
	if b.NodeName != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 3, 7)
		x.xxx_hidden_NodeName = b.NodeName
	}
	x.xxx_hidden_Resoureces = b.Resoureces
	x.xxx_hidden_Disks = &b.Disks
	if b.StatusPhase != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 6, 7)
		x.xxx_hidden_StatusPhase = b.StatusPhase
	}
	return m0
}

type VirtualMachineSnapshot struct {
	state                           protoimpl.MessageState `protogen:"opaque.v1"`
	xxx_hidden_Name                 *string                `protobuf:"bytes,1,opt,name=name"`
	xxx_hidden_Namespace            *string                `protobuf:"bytes,2,opt,name=namespace"`
	xxx_hidden_SourceName           *string                `protobuf:"bytes,3,opt,name=source_name,json=sourceName"`
	xxx_hidden_SourceNamespace      *string                `protobuf:"bytes,4,opt,name=source_namespace,json=sourceNamespace"`
	xxx_hidden_CreatedAt            *timestamppb.Timestamp `protobuf:"bytes,5,opt,name=created_at,json=createdAt"`
	xxx_hidden_Description          *string                `protobuf:"bytes,6,opt,name=description"`
	xxx_hidden_StatusPhase          *string                `protobuf:"bytes,11,opt,name=status_phase,json=statusPhase"`
	xxx_hidden_LastConditionMessage *string                `protobuf:"bytes,12,opt,name=last_condition_message,json=lastConditionMessage"`
	xxx_hidden_LastConditionReason  *string                `protobuf:"bytes,13,opt,name=last_condition_reason,json=lastConditionReason"`
	XXX_raceDetectHookData          protoimpl.RaceDetectHookData
	XXX_presence                    [1]uint32
	unknownFields                   protoimpl.UnknownFields
	sizeCache                       protoimpl.SizeCache
}

func (x *VirtualMachineSnapshot) Reset() {
	*x = VirtualMachineSnapshot{}
	mi := &file_api_kubevirt_v1_kubevirt_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *VirtualMachineSnapshot) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*VirtualMachineSnapshot) ProtoMessage() {}

func (x *VirtualMachineSnapshot) ProtoReflect() protoreflect.Message {
	mi := &file_api_kubevirt_v1_kubevirt_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *VirtualMachineSnapshot) GetName() string {
	if x != nil {
		if x.xxx_hidden_Name != nil {
			return *x.xxx_hidden_Name
		}
		return ""
	}
	return ""
}

func (x *VirtualMachineSnapshot) GetNamespace() string {
	if x != nil {
		if x.xxx_hidden_Namespace != nil {
			return *x.xxx_hidden_Namespace
		}
		return ""
	}
	return ""
}

func (x *VirtualMachineSnapshot) GetSourceName() string {
	if x != nil {
		if x.xxx_hidden_SourceName != nil {
			return *x.xxx_hidden_SourceName
		}
		return ""
	}
	return ""
}

func (x *VirtualMachineSnapshot) GetSourceNamespace() string {
	if x != nil {
		if x.xxx_hidden_SourceNamespace != nil {
			return *x.xxx_hidden_SourceNamespace
		}
		return ""
	}
	return ""
}

func (x *VirtualMachineSnapshot) GetCreatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.xxx_hidden_CreatedAt
	}
	return nil
}

func (x *VirtualMachineSnapshot) GetDescription() string {
	if x != nil {
		if x.xxx_hidden_Description != nil {
			return *x.xxx_hidden_Description
		}
		return ""
	}
	return ""
}

func (x *VirtualMachineSnapshot) GetStatusPhase() string {
	if x != nil {
		if x.xxx_hidden_StatusPhase != nil {
			return *x.xxx_hidden_StatusPhase
		}
		return ""
	}
	return ""
}

func (x *VirtualMachineSnapshot) GetLastConditionMessage() string {
	if x != nil {
		if x.xxx_hidden_LastConditionMessage != nil {
			return *x.xxx_hidden_LastConditionMessage
		}
		return ""
	}
	return ""
}

func (x *VirtualMachineSnapshot) GetLastConditionReason() string {
	if x != nil {
		if x.xxx_hidden_LastConditionReason != nil {
			return *x.xxx_hidden_LastConditionReason
		}
		return ""
	}
	return ""
}

func (x *VirtualMachineSnapshot) SetName(v string) {
	x.xxx_hidden_Name = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 0, 9)
}

func (x *VirtualMachineSnapshot) SetNamespace(v string) {
	x.xxx_hidden_Namespace = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 1, 9)
}

func (x *VirtualMachineSnapshot) SetSourceName(v string) {
	x.xxx_hidden_SourceName = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 2, 9)
}

func (x *VirtualMachineSnapshot) SetSourceNamespace(v string) {
	x.xxx_hidden_SourceNamespace = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 3, 9)
}

func (x *VirtualMachineSnapshot) SetCreatedAt(v *timestamppb.Timestamp) {
	x.xxx_hidden_CreatedAt = v
}

func (x *VirtualMachineSnapshot) SetDescription(v string) {
	x.xxx_hidden_Description = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 5, 9)
}

func (x *VirtualMachineSnapshot) SetStatusPhase(v string) {
	x.xxx_hidden_StatusPhase = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 6, 9)
}

func (x *VirtualMachineSnapshot) SetLastConditionMessage(v string) {
	x.xxx_hidden_LastConditionMessage = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 7, 9)
}

func (x *VirtualMachineSnapshot) SetLastConditionReason(v string) {
	x.xxx_hidden_LastConditionReason = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 8, 9)
}

func (x *VirtualMachineSnapshot) HasName() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 0)
}

func (x *VirtualMachineSnapshot) HasNamespace() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 1)
}

func (x *VirtualMachineSnapshot) HasSourceName() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 2)
}

func (x *VirtualMachineSnapshot) HasSourceNamespace() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 3)
}

func (x *VirtualMachineSnapshot) HasCreatedAt() bool {
	if x == nil {
		return false
	}
	return x.xxx_hidden_CreatedAt != nil
}

func (x *VirtualMachineSnapshot) HasDescription() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 5)
}

func (x *VirtualMachineSnapshot) HasStatusPhase() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 6)
}

func (x *VirtualMachineSnapshot) HasLastConditionMessage() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 7)
}

func (x *VirtualMachineSnapshot) HasLastConditionReason() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 8)
}

func (x *VirtualMachineSnapshot) ClearName() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 0)
	x.xxx_hidden_Name = nil
}

func (x *VirtualMachineSnapshot) ClearNamespace() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 1)
	x.xxx_hidden_Namespace = nil
}

func (x *VirtualMachineSnapshot) ClearSourceName() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 2)
	x.xxx_hidden_SourceName = nil
}

func (x *VirtualMachineSnapshot) ClearSourceNamespace() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 3)
	x.xxx_hidden_SourceNamespace = nil
}

func (x *VirtualMachineSnapshot) ClearCreatedAt() {
	x.xxx_hidden_CreatedAt = nil
}

func (x *VirtualMachineSnapshot) ClearDescription() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 5)
	x.xxx_hidden_Description = nil
}

func (x *VirtualMachineSnapshot) ClearStatusPhase() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 6)
	x.xxx_hidden_StatusPhase = nil
}

func (x *VirtualMachineSnapshot) ClearLastConditionMessage() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 7)
	x.xxx_hidden_LastConditionMessage = nil
}

func (x *VirtualMachineSnapshot) ClearLastConditionReason() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 8)
	x.xxx_hidden_LastConditionReason = nil
}

type VirtualMachineSnapshot_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	Name                 *string
	Namespace            *string
	SourceName           *string
	SourceNamespace      *string
	CreatedAt            *timestamppb.Timestamp
	Description          *string
	StatusPhase          *string
	LastConditionMessage *string
	LastConditionReason  *string
}

func (b0 VirtualMachineSnapshot_builder) Build() *VirtualMachineSnapshot {
	m0 := &VirtualMachineSnapshot{}
	b, x := &b0, m0
	_, _ = b, x
	if b.Name != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 0, 9)
		x.xxx_hidden_Name = b.Name
	}
	if b.Namespace != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 1, 9)
		x.xxx_hidden_Namespace = b.Namespace
	}
	if b.SourceName != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 2, 9)
		x.xxx_hidden_SourceName = b.SourceName
	}
	if b.SourceNamespace != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 3, 9)
		x.xxx_hidden_SourceNamespace = b.SourceNamespace
	}
	x.xxx_hidden_CreatedAt = b.CreatedAt
	if b.Description != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 5, 9)
		x.xxx_hidden_Description = b.Description
	}
	if b.StatusPhase != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 6, 9)
		x.xxx_hidden_StatusPhase = b.StatusPhase
	}
	if b.LastConditionMessage != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 7, 9)
		x.xxx_hidden_LastConditionMessage = b.LastConditionMessage
	}
	if b.LastConditionReason != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 8, 9)
		x.xxx_hidden_LastConditionReason = b.LastConditionReason
	}
	return m0
}

type VirtualMachineResources struct {
	state                  protoimpl.MessageState `protogen:"opaque.v1"`
	xxx_hidden_CpuCores    uint32                 `protobuf:"varint,1,opt,name=cpu_cores,json=cpuCores"`
	xxx_hidden_MemoryBytes int64                  `protobuf:"varint,2,opt,name=memory_bytes,json=memoryBytes"`
	XXX_raceDetectHookData protoimpl.RaceDetectHookData
	XXX_presence           [1]uint32
	unknownFields          protoimpl.UnknownFields
	sizeCache              protoimpl.SizeCache
}

func (x *VirtualMachineResources) Reset() {
	*x = VirtualMachineResources{}
	mi := &file_api_kubevirt_v1_kubevirt_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *VirtualMachineResources) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*VirtualMachineResources) ProtoMessage() {}

func (x *VirtualMachineResources) ProtoReflect() protoreflect.Message {
	mi := &file_api_kubevirt_v1_kubevirt_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *VirtualMachineResources) GetCpuCores() uint32 {
	if x != nil {
		return x.xxx_hidden_CpuCores
	}
	return 0
}

func (x *VirtualMachineResources) GetMemoryBytes() int64 {
	if x != nil {
		return x.xxx_hidden_MemoryBytes
	}
	return 0
}

func (x *VirtualMachineResources) SetCpuCores(v uint32) {
	x.xxx_hidden_CpuCores = v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 0, 2)
}

func (x *VirtualMachineResources) SetMemoryBytes(v int64) {
	x.xxx_hidden_MemoryBytes = v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 1, 2)
}

func (x *VirtualMachineResources) HasCpuCores() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 0)
}

func (x *VirtualMachineResources) HasMemoryBytes() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 1)
}

func (x *VirtualMachineResources) ClearCpuCores() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 0)
	x.xxx_hidden_CpuCores = 0
}

func (x *VirtualMachineResources) ClearMemoryBytes() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 1)
	x.xxx_hidden_MemoryBytes = 0
}

type VirtualMachineResources_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	CpuCores    *uint32
	MemoryBytes *int64
}

func (b0 VirtualMachineResources_builder) Build() *VirtualMachineResources {
	m0 := &VirtualMachineResources{}
	b, x := &b0, m0
	_, _ = b, x
	if b.CpuCores != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 0, 2)
		x.xxx_hidden_CpuCores = *b.CpuCores
	}
	if b.MemoryBytes != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 1, 2)
		x.xxx_hidden_MemoryBytes = *b.MemoryBytes
	}
	return m0
}

// Resource definitions
type InstanceType struct {
	state                  protoimpl.MessageState `protogen:"opaque.v1"`
	xxx_hidden_Metadata    *Metadata              `protobuf:"bytes,1,opt,name=metadata"`
	xxx_hidden_CpuCores    uint32                 `protobuf:"varint,2,opt,name=cpu_cores,json=cpuCores"`
	xxx_hidden_MemoryBytes int64                  `protobuf:"varint,3,opt,name=memory_bytes,json=memoryBytes"`
	XXX_raceDetectHookData protoimpl.RaceDetectHookData
	XXX_presence           [1]uint32
	unknownFields          protoimpl.UnknownFields
	sizeCache              protoimpl.SizeCache
}

func (x *InstanceType) Reset() {
	*x = InstanceType{}
	mi := &file_api_kubevirt_v1_kubevirt_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *InstanceType) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*InstanceType) ProtoMessage() {}

func (x *InstanceType) ProtoReflect() protoreflect.Message {
	mi := &file_api_kubevirt_v1_kubevirt_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *InstanceType) GetMetadata() *Metadata {
	if x != nil {
		return x.xxx_hidden_Metadata
	}
	return nil
}

func (x *InstanceType) GetCpuCores() uint32 {
	if x != nil {
		return x.xxx_hidden_CpuCores
	}
	return 0
}

func (x *InstanceType) GetMemoryBytes() int64 {
	if x != nil {
		return x.xxx_hidden_MemoryBytes
	}
	return 0
}

func (x *InstanceType) SetMetadata(v *Metadata) {
	x.xxx_hidden_Metadata = v
}

func (x *InstanceType) SetCpuCores(v uint32) {
	x.xxx_hidden_CpuCores = v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 1, 3)
}

func (x *InstanceType) SetMemoryBytes(v int64) {
	x.xxx_hidden_MemoryBytes = v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 2, 3)
}

func (x *InstanceType) HasMetadata() bool {
	if x == nil {
		return false
	}
	return x.xxx_hidden_Metadata != nil
}

func (x *InstanceType) HasCpuCores() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 1)
}

func (x *InstanceType) HasMemoryBytes() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 2)
}

func (x *InstanceType) ClearMetadata() {
	x.xxx_hidden_Metadata = nil
}

func (x *InstanceType) ClearCpuCores() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 1)
	x.xxx_hidden_CpuCores = 0
}

func (x *InstanceType) ClearMemoryBytes() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 2)
	x.xxx_hidden_MemoryBytes = 0
}

type InstanceType_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	Metadata    *Metadata
	CpuCores    *uint32
	MemoryBytes *int64
}

func (b0 InstanceType_builder) Build() *InstanceType {
	m0 := &InstanceType{}
	b, x := &b0, m0
	_, _ = b, x
	x.xxx_hidden_Metadata = b.Metadata
	if b.CpuCores != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 1, 3)
		x.xxx_hidden_CpuCores = *b.CpuCores
	}
	if b.MemoryBytes != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 2, 3)
		x.xxx_hidden_MemoryBytes = *b.MemoryBytes
	}
	return m0
}

type DataVolume struct {
	state                           protoimpl.MessageState `protogen:"opaque.v1"`
	xxx_hidden_Metadata             *Metadata              `protobuf:"bytes,1,opt,name=metadata"`
	xxx_hidden_Source               *string                `protobuf:"bytes,2,opt,name=source"`
	xxx_hidden_Type                 *string                `protobuf:"bytes,3,opt,name=type"`
	xxx_hidden_SizeBytes            int64                  `protobuf:"varint,4,opt,name=size_bytes,json=sizeBytes"`
	xxx_hidden_AccessMode           *string                `protobuf:"bytes,5,opt,name=access_mode,json=accessMode"`
	xxx_hidden_StorageClass         *string                `protobuf:"bytes,6,opt,name=storage_class,json=storageClass"`
	xxx_hidden_StatusPhase          *string                `protobuf:"bytes,7,opt,name=status_phase,json=statusPhase"`
	xxx_hidden_StatusProgress       *string                `protobuf:"bytes,8,opt,name=status_progress,json=statusProgress"`
	xxx_hidden_StatusClaimName      *string                `protobuf:"bytes,9,opt,name=status_claim_name,json=statusClaimName"`
	xxx_hidden_LastConditionMessage *string                `protobuf:"bytes,10,opt,name=last_condition_message,json=lastConditionMessage"`
	xxx_hidden_LastConditionReason  *string                `protobuf:"bytes,11,opt,name=last_condition_reason,json=lastConditionReason"`
	xxx_hidden_LastConditionStatus  *string                `protobuf:"bytes,12,opt,name=last_condition_status,json=lastConditionStatus"`
	XXX_raceDetectHookData          protoimpl.RaceDetectHookData
	XXX_presence                    [1]uint32
	unknownFields                   protoimpl.UnknownFields
	sizeCache                       protoimpl.SizeCache
}

func (x *DataVolume) Reset() {
	*x = DataVolume{}
	mi := &file_api_kubevirt_v1_kubevirt_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DataVolume) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DataVolume) ProtoMessage() {}

func (x *DataVolume) ProtoReflect() protoreflect.Message {
	mi := &file_api_kubevirt_v1_kubevirt_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *DataVolume) GetMetadata() *Metadata {
	if x != nil {
		return x.xxx_hidden_Metadata
	}
	return nil
}

func (x *DataVolume) GetSource() string {
	if x != nil {
		if x.xxx_hidden_Source != nil {
			return *x.xxx_hidden_Source
		}
		return ""
	}
	return ""
}

func (x *DataVolume) GetType() string {
	if x != nil {
		if x.xxx_hidden_Type != nil {
			return *x.xxx_hidden_Type
		}
		return ""
	}
	return ""
}

func (x *DataVolume) GetSizeBytes() int64 {
	if x != nil {
		return x.xxx_hidden_SizeBytes
	}
	return 0
}

func (x *DataVolume) GetAccessMode() string {
	if x != nil {
		if x.xxx_hidden_AccessMode != nil {
			return *x.xxx_hidden_AccessMode
		}
		return ""
	}
	return ""
}

func (x *DataVolume) GetStorageClass() string {
	if x != nil {
		if x.xxx_hidden_StorageClass != nil {
			return *x.xxx_hidden_StorageClass
		}
		return ""
	}
	return ""
}

func (x *DataVolume) GetStatusPhase() string {
	if x != nil {
		if x.xxx_hidden_StatusPhase != nil {
			return *x.xxx_hidden_StatusPhase
		}
		return ""
	}
	return ""
}

func (x *DataVolume) GetStatusProgress() string {
	if x != nil {
		if x.xxx_hidden_StatusProgress != nil {
			return *x.xxx_hidden_StatusProgress
		}
		return ""
	}
	return ""
}

func (x *DataVolume) GetStatusClaimName() string {
	if x != nil {
		if x.xxx_hidden_StatusClaimName != nil {
			return *x.xxx_hidden_StatusClaimName
		}
		return ""
	}
	return ""
}

func (x *DataVolume) GetLastConditionMessage() string {
	if x != nil {
		if x.xxx_hidden_LastConditionMessage != nil {
			return *x.xxx_hidden_LastConditionMessage
		}
		return ""
	}
	return ""
}

func (x *DataVolume) GetLastConditionReason() string {
	if x != nil {
		if x.xxx_hidden_LastConditionReason != nil {
			return *x.xxx_hidden_LastConditionReason
		}
		return ""
	}
	return ""
}

func (x *DataVolume) GetLastConditionStatus() string {
	if x != nil {
		if x.xxx_hidden_LastConditionStatus != nil {
			return *x.xxx_hidden_LastConditionStatus
		}
		return ""
	}
	return ""
}

func (x *DataVolume) SetMetadata(v *Metadata) {
	x.xxx_hidden_Metadata = v
}

func (x *DataVolume) SetSource(v string) {
	x.xxx_hidden_Source = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 1, 12)
}

func (x *DataVolume) SetType(v string) {
	x.xxx_hidden_Type = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 2, 12)
}

func (x *DataVolume) SetSizeBytes(v int64) {
	x.xxx_hidden_SizeBytes = v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 3, 12)
}

func (x *DataVolume) SetAccessMode(v string) {
	x.xxx_hidden_AccessMode = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 4, 12)
}

func (x *DataVolume) SetStorageClass(v string) {
	x.xxx_hidden_StorageClass = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 5, 12)
}

func (x *DataVolume) SetStatusPhase(v string) {
	x.xxx_hidden_StatusPhase = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 6, 12)
}

func (x *DataVolume) SetStatusProgress(v string) {
	x.xxx_hidden_StatusProgress = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 7, 12)
}

func (x *DataVolume) SetStatusClaimName(v string) {
	x.xxx_hidden_StatusClaimName = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 8, 12)
}

func (x *DataVolume) SetLastConditionMessage(v string) {
	x.xxx_hidden_LastConditionMessage = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 9, 12)
}

func (x *DataVolume) SetLastConditionReason(v string) {
	x.xxx_hidden_LastConditionReason = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 10, 12)
}

func (x *DataVolume) SetLastConditionStatus(v string) {
	x.xxx_hidden_LastConditionStatus = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 11, 12)
}

func (x *DataVolume) HasMetadata() bool {
	if x == nil {
		return false
	}
	return x.xxx_hidden_Metadata != nil
}

func (x *DataVolume) HasSource() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 1)
}

func (x *DataVolume) HasType() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 2)
}

func (x *DataVolume) HasSizeBytes() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 3)
}

func (x *DataVolume) HasAccessMode() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 4)
}

func (x *DataVolume) HasStorageClass() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 5)
}

func (x *DataVolume) HasStatusPhase() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 6)
}

func (x *DataVolume) HasStatusProgress() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 7)
}

func (x *DataVolume) HasStatusClaimName() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 8)
}

func (x *DataVolume) HasLastConditionMessage() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 9)
}

func (x *DataVolume) HasLastConditionReason() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 10)
}

func (x *DataVolume) HasLastConditionStatus() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 11)
}

func (x *DataVolume) ClearMetadata() {
	x.xxx_hidden_Metadata = nil
}

func (x *DataVolume) ClearSource() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 1)
	x.xxx_hidden_Source = nil
}

func (x *DataVolume) ClearType() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 2)
	x.xxx_hidden_Type = nil
}

func (x *DataVolume) ClearSizeBytes() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 3)
	x.xxx_hidden_SizeBytes = 0
}

func (x *DataVolume) ClearAccessMode() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 4)
	x.xxx_hidden_AccessMode = nil
}

func (x *DataVolume) ClearStorageClass() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 5)
	x.xxx_hidden_StorageClass = nil
}

func (x *DataVolume) ClearStatusPhase() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 6)
	x.xxx_hidden_StatusPhase = nil
}

func (x *DataVolume) ClearStatusProgress() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 7)
	x.xxx_hidden_StatusProgress = nil
}

func (x *DataVolume) ClearStatusClaimName() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 8)
	x.xxx_hidden_StatusClaimName = nil
}

func (x *DataVolume) ClearLastConditionMessage() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 9)
	x.xxx_hidden_LastConditionMessage = nil
}

func (x *DataVolume) ClearLastConditionReason() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 10)
	x.xxx_hidden_LastConditionReason = nil
}

func (x *DataVolume) ClearLastConditionStatus() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 11)
	x.xxx_hidden_LastConditionStatus = nil
}

type DataVolume_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	Metadata             *Metadata
	Source               *string
	Type                 *string
	SizeBytes            *int64
	AccessMode           *string
	StorageClass         *string
	StatusPhase          *string
	StatusProgress       *string
	StatusClaimName      *string
	LastConditionMessage *string
	LastConditionReason  *string
	LastConditionStatus  *string
}

func (b0 DataVolume_builder) Build() *DataVolume {
	m0 := &DataVolume{}
	b, x := &b0, m0
	_, _ = b, x
	x.xxx_hidden_Metadata = b.Metadata
	if b.Source != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 1, 12)
		x.xxx_hidden_Source = b.Source
	}
	if b.Type != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 2, 12)
		x.xxx_hidden_Type = b.Type
	}
	if b.SizeBytes != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 3, 12)
		x.xxx_hidden_SizeBytes = *b.SizeBytes
	}
	if b.AccessMode != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 4, 12)
		x.xxx_hidden_AccessMode = b.AccessMode
	}
	if b.StorageClass != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 5, 12)
		x.xxx_hidden_StorageClass = b.StorageClass
	}
	if b.StatusPhase != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 6, 12)
		x.xxx_hidden_StatusPhase = b.StatusPhase
	}
	if b.StatusProgress != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 7, 12)
		x.xxx_hidden_StatusProgress = b.StatusProgress
	}
	if b.StatusClaimName != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 8, 12)
		x.xxx_hidden_StatusClaimName = b.StatusClaimName
	}
	if b.LastConditionMessage != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 9, 12)
		x.xxx_hidden_LastConditionMessage = b.LastConditionMessage
	}
	if b.LastConditionReason != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 10, 12)
		x.xxx_hidden_LastConditionReason = b.LastConditionReason
	}
	if b.LastConditionStatus != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 11, 12)
		x.xxx_hidden_LastConditionStatus = b.LastConditionStatus
	}
	return m0
}

type VirtualMachineService struct {
	state               protoimpl.MessageState       `protogen:"opaque.v1"`
	xxx_hidden_Metadata *Metadata                    `protobuf:"bytes,1,opt,name=metadata"`
	xxx_hidden_Spec     *VirtualMachineServiceSpec   `protobuf:"bytes,11,opt,name=spec"`
	xxx_hidden_Status   *VirtualMachineServiceStatus `protobuf:"bytes,12,opt,name=status"`
	unknownFields       protoimpl.UnknownFields
	sizeCache           protoimpl.SizeCache
}

func (x *VirtualMachineService) Reset() {
	*x = VirtualMachineService{}
	mi := &file_api_kubevirt_v1_kubevirt_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *VirtualMachineService) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*VirtualMachineService) ProtoMessage() {}

func (x *VirtualMachineService) ProtoReflect() protoreflect.Message {
	mi := &file_api_kubevirt_v1_kubevirt_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *VirtualMachineService) GetMetadata() *Metadata {
	if x != nil {
		return x.xxx_hidden_Metadata
	}
	return nil
}

func (x *VirtualMachineService) GetSpec() *VirtualMachineServiceSpec {
	if x != nil {
		return x.xxx_hidden_Spec
	}
	return nil
}

func (x *VirtualMachineService) GetStatus() *VirtualMachineServiceStatus {
	if x != nil {
		return x.xxx_hidden_Status
	}
	return nil
}

func (x *VirtualMachineService) SetMetadata(v *Metadata) {
	x.xxx_hidden_Metadata = v
}

func (x *VirtualMachineService) SetSpec(v *VirtualMachineServiceSpec) {
	x.xxx_hidden_Spec = v
}

func (x *VirtualMachineService) SetStatus(v *VirtualMachineServiceStatus) {
	x.xxx_hidden_Status = v
}

func (x *VirtualMachineService) HasMetadata() bool {
	if x == nil {
		return false
	}
	return x.xxx_hidden_Metadata != nil
}

func (x *VirtualMachineService) HasSpec() bool {
	if x == nil {
		return false
	}
	return x.xxx_hidden_Spec != nil
}

func (x *VirtualMachineService) HasStatus() bool {
	if x == nil {
		return false
	}
	return x.xxx_hidden_Status != nil
}

func (x *VirtualMachineService) ClearMetadata() {
	x.xxx_hidden_Metadata = nil
}

func (x *VirtualMachineService) ClearSpec() {
	x.xxx_hidden_Spec = nil
}

func (x *VirtualMachineService) ClearStatus() {
	x.xxx_hidden_Status = nil
}

type VirtualMachineService_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	Metadata *Metadata
	Spec     *VirtualMachineServiceSpec
	Status   *VirtualMachineServiceStatus
}

func (b0 VirtualMachineService_builder) Build() *VirtualMachineService {
	m0 := &VirtualMachineService{}
	b, x := &b0, m0
	_, _ = b, x
	x.xxx_hidden_Metadata = b.Metadata
	x.xxx_hidden_Spec = b.Spec
	x.xxx_hidden_Status = b.Status
	return m0
}

type VirtualMachineServiceSpec struct {
	state                         protoimpl.MessageState         `protogen:"opaque.v1"`
	xxx_hidden_VirtualMachineName *string                        `protobuf:"bytes,1,opt,name=virtual_machine_name,json=virtualMachineName"`
	xxx_hidden_Type               VirtualMachineServiceSpec_Type `protobuf:"varint,2,opt,name=type,enum=otterscale.kubevirt.v1.VirtualMachineServiceSpec_Type"`
	xxx_hidden_Ports              *[]*ServicePort                `protobuf:"bytes,11,rep,name=ports"`
	xxx_hidden_Selector           map[string]string              `protobuf:"bytes,21,rep,name=selector" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	XXX_raceDetectHookData        protoimpl.RaceDetectHookData
	XXX_presence                  [1]uint32
	unknownFields                 protoimpl.UnknownFields
	sizeCache                     protoimpl.SizeCache
}

func (x *VirtualMachineServiceSpec) Reset() {
	*x = VirtualMachineServiceSpec{}
	mi := &file_api_kubevirt_v1_kubevirt_proto_msgTypes[7]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *VirtualMachineServiceSpec) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*VirtualMachineServiceSpec) ProtoMessage() {}

func (x *VirtualMachineServiceSpec) ProtoReflect() protoreflect.Message {
	mi := &file_api_kubevirt_v1_kubevirt_proto_msgTypes[7]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *VirtualMachineServiceSpec) GetVirtualMachineName() string {
	if x != nil {
		if x.xxx_hidden_VirtualMachineName != nil {
			return *x.xxx_hidden_VirtualMachineName
		}
		return ""
	}
	return ""
}

func (x *VirtualMachineServiceSpec) GetType() VirtualMachineServiceSpec_Type {
	if x != nil {
		if protoimpl.X.Present(&(x.XXX_presence[0]), 1) {
			return x.xxx_hidden_Type
		}
	}
	return VirtualMachineServiceSpec_TYPE_UNSPECIFIED
}

func (x *VirtualMachineServiceSpec) GetPorts() []*ServicePort {
	if x != nil {
		if x.xxx_hidden_Ports != nil {
			return *x.xxx_hidden_Ports
		}
	}
	return nil
}

func (x *VirtualMachineServiceSpec) GetSelector() map[string]string {
	if x != nil {
		return x.xxx_hidden_Selector
	}
	return nil
}

func (x *VirtualMachineServiceSpec) SetVirtualMachineName(v string) {
	x.xxx_hidden_VirtualMachineName = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 0, 4)
}

func (x *VirtualMachineServiceSpec) SetType(v VirtualMachineServiceSpec_Type) {
	x.xxx_hidden_Type = v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 1, 4)
}

func (x *VirtualMachineServiceSpec) SetPorts(v []*ServicePort) {
	x.xxx_hidden_Ports = &v
}

func (x *VirtualMachineServiceSpec) SetSelector(v map[string]string) {
	x.xxx_hidden_Selector = v
}

func (x *VirtualMachineServiceSpec) HasVirtualMachineName() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 0)
}

func (x *VirtualMachineServiceSpec) HasType() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 1)
}

func (x *VirtualMachineServiceSpec) ClearVirtualMachineName() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 0)
	x.xxx_hidden_VirtualMachineName = nil
}

func (x *VirtualMachineServiceSpec) ClearType() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 1)
	x.xxx_hidden_Type = VirtualMachineServiceSpec_TYPE_UNSPECIFIED
}

type VirtualMachineServiceSpec_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	VirtualMachineName *string
	Type               *VirtualMachineServiceSpec_Type
	Ports              []*ServicePort
	Selector           map[string]string
}

func (b0 VirtualMachineServiceSpec_builder) Build() *VirtualMachineServiceSpec {
	m0 := &VirtualMachineServiceSpec{}
	b, x := &b0, m0
	_, _ = b, x
	if b.VirtualMachineName != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 0, 4)
		x.xxx_hidden_VirtualMachineName = b.VirtualMachineName
	}
	if b.Type != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 1, 4)
		x.xxx_hidden_Type = *b.Type
	}
	x.xxx_hidden_Ports = &b.Ports
	x.xxx_hidden_Selector = b.Selector
	return m0
}

type ServicePort struct {
	state                  protoimpl.MessageState `protogen:"opaque.v1"`
	xxx_hidden_Name        *string                `protobuf:"bytes,1,opt,name=name"`
	xxx_hidden_Port        int32                  `protobuf:"varint,2,opt,name=port"`
	xxx_hidden_Protocol    ServicePort_Protocol   `protobuf:"varint,4,opt,name=protocol,enum=otterscale.kubevirt.v1.ServicePort_Protocol"`
	xxx_hidden_NodePort    int32                  `protobuf:"varint,5,opt,name=node_port,json=nodePort"`
	XXX_raceDetectHookData protoimpl.RaceDetectHookData
	XXX_presence           [1]uint32
	unknownFields          protoimpl.UnknownFields
	sizeCache              protoimpl.SizeCache
}

func (x *ServicePort) Reset() {
	*x = ServicePort{}
	mi := &file_api_kubevirt_v1_kubevirt_proto_msgTypes[8]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ServicePort) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ServicePort) ProtoMessage() {}

func (x *ServicePort) ProtoReflect() protoreflect.Message {
	mi := &file_api_kubevirt_v1_kubevirt_proto_msgTypes[8]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *ServicePort) GetName() string {
	if x != nil {
		if x.xxx_hidden_Name != nil {
			return *x.xxx_hidden_Name
		}
		return ""
	}
	return ""
}

func (x *ServicePort) GetPort() int32 {
	if x != nil {
		return x.xxx_hidden_Port
	}
	return 0
}

func (x *ServicePort) GetProtocol() ServicePort_Protocol {
	if x != nil {
		if protoimpl.X.Present(&(x.XXX_presence[0]), 2) {
			return x.xxx_hidden_Protocol
		}
	}
	return ServicePort_PROTOCOL_UNSPECIFIED
}

func (x *ServicePort) GetNodePort() int32 {
	if x != nil {
		return x.xxx_hidden_NodePort
	}
	return 0
}

func (x *ServicePort) SetName(v string) {
	x.xxx_hidden_Name = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 0, 4)
}

func (x *ServicePort) SetPort(v int32) {
	x.xxx_hidden_Port = v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 1, 4)
}

func (x *ServicePort) SetProtocol(v ServicePort_Protocol) {
	x.xxx_hidden_Protocol = v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 2, 4)
}

func (x *ServicePort) SetNodePort(v int32) {
	x.xxx_hidden_NodePort = v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 3, 4)
}

func (x *ServicePort) HasName() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 0)
}

func (x *ServicePort) HasPort() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 1)
}

func (x *ServicePort) HasProtocol() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 2)
}

func (x *ServicePort) HasNodePort() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 3)
}

func (x *ServicePort) ClearName() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 0)
	x.xxx_hidden_Name = nil
}

func (x *ServicePort) ClearPort() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 1)
	x.xxx_hidden_Port = 0
}

func (x *ServicePort) ClearProtocol() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 2)
	x.xxx_hidden_Protocol = ServicePort_PROTOCOL_UNSPECIFIED
}

func (x *ServicePort) ClearNodePort() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 3)
	x.xxx_hidden_NodePort = 0
}

type ServicePort_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	Name     *string
	Port     *int32
	Protocol *ServicePort_Protocol
	NodePort *int32
}

func (b0 ServicePort_builder) Build() *ServicePort {
	m0 := &ServicePort{}
	b, x := &b0, m0
	_, _ = b, x
	if b.Name != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 0, 4)
		x.xxx_hidden_Name = b.Name
	}
	if b.Port != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 1, 4)
		x.xxx_hidden_Port = *b.Port
	}
	if b.Protocol != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 2, 4)
		x.xxx_hidden_Protocol = *b.Protocol
	}
	if b.NodePort != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 3, 4)
		x.xxx_hidden_NodePort = *b.NodePort
	}
	return m0
}

type VirtualMachineServiceStatus struct {
	state                          protoimpl.MessageState `protogen:"opaque.v1"`
	xxx_hidden_ClusterIp           *string                `protobuf:"bytes,1,opt,name=cluster_ip,json=clusterIp"`
	xxx_hidden_ClusterIps          []string               `protobuf:"bytes,2,rep,name=cluster_ips,json=clusterIps"`
	xxx_hidden_LoadBalancerIngress []string               `protobuf:"bytes,3,rep,name=load_balancer_ingress,json=loadBalancerIngress"`
	XXX_raceDetectHookData         protoimpl.RaceDetectHookData
	XXX_presence                   [1]uint32
	unknownFields                  protoimpl.UnknownFields
	sizeCache                      protoimpl.SizeCache
}

func (x *VirtualMachineServiceStatus) Reset() {
	*x = VirtualMachineServiceStatus{}
	mi := &file_api_kubevirt_v1_kubevirt_proto_msgTypes[9]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *VirtualMachineServiceStatus) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*VirtualMachineServiceStatus) ProtoMessage() {}

func (x *VirtualMachineServiceStatus) ProtoReflect() protoreflect.Message {
	mi := &file_api_kubevirt_v1_kubevirt_proto_msgTypes[9]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *VirtualMachineServiceStatus) GetClusterIp() string {
	if x != nil {
		if x.xxx_hidden_ClusterIp != nil {
			return *x.xxx_hidden_ClusterIp
		}
		return ""
	}
	return ""
}

func (x *VirtualMachineServiceStatus) GetClusterIps() []string {
	if x != nil {
		return x.xxx_hidden_ClusterIps
	}
	return nil
}

func (x *VirtualMachineServiceStatus) GetLoadBalancerIngress() []string {
	if x != nil {
		return x.xxx_hidden_LoadBalancerIngress
	}
	return nil
}

func (x *VirtualMachineServiceStatus) SetClusterIp(v string) {
	x.xxx_hidden_ClusterIp = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 0, 3)
}

func (x *VirtualMachineServiceStatus) SetClusterIps(v []string) {
	x.xxx_hidden_ClusterIps = v
}

func (x *VirtualMachineServiceStatus) SetLoadBalancerIngress(v []string) {
	x.xxx_hidden_LoadBalancerIngress = v
}

func (x *VirtualMachineServiceStatus) HasClusterIp() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 0)
}

func (x *VirtualMachineServiceStatus) ClearClusterIp() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 0)
	x.xxx_hidden_ClusterIp = nil
}

type VirtualMachineServiceStatus_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	ClusterIp           *string
	ClusterIps          []string
	LoadBalancerIngress []string
}

func (b0 VirtualMachineServiceStatus_builder) Build() *VirtualMachineServiceStatus {
	m0 := &VirtualMachineServiceStatus{}
	b, x := &b0, m0
	_, _ = b, x
	if b.ClusterIp != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 0, 3)
		x.xxx_hidden_ClusterIp = b.ClusterIp
	}
	x.xxx_hidden_ClusterIps = b.ClusterIps
	x.xxx_hidden_LoadBalancerIngress = b.LoadBalancerIngress
	return m0
}

// Request/Response messages
type ListVirtualMachinesRequest struct {
	state                   protoimpl.MessageState `protogen:"opaque.v1"`
	xxx_hidden_ScopeUuid    *string                `protobuf:"bytes,1,opt,name=scope_uuid,json=scopeUuid"`
	xxx_hidden_FacilityName *string                `protobuf:"bytes,2,opt,name=facility_name,json=facilityName"`
	xxx_hidden_Namespace    *string                `protobuf:"bytes,3,opt,name=namespace"`
	XXX_raceDetectHookData  protoimpl.RaceDetectHookData
	XXX_presence            [1]uint32
	unknownFields           protoimpl.UnknownFields
	sizeCache               protoimpl.SizeCache
}

func (x *ListVirtualMachinesRequest) Reset() {
	*x = ListVirtualMachinesRequest{}
	mi := &file_api_kubevirt_v1_kubevirt_proto_msgTypes[10]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListVirtualMachinesRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListVirtualMachinesRequest) ProtoMessage() {}

func (x *ListVirtualMachinesRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_kubevirt_v1_kubevirt_proto_msgTypes[10]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *ListVirtualMachinesRequest) GetScopeUuid() string {
	if x != nil {
		if x.xxx_hidden_ScopeUuid != nil {
			return *x.xxx_hidden_ScopeUuid
		}
		return ""
	}
	return ""
}

func (x *ListVirtualMachinesRequest) GetFacilityName() string {
	if x != nil {
		if x.xxx_hidden_FacilityName != nil {
			return *x.xxx_hidden_FacilityName
		}
		return ""
	}
	return ""
}

func (x *ListVirtualMachinesRequest) GetNamespace() string {
	if x != nil {
		if x.xxx_hidden_Namespace != nil {
			return *x.xxx_hidden_Namespace
		}
		return ""
	}
	return ""
}

func (x *ListVirtualMachinesRequest) SetScopeUuid(v string) {
	x.xxx_hidden_ScopeUuid = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 0, 3)
}

func (x *ListVirtualMachinesRequest) SetFacilityName(v string) {
	x.xxx_hidden_FacilityName = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 1, 3)
}

func (x *ListVirtualMachinesRequest) SetNamespace(v string) {
	x.xxx_hidden_Namespace = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 2, 3)
}

func (x *ListVirtualMachinesRequest) HasScopeUuid() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 0)
}

func (x *ListVirtualMachinesRequest) HasFacilityName() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 1)
}

func (x *ListVirtualMachinesRequest) HasNamespace() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 2)
}

func (x *ListVirtualMachinesRequest) ClearScopeUuid() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 0)
	x.xxx_hidden_ScopeUuid = nil
}

func (x *ListVirtualMachinesRequest) ClearFacilityName() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 1)
	x.xxx_hidden_FacilityName = nil
}

func (x *ListVirtualMachinesRequest) ClearNamespace() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 2)
	x.xxx_hidden_Namespace = nil
}

type ListVirtualMachinesRequest_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	ScopeUuid    *string
	FacilityName *string
	Namespace    *string
}

func (b0 ListVirtualMachinesRequest_builder) Build() *ListVirtualMachinesRequest {
	m0 := &ListVirtualMachinesRequest{}
	b, x := &b0, m0
	_, _ = b, x
	if b.ScopeUuid != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 0, 3)
		x.xxx_hidden_ScopeUuid = b.ScopeUuid
	}
	if b.FacilityName != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 1, 3)
		x.xxx_hidden_FacilityName = b.FacilityName
	}
	if b.Namespace != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 2, 3)
		x.xxx_hidden_Namespace = b.Namespace
	}
	return m0
}

type ListVirtualMachinesResponse struct {
	state                      protoimpl.MessageState `protogen:"opaque.v1"`
	xxx_hidden_VirtualMachines *[]*VirtualMachine     `protobuf:"bytes,1,rep,name=virtualMachines"`
	unknownFields              protoimpl.UnknownFields
	sizeCache                  protoimpl.SizeCache
}

func (x *ListVirtualMachinesResponse) Reset() {
	*x = ListVirtualMachinesResponse{}
	mi := &file_api_kubevirt_v1_kubevirt_proto_msgTypes[11]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListVirtualMachinesResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListVirtualMachinesResponse) ProtoMessage() {}

func (x *ListVirtualMachinesResponse) ProtoReflect() protoreflect.Message {
	mi := &file_api_kubevirt_v1_kubevirt_proto_msgTypes[11]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *ListVirtualMachinesResponse) GetVirtualMachines() []*VirtualMachine {
	if x != nil {
		if x.xxx_hidden_VirtualMachines != nil {
			return *x.xxx_hidden_VirtualMachines
		}
	}
	return nil
}

func (x *ListVirtualMachinesResponse) SetVirtualMachines(v []*VirtualMachine) {
	x.xxx_hidden_VirtualMachines = &v
}

type ListVirtualMachinesResponse_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	VirtualMachines []*VirtualMachine
}

func (b0 ListVirtualMachinesResponse_builder) Build() *ListVirtualMachinesResponse {
	m0 := &ListVirtualMachinesResponse{}
	b, x := &b0, m0
	_, _ = b, x
	x.xxx_hidden_VirtualMachines = &b.VirtualMachines
	return m0
}

type GetVirtualMachineRequest struct {
	state                   protoimpl.MessageState `protogen:"opaque.v1"`
	xxx_hidden_ScopeUuid    *string                `protobuf:"bytes,1,opt,name=scope_uuid,json=scopeUuid"`
	xxx_hidden_FacilityName *string                `protobuf:"bytes,2,opt,name=facility_name,json=facilityName"`
	xxx_hidden_Name         *string                `protobuf:"bytes,3,opt,name=name"`
	xxx_hidden_Namespace    *string                `protobuf:"bytes,4,opt,name=namespace"`
	XXX_raceDetectHookData  protoimpl.RaceDetectHookData
	XXX_presence            [1]uint32
	unknownFields           protoimpl.UnknownFields
	sizeCache               protoimpl.SizeCache
}

func (x *GetVirtualMachineRequest) Reset() {
	*x = GetVirtualMachineRequest{}
	mi := &file_api_kubevirt_v1_kubevirt_proto_msgTypes[12]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetVirtualMachineRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetVirtualMachineRequest) ProtoMessage() {}

func (x *GetVirtualMachineRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_kubevirt_v1_kubevirt_proto_msgTypes[12]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *GetVirtualMachineRequest) GetScopeUuid() string {
	if x != nil {
		if x.xxx_hidden_ScopeUuid != nil {
			return *x.xxx_hidden_ScopeUuid
		}
		return ""
	}
	return ""
}

func (x *GetVirtualMachineRequest) GetFacilityName() string {
	if x != nil {
		if x.xxx_hidden_FacilityName != nil {
			return *x.xxx_hidden_FacilityName
		}
		return ""
	}
	return ""
}

func (x *GetVirtualMachineRequest) GetName() string {
	if x != nil {
		if x.xxx_hidden_Name != nil {
			return *x.xxx_hidden_Name
		}
		return ""
	}
	return ""
}

func (x *GetVirtualMachineRequest) GetNamespace() string {
	if x != nil {
		if x.xxx_hidden_Namespace != nil {
			return *x.xxx_hidden_Namespace
		}
		return ""
	}
	return ""
}

func (x *GetVirtualMachineRequest) SetScopeUuid(v string) {
	x.xxx_hidden_ScopeUuid = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 0, 4)
}

func (x *GetVirtualMachineRequest) SetFacilityName(v string) {
	x.xxx_hidden_FacilityName = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 1, 4)
}

func (x *GetVirtualMachineRequest) SetName(v string) {
	x.xxx_hidden_Name = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 2, 4)
}

func (x *GetVirtualMachineRequest) SetNamespace(v string) {
	x.xxx_hidden_Namespace = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 3, 4)
}

func (x *GetVirtualMachineRequest) HasScopeUuid() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 0)
}

func (x *GetVirtualMachineRequest) HasFacilityName() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 1)
}

func (x *GetVirtualMachineRequest) HasName() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 2)
}

func (x *GetVirtualMachineRequest) HasNamespace() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 3)
}

func (x *GetVirtualMachineRequest) ClearScopeUuid() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 0)
	x.xxx_hidden_ScopeUuid = nil
}

func (x *GetVirtualMachineRequest) ClearFacilityName() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 1)
	x.xxx_hidden_FacilityName = nil
}

func (x *GetVirtualMachineRequest) ClearName() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 2)
	x.xxx_hidden_Name = nil
}

func (x *GetVirtualMachineRequest) ClearNamespace() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 3)
	x.xxx_hidden_Namespace = nil
}

type GetVirtualMachineRequest_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	ScopeUuid    *string
	FacilityName *string
	Name         *string
	Namespace    *string
}

func (b0 GetVirtualMachineRequest_builder) Build() *GetVirtualMachineRequest {
	m0 := &GetVirtualMachineRequest{}
	b, x := &b0, m0
	_, _ = b, x
	if b.ScopeUuid != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 0, 4)
		x.xxx_hidden_ScopeUuid = b.ScopeUuid
	}
	if b.FacilityName != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 1, 4)
		x.xxx_hidden_FacilityName = b.FacilityName
	}
	if b.Name != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 2, 4)
		x.xxx_hidden_Name = b.Name
	}
	if b.Namespace != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 3, 4)
		x.xxx_hidden_Namespace = b.Namespace
	}
	return m0
}

type VirtualMachineDisk struct {
	state                  protoimpl.MessageState `protogen:"opaque.v1"`
	xxx_hidden_Name        *string                `protobuf:"bytes,1,opt,name=name"`
	xxx_hidden_DiskType    VirtualMachineDiskType `protobuf:"varint,2,opt,name=disk_type,json=diskType,enum=otterscale.kubevirt.v1.VirtualMachineDiskType"`
	xxx_hidden_Bus         *string                `protobuf:"bytes,3,opt,name=bus"`
	xxx_hidden_Source      *string                `protobuf:"bytes,4,opt,name=source"`
	XXX_raceDetectHookData protoimpl.RaceDetectHookData
	XXX_presence           [1]uint32
	unknownFields          protoimpl.UnknownFields
	sizeCache              protoimpl.SizeCache
}

func (x *VirtualMachineDisk) Reset() {
	*x = VirtualMachineDisk{}
	mi := &file_api_kubevirt_v1_kubevirt_proto_msgTypes[13]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *VirtualMachineDisk) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*VirtualMachineDisk) ProtoMessage() {}

func (x *VirtualMachineDisk) ProtoReflect() protoreflect.Message {
	mi := &file_api_kubevirt_v1_kubevirt_proto_msgTypes[13]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *VirtualMachineDisk) GetName() string {
	if x != nil {
		if x.xxx_hidden_Name != nil {
			return *x.xxx_hidden_Name
		}
		return ""
	}
	return ""
}

func (x *VirtualMachineDisk) GetDiskType() VirtualMachineDiskType {
	if x != nil {
		if protoimpl.X.Present(&(x.XXX_presence[0]), 1) {
			return x.xxx_hidden_DiskType
		}
	}
	return VirtualMachineDisk_UNSPECIFIED
}

func (x *VirtualMachineDisk) GetBus() string {
	if x != nil {
		if x.xxx_hidden_Bus != nil {
			return *x.xxx_hidden_Bus
		}
		return ""
	}
	return ""
}

func (x *VirtualMachineDisk) GetSource() string {
	if x != nil {
		if x.xxx_hidden_Source != nil {
			return *x.xxx_hidden_Source
		}
		return ""
	}
	return ""
}

func (x *VirtualMachineDisk) SetName(v string) {
	x.xxx_hidden_Name = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 0, 4)
}

func (x *VirtualMachineDisk) SetDiskType(v VirtualMachineDiskType) {
	x.xxx_hidden_DiskType = v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 1, 4)
}

func (x *VirtualMachineDisk) SetBus(v string) {
	x.xxx_hidden_Bus = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 2, 4)
}

func (x *VirtualMachineDisk) SetSource(v string) {
	x.xxx_hidden_Source = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 3, 4)
}

func (x *VirtualMachineDisk) HasName() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 0)
}

func (x *VirtualMachineDisk) HasDiskType() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 1)
}

func (x *VirtualMachineDisk) HasBus() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 2)
}

func (x *VirtualMachineDisk) HasSource() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 3)
}

func (x *VirtualMachineDisk) ClearName() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 0)
	x.xxx_hidden_Name = nil
}

func (x *VirtualMachineDisk) ClearDiskType() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 1)
	x.xxx_hidden_DiskType = VirtualMachineDisk_UNSPECIFIED
}

func (x *VirtualMachineDisk) ClearBus() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 2)
	x.xxx_hidden_Bus = nil
}

func (x *VirtualMachineDisk) ClearSource() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 3)
	x.xxx_hidden_Source = nil
}

type VirtualMachineDisk_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	Name     *string
	DiskType *VirtualMachineDiskType
	Bus      *string
	Source   *string
}

func (b0 VirtualMachineDisk_builder) Build() *VirtualMachineDisk {
	m0 := &VirtualMachineDisk{}
	b, x := &b0, m0
	_, _ = b, x
	if b.Name != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 0, 4)
		x.xxx_hidden_Name = b.Name
	}
	if b.DiskType != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 1, 4)
		x.xxx_hidden_DiskType = *b.DiskType
	}
	if b.Bus != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 2, 4)
		x.xxx_hidden_Bus = b.Bus
	}
	if b.Source != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 3, 4)
		x.xxx_hidden_Source = b.Source
	}
	return m0
}

type CreateVirtualMachineRequest struct {
	state                    protoimpl.MessageState                  `protogen:"opaque.v1"`
	xxx_hidden_ScopeUuid     *string                                 `protobuf:"bytes,1,opt,name=scope_uuid,json=scopeUuid"`
	xxx_hidden_FacilityName  *string                                 `protobuf:"bytes,2,opt,name=facility_name,json=facilityName"`
	xxx_hidden_Name          *string                                 `protobuf:"bytes,3,opt,name=name"`
	xxx_hidden_Namespace     *string                                 `protobuf:"bytes,4,opt,name=namespace"`
	xxx_hidden_NetworkName   *string                                 `protobuf:"bytes,5,opt,name=network_name,json=networkName"`
	xxx_hidden_StartupScript *string                                 `protobuf:"bytes,6,opt,name=startup_script,json=startupScript"`
	xxx_hidden_Labels        map[string]string                       `protobuf:"bytes,11,rep,name=labels" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	xxx_hidden_Disks         *[]*VirtualMachineDisk                  `protobuf:"bytes,21,rep,name=disks"`
	xxx_hidden_Resources     isCreateVirtualMachineRequest_Resources `protobuf_oneof:"resources"`
	XXX_raceDetectHookData   protoimpl.RaceDetectHookData
	XXX_presence             [1]uint32
	unknownFields            protoimpl.UnknownFields
	sizeCache                protoimpl.SizeCache
}

func (x *CreateVirtualMachineRequest) Reset() {
	*x = CreateVirtualMachineRequest{}
	mi := &file_api_kubevirt_v1_kubevirt_proto_msgTypes[14]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CreateVirtualMachineRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateVirtualMachineRequest) ProtoMessage() {}

func (x *CreateVirtualMachineRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_kubevirt_v1_kubevirt_proto_msgTypes[14]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *CreateVirtualMachineRequest) GetScopeUuid() string {
	if x != nil {
		if x.xxx_hidden_ScopeUuid != nil {
			return *x.xxx_hidden_ScopeUuid
		}
		return ""
	}
	return ""
}

func (x *CreateVirtualMachineRequest) GetFacilityName() string {
	if x != nil {
		if x.xxx_hidden_FacilityName != nil {
			return *x.xxx_hidden_FacilityName
		}
		return ""
	}
	return ""
}

func (x *CreateVirtualMachineRequest) GetName() string {
	if x != nil {
		if x.xxx_hidden_Name != nil {
			return *x.xxx_hidden_Name
		}
		return ""
	}
	return ""
}

func (x *CreateVirtualMachineRequest) GetNamespace() string {
	if x != nil {
		if x.xxx_hidden_Namespace != nil {
			return *x.xxx_hidden_Namespace
		}
		return ""
	}
	return ""
}

func (x *CreateVirtualMachineRequest) GetNetworkName() string {
	if x != nil {
		if x.xxx_hidden_NetworkName != nil {
			return *x.xxx_hidden_NetworkName
		}
		return ""
	}
	return ""
}

func (x *CreateVirtualMachineRequest) GetStartupScript() string {
	if x != nil {
		if x.xxx_hidden_StartupScript != nil {
			return *x.xxx_hidden_StartupScript
		}
		return ""
	}
	return ""
}

func (x *CreateVirtualMachineRequest) GetLabels() map[string]string {
	if x != nil {
		return x.xxx_hidden_Labels
	}
	return nil
}

func (x *CreateVirtualMachineRequest) GetDisks() []*VirtualMachineDisk {
	if x != nil {
		if x.xxx_hidden_Disks != nil {
			return *x.xxx_hidden_Disks
		}
	}
	return nil
}

func (x *CreateVirtualMachineRequest) GetInstancetype() string {
	if x != nil {
		if x, ok := x.xxx_hidden_Resources.(*createVirtualMachineRequest_Instancetype); ok {
			return x.Instancetype
		}
	}
	return ""
}

func (x *CreateVirtualMachineRequest) GetCustom() *VirtualMachineResources {
	if x != nil {
		if x, ok := x.xxx_hidden_Resources.(*createVirtualMachineRequest_Custom); ok {
			return x.Custom
		}
	}
	return nil
}

func (x *CreateVirtualMachineRequest) SetScopeUuid(v string) {
	x.xxx_hidden_ScopeUuid = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 0, 9)
}

func (x *CreateVirtualMachineRequest) SetFacilityName(v string) {
	x.xxx_hidden_FacilityName = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 1, 9)
}

func (x *CreateVirtualMachineRequest) SetName(v string) {
	x.xxx_hidden_Name = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 2, 9)
}

func (x *CreateVirtualMachineRequest) SetNamespace(v string) {
	x.xxx_hidden_Namespace = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 3, 9)
}

func (x *CreateVirtualMachineRequest) SetNetworkName(v string) {
	x.xxx_hidden_NetworkName = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 4, 9)
}

func (x *CreateVirtualMachineRequest) SetStartupScript(v string) {
	x.xxx_hidden_StartupScript = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 5, 9)
}

func (x *CreateVirtualMachineRequest) SetLabels(v map[string]string) {
	x.xxx_hidden_Labels = v
}

func (x *CreateVirtualMachineRequest) SetDisks(v []*VirtualMachineDisk) {
	x.xxx_hidden_Disks = &v
}

func (x *CreateVirtualMachineRequest) SetInstancetype(v string) {
	x.xxx_hidden_Resources = &createVirtualMachineRequest_Instancetype{v}
}

func (x *CreateVirtualMachineRequest) SetCustom(v *VirtualMachineResources) {
	if v == nil {
		x.xxx_hidden_Resources = nil
		return
	}
	x.xxx_hidden_Resources = &createVirtualMachineRequest_Custom{v}
}

func (x *CreateVirtualMachineRequest) HasScopeUuid() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 0)
}

func (x *CreateVirtualMachineRequest) HasFacilityName() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 1)
}

func (x *CreateVirtualMachineRequest) HasName() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 2)
}

func (x *CreateVirtualMachineRequest) HasNamespace() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 3)
}

func (x *CreateVirtualMachineRequest) HasNetworkName() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 4)
}

func (x *CreateVirtualMachineRequest) HasStartupScript() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 5)
}

func (x *CreateVirtualMachineRequest) HasResources() bool {
	if x == nil {
		return false
	}
	return x.xxx_hidden_Resources != nil
}

func (x *CreateVirtualMachineRequest) HasInstancetype() bool {
	if x == nil {
		return false
	}
	_, ok := x.xxx_hidden_Resources.(*createVirtualMachineRequest_Instancetype)
	return ok
}

func (x *CreateVirtualMachineRequest) HasCustom() bool {
	if x == nil {
		return false
	}
	_, ok := x.xxx_hidden_Resources.(*createVirtualMachineRequest_Custom)
	return ok
}

func (x *CreateVirtualMachineRequest) ClearScopeUuid() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 0)
	x.xxx_hidden_ScopeUuid = nil
}

func (x *CreateVirtualMachineRequest) ClearFacilityName() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 1)
	x.xxx_hidden_FacilityName = nil
}

func (x *CreateVirtualMachineRequest) ClearName() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 2)
	x.xxx_hidden_Name = nil
}

func (x *CreateVirtualMachineRequest) ClearNamespace() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 3)
	x.xxx_hidden_Namespace = nil
}

func (x *CreateVirtualMachineRequest) ClearNetworkName() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 4)
	x.xxx_hidden_NetworkName = nil
}

func (x *CreateVirtualMachineRequest) ClearStartupScript() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 5)
	x.xxx_hidden_StartupScript = nil
}

func (x *CreateVirtualMachineRequest) ClearResources() {
	x.xxx_hidden_Resources = nil
}

func (x *CreateVirtualMachineRequest) ClearInstancetype() {
	if _, ok := x.xxx_hidden_Resources.(*createVirtualMachineRequest_Instancetype); ok {
		x.xxx_hidden_Resources = nil
	}
}

func (x *CreateVirtualMachineRequest) ClearCustom() {
	if _, ok := x.xxx_hidden_Resources.(*createVirtualMachineRequest_Custom); ok {
		x.xxx_hidden_Resources = nil
	}
}

const CreateVirtualMachineRequest_Resources_not_set_case case_CreateVirtualMachineRequest_Resources = 0
const CreateVirtualMachineRequest_Instancetype_case case_CreateVirtualMachineRequest_Resources = 31
const CreateVirtualMachineRequest_Custom_case case_CreateVirtualMachineRequest_Resources = 32

func (x *CreateVirtualMachineRequest) WhichResources() case_CreateVirtualMachineRequest_Resources {
	if x == nil {
		return CreateVirtualMachineRequest_Resources_not_set_case
	}
	switch x.xxx_hidden_Resources.(type) {
	case *createVirtualMachineRequest_Instancetype:
		return CreateVirtualMachineRequest_Instancetype_case
	case *createVirtualMachineRequest_Custom:
		return CreateVirtualMachineRequest_Custom_case
	default:
		return CreateVirtualMachineRequest_Resources_not_set_case
	}
}

type CreateVirtualMachineRequest_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	ScopeUuid     *string
	FacilityName  *string
	Name          *string
	Namespace     *string
	NetworkName   *string
	StartupScript *string
	Labels        map[string]string
	Disks         []*VirtualMachineDisk
	// Fields of oneof xxx_hidden_Resources:
	Instancetype *string
	Custom       *VirtualMachineResources
	// -- end of xxx_hidden_Resources
}

func (b0 CreateVirtualMachineRequest_builder) Build() *CreateVirtualMachineRequest {
	m0 := &CreateVirtualMachineRequest{}
	b, x := &b0, m0
	_, _ = b, x
	if b.ScopeUuid != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 0, 9)
		x.xxx_hidden_ScopeUuid = b.ScopeUuid
	}
	if b.FacilityName != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 1, 9)
		x.xxx_hidden_FacilityName = b.FacilityName
	}
	if b.Name != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 2, 9)
		x.xxx_hidden_Name = b.Name
	}
	if b.Namespace != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 3, 9)
		x.xxx_hidden_Namespace = b.Namespace
	}
	if b.NetworkName != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 4, 9)
		x.xxx_hidden_NetworkName = b.NetworkName
	}
	if b.StartupScript != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 5, 9)
		x.xxx_hidden_StartupScript = b.StartupScript
	}
	x.xxx_hidden_Labels = b.Labels
	x.xxx_hidden_Disks = &b.Disks
	if b.Instancetype != nil {
		x.xxx_hidden_Resources = &createVirtualMachineRequest_Instancetype{*b.Instancetype}
	}
	if b.Custom != nil {
		x.xxx_hidden_Resources = &createVirtualMachineRequest_Custom{b.Custom}
	}
	return m0
}

type case_CreateVirtualMachineRequest_Resources protoreflect.FieldNumber

func (x case_CreateVirtualMachineRequest_Resources) String() string {
	md := file_api_kubevirt_v1_kubevirt_proto_msgTypes[14].Descriptor()
	if x == 0 {
		return "not set"
	}
	return protoimpl.X.MessageFieldStringOf(md, protoreflect.FieldNumber(x))
}

type isCreateVirtualMachineRequest_Resources interface {
	isCreateVirtualMachineRequest_Resources()
}

type createVirtualMachineRequest_Instancetype struct {
	Instancetype string `protobuf:"bytes,31,opt,name=instancetype,oneof"`
}

type createVirtualMachineRequest_Custom struct {
	Custom *VirtualMachineResources `protobuf:"bytes,32,opt,name=custom,oneof"`
}

func (*createVirtualMachineRequest_Instancetype) isCreateVirtualMachineRequest_Resources() {}

func (*createVirtualMachineRequest_Custom) isCreateVirtualMachineRequest_Resources() {}

type UpdateVirtualMachineRequest struct {
	state                   protoimpl.MessageState `protogen:"opaque.v1"`
	xxx_hidden_ScopeUuid    *string                `protobuf:"bytes,1,opt,name=scope_uuid,json=scopeUuid"`
	xxx_hidden_FacilityName *string                `protobuf:"bytes,2,opt,name=facility_name,json=facilityName"`
	xxx_hidden_Name         *string                `protobuf:"bytes,3,opt,name=name"`
	xxx_hidden_Namespace    *string                `protobuf:"bytes,4,opt,name=namespace"`
	xxx_hidden_NetworkName  *string                `protobuf:"bytes,5,opt,name=network_name,json=networkName"`
	xxx_hidden_Labels       map[string]string      `protobuf:"bytes,11,rep,name=labels" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	xxx_hidden_Disks        *[]*VirtualMachineDisk `protobuf:"bytes,31,rep,name=disks"`
	XXX_raceDetectHookData  protoimpl.RaceDetectHookData
	XXX_presence            [1]uint32
	unknownFields           protoimpl.UnknownFields
	sizeCache               protoimpl.SizeCache
}

func (x *UpdateVirtualMachineRequest) Reset() {
	*x = UpdateVirtualMachineRequest{}
	mi := &file_api_kubevirt_v1_kubevirt_proto_msgTypes[15]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UpdateVirtualMachineRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateVirtualMachineRequest) ProtoMessage() {}

func (x *UpdateVirtualMachineRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_kubevirt_v1_kubevirt_proto_msgTypes[15]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *UpdateVirtualMachineRequest) GetScopeUuid() string {
	if x != nil {
		if x.xxx_hidden_ScopeUuid != nil {
			return *x.xxx_hidden_ScopeUuid
		}
		return ""
	}
	return ""
}

func (x *UpdateVirtualMachineRequest) GetFacilityName() string {
	if x != nil {
		if x.xxx_hidden_FacilityName != nil {
			return *x.xxx_hidden_FacilityName
		}
		return ""
	}
	return ""
}

func (x *UpdateVirtualMachineRequest) GetName() string {
	if x != nil {
		if x.xxx_hidden_Name != nil {
			return *x.xxx_hidden_Name
		}
		return ""
	}
	return ""
}

func (x *UpdateVirtualMachineRequest) GetNamespace() string {
	if x != nil {
		if x.xxx_hidden_Namespace != nil {
			return *x.xxx_hidden_Namespace
		}
		return ""
	}
	return ""
}

func (x *UpdateVirtualMachineRequest) GetNetworkName() string {
	if x != nil {
		if x.xxx_hidden_NetworkName != nil {
			return *x.xxx_hidden_NetworkName
		}
		return ""
	}
	return ""
}

func (x *UpdateVirtualMachineRequest) GetLabels() map[string]string {
	if x != nil {
		return x.xxx_hidden_Labels
	}
	return nil
}

func (x *UpdateVirtualMachineRequest) GetDisks() []*VirtualMachineDisk {
	if x != nil {
		if x.xxx_hidden_Disks != nil {
			return *x.xxx_hidden_Disks
		}
	}
	return nil
}

func (x *UpdateVirtualMachineRequest) SetScopeUuid(v string) {
	x.xxx_hidden_ScopeUuid = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 0, 7)
}

func (x *UpdateVirtualMachineRequest) SetFacilityName(v string) {
	x.xxx_hidden_FacilityName = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 1, 7)
}

func (x *UpdateVirtualMachineRequest) SetName(v string) {
	x.xxx_hidden_Name = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 2, 7)
}

func (x *UpdateVirtualMachineRequest) SetNamespace(v string) {
	x.xxx_hidden_Namespace = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 3, 7)
}

func (x *UpdateVirtualMachineRequest) SetNetworkName(v string) {
	x.xxx_hidden_NetworkName = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 4, 7)
}

func (x *UpdateVirtualMachineRequest) SetLabels(v map[string]string) {
	x.xxx_hidden_Labels = v
}

func (x *UpdateVirtualMachineRequest) SetDisks(v []*VirtualMachineDisk) {
	x.xxx_hidden_Disks = &v
}

func (x *UpdateVirtualMachineRequest) HasScopeUuid() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 0)
}

func (x *UpdateVirtualMachineRequest) HasFacilityName() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 1)
}

func (x *UpdateVirtualMachineRequest) HasName() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 2)
}

func (x *UpdateVirtualMachineRequest) HasNamespace() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 3)
}

func (x *UpdateVirtualMachineRequest) HasNetworkName() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 4)
}

func (x *UpdateVirtualMachineRequest) ClearScopeUuid() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 0)
	x.xxx_hidden_ScopeUuid = nil
}

func (x *UpdateVirtualMachineRequest) ClearFacilityName() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 1)
	x.xxx_hidden_FacilityName = nil
}

func (x *UpdateVirtualMachineRequest) ClearName() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 2)
	x.xxx_hidden_Name = nil
}

func (x *UpdateVirtualMachineRequest) ClearNamespace() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 3)
	x.xxx_hidden_Namespace = nil
}

func (x *UpdateVirtualMachineRequest) ClearNetworkName() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 4)
	x.xxx_hidden_NetworkName = nil
}

type UpdateVirtualMachineRequest_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	ScopeUuid    *string
	FacilityName *string
	Name         *string
	Namespace    *string
	NetworkName  *string
	Labels       map[string]string
	Disks        []*VirtualMachineDisk
}

func (b0 UpdateVirtualMachineRequest_builder) Build() *UpdateVirtualMachineRequest {
	m0 := &UpdateVirtualMachineRequest{}
	b, x := &b0, m0
	_, _ = b, x
	if b.ScopeUuid != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 0, 7)
		x.xxx_hidden_ScopeUuid = b.ScopeUuid
	}
	if b.FacilityName != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 1, 7)
		x.xxx_hidden_FacilityName = b.FacilityName
	}
	if b.Name != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 2, 7)
		x.xxx_hidden_Name = b.Name
	}
	if b.Namespace != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 3, 7)
		x.xxx_hidden_Namespace = b.Namespace
	}
	if b.NetworkName != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 4, 7)
		x.xxx_hidden_NetworkName = b.NetworkName
	}
	x.xxx_hidden_Labels = b.Labels
	x.xxx_hidden_Disks = &b.Disks
	return m0
}

type DeleteVirtualMachineRequest struct {
	state                   protoimpl.MessageState `protogen:"opaque.v1"`
	xxx_hidden_ScopeUuid    *string                `protobuf:"bytes,1,opt,name=scope_uuid,json=scopeUuid"`
	xxx_hidden_FacilityName *string                `protobuf:"bytes,2,opt,name=facility_name,json=facilityName"`
	xxx_hidden_Name         *string                `protobuf:"bytes,3,opt,name=name"`
	xxx_hidden_Namespace    *string                `protobuf:"bytes,4,opt,name=namespace"`
	XXX_raceDetectHookData  protoimpl.RaceDetectHookData
	XXX_presence            [1]uint32
	unknownFields           protoimpl.UnknownFields
	sizeCache               protoimpl.SizeCache
}

func (x *DeleteVirtualMachineRequest) Reset() {
	*x = DeleteVirtualMachineRequest{}
	mi := &file_api_kubevirt_v1_kubevirt_proto_msgTypes[16]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DeleteVirtualMachineRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteVirtualMachineRequest) ProtoMessage() {}

func (x *DeleteVirtualMachineRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_kubevirt_v1_kubevirt_proto_msgTypes[16]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *DeleteVirtualMachineRequest) GetScopeUuid() string {
	if x != nil {
		if x.xxx_hidden_ScopeUuid != nil {
			return *x.xxx_hidden_ScopeUuid
		}
		return ""
	}
	return ""
}

func (x *DeleteVirtualMachineRequest) GetFacilityName() string {
	if x != nil {
		if x.xxx_hidden_FacilityName != nil {
			return *x.xxx_hidden_FacilityName
		}
		return ""
	}
	return ""
}

func (x *DeleteVirtualMachineRequest) GetName() string {
	if x != nil {
		if x.xxx_hidden_Name != nil {
			return *x.xxx_hidden_Name
		}
		return ""
	}
	return ""
}

func (x *DeleteVirtualMachineRequest) GetNamespace() string {
	if x != nil {
		if x.xxx_hidden_Namespace != nil {
			return *x.xxx_hidden_Namespace
		}
		return ""
	}
	return ""
}

func (x *DeleteVirtualMachineRequest) SetScopeUuid(v string) {
	x.xxx_hidden_ScopeUuid = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 0, 4)
}

func (x *DeleteVirtualMachineRequest) SetFacilityName(v string) {
	x.xxx_hidden_FacilityName = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 1, 4)
}

func (x *DeleteVirtualMachineRequest) SetName(v string) {
	x.xxx_hidden_Name = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 2, 4)
}

func (x *DeleteVirtualMachineRequest) SetNamespace(v string) {
	x.xxx_hidden_Namespace = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 3, 4)
}

func (x *DeleteVirtualMachineRequest) HasScopeUuid() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 0)
}

func (x *DeleteVirtualMachineRequest) HasFacilityName() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 1)
}

func (x *DeleteVirtualMachineRequest) HasName() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 2)
}

func (x *DeleteVirtualMachineRequest) HasNamespace() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 3)
}

func (x *DeleteVirtualMachineRequest) ClearScopeUuid() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 0)
	x.xxx_hidden_ScopeUuid = nil
}

func (x *DeleteVirtualMachineRequest) ClearFacilityName() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 1)
	x.xxx_hidden_FacilityName = nil
}

func (x *DeleteVirtualMachineRequest) ClearName() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 2)
	x.xxx_hidden_Name = nil
}

func (x *DeleteVirtualMachineRequest) ClearNamespace() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 3)
	x.xxx_hidden_Namespace = nil
}

type DeleteVirtualMachineRequest_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	ScopeUuid    *string
	FacilityName *string
	Name         *string
	Namespace    *string
}

func (b0 DeleteVirtualMachineRequest_builder) Build() *DeleteVirtualMachineRequest {
	m0 := &DeleteVirtualMachineRequest{}
	b, x := &b0, m0
	_, _ = b, x
	if b.ScopeUuid != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 0, 4)
		x.xxx_hidden_ScopeUuid = b.ScopeUuid
	}
	if b.FacilityName != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 1, 4)
		x.xxx_hidden_FacilityName = b.FacilityName
	}
	if b.Name != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 2, 4)
		x.xxx_hidden_Name = b.Name
	}
	if b.Namespace != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 3, 4)
		x.xxx_hidden_Namespace = b.Namespace
	}
	return m0
}

type StartVirtualMachineRequest struct {
	state                   protoimpl.MessageState `protogen:"opaque.v1"`
	xxx_hidden_ScopeUuid    *string                `protobuf:"bytes,1,opt,name=scope_uuid,json=scopeUuid"`
	xxx_hidden_FacilityName *string                `protobuf:"bytes,2,opt,name=facility_name,json=facilityName"`
	xxx_hidden_Name         *string                `protobuf:"bytes,3,opt,name=name"`
	xxx_hidden_Namespace    *string                `protobuf:"bytes,4,opt,name=namespace"`
	XXX_raceDetectHookData  protoimpl.RaceDetectHookData
	XXX_presence            [1]uint32
	unknownFields           protoimpl.UnknownFields
	sizeCache               protoimpl.SizeCache
}

func (x *StartVirtualMachineRequest) Reset() {
	*x = StartVirtualMachineRequest{}
	mi := &file_api_kubevirt_v1_kubevirt_proto_msgTypes[17]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *StartVirtualMachineRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StartVirtualMachineRequest) ProtoMessage() {}

func (x *StartVirtualMachineRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_kubevirt_v1_kubevirt_proto_msgTypes[17]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *StartVirtualMachineRequest) GetScopeUuid() string {
	if x != nil {
		if x.xxx_hidden_ScopeUuid != nil {
			return *x.xxx_hidden_ScopeUuid
		}
		return ""
	}
	return ""
}

func (x *StartVirtualMachineRequest) GetFacilityName() string {
	if x != nil {
		if x.xxx_hidden_FacilityName != nil {
			return *x.xxx_hidden_FacilityName
		}
		return ""
	}
	return ""
}

func (x *StartVirtualMachineRequest) GetName() string {
	if x != nil {
		if x.xxx_hidden_Name != nil {
			return *x.xxx_hidden_Name
		}
		return ""
	}
	return ""
}

func (x *StartVirtualMachineRequest) GetNamespace() string {
	if x != nil {
		if x.xxx_hidden_Namespace != nil {
			return *x.xxx_hidden_Namespace
		}
		return ""
	}
	return ""
}

func (x *StartVirtualMachineRequest) SetScopeUuid(v string) {
	x.xxx_hidden_ScopeUuid = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 0, 4)
}

func (x *StartVirtualMachineRequest) SetFacilityName(v string) {
	x.xxx_hidden_FacilityName = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 1, 4)
}

func (x *StartVirtualMachineRequest) SetName(v string) {
	x.xxx_hidden_Name = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 2, 4)
}

func (x *StartVirtualMachineRequest) SetNamespace(v string) {
	x.xxx_hidden_Namespace = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 3, 4)
}

func (x *StartVirtualMachineRequest) HasScopeUuid() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 0)
}

func (x *StartVirtualMachineRequest) HasFacilityName() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 1)
}

func (x *StartVirtualMachineRequest) HasName() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 2)
}

func (x *StartVirtualMachineRequest) HasNamespace() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 3)
}

func (x *StartVirtualMachineRequest) ClearScopeUuid() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 0)
	x.xxx_hidden_ScopeUuid = nil
}

func (x *StartVirtualMachineRequest) ClearFacilityName() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 1)
	x.xxx_hidden_FacilityName = nil
}

func (x *StartVirtualMachineRequest) ClearName() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 2)
	x.xxx_hidden_Name = nil
}

func (x *StartVirtualMachineRequest) ClearNamespace() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 3)
	x.xxx_hidden_Namespace = nil
}

type StartVirtualMachineRequest_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	ScopeUuid    *string
	FacilityName *string
	Name         *string
	Namespace    *string
}

func (b0 StartVirtualMachineRequest_builder) Build() *StartVirtualMachineRequest {
	m0 := &StartVirtualMachineRequest{}
	b, x := &b0, m0
	_, _ = b, x
	if b.ScopeUuid != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 0, 4)
		x.xxx_hidden_ScopeUuid = b.ScopeUuid
	}
	if b.FacilityName != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 1, 4)
		x.xxx_hidden_FacilityName = b.FacilityName
	}
	if b.Name != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 2, 4)
		x.xxx_hidden_Name = b.Name
	}
	if b.Namespace != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 3, 4)
		x.xxx_hidden_Namespace = b.Namespace
	}
	return m0
}

type StopVirtualMachineRequest struct {
	state                   protoimpl.MessageState `protogen:"opaque.v1"`
	xxx_hidden_ScopeUuid    *string                `protobuf:"bytes,1,opt,name=scope_uuid,json=scopeUuid"`
	xxx_hidden_FacilityName *string                `protobuf:"bytes,2,opt,name=facility_name,json=facilityName"`
	xxx_hidden_Name         *string                `protobuf:"bytes,3,opt,name=name"`
	xxx_hidden_Namespace    *string                `protobuf:"bytes,4,opt,name=namespace"`
	XXX_raceDetectHookData  protoimpl.RaceDetectHookData
	XXX_presence            [1]uint32
	unknownFields           protoimpl.UnknownFields
	sizeCache               protoimpl.SizeCache
}

func (x *StopVirtualMachineRequest) Reset() {
	*x = StopVirtualMachineRequest{}
	mi := &file_api_kubevirt_v1_kubevirt_proto_msgTypes[18]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *StopVirtualMachineRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StopVirtualMachineRequest) ProtoMessage() {}

func (x *StopVirtualMachineRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_kubevirt_v1_kubevirt_proto_msgTypes[18]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *StopVirtualMachineRequest) GetScopeUuid() string {
	if x != nil {
		if x.xxx_hidden_ScopeUuid != nil {
			return *x.xxx_hidden_ScopeUuid
		}
		return ""
	}
	return ""
}

func (x *StopVirtualMachineRequest) GetFacilityName() string {
	if x != nil {
		if x.xxx_hidden_FacilityName != nil {
			return *x.xxx_hidden_FacilityName
		}
		return ""
	}
	return ""
}

func (x *StopVirtualMachineRequest) GetName() string {
	if x != nil {
		if x.xxx_hidden_Name != nil {
			return *x.xxx_hidden_Name
		}
		return ""
	}
	return ""
}

func (x *StopVirtualMachineRequest) GetNamespace() string {
	if x != nil {
		if x.xxx_hidden_Namespace != nil {
			return *x.xxx_hidden_Namespace
		}
		return ""
	}
	return ""
}

func (x *StopVirtualMachineRequest) SetScopeUuid(v string) {
	x.xxx_hidden_ScopeUuid = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 0, 4)
}

func (x *StopVirtualMachineRequest) SetFacilityName(v string) {
	x.xxx_hidden_FacilityName = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 1, 4)
}

func (x *StopVirtualMachineRequest) SetName(v string) {
	x.xxx_hidden_Name = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 2, 4)
}

func (x *StopVirtualMachineRequest) SetNamespace(v string) {
	x.xxx_hidden_Namespace = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 3, 4)
}

func (x *StopVirtualMachineRequest) HasScopeUuid() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 0)
}

func (x *StopVirtualMachineRequest) HasFacilityName() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 1)
}

func (x *StopVirtualMachineRequest) HasName() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 2)
}

func (x *StopVirtualMachineRequest) HasNamespace() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 3)
}

func (x *StopVirtualMachineRequest) ClearScopeUuid() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 0)
	x.xxx_hidden_ScopeUuid = nil
}

func (x *StopVirtualMachineRequest) ClearFacilityName() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 1)
	x.xxx_hidden_FacilityName = nil
}

func (x *StopVirtualMachineRequest) ClearName() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 2)
	x.xxx_hidden_Name = nil
}

func (x *StopVirtualMachineRequest) ClearNamespace() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 3)
	x.xxx_hidden_Namespace = nil
}

type StopVirtualMachineRequest_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	ScopeUuid    *string
	FacilityName *string
	Name         *string
	Namespace    *string
}

func (b0 StopVirtualMachineRequest_builder) Build() *StopVirtualMachineRequest {
	m0 := &StopVirtualMachineRequest{}
	b, x := &b0, m0
	_, _ = b, x
	if b.ScopeUuid != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 0, 4)
		x.xxx_hidden_ScopeUuid = b.ScopeUuid
	}
	if b.FacilityName != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 1, 4)
		x.xxx_hidden_FacilityName = b.FacilityName
	}
	if b.Name != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 2, 4)
		x.xxx_hidden_Name = b.Name
	}
	if b.Namespace != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 3, 4)
		x.xxx_hidden_Namespace = b.Namespace
	}
	return m0
}

type PauseVirtualMachineRequest struct {
	state                   protoimpl.MessageState `protogen:"opaque.v1"`
	xxx_hidden_ScopeUuid    *string                `protobuf:"bytes,1,opt,name=scope_uuid,json=scopeUuid"`
	xxx_hidden_FacilityName *string                `protobuf:"bytes,2,opt,name=facility_name,json=facilityName"`
	xxx_hidden_Name         *string                `protobuf:"bytes,3,opt,name=name"`
	xxx_hidden_Namespace    *string                `protobuf:"bytes,4,opt,name=namespace"`
	XXX_raceDetectHookData  protoimpl.RaceDetectHookData
	XXX_presence            [1]uint32
	unknownFields           protoimpl.UnknownFields
	sizeCache               protoimpl.SizeCache
}

func (x *PauseVirtualMachineRequest) Reset() {
	*x = PauseVirtualMachineRequest{}
	mi := &file_api_kubevirt_v1_kubevirt_proto_msgTypes[19]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *PauseVirtualMachineRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PauseVirtualMachineRequest) ProtoMessage() {}

func (x *PauseVirtualMachineRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_kubevirt_v1_kubevirt_proto_msgTypes[19]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *PauseVirtualMachineRequest) GetScopeUuid() string {
	if x != nil {
		if x.xxx_hidden_ScopeUuid != nil {
			return *x.xxx_hidden_ScopeUuid
		}
		return ""
	}
	return ""
}

func (x *PauseVirtualMachineRequest) GetFacilityName() string {
	if x != nil {
		if x.xxx_hidden_FacilityName != nil {
			return *x.xxx_hidden_FacilityName
		}
		return ""
	}
	return ""
}

func (x *PauseVirtualMachineRequest) GetName() string {
	if x != nil {
		if x.xxx_hidden_Name != nil {
			return *x.xxx_hidden_Name
		}
		return ""
	}
	return ""
}

func (x *PauseVirtualMachineRequest) GetNamespace() string {
	if x != nil {
		if x.xxx_hidden_Namespace != nil {
			return *x.xxx_hidden_Namespace
		}
		return ""
	}
	return ""
}

func (x *PauseVirtualMachineRequest) SetScopeUuid(v string) {
	x.xxx_hidden_ScopeUuid = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 0, 4)
}

func (x *PauseVirtualMachineRequest) SetFacilityName(v string) {
	x.xxx_hidden_FacilityName = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 1, 4)
}

func (x *PauseVirtualMachineRequest) SetName(v string) {
	x.xxx_hidden_Name = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 2, 4)
}

func (x *PauseVirtualMachineRequest) SetNamespace(v string) {
	x.xxx_hidden_Namespace = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 3, 4)
}

func (x *PauseVirtualMachineRequest) HasScopeUuid() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 0)
}

func (x *PauseVirtualMachineRequest) HasFacilityName() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 1)
}

func (x *PauseVirtualMachineRequest) HasName() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 2)
}

func (x *PauseVirtualMachineRequest) HasNamespace() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 3)
}

func (x *PauseVirtualMachineRequest) ClearScopeUuid() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 0)
	x.xxx_hidden_ScopeUuid = nil
}

func (x *PauseVirtualMachineRequest) ClearFacilityName() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 1)
	x.xxx_hidden_FacilityName = nil
}

func (x *PauseVirtualMachineRequest) ClearName() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 2)
	x.xxx_hidden_Name = nil
}

func (x *PauseVirtualMachineRequest) ClearNamespace() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 3)
	x.xxx_hidden_Namespace = nil
}

type PauseVirtualMachineRequest_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	ScopeUuid    *string
	FacilityName *string
	Name         *string
	Namespace    *string
}

func (b0 PauseVirtualMachineRequest_builder) Build() *PauseVirtualMachineRequest {
	m0 := &PauseVirtualMachineRequest{}
	b, x := &b0, m0
	_, _ = b, x
	if b.ScopeUuid != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 0, 4)
		x.xxx_hidden_ScopeUuid = b.ScopeUuid
	}
	if b.FacilityName != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 1, 4)
		x.xxx_hidden_FacilityName = b.FacilityName
	}
	if b.Name != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 2, 4)
		x.xxx_hidden_Name = b.Name
	}
	if b.Namespace != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 3, 4)
		x.xxx_hidden_Namespace = b.Namespace
	}
	return m0
}

type ResumeVirtualMachineRequest struct {
	state                   protoimpl.MessageState `protogen:"opaque.v1"`
	xxx_hidden_ScopeUuid    *string                `protobuf:"bytes,1,opt,name=scope_uuid,json=scopeUuid"`
	xxx_hidden_FacilityName *string                `protobuf:"bytes,2,opt,name=facility_name,json=facilityName"`
	xxx_hidden_Name         *string                `protobuf:"bytes,3,opt,name=name"`
	xxx_hidden_Namespace    *string                `protobuf:"bytes,4,opt,name=namespace"`
	XXX_raceDetectHookData  protoimpl.RaceDetectHookData
	XXX_presence            [1]uint32
	unknownFields           protoimpl.UnknownFields
	sizeCache               protoimpl.SizeCache
}

func (x *ResumeVirtualMachineRequest) Reset() {
	*x = ResumeVirtualMachineRequest{}
	mi := &file_api_kubevirt_v1_kubevirt_proto_msgTypes[20]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ResumeVirtualMachineRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ResumeVirtualMachineRequest) ProtoMessage() {}

func (x *ResumeVirtualMachineRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_kubevirt_v1_kubevirt_proto_msgTypes[20]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *ResumeVirtualMachineRequest) GetScopeUuid() string {
	if x != nil {
		if x.xxx_hidden_ScopeUuid != nil {
			return *x.xxx_hidden_ScopeUuid
		}
		return ""
	}
	return ""
}

func (x *ResumeVirtualMachineRequest) GetFacilityName() string {
	if x != nil {
		if x.xxx_hidden_FacilityName != nil {
			return *x.xxx_hidden_FacilityName
		}
		return ""
	}
	return ""
}

func (x *ResumeVirtualMachineRequest) GetName() string {
	if x != nil {
		if x.xxx_hidden_Name != nil {
			return *x.xxx_hidden_Name
		}
		return ""
	}
	return ""
}

func (x *ResumeVirtualMachineRequest) GetNamespace() string {
	if x != nil {
		if x.xxx_hidden_Namespace != nil {
			return *x.xxx_hidden_Namespace
		}
		return ""
	}
	return ""
}

func (x *ResumeVirtualMachineRequest) SetScopeUuid(v string) {
	x.xxx_hidden_ScopeUuid = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 0, 4)
}

func (x *ResumeVirtualMachineRequest) SetFacilityName(v string) {
	x.xxx_hidden_FacilityName = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 1, 4)
}

func (x *ResumeVirtualMachineRequest) SetName(v string) {
	x.xxx_hidden_Name = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 2, 4)
}

func (x *ResumeVirtualMachineRequest) SetNamespace(v string) {
	x.xxx_hidden_Namespace = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 3, 4)
}

func (x *ResumeVirtualMachineRequest) HasScopeUuid() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 0)
}

func (x *ResumeVirtualMachineRequest) HasFacilityName() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 1)
}

func (x *ResumeVirtualMachineRequest) HasName() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 2)
}

func (x *ResumeVirtualMachineRequest) HasNamespace() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 3)
}

func (x *ResumeVirtualMachineRequest) ClearScopeUuid() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 0)
	x.xxx_hidden_ScopeUuid = nil
}

func (x *ResumeVirtualMachineRequest) ClearFacilityName() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 1)
	x.xxx_hidden_FacilityName = nil
}

func (x *ResumeVirtualMachineRequest) ClearName() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 2)
	x.xxx_hidden_Name = nil
}

func (x *ResumeVirtualMachineRequest) ClearNamespace() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 3)
	x.xxx_hidden_Namespace = nil
}

type ResumeVirtualMachineRequest_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	ScopeUuid    *string
	FacilityName *string
	Name         *string
	Namespace    *string
}

func (b0 ResumeVirtualMachineRequest_builder) Build() *ResumeVirtualMachineRequest {
	m0 := &ResumeVirtualMachineRequest{}
	b, x := &b0, m0
	_, _ = b, x
	if b.ScopeUuid != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 0, 4)
		x.xxx_hidden_ScopeUuid = b.ScopeUuid
	}
	if b.FacilityName != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 1, 4)
		x.xxx_hidden_FacilityName = b.FacilityName
	}
	if b.Name != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 2, 4)
		x.xxx_hidden_Name = b.Name
	}
	if b.Namespace != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 3, 4)
		x.xxx_hidden_Namespace = b.Namespace
	}
	return m0
}

type SnapshotVirtualMachineRequest struct {
	state                   protoimpl.MessageState `protogen:"opaque.v1"`
	xxx_hidden_ScopeUuid    *string                `protobuf:"bytes,1,opt,name=scope_uuid,json=scopeUuid"`
	xxx_hidden_FacilityName *string                `protobuf:"bytes,2,opt,name=facility_name,json=facilityName"`
	xxx_hidden_Name         *string                `protobuf:"bytes,3,opt,name=name"`
	xxx_hidden_Namespace    *string                `protobuf:"bytes,4,opt,name=namespace"`
	xxx_hidden_SnapshotName *string                `protobuf:"bytes,5,opt,name=snapshot_name,json=snapshotName"`
	xxx_hidden_Description  *string                `protobuf:"bytes,11,opt,name=description"`
	XXX_raceDetectHookData  protoimpl.RaceDetectHookData
	XXX_presence            [1]uint32
	unknownFields           protoimpl.UnknownFields
	sizeCache               protoimpl.SizeCache
}

func (x *SnapshotVirtualMachineRequest) Reset() {
	*x = SnapshotVirtualMachineRequest{}
	mi := &file_api_kubevirt_v1_kubevirt_proto_msgTypes[21]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SnapshotVirtualMachineRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SnapshotVirtualMachineRequest) ProtoMessage() {}

func (x *SnapshotVirtualMachineRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_kubevirt_v1_kubevirt_proto_msgTypes[21]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *SnapshotVirtualMachineRequest) GetScopeUuid() string {
	if x != nil {
		if x.xxx_hidden_ScopeUuid != nil {
			return *x.xxx_hidden_ScopeUuid
		}
		return ""
	}
	return ""
}

func (x *SnapshotVirtualMachineRequest) GetFacilityName() string {
	if x != nil {
		if x.xxx_hidden_FacilityName != nil {
			return *x.xxx_hidden_FacilityName
		}
		return ""
	}
	return ""
}

func (x *SnapshotVirtualMachineRequest) GetName() string {
	if x != nil {
		if x.xxx_hidden_Name != nil {
			return *x.xxx_hidden_Name
		}
		return ""
	}
	return ""
}

func (x *SnapshotVirtualMachineRequest) GetNamespace() string {
	if x != nil {
		if x.xxx_hidden_Namespace != nil {
			return *x.xxx_hidden_Namespace
		}
		return ""
	}
	return ""
}

func (x *SnapshotVirtualMachineRequest) GetSnapshotName() string {
	if x != nil {
		if x.xxx_hidden_SnapshotName != nil {
			return *x.xxx_hidden_SnapshotName
		}
		return ""
	}
	return ""
}

func (x *SnapshotVirtualMachineRequest) GetDescription() string {
	if x != nil {
		if x.xxx_hidden_Description != nil {
			return *x.xxx_hidden_Description
		}
		return ""
	}
	return ""
}

func (x *SnapshotVirtualMachineRequest) SetScopeUuid(v string) {
	x.xxx_hidden_ScopeUuid = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 0, 6)
}

func (x *SnapshotVirtualMachineRequest) SetFacilityName(v string) {
	x.xxx_hidden_FacilityName = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 1, 6)
}

func (x *SnapshotVirtualMachineRequest) SetName(v string) {
	x.xxx_hidden_Name = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 2, 6)
}

func (x *SnapshotVirtualMachineRequest) SetNamespace(v string) {
	x.xxx_hidden_Namespace = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 3, 6)
}

func (x *SnapshotVirtualMachineRequest) SetSnapshotName(v string) {
	x.xxx_hidden_SnapshotName = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 4, 6)
}

func (x *SnapshotVirtualMachineRequest) SetDescription(v string) {
	x.xxx_hidden_Description = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 5, 6)
}

func (x *SnapshotVirtualMachineRequest) HasScopeUuid() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 0)
}

func (x *SnapshotVirtualMachineRequest) HasFacilityName() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 1)
}

func (x *SnapshotVirtualMachineRequest) HasName() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 2)
}

func (x *SnapshotVirtualMachineRequest) HasNamespace() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 3)
}

func (x *SnapshotVirtualMachineRequest) HasSnapshotName() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 4)
}

func (x *SnapshotVirtualMachineRequest) HasDescription() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 5)
}

func (x *SnapshotVirtualMachineRequest) ClearScopeUuid() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 0)
	x.xxx_hidden_ScopeUuid = nil
}

func (x *SnapshotVirtualMachineRequest) ClearFacilityName() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 1)
	x.xxx_hidden_FacilityName = nil
}

func (x *SnapshotVirtualMachineRequest) ClearName() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 2)
	x.xxx_hidden_Name = nil
}

func (x *SnapshotVirtualMachineRequest) ClearNamespace() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 3)
	x.xxx_hidden_Namespace = nil
}

func (x *SnapshotVirtualMachineRequest) ClearSnapshotName() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 4)
	x.xxx_hidden_SnapshotName = nil
}

func (x *SnapshotVirtualMachineRequest) ClearDescription() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 5)
	x.xxx_hidden_Description = nil
}

type SnapshotVirtualMachineRequest_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	ScopeUuid    *string
	FacilityName *string
	Name         *string
	Namespace    *string
	SnapshotName *string
	Description  *string
}

func (b0 SnapshotVirtualMachineRequest_builder) Build() *SnapshotVirtualMachineRequest {
	m0 := &SnapshotVirtualMachineRequest{}
	b, x := &b0, m0
	_, _ = b, x
	if b.ScopeUuid != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 0, 6)
		x.xxx_hidden_ScopeUuid = b.ScopeUuid
	}
	if b.FacilityName != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 1, 6)
		x.xxx_hidden_FacilityName = b.FacilityName
	}
	if b.Name != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 2, 6)
		x.xxx_hidden_Name = b.Name
	}
	if b.Namespace != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 3, 6)
		x.xxx_hidden_Namespace = b.Namespace
	}
	if b.SnapshotName != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 4, 6)
		x.xxx_hidden_SnapshotName = b.SnapshotName
	}
	if b.Description != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 5, 6)
		x.xxx_hidden_Description = b.Description
	}
	return m0
}

type CloneVirtualMachineRequest struct {
	state                      protoimpl.MessageState `protogen:"opaque.v1"`
	xxx_hidden_ScopeUuid       *string                `protobuf:"bytes,1,opt,name=scope_uuid,json=scopeUuid"`
	xxx_hidden_FacilityName    *string                `protobuf:"bytes,2,opt,name=facility_name,json=facilityName"`
	xxx_hidden_TargetName      *string                `protobuf:"bytes,3,opt,name=target_name,json=targetName"`
	xxx_hidden_TargetNamespace *string                `protobuf:"bytes,4,opt,name=target_namespace,json=targetNamespace"`
	xxx_hidden_SourceName      *string                `protobuf:"bytes,5,opt,name=source_name,json=sourceName"`
	xxx_hidden_SourceNamespace *string                `protobuf:"bytes,6,opt,name=source_namespace,json=sourceNamespace"`
	XXX_raceDetectHookData     protoimpl.RaceDetectHookData
	XXX_presence               [1]uint32
	unknownFields              protoimpl.UnknownFields
	sizeCache                  protoimpl.SizeCache
}

func (x *CloneVirtualMachineRequest) Reset() {
	*x = CloneVirtualMachineRequest{}
	mi := &file_api_kubevirt_v1_kubevirt_proto_msgTypes[22]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CloneVirtualMachineRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CloneVirtualMachineRequest) ProtoMessage() {}

func (x *CloneVirtualMachineRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_kubevirt_v1_kubevirt_proto_msgTypes[22]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *CloneVirtualMachineRequest) GetScopeUuid() string {
	if x != nil {
		if x.xxx_hidden_ScopeUuid != nil {
			return *x.xxx_hidden_ScopeUuid
		}
		return ""
	}
	return ""
}

func (x *CloneVirtualMachineRequest) GetFacilityName() string {
	if x != nil {
		if x.xxx_hidden_FacilityName != nil {
			return *x.xxx_hidden_FacilityName
		}
		return ""
	}
	return ""
}

func (x *CloneVirtualMachineRequest) GetTargetName() string {
	if x != nil {
		if x.xxx_hidden_TargetName != nil {
			return *x.xxx_hidden_TargetName
		}
		return ""
	}
	return ""
}

func (x *CloneVirtualMachineRequest) GetTargetNamespace() string {
	if x != nil {
		if x.xxx_hidden_TargetNamespace != nil {
			return *x.xxx_hidden_TargetNamespace
		}
		return ""
	}
	return ""
}

func (x *CloneVirtualMachineRequest) GetSourceName() string {
	if x != nil {
		if x.xxx_hidden_SourceName != nil {
			return *x.xxx_hidden_SourceName
		}
		return ""
	}
	return ""
}

func (x *CloneVirtualMachineRequest) GetSourceNamespace() string {
	if x != nil {
		if x.xxx_hidden_SourceNamespace != nil {
			return *x.xxx_hidden_SourceNamespace
		}
		return ""
	}
	return ""
}

func (x *CloneVirtualMachineRequest) SetScopeUuid(v string) {
	x.xxx_hidden_ScopeUuid = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 0, 6)
}

func (x *CloneVirtualMachineRequest) SetFacilityName(v string) {
	x.xxx_hidden_FacilityName = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 1, 6)
}

func (x *CloneVirtualMachineRequest) SetTargetName(v string) {
	x.xxx_hidden_TargetName = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 2, 6)
}

func (x *CloneVirtualMachineRequest) SetTargetNamespace(v string) {
	x.xxx_hidden_TargetNamespace = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 3, 6)
}

func (x *CloneVirtualMachineRequest) SetSourceName(v string) {
	x.xxx_hidden_SourceName = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 4, 6)
}

func (x *CloneVirtualMachineRequest) SetSourceNamespace(v string) {
	x.xxx_hidden_SourceNamespace = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 5, 6)
}

func (x *CloneVirtualMachineRequest) HasScopeUuid() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 0)
}

func (x *CloneVirtualMachineRequest) HasFacilityName() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 1)
}

func (x *CloneVirtualMachineRequest) HasTargetName() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 2)
}

func (x *CloneVirtualMachineRequest) HasTargetNamespace() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 3)
}

func (x *CloneVirtualMachineRequest) HasSourceName() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 4)
}

func (x *CloneVirtualMachineRequest) HasSourceNamespace() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 5)
}

func (x *CloneVirtualMachineRequest) ClearScopeUuid() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 0)
	x.xxx_hidden_ScopeUuid = nil
}

func (x *CloneVirtualMachineRequest) ClearFacilityName() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 1)
	x.xxx_hidden_FacilityName = nil
}

func (x *CloneVirtualMachineRequest) ClearTargetName() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 2)
	x.xxx_hidden_TargetName = nil
}

func (x *CloneVirtualMachineRequest) ClearTargetNamespace() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 3)
	x.xxx_hidden_TargetNamespace = nil
}

func (x *CloneVirtualMachineRequest) ClearSourceName() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 4)
	x.xxx_hidden_SourceName = nil
}

func (x *CloneVirtualMachineRequest) ClearSourceNamespace() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 5)
	x.xxx_hidden_SourceNamespace = nil
}

type CloneVirtualMachineRequest_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	ScopeUuid       *string
	FacilityName    *string
	TargetName      *string
	TargetNamespace *string
	SourceName      *string
	SourceNamespace *string
}

func (b0 CloneVirtualMachineRequest_builder) Build() *CloneVirtualMachineRequest {
	m0 := &CloneVirtualMachineRequest{}
	b, x := &b0, m0
	_, _ = b, x
	if b.ScopeUuid != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 0, 6)
		x.xxx_hidden_ScopeUuid = b.ScopeUuid
	}
	if b.FacilityName != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 1, 6)
		x.xxx_hidden_FacilityName = b.FacilityName
	}
	if b.TargetName != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 2, 6)
		x.xxx_hidden_TargetName = b.TargetName
	}
	if b.TargetNamespace != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 3, 6)
		x.xxx_hidden_TargetNamespace = b.TargetNamespace
	}
	if b.SourceName != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 4, 6)
		x.xxx_hidden_SourceName = b.SourceName
	}
	if b.SourceNamespace != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 5, 6)
		x.xxx_hidden_SourceNamespace = b.SourceNamespace
	}
	return m0
}

type RestoreVirtualMachineRequest struct {
	state                   protoimpl.MessageState `protogen:"opaque.v1"`
	xxx_hidden_ScopeUuid    *string                `protobuf:"bytes,1,opt,name=scope_uuid,json=scopeUuid"`
	xxx_hidden_FacilityName *string                `protobuf:"bytes,2,opt,name=facility_name,json=facilityName"`
	xxx_hidden_Name         *string                `protobuf:"bytes,3,opt,name=name"`
	xxx_hidden_Namespace    *string                `protobuf:"bytes,4,opt,name=namespace"`
	xxx_hidden_SnapshotName *string                `protobuf:"bytes,5,opt,name=snapshot_name,json=snapshotName"`
	XXX_raceDetectHookData  protoimpl.RaceDetectHookData
	XXX_presence            [1]uint32
	unknownFields           protoimpl.UnknownFields
	sizeCache               protoimpl.SizeCache
}

func (x *RestoreVirtualMachineRequest) Reset() {
	*x = RestoreVirtualMachineRequest{}
	mi := &file_api_kubevirt_v1_kubevirt_proto_msgTypes[23]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RestoreVirtualMachineRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RestoreVirtualMachineRequest) ProtoMessage() {}

func (x *RestoreVirtualMachineRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_kubevirt_v1_kubevirt_proto_msgTypes[23]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *RestoreVirtualMachineRequest) GetScopeUuid() string {
	if x != nil {
		if x.xxx_hidden_ScopeUuid != nil {
			return *x.xxx_hidden_ScopeUuid
		}
		return ""
	}
	return ""
}

func (x *RestoreVirtualMachineRequest) GetFacilityName() string {
	if x != nil {
		if x.xxx_hidden_FacilityName != nil {
			return *x.xxx_hidden_FacilityName
		}
		return ""
	}
	return ""
}

func (x *RestoreVirtualMachineRequest) GetName() string {
	if x != nil {
		if x.xxx_hidden_Name != nil {
			return *x.xxx_hidden_Name
		}
		return ""
	}
	return ""
}

func (x *RestoreVirtualMachineRequest) GetNamespace() string {
	if x != nil {
		if x.xxx_hidden_Namespace != nil {
			return *x.xxx_hidden_Namespace
		}
		return ""
	}
	return ""
}

func (x *RestoreVirtualMachineRequest) GetSnapshotName() string {
	if x != nil {
		if x.xxx_hidden_SnapshotName != nil {
			return *x.xxx_hidden_SnapshotName
		}
		return ""
	}
	return ""
}

func (x *RestoreVirtualMachineRequest) SetScopeUuid(v string) {
	x.xxx_hidden_ScopeUuid = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 0, 5)
}

func (x *RestoreVirtualMachineRequest) SetFacilityName(v string) {
	x.xxx_hidden_FacilityName = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 1, 5)
}

func (x *RestoreVirtualMachineRequest) SetName(v string) {
	x.xxx_hidden_Name = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 2, 5)
}

func (x *RestoreVirtualMachineRequest) SetNamespace(v string) {
	x.xxx_hidden_Namespace = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 3, 5)
}

func (x *RestoreVirtualMachineRequest) SetSnapshotName(v string) {
	x.xxx_hidden_SnapshotName = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 4, 5)
}

func (x *RestoreVirtualMachineRequest) HasScopeUuid() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 0)
}

func (x *RestoreVirtualMachineRequest) HasFacilityName() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 1)
}

func (x *RestoreVirtualMachineRequest) HasName() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 2)
}

func (x *RestoreVirtualMachineRequest) HasNamespace() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 3)
}

func (x *RestoreVirtualMachineRequest) HasSnapshotName() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 4)
}

func (x *RestoreVirtualMachineRequest) ClearScopeUuid() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 0)
	x.xxx_hidden_ScopeUuid = nil
}

func (x *RestoreVirtualMachineRequest) ClearFacilityName() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 1)
	x.xxx_hidden_FacilityName = nil
}

func (x *RestoreVirtualMachineRequest) ClearName() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 2)
	x.xxx_hidden_Name = nil
}

func (x *RestoreVirtualMachineRequest) ClearNamespace() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 3)
	x.xxx_hidden_Namespace = nil
}

func (x *RestoreVirtualMachineRequest) ClearSnapshotName() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 4)
	x.xxx_hidden_SnapshotName = nil
}

type RestoreVirtualMachineRequest_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	ScopeUuid    *string
	FacilityName *string
	Name         *string
	Namespace    *string
	SnapshotName *string
}

func (b0 RestoreVirtualMachineRequest_builder) Build() *RestoreVirtualMachineRequest {
	m0 := &RestoreVirtualMachineRequest{}
	b, x := &b0, m0
	_, _ = b, x
	if b.ScopeUuid != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 0, 5)
		x.xxx_hidden_ScopeUuid = b.ScopeUuid
	}
	if b.FacilityName != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 1, 5)
		x.xxx_hidden_FacilityName = b.FacilityName
	}
	if b.Name != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 2, 5)
		x.xxx_hidden_Name = b.Name
	}
	if b.Namespace != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 3, 5)
		x.xxx_hidden_Namespace = b.Namespace
	}
	if b.SnapshotName != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 4, 5)
		x.xxx_hidden_SnapshotName = b.SnapshotName
	}
	return m0
}

type MigrateVirtualMachineRequest struct {
	state                   protoimpl.MessageState `protogen:"opaque.v1"`
	xxx_hidden_ScopeUuid    *string                `protobuf:"bytes,1,opt,name=scope_uuid,json=scopeUuid"`
	xxx_hidden_FacilityName *string                `protobuf:"bytes,2,opt,name=facility_name,json=facilityName"`
	xxx_hidden_Name         *string                `protobuf:"bytes,3,opt,name=name"`
	xxx_hidden_Namespace    *string                `protobuf:"bytes,4,opt,name=namespace"`
	xxx_hidden_TargetNode   *string                `protobuf:"bytes,5,opt,name=target_node,json=targetNode"`
	XXX_raceDetectHookData  protoimpl.RaceDetectHookData
	XXX_presence            [1]uint32
	unknownFields           protoimpl.UnknownFields
	sizeCache               protoimpl.SizeCache
}

func (x *MigrateVirtualMachineRequest) Reset() {
	*x = MigrateVirtualMachineRequest{}
	mi := &file_api_kubevirt_v1_kubevirt_proto_msgTypes[24]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *MigrateVirtualMachineRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MigrateVirtualMachineRequest) ProtoMessage() {}

func (x *MigrateVirtualMachineRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_kubevirt_v1_kubevirt_proto_msgTypes[24]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *MigrateVirtualMachineRequest) GetScopeUuid() string {
	if x != nil {
		if x.xxx_hidden_ScopeUuid != nil {
			return *x.xxx_hidden_ScopeUuid
		}
		return ""
	}
	return ""
}

func (x *MigrateVirtualMachineRequest) GetFacilityName() string {
	if x != nil {
		if x.xxx_hidden_FacilityName != nil {
			return *x.xxx_hidden_FacilityName
		}
		return ""
	}
	return ""
}

func (x *MigrateVirtualMachineRequest) GetName() string {
	if x != nil {
		if x.xxx_hidden_Name != nil {
			return *x.xxx_hidden_Name
		}
		return ""
	}
	return ""
}

func (x *MigrateVirtualMachineRequest) GetNamespace() string {
	if x != nil {
		if x.xxx_hidden_Namespace != nil {
			return *x.xxx_hidden_Namespace
		}
		return ""
	}
	return ""
}

func (x *MigrateVirtualMachineRequest) GetTargetNode() string {
	if x != nil {
		if x.xxx_hidden_TargetNode != nil {
			return *x.xxx_hidden_TargetNode
		}
		return ""
	}
	return ""
}

func (x *MigrateVirtualMachineRequest) SetScopeUuid(v string) {
	x.xxx_hidden_ScopeUuid = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 0, 5)
}

func (x *MigrateVirtualMachineRequest) SetFacilityName(v string) {
	x.xxx_hidden_FacilityName = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 1, 5)
}

func (x *MigrateVirtualMachineRequest) SetName(v string) {
	x.xxx_hidden_Name = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 2, 5)
}

func (x *MigrateVirtualMachineRequest) SetNamespace(v string) {
	x.xxx_hidden_Namespace = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 3, 5)
}

func (x *MigrateVirtualMachineRequest) SetTargetNode(v string) {
	x.xxx_hidden_TargetNode = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 4, 5)
}

func (x *MigrateVirtualMachineRequest) HasScopeUuid() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 0)
}

func (x *MigrateVirtualMachineRequest) HasFacilityName() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 1)
}

func (x *MigrateVirtualMachineRequest) HasName() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 2)
}

func (x *MigrateVirtualMachineRequest) HasNamespace() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 3)
}

func (x *MigrateVirtualMachineRequest) HasTargetNode() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 4)
}

func (x *MigrateVirtualMachineRequest) ClearScopeUuid() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 0)
	x.xxx_hidden_ScopeUuid = nil
}

func (x *MigrateVirtualMachineRequest) ClearFacilityName() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 1)
	x.xxx_hidden_FacilityName = nil
}

func (x *MigrateVirtualMachineRequest) ClearName() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 2)
	x.xxx_hidden_Name = nil
}

func (x *MigrateVirtualMachineRequest) ClearNamespace() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 3)
	x.xxx_hidden_Namespace = nil
}

func (x *MigrateVirtualMachineRequest) ClearTargetNode() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 4)
	x.xxx_hidden_TargetNode = nil
}

type MigrateVirtualMachineRequest_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	ScopeUuid    *string
	FacilityName *string
	Name         *string
	Namespace    *string
	TargetNode   *string
}

func (b0 MigrateVirtualMachineRequest_builder) Build() *MigrateVirtualMachineRequest {
	m0 := &MigrateVirtualMachineRequest{}
	b, x := &b0, m0
	_, _ = b, x
	if b.ScopeUuid != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 0, 5)
		x.xxx_hidden_ScopeUuid = b.ScopeUuid
	}
	if b.FacilityName != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 1, 5)
		x.xxx_hidden_FacilityName = b.FacilityName
	}
	if b.Name != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 2, 5)
		x.xxx_hidden_Name = b.Name
	}
	if b.Namespace != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 3, 5)
		x.xxx_hidden_Namespace = b.Namespace
	}
	if b.TargetNode != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 4, 5)
		x.xxx_hidden_TargetNode = b.TargetNode
	}
	return m0
}

type GetVirtualMachineSnapshotRequest struct {
	state                   protoimpl.MessageState `protogen:"opaque.v1"`
	xxx_hidden_ScopeUuid    *string                `protobuf:"bytes,1,opt,name=scope_uuid,json=scopeUuid"`
	xxx_hidden_FacilityName *string                `protobuf:"bytes,2,opt,name=facility_name,json=facilityName"`
	xxx_hidden_Name         *string                `protobuf:"bytes,3,opt,name=name"`
	xxx_hidden_Namespace    *string                `protobuf:"bytes,4,opt,name=namespace"`
	XXX_raceDetectHookData  protoimpl.RaceDetectHookData
	XXX_presence            [1]uint32
	unknownFields           protoimpl.UnknownFields
	sizeCache               protoimpl.SizeCache
}

func (x *GetVirtualMachineSnapshotRequest) Reset() {
	*x = GetVirtualMachineSnapshotRequest{}
	mi := &file_api_kubevirt_v1_kubevirt_proto_msgTypes[25]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetVirtualMachineSnapshotRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetVirtualMachineSnapshotRequest) ProtoMessage() {}

func (x *GetVirtualMachineSnapshotRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_kubevirt_v1_kubevirt_proto_msgTypes[25]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *GetVirtualMachineSnapshotRequest) GetScopeUuid() string {
	if x != nil {
		if x.xxx_hidden_ScopeUuid != nil {
			return *x.xxx_hidden_ScopeUuid
		}
		return ""
	}
	return ""
}

func (x *GetVirtualMachineSnapshotRequest) GetFacilityName() string {
	if x != nil {
		if x.xxx_hidden_FacilityName != nil {
			return *x.xxx_hidden_FacilityName
		}
		return ""
	}
	return ""
}

func (x *GetVirtualMachineSnapshotRequest) GetName() string {
	if x != nil {
		if x.xxx_hidden_Name != nil {
			return *x.xxx_hidden_Name
		}
		return ""
	}
	return ""
}

func (x *GetVirtualMachineSnapshotRequest) GetNamespace() string {
	if x != nil {
		if x.xxx_hidden_Namespace != nil {
			return *x.xxx_hidden_Namespace
		}
		return ""
	}
	return ""
}

func (x *GetVirtualMachineSnapshotRequest) SetScopeUuid(v string) {
	x.xxx_hidden_ScopeUuid = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 0, 4)
}

func (x *GetVirtualMachineSnapshotRequest) SetFacilityName(v string) {
	x.xxx_hidden_FacilityName = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 1, 4)
}

func (x *GetVirtualMachineSnapshotRequest) SetName(v string) {
	x.xxx_hidden_Name = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 2, 4)
}

func (x *GetVirtualMachineSnapshotRequest) SetNamespace(v string) {
	x.xxx_hidden_Namespace = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 3, 4)
}

func (x *GetVirtualMachineSnapshotRequest) HasScopeUuid() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 0)
}

func (x *GetVirtualMachineSnapshotRequest) HasFacilityName() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 1)
}

func (x *GetVirtualMachineSnapshotRequest) HasName() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 2)
}

func (x *GetVirtualMachineSnapshotRequest) HasNamespace() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 3)
}

func (x *GetVirtualMachineSnapshotRequest) ClearScopeUuid() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 0)
	x.xxx_hidden_ScopeUuid = nil
}

func (x *GetVirtualMachineSnapshotRequest) ClearFacilityName() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 1)
	x.xxx_hidden_FacilityName = nil
}

func (x *GetVirtualMachineSnapshotRequest) ClearName() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 2)
	x.xxx_hidden_Name = nil
}

func (x *GetVirtualMachineSnapshotRequest) ClearNamespace() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 3)
	x.xxx_hidden_Namespace = nil
}

type GetVirtualMachineSnapshotRequest_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	ScopeUuid    *string
	FacilityName *string
	Name         *string
	Namespace    *string
}

func (b0 GetVirtualMachineSnapshotRequest_builder) Build() *GetVirtualMachineSnapshotRequest {
	m0 := &GetVirtualMachineSnapshotRequest{}
	b, x := &b0, m0
	_, _ = b, x
	if b.ScopeUuid != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 0, 4)
		x.xxx_hidden_ScopeUuid = b.ScopeUuid
	}
	if b.FacilityName != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 1, 4)
		x.xxx_hidden_FacilityName = b.FacilityName
	}
	if b.Name != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 2, 4)
		x.xxx_hidden_Name = b.Name
	}
	if b.Namespace != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 3, 4)
		x.xxx_hidden_Namespace = b.Namespace
	}
	return m0
}

type ListVirtualMachineSnapshotsRequest struct {
	state                   protoimpl.MessageState `protogen:"opaque.v1"`
	xxx_hidden_ScopeUuid    *string                `protobuf:"bytes,1,opt,name=scope_uuid,json=scopeUuid"`
	xxx_hidden_FacilityName *string                `protobuf:"bytes,2,opt,name=facility_name,json=facilityName"`
	xxx_hidden_Namespace    *string                `protobuf:"bytes,3,opt,name=namespace"`
	xxx_hidden_VmName       *string                `protobuf:"bytes,4,opt,name=vmName"`
	XXX_raceDetectHookData  protoimpl.RaceDetectHookData
	XXX_presence            [1]uint32
	unknownFields           protoimpl.UnknownFields
	sizeCache               protoimpl.SizeCache
}

func (x *ListVirtualMachineSnapshotsRequest) Reset() {
	*x = ListVirtualMachineSnapshotsRequest{}
	mi := &file_api_kubevirt_v1_kubevirt_proto_msgTypes[26]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListVirtualMachineSnapshotsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListVirtualMachineSnapshotsRequest) ProtoMessage() {}

func (x *ListVirtualMachineSnapshotsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_kubevirt_v1_kubevirt_proto_msgTypes[26]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *ListVirtualMachineSnapshotsRequest) GetScopeUuid() string {
	if x != nil {
		if x.xxx_hidden_ScopeUuid != nil {
			return *x.xxx_hidden_ScopeUuid
		}
		return ""
	}
	return ""
}

func (x *ListVirtualMachineSnapshotsRequest) GetFacilityName() string {
	if x != nil {
		if x.xxx_hidden_FacilityName != nil {
			return *x.xxx_hidden_FacilityName
		}
		return ""
	}
	return ""
}

func (x *ListVirtualMachineSnapshotsRequest) GetNamespace() string {
	if x != nil {
		if x.xxx_hidden_Namespace != nil {
			return *x.xxx_hidden_Namespace
		}
		return ""
	}
	return ""
}

func (x *ListVirtualMachineSnapshotsRequest) GetVmName() string {
	if x != nil {
		if x.xxx_hidden_VmName != nil {
			return *x.xxx_hidden_VmName
		}
		return ""
	}
	return ""
}

func (x *ListVirtualMachineSnapshotsRequest) SetScopeUuid(v string) {
	x.xxx_hidden_ScopeUuid = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 0, 4)
}

func (x *ListVirtualMachineSnapshotsRequest) SetFacilityName(v string) {
	x.xxx_hidden_FacilityName = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 1, 4)
}

func (x *ListVirtualMachineSnapshotsRequest) SetNamespace(v string) {
	x.xxx_hidden_Namespace = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 2, 4)
}

func (x *ListVirtualMachineSnapshotsRequest) SetVmName(v string) {
	x.xxx_hidden_VmName = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 3, 4)
}

func (x *ListVirtualMachineSnapshotsRequest) HasScopeUuid() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 0)
}

func (x *ListVirtualMachineSnapshotsRequest) HasFacilityName() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 1)
}

func (x *ListVirtualMachineSnapshotsRequest) HasNamespace() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 2)
}

func (x *ListVirtualMachineSnapshotsRequest) HasVmName() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 3)
}

func (x *ListVirtualMachineSnapshotsRequest) ClearScopeUuid() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 0)
	x.xxx_hidden_ScopeUuid = nil
}

func (x *ListVirtualMachineSnapshotsRequest) ClearFacilityName() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 1)
	x.xxx_hidden_FacilityName = nil
}

func (x *ListVirtualMachineSnapshotsRequest) ClearNamespace() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 2)
	x.xxx_hidden_Namespace = nil
}

func (x *ListVirtualMachineSnapshotsRequest) ClearVmName() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 3)
	x.xxx_hidden_VmName = nil
}

type ListVirtualMachineSnapshotsRequest_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	ScopeUuid    *string
	FacilityName *string
	Namespace    *string
	VmName       *string
}

func (b0 ListVirtualMachineSnapshotsRequest_builder) Build() *ListVirtualMachineSnapshotsRequest {
	m0 := &ListVirtualMachineSnapshotsRequest{}
	b, x := &b0, m0
	_, _ = b, x
	if b.ScopeUuid != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 0, 4)
		x.xxx_hidden_ScopeUuid = b.ScopeUuid
	}
	if b.FacilityName != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 1, 4)
		x.xxx_hidden_FacilityName = b.FacilityName
	}
	if b.Namespace != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 2, 4)
		x.xxx_hidden_Namespace = b.Namespace
	}
	if b.VmName != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 3, 4)
		x.xxx_hidden_VmName = b.VmName
	}
	return m0
}

type DeleteVirtualMachineSnapshotRequest struct {
	state                   protoimpl.MessageState `protogen:"opaque.v1"`
	xxx_hidden_ScopeUuid    *string                `protobuf:"bytes,1,opt,name=scope_uuid,json=scopeUuid"`
	xxx_hidden_FacilityName *string                `protobuf:"bytes,2,opt,name=facility_name,json=facilityName"`
	xxx_hidden_Name         *string                `protobuf:"bytes,3,opt,name=name"`
	xxx_hidden_Namespace    *string                `protobuf:"bytes,4,opt,name=namespace"`
	XXX_raceDetectHookData  protoimpl.RaceDetectHookData
	XXX_presence            [1]uint32
	unknownFields           protoimpl.UnknownFields
	sizeCache               protoimpl.SizeCache
}

func (x *DeleteVirtualMachineSnapshotRequest) Reset() {
	*x = DeleteVirtualMachineSnapshotRequest{}
	mi := &file_api_kubevirt_v1_kubevirt_proto_msgTypes[27]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DeleteVirtualMachineSnapshotRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteVirtualMachineSnapshotRequest) ProtoMessage() {}

func (x *DeleteVirtualMachineSnapshotRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_kubevirt_v1_kubevirt_proto_msgTypes[27]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *DeleteVirtualMachineSnapshotRequest) GetScopeUuid() string {
	if x != nil {
		if x.xxx_hidden_ScopeUuid != nil {
			return *x.xxx_hidden_ScopeUuid
		}
		return ""
	}
	return ""
}

func (x *DeleteVirtualMachineSnapshotRequest) GetFacilityName() string {
	if x != nil {
		if x.xxx_hidden_FacilityName != nil {
			return *x.xxx_hidden_FacilityName
		}
		return ""
	}
	return ""
}

func (x *DeleteVirtualMachineSnapshotRequest) GetName() string {
	if x != nil {
		if x.xxx_hidden_Name != nil {
			return *x.xxx_hidden_Name
		}
		return ""
	}
	return ""
}

func (x *DeleteVirtualMachineSnapshotRequest) GetNamespace() string {
	if x != nil {
		if x.xxx_hidden_Namespace != nil {
			return *x.xxx_hidden_Namespace
		}
		return ""
	}
	return ""
}

func (x *DeleteVirtualMachineSnapshotRequest) SetScopeUuid(v string) {
	x.xxx_hidden_ScopeUuid = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 0, 4)
}

func (x *DeleteVirtualMachineSnapshotRequest) SetFacilityName(v string) {
	x.xxx_hidden_FacilityName = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 1, 4)
}

func (x *DeleteVirtualMachineSnapshotRequest) SetName(v string) {
	x.xxx_hidden_Name = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 2, 4)
}

func (x *DeleteVirtualMachineSnapshotRequest) SetNamespace(v string) {
	x.xxx_hidden_Namespace = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 3, 4)
}

func (x *DeleteVirtualMachineSnapshotRequest) HasScopeUuid() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 0)
}

func (x *DeleteVirtualMachineSnapshotRequest) HasFacilityName() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 1)
}

func (x *DeleteVirtualMachineSnapshotRequest) HasName() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 2)
}

func (x *DeleteVirtualMachineSnapshotRequest) HasNamespace() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 3)
}

func (x *DeleteVirtualMachineSnapshotRequest) ClearScopeUuid() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 0)
	x.xxx_hidden_ScopeUuid = nil
}

func (x *DeleteVirtualMachineSnapshotRequest) ClearFacilityName() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 1)
	x.xxx_hidden_FacilityName = nil
}

func (x *DeleteVirtualMachineSnapshotRequest) ClearName() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 2)
	x.xxx_hidden_Name = nil
}

func (x *DeleteVirtualMachineSnapshotRequest) ClearNamespace() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 3)
	x.xxx_hidden_Namespace = nil
}

type DeleteVirtualMachineSnapshotRequest_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	ScopeUuid    *string
	FacilityName *string
	Name         *string
	Namespace    *string
}

func (b0 DeleteVirtualMachineSnapshotRequest_builder) Build() *DeleteVirtualMachineSnapshotRequest {
	m0 := &DeleteVirtualMachineSnapshotRequest{}
	b, x := &b0, m0
	_, _ = b, x
	if b.ScopeUuid != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 0, 4)
		x.xxx_hidden_ScopeUuid = b.ScopeUuid
	}
	if b.FacilityName != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 1, 4)
		x.xxx_hidden_FacilityName = b.FacilityName
	}
	if b.Name != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 2, 4)
		x.xxx_hidden_Name = b.Name
	}
	if b.Namespace != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 3, 4)
		x.xxx_hidden_Namespace = b.Namespace
	}
	return m0
}

type ListVirtualMachineSnapshotsResponse struct {
	state                protoimpl.MessageState     `protogen:"opaque.v1"`
	xxx_hidden_Snapshots *[]*VirtualMachineSnapshot `protobuf:"bytes,1,rep,name=snapshots"`
	unknownFields        protoimpl.UnknownFields
	sizeCache            protoimpl.SizeCache
}

func (x *ListVirtualMachineSnapshotsResponse) Reset() {
	*x = ListVirtualMachineSnapshotsResponse{}
	mi := &file_api_kubevirt_v1_kubevirt_proto_msgTypes[28]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListVirtualMachineSnapshotsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListVirtualMachineSnapshotsResponse) ProtoMessage() {}

func (x *ListVirtualMachineSnapshotsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_api_kubevirt_v1_kubevirt_proto_msgTypes[28]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *ListVirtualMachineSnapshotsResponse) GetSnapshots() []*VirtualMachineSnapshot {
	if x != nil {
		if x.xxx_hidden_Snapshots != nil {
			return *x.xxx_hidden_Snapshots
		}
	}
	return nil
}

func (x *ListVirtualMachineSnapshotsResponse) SetSnapshots(v []*VirtualMachineSnapshot) {
	x.xxx_hidden_Snapshots = &v
}

type ListVirtualMachineSnapshotsResponse_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	Snapshots []*VirtualMachineSnapshot
}

func (b0 ListVirtualMachineSnapshotsResponse_builder) Build() *ListVirtualMachineSnapshotsResponse {
	m0 := &ListVirtualMachineSnapshotsResponse{}
	b, x := &b0, m0
	_, _ = b, x
	x.xxx_hidden_Snapshots = &b.Snapshots
	return m0
}

type CreateDataVolumeRequest struct {
	state                   protoimpl.MessageState `protogen:"opaque.v1"`
	xxx_hidden_ScopeUuid    *string                `protobuf:"bytes,1,opt,name=scope_uuid,json=scopeUuid"`
	xxx_hidden_FacilityName *string                `protobuf:"bytes,2,opt,name=facility_name,json=facilityName"`
	xxx_hidden_DataVolume   *DataVolume            `protobuf:"bytes,3,opt,name=data_volume,json=dataVolume"`
	xxx_hidden_IsBootable   bool                   `protobuf:"varint,4,opt,name=is_bootable,json=isBootable"`
	XXX_raceDetectHookData  protoimpl.RaceDetectHookData
	XXX_presence            [1]uint32
	unknownFields           protoimpl.UnknownFields
	sizeCache               protoimpl.SizeCache
}

func (x *CreateDataVolumeRequest) Reset() {
	*x = CreateDataVolumeRequest{}
	mi := &file_api_kubevirt_v1_kubevirt_proto_msgTypes[29]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CreateDataVolumeRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateDataVolumeRequest) ProtoMessage() {}

func (x *CreateDataVolumeRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_kubevirt_v1_kubevirt_proto_msgTypes[29]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *CreateDataVolumeRequest) GetScopeUuid() string {
	if x != nil {
		if x.xxx_hidden_ScopeUuid != nil {
			return *x.xxx_hidden_ScopeUuid
		}
		return ""
	}
	return ""
}

func (x *CreateDataVolumeRequest) GetFacilityName() string {
	if x != nil {
		if x.xxx_hidden_FacilityName != nil {
			return *x.xxx_hidden_FacilityName
		}
		return ""
	}
	return ""
}

func (x *CreateDataVolumeRequest) GetDataVolume() *DataVolume {
	if x != nil {
		return x.xxx_hidden_DataVolume
	}
	return nil
}

func (x *CreateDataVolumeRequest) GetIsBootable() bool {
	if x != nil {
		return x.xxx_hidden_IsBootable
	}
	return false
}

func (x *CreateDataVolumeRequest) SetScopeUuid(v string) {
	x.xxx_hidden_ScopeUuid = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 0, 4)
}

func (x *CreateDataVolumeRequest) SetFacilityName(v string) {
	x.xxx_hidden_FacilityName = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 1, 4)
}

func (x *CreateDataVolumeRequest) SetDataVolume(v *DataVolume) {
	x.xxx_hidden_DataVolume = v
}

func (x *CreateDataVolumeRequest) SetIsBootable(v bool) {
	x.xxx_hidden_IsBootable = v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 3, 4)
}

func (x *CreateDataVolumeRequest) HasScopeUuid() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 0)
}

func (x *CreateDataVolumeRequest) HasFacilityName() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 1)
}

func (x *CreateDataVolumeRequest) HasDataVolume() bool {
	if x == nil {
		return false
	}
	return x.xxx_hidden_DataVolume != nil
}

func (x *CreateDataVolumeRequest) HasIsBootable() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 3)
}

func (x *CreateDataVolumeRequest) ClearScopeUuid() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 0)
	x.xxx_hidden_ScopeUuid = nil
}

func (x *CreateDataVolumeRequest) ClearFacilityName() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 1)
	x.xxx_hidden_FacilityName = nil
}

func (x *CreateDataVolumeRequest) ClearDataVolume() {
	x.xxx_hidden_DataVolume = nil
}

func (x *CreateDataVolumeRequest) ClearIsBootable() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 3)
	x.xxx_hidden_IsBootable = false
}

type CreateDataVolumeRequest_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	ScopeUuid    *string
	FacilityName *string
	DataVolume   *DataVolume
	IsBootable   *bool
}

func (b0 CreateDataVolumeRequest_builder) Build() *CreateDataVolumeRequest {
	m0 := &CreateDataVolumeRequest{}
	b, x := &b0, m0
	_, _ = b, x
	if b.ScopeUuid != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 0, 4)
		x.xxx_hidden_ScopeUuid = b.ScopeUuid
	}
	if b.FacilityName != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 1, 4)
		x.xxx_hidden_FacilityName = b.FacilityName
	}
	x.xxx_hidden_DataVolume = b.DataVolume
	if b.IsBootable != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 3, 4)
		x.xxx_hidden_IsBootable = *b.IsBootable
	}
	return m0
}

type ListDataVolumesRequest struct {
	state                   protoimpl.MessageState `protogen:"opaque.v1"`
	xxx_hidden_ScopeUuid    *string                `protobuf:"bytes,1,opt,name=scope_uuid,json=scopeUuid"`
	xxx_hidden_FacilityName *string                `protobuf:"bytes,2,opt,name=facility_name,json=facilityName"`
	xxx_hidden_Namespace    *string                `protobuf:"bytes,3,opt,name=namespace"`
	XXX_raceDetectHookData  protoimpl.RaceDetectHookData
	XXX_presence            [1]uint32
	unknownFields           protoimpl.UnknownFields
	sizeCache               protoimpl.SizeCache
}

func (x *ListDataVolumesRequest) Reset() {
	*x = ListDataVolumesRequest{}
	mi := &file_api_kubevirt_v1_kubevirt_proto_msgTypes[30]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListDataVolumesRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListDataVolumesRequest) ProtoMessage() {}

func (x *ListDataVolumesRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_kubevirt_v1_kubevirt_proto_msgTypes[30]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *ListDataVolumesRequest) GetScopeUuid() string {
	if x != nil {
		if x.xxx_hidden_ScopeUuid != nil {
			return *x.xxx_hidden_ScopeUuid
		}
		return ""
	}
	return ""
}

func (x *ListDataVolumesRequest) GetFacilityName() string {
	if x != nil {
		if x.xxx_hidden_FacilityName != nil {
			return *x.xxx_hidden_FacilityName
		}
		return ""
	}
	return ""
}

func (x *ListDataVolumesRequest) GetNamespace() string {
	if x != nil {
		if x.xxx_hidden_Namespace != nil {
			return *x.xxx_hidden_Namespace
		}
		return ""
	}
	return ""
}

func (x *ListDataVolumesRequest) SetScopeUuid(v string) {
	x.xxx_hidden_ScopeUuid = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 0, 3)
}

func (x *ListDataVolumesRequest) SetFacilityName(v string) {
	x.xxx_hidden_FacilityName = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 1, 3)
}

func (x *ListDataVolumesRequest) SetNamespace(v string) {
	x.xxx_hidden_Namespace = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 2, 3)
}

func (x *ListDataVolumesRequest) HasScopeUuid() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 0)
}

func (x *ListDataVolumesRequest) HasFacilityName() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 1)
}

func (x *ListDataVolumesRequest) HasNamespace() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 2)
}

func (x *ListDataVolumesRequest) ClearScopeUuid() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 0)
	x.xxx_hidden_ScopeUuid = nil
}

func (x *ListDataVolumesRequest) ClearFacilityName() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 1)
	x.xxx_hidden_FacilityName = nil
}

func (x *ListDataVolumesRequest) ClearNamespace() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 2)
	x.xxx_hidden_Namespace = nil
}

type ListDataVolumesRequest_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	ScopeUuid    *string
	FacilityName *string
	Namespace    *string
}

func (b0 ListDataVolumesRequest_builder) Build() *ListDataVolumesRequest {
	m0 := &ListDataVolumesRequest{}
	b, x := &b0, m0
	_, _ = b, x
	if b.ScopeUuid != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 0, 3)
		x.xxx_hidden_ScopeUuid = b.ScopeUuid
	}
	if b.FacilityName != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 1, 3)
		x.xxx_hidden_FacilityName = b.FacilityName
	}
	if b.Namespace != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 2, 3)
		x.xxx_hidden_Namespace = b.Namespace
	}
	return m0
}

type ListDataVolumesResponse struct {
	state                  protoimpl.MessageState `protogen:"opaque.v1"`
	xxx_hidden_Datavolumes *[]*DataVolume         `protobuf:"bytes,1,rep,name=datavolumes"`
	unknownFields          protoimpl.UnknownFields
	sizeCache              protoimpl.SizeCache
}

func (x *ListDataVolumesResponse) Reset() {
	*x = ListDataVolumesResponse{}
	mi := &file_api_kubevirt_v1_kubevirt_proto_msgTypes[31]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListDataVolumesResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListDataVolumesResponse) ProtoMessage() {}

func (x *ListDataVolumesResponse) ProtoReflect() protoreflect.Message {
	mi := &file_api_kubevirt_v1_kubevirt_proto_msgTypes[31]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *ListDataVolumesResponse) GetDatavolumes() []*DataVolume {
	if x != nil {
		if x.xxx_hidden_Datavolumes != nil {
			return *x.xxx_hidden_Datavolumes
		}
	}
	return nil
}

func (x *ListDataVolumesResponse) SetDatavolumes(v []*DataVolume) {
	x.xxx_hidden_Datavolumes = &v
}

type ListDataVolumesResponse_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	Datavolumes []*DataVolume
}

func (b0 ListDataVolumesResponse_builder) Build() *ListDataVolumesResponse {
	m0 := &ListDataVolumesResponse{}
	b, x := &b0, m0
	_, _ = b, x
	x.xxx_hidden_Datavolumes = &b.Datavolumes
	return m0
}

type GetDataVolumeRequest struct {
	state                   protoimpl.MessageState `protogen:"opaque.v1"`
	xxx_hidden_ScopeUuid    *string                `protobuf:"bytes,1,opt,name=scope_uuid,json=scopeUuid"`
	xxx_hidden_FacilityName *string                `protobuf:"bytes,2,opt,name=facility_name,json=facilityName"`
	xxx_hidden_Name         *string                `protobuf:"bytes,3,opt,name=name"`
	xxx_hidden_Namespace    *string                `protobuf:"bytes,4,opt,name=namespace"`
	XXX_raceDetectHookData  protoimpl.RaceDetectHookData
	XXX_presence            [1]uint32
	unknownFields           protoimpl.UnknownFields
	sizeCache               protoimpl.SizeCache
}

func (x *GetDataVolumeRequest) Reset() {
	*x = GetDataVolumeRequest{}
	mi := &file_api_kubevirt_v1_kubevirt_proto_msgTypes[32]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetDataVolumeRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetDataVolumeRequest) ProtoMessage() {}

func (x *GetDataVolumeRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_kubevirt_v1_kubevirt_proto_msgTypes[32]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *GetDataVolumeRequest) GetScopeUuid() string {
	if x != nil {
		if x.xxx_hidden_ScopeUuid != nil {
			return *x.xxx_hidden_ScopeUuid
		}
		return ""
	}
	return ""
}

func (x *GetDataVolumeRequest) GetFacilityName() string {
	if x != nil {
		if x.xxx_hidden_FacilityName != nil {
			return *x.xxx_hidden_FacilityName
		}
		return ""
	}
	return ""
}

func (x *GetDataVolumeRequest) GetName() string {
	if x != nil {
		if x.xxx_hidden_Name != nil {
			return *x.xxx_hidden_Name
		}
		return ""
	}
	return ""
}

func (x *GetDataVolumeRequest) GetNamespace() string {
	if x != nil {
		if x.xxx_hidden_Namespace != nil {
			return *x.xxx_hidden_Namespace
		}
		return ""
	}
	return ""
}

func (x *GetDataVolumeRequest) SetScopeUuid(v string) {
	x.xxx_hidden_ScopeUuid = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 0, 4)
}

func (x *GetDataVolumeRequest) SetFacilityName(v string) {
	x.xxx_hidden_FacilityName = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 1, 4)
}

func (x *GetDataVolumeRequest) SetName(v string) {
	x.xxx_hidden_Name = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 2, 4)
}

func (x *GetDataVolumeRequest) SetNamespace(v string) {
	x.xxx_hidden_Namespace = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 3, 4)
}

func (x *GetDataVolumeRequest) HasScopeUuid() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 0)
}

func (x *GetDataVolumeRequest) HasFacilityName() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 1)
}

func (x *GetDataVolumeRequest) HasName() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 2)
}

func (x *GetDataVolumeRequest) HasNamespace() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 3)
}

func (x *GetDataVolumeRequest) ClearScopeUuid() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 0)
	x.xxx_hidden_ScopeUuid = nil
}

func (x *GetDataVolumeRequest) ClearFacilityName() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 1)
	x.xxx_hidden_FacilityName = nil
}

func (x *GetDataVolumeRequest) ClearName() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 2)
	x.xxx_hidden_Name = nil
}

func (x *GetDataVolumeRequest) ClearNamespace() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 3)
	x.xxx_hidden_Namespace = nil
}

type GetDataVolumeRequest_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	ScopeUuid    *string
	FacilityName *string
	Name         *string
	Namespace    *string
}

func (b0 GetDataVolumeRequest_builder) Build() *GetDataVolumeRequest {
	m0 := &GetDataVolumeRequest{}
	b, x := &b0, m0
	_, _ = b, x
	if b.ScopeUuid != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 0, 4)
		x.xxx_hidden_ScopeUuid = b.ScopeUuid
	}
	if b.FacilityName != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 1, 4)
		x.xxx_hidden_FacilityName = b.FacilityName
	}
	if b.Name != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 2, 4)
		x.xxx_hidden_Name = b.Name
	}
	if b.Namespace != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 3, 4)
		x.xxx_hidden_Namespace = b.Namespace
	}
	return m0
}

type DeleteDataVolumeRequest struct {
	state                   protoimpl.MessageState `protogen:"opaque.v1"`
	xxx_hidden_ScopeUuid    *string                `protobuf:"bytes,1,opt,name=scope_uuid,json=scopeUuid"`
	xxx_hidden_FacilityName *string                `protobuf:"bytes,2,opt,name=facility_name,json=facilityName"`
	xxx_hidden_Name         *string                `protobuf:"bytes,3,opt,name=name"`
	xxx_hidden_Namespace    *string                `protobuf:"bytes,4,opt,name=namespace"`
	XXX_raceDetectHookData  protoimpl.RaceDetectHookData
	XXX_presence            [1]uint32
	unknownFields           protoimpl.UnknownFields
	sizeCache               protoimpl.SizeCache
}

func (x *DeleteDataVolumeRequest) Reset() {
	*x = DeleteDataVolumeRequest{}
	mi := &file_api_kubevirt_v1_kubevirt_proto_msgTypes[33]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DeleteDataVolumeRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteDataVolumeRequest) ProtoMessage() {}

func (x *DeleteDataVolumeRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_kubevirt_v1_kubevirt_proto_msgTypes[33]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *DeleteDataVolumeRequest) GetScopeUuid() string {
	if x != nil {
		if x.xxx_hidden_ScopeUuid != nil {
			return *x.xxx_hidden_ScopeUuid
		}
		return ""
	}
	return ""
}

func (x *DeleteDataVolumeRequest) GetFacilityName() string {
	if x != nil {
		if x.xxx_hidden_FacilityName != nil {
			return *x.xxx_hidden_FacilityName
		}
		return ""
	}
	return ""
}

func (x *DeleteDataVolumeRequest) GetName() string {
	if x != nil {
		if x.xxx_hidden_Name != nil {
			return *x.xxx_hidden_Name
		}
		return ""
	}
	return ""
}

func (x *DeleteDataVolumeRequest) GetNamespace() string {
	if x != nil {
		if x.xxx_hidden_Namespace != nil {
			return *x.xxx_hidden_Namespace
		}
		return ""
	}
	return ""
}

func (x *DeleteDataVolumeRequest) SetScopeUuid(v string) {
	x.xxx_hidden_ScopeUuid = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 0, 4)
}

func (x *DeleteDataVolumeRequest) SetFacilityName(v string) {
	x.xxx_hidden_FacilityName = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 1, 4)
}

func (x *DeleteDataVolumeRequest) SetName(v string) {
	x.xxx_hidden_Name = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 2, 4)
}

func (x *DeleteDataVolumeRequest) SetNamespace(v string) {
	x.xxx_hidden_Namespace = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 3, 4)
}

func (x *DeleteDataVolumeRequest) HasScopeUuid() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 0)
}

func (x *DeleteDataVolumeRequest) HasFacilityName() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 1)
}

func (x *DeleteDataVolumeRequest) HasName() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 2)
}

func (x *DeleteDataVolumeRequest) HasNamespace() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 3)
}

func (x *DeleteDataVolumeRequest) ClearScopeUuid() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 0)
	x.xxx_hidden_ScopeUuid = nil
}

func (x *DeleteDataVolumeRequest) ClearFacilityName() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 1)
	x.xxx_hidden_FacilityName = nil
}

func (x *DeleteDataVolumeRequest) ClearName() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 2)
	x.xxx_hidden_Name = nil
}

func (x *DeleteDataVolumeRequest) ClearNamespace() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 3)
	x.xxx_hidden_Namespace = nil
}

type DeleteDataVolumeRequest_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	ScopeUuid    *string
	FacilityName *string
	Name         *string
	Namespace    *string
}

func (b0 DeleteDataVolumeRequest_builder) Build() *DeleteDataVolumeRequest {
	m0 := &DeleteDataVolumeRequest{}
	b, x := &b0, m0
	_, _ = b, x
	if b.ScopeUuid != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 0, 4)
		x.xxx_hidden_ScopeUuid = b.ScopeUuid
	}
	if b.FacilityName != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 1, 4)
		x.xxx_hidden_FacilityName = b.FacilityName
	}
	if b.Name != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 2, 4)
		x.xxx_hidden_Name = b.Name
	}
	if b.Namespace != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 3, 4)
		x.xxx_hidden_Namespace = b.Namespace
	}
	return m0
}

type ExtendDataVolumeRequest struct {
	state                   protoimpl.MessageState `protogen:"opaque.v1"`
	xxx_hidden_ScopeUuid    *string                `protobuf:"bytes,1,opt,name=scope_uuid,json=scopeUuid"`
	xxx_hidden_FacilityName *string                `protobuf:"bytes,2,opt,name=facility_name,json=facilityName"`
	xxx_hidden_Name         *string                `protobuf:"bytes,3,opt,name=name"`
	xxx_hidden_Namespace    *string                `protobuf:"bytes,4,opt,name=namespace"`
	xxx_hidden_SizeBytes    int64                  `protobuf:"varint,5,opt,name=size_bytes,json=sizeBytes"`
	XXX_raceDetectHookData  protoimpl.RaceDetectHookData
	XXX_presence            [1]uint32
	unknownFields           protoimpl.UnknownFields
	sizeCache               protoimpl.SizeCache
}

func (x *ExtendDataVolumeRequest) Reset() {
	*x = ExtendDataVolumeRequest{}
	mi := &file_api_kubevirt_v1_kubevirt_proto_msgTypes[34]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ExtendDataVolumeRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ExtendDataVolumeRequest) ProtoMessage() {}

func (x *ExtendDataVolumeRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_kubevirt_v1_kubevirt_proto_msgTypes[34]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *ExtendDataVolumeRequest) GetScopeUuid() string {
	if x != nil {
		if x.xxx_hidden_ScopeUuid != nil {
			return *x.xxx_hidden_ScopeUuid
		}
		return ""
	}
	return ""
}

func (x *ExtendDataVolumeRequest) GetFacilityName() string {
	if x != nil {
		if x.xxx_hidden_FacilityName != nil {
			return *x.xxx_hidden_FacilityName
		}
		return ""
	}
	return ""
}

func (x *ExtendDataVolumeRequest) GetName() string {
	if x != nil {
		if x.xxx_hidden_Name != nil {
			return *x.xxx_hidden_Name
		}
		return ""
	}
	return ""
}

func (x *ExtendDataVolumeRequest) GetNamespace() string {
	if x != nil {
		if x.xxx_hidden_Namespace != nil {
			return *x.xxx_hidden_Namespace
		}
		return ""
	}
	return ""
}

func (x *ExtendDataVolumeRequest) GetSizeBytes() int64 {
	if x != nil {
		return x.xxx_hidden_SizeBytes
	}
	return 0
}

func (x *ExtendDataVolumeRequest) SetScopeUuid(v string) {
	x.xxx_hidden_ScopeUuid = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 0, 5)
}

func (x *ExtendDataVolumeRequest) SetFacilityName(v string) {
	x.xxx_hidden_FacilityName = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 1, 5)
}

func (x *ExtendDataVolumeRequest) SetName(v string) {
	x.xxx_hidden_Name = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 2, 5)
}

func (x *ExtendDataVolumeRequest) SetNamespace(v string) {
	x.xxx_hidden_Namespace = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 3, 5)
}

func (x *ExtendDataVolumeRequest) SetSizeBytes(v int64) {
	x.xxx_hidden_SizeBytes = v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 4, 5)
}

func (x *ExtendDataVolumeRequest) HasScopeUuid() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 0)
}

func (x *ExtendDataVolumeRequest) HasFacilityName() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 1)
}

func (x *ExtendDataVolumeRequest) HasName() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 2)
}

func (x *ExtendDataVolumeRequest) HasNamespace() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 3)
}

func (x *ExtendDataVolumeRequest) HasSizeBytes() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 4)
}

func (x *ExtendDataVolumeRequest) ClearScopeUuid() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 0)
	x.xxx_hidden_ScopeUuid = nil
}

func (x *ExtendDataVolumeRequest) ClearFacilityName() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 1)
	x.xxx_hidden_FacilityName = nil
}

func (x *ExtendDataVolumeRequest) ClearName() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 2)
	x.xxx_hidden_Name = nil
}

func (x *ExtendDataVolumeRequest) ClearNamespace() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 3)
	x.xxx_hidden_Namespace = nil
}

func (x *ExtendDataVolumeRequest) ClearSizeBytes() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 4)
	x.xxx_hidden_SizeBytes = 0
}

type ExtendDataVolumeRequest_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	ScopeUuid    *string
	FacilityName *string
	Name         *string
	Namespace    *string
	SizeBytes    *int64
}

func (b0 ExtendDataVolumeRequest_builder) Build() *ExtendDataVolumeRequest {
	m0 := &ExtendDataVolumeRequest{}
	b, x := &b0, m0
	_, _ = b, x
	if b.ScopeUuid != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 0, 5)
		x.xxx_hidden_ScopeUuid = b.ScopeUuid
	}
	if b.FacilityName != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 1, 5)
		x.xxx_hidden_FacilityName = b.FacilityName
	}
	if b.Name != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 2, 5)
		x.xxx_hidden_Name = b.Name
	}
	if b.Namespace != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 3, 5)
		x.xxx_hidden_Namespace = b.Namespace
	}
	if b.SizeBytes != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 4, 5)
		x.xxx_hidden_SizeBytes = *b.SizeBytes
	}
	return m0
}

type CreateVirtualMachineServiceRequest struct {
	state                            protoimpl.MessageState `protogen:"opaque.v1"`
	xxx_hidden_ScopeUuid             *string                `protobuf:"bytes,1,opt,name=scope_uuid,json=scopeUuid"`
	xxx_hidden_FacilityName          *string                `protobuf:"bytes,2,opt,name=facility_name,json=facilityName"`
	xxx_hidden_Namespace             *string                `protobuf:"bytes,3,opt,name=namespace"`
	xxx_hidden_VirtualMachineService *VirtualMachineService `protobuf:"bytes,4,opt,name=virtual_machine_service,json=virtualMachineService"`
	XXX_raceDetectHookData           protoimpl.RaceDetectHookData
	XXX_presence                     [1]uint32
	unknownFields                    protoimpl.UnknownFields
	sizeCache                        protoimpl.SizeCache
}

func (x *CreateVirtualMachineServiceRequest) Reset() {
	*x = CreateVirtualMachineServiceRequest{}
	mi := &file_api_kubevirt_v1_kubevirt_proto_msgTypes[35]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CreateVirtualMachineServiceRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateVirtualMachineServiceRequest) ProtoMessage() {}

func (x *CreateVirtualMachineServiceRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_kubevirt_v1_kubevirt_proto_msgTypes[35]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *CreateVirtualMachineServiceRequest) GetScopeUuid() string {
	if x != nil {
		if x.xxx_hidden_ScopeUuid != nil {
			return *x.xxx_hidden_ScopeUuid
		}
		return ""
	}
	return ""
}

func (x *CreateVirtualMachineServiceRequest) GetFacilityName() string {
	if x != nil {
		if x.xxx_hidden_FacilityName != nil {
			return *x.xxx_hidden_FacilityName
		}
		return ""
	}
	return ""
}

func (x *CreateVirtualMachineServiceRequest) GetNamespace() string {
	if x != nil {
		if x.xxx_hidden_Namespace != nil {
			return *x.xxx_hidden_Namespace
		}
		return ""
	}
	return ""
}

func (x *CreateVirtualMachineServiceRequest) GetVirtualMachineService() *VirtualMachineService {
	if x != nil {
		return x.xxx_hidden_VirtualMachineService
	}
	return nil
}

func (x *CreateVirtualMachineServiceRequest) SetScopeUuid(v string) {
	x.xxx_hidden_ScopeUuid = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 0, 4)
}

func (x *CreateVirtualMachineServiceRequest) SetFacilityName(v string) {
	x.xxx_hidden_FacilityName = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 1, 4)
}

func (x *CreateVirtualMachineServiceRequest) SetNamespace(v string) {
	x.xxx_hidden_Namespace = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 2, 4)
}

func (x *CreateVirtualMachineServiceRequest) SetVirtualMachineService(v *VirtualMachineService) {
	x.xxx_hidden_VirtualMachineService = v
}

func (x *CreateVirtualMachineServiceRequest) HasScopeUuid() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 0)
}

func (x *CreateVirtualMachineServiceRequest) HasFacilityName() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 1)
}

func (x *CreateVirtualMachineServiceRequest) HasNamespace() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 2)
}

func (x *CreateVirtualMachineServiceRequest) HasVirtualMachineService() bool {
	if x == nil {
		return false
	}
	return x.xxx_hidden_VirtualMachineService != nil
}

func (x *CreateVirtualMachineServiceRequest) ClearScopeUuid() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 0)
	x.xxx_hidden_ScopeUuid = nil
}

func (x *CreateVirtualMachineServiceRequest) ClearFacilityName() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 1)
	x.xxx_hidden_FacilityName = nil
}

func (x *CreateVirtualMachineServiceRequest) ClearNamespace() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 2)
	x.xxx_hidden_Namespace = nil
}

func (x *CreateVirtualMachineServiceRequest) ClearVirtualMachineService() {
	x.xxx_hidden_VirtualMachineService = nil
}

type CreateVirtualMachineServiceRequest_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	ScopeUuid             *string
	FacilityName          *string
	Namespace             *string
	VirtualMachineService *VirtualMachineService
}

func (b0 CreateVirtualMachineServiceRequest_builder) Build() *CreateVirtualMachineServiceRequest {
	m0 := &CreateVirtualMachineServiceRequest{}
	b, x := &b0, m0
	_, _ = b, x
	if b.ScopeUuid != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 0, 4)
		x.xxx_hidden_ScopeUuid = b.ScopeUuid
	}
	if b.FacilityName != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 1, 4)
		x.xxx_hidden_FacilityName = b.FacilityName
	}
	if b.Namespace != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 2, 4)
		x.xxx_hidden_Namespace = b.Namespace
	}
	x.xxx_hidden_VirtualMachineService = b.VirtualMachineService
	return m0
}

type ListVirtualMachineServicesRequest struct {
	state                   protoimpl.MessageState `protogen:"opaque.v1"`
	xxx_hidden_ScopeUuid    *string                `protobuf:"bytes,1,opt,name=scope_uuid,json=scopeUuid"`
	xxx_hidden_FacilityName *string                `protobuf:"bytes,2,opt,name=facility_name,json=facilityName"`
	xxx_hidden_Namespace    *string                `protobuf:"bytes,3,opt,name=namespace"`
	XXX_raceDetectHookData  protoimpl.RaceDetectHookData
	XXX_presence            [1]uint32
	unknownFields           protoimpl.UnknownFields
	sizeCache               protoimpl.SizeCache
}

func (x *ListVirtualMachineServicesRequest) Reset() {
	*x = ListVirtualMachineServicesRequest{}
	mi := &file_api_kubevirt_v1_kubevirt_proto_msgTypes[36]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListVirtualMachineServicesRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListVirtualMachineServicesRequest) ProtoMessage() {}

func (x *ListVirtualMachineServicesRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_kubevirt_v1_kubevirt_proto_msgTypes[36]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *ListVirtualMachineServicesRequest) GetScopeUuid() string {
	if x != nil {
		if x.xxx_hidden_ScopeUuid != nil {
			return *x.xxx_hidden_ScopeUuid
		}
		return ""
	}
	return ""
}

func (x *ListVirtualMachineServicesRequest) GetFacilityName() string {
	if x != nil {
		if x.xxx_hidden_FacilityName != nil {
			return *x.xxx_hidden_FacilityName
		}
		return ""
	}
	return ""
}

func (x *ListVirtualMachineServicesRequest) GetNamespace() string {
	if x != nil {
		if x.xxx_hidden_Namespace != nil {
			return *x.xxx_hidden_Namespace
		}
		return ""
	}
	return ""
}

func (x *ListVirtualMachineServicesRequest) SetScopeUuid(v string) {
	x.xxx_hidden_ScopeUuid = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 0, 3)
}

func (x *ListVirtualMachineServicesRequest) SetFacilityName(v string) {
	x.xxx_hidden_FacilityName = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 1, 3)
}

func (x *ListVirtualMachineServicesRequest) SetNamespace(v string) {
	x.xxx_hidden_Namespace = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 2, 3)
}

func (x *ListVirtualMachineServicesRequest) HasScopeUuid() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 0)
}

func (x *ListVirtualMachineServicesRequest) HasFacilityName() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 1)
}

func (x *ListVirtualMachineServicesRequest) HasNamespace() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 2)
}

func (x *ListVirtualMachineServicesRequest) ClearScopeUuid() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 0)
	x.xxx_hidden_ScopeUuid = nil
}

func (x *ListVirtualMachineServicesRequest) ClearFacilityName() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 1)
	x.xxx_hidden_FacilityName = nil
}

func (x *ListVirtualMachineServicesRequest) ClearNamespace() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 2)
	x.xxx_hidden_Namespace = nil
}

type ListVirtualMachineServicesRequest_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	ScopeUuid    *string
	FacilityName *string
	Namespace    *string
}

func (b0 ListVirtualMachineServicesRequest_builder) Build() *ListVirtualMachineServicesRequest {
	m0 := &ListVirtualMachineServicesRequest{}
	b, x := &b0, m0
	_, _ = b, x
	if b.ScopeUuid != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 0, 3)
		x.xxx_hidden_ScopeUuid = b.ScopeUuid
	}
	if b.FacilityName != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 1, 3)
		x.xxx_hidden_FacilityName = b.FacilityName
	}
	if b.Namespace != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 2, 3)
		x.xxx_hidden_Namespace = b.Namespace
	}
	return m0
}

type ListVirtualMachineServicesResponse struct {
	state                             protoimpl.MessageState    `protogen:"opaque.v1"`
	xxx_hidden_VirtualMachineServices *[]*VirtualMachineService `protobuf:"bytes,1,rep,name=virtual_machine_services,json=virtualMachineServices"`
	unknownFields                     protoimpl.UnknownFields
	sizeCache                         protoimpl.SizeCache
}

func (x *ListVirtualMachineServicesResponse) Reset() {
	*x = ListVirtualMachineServicesResponse{}
	mi := &file_api_kubevirt_v1_kubevirt_proto_msgTypes[37]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListVirtualMachineServicesResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListVirtualMachineServicesResponse) ProtoMessage() {}

func (x *ListVirtualMachineServicesResponse) ProtoReflect() protoreflect.Message {
	mi := &file_api_kubevirt_v1_kubevirt_proto_msgTypes[37]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *ListVirtualMachineServicesResponse) GetVirtualMachineServices() []*VirtualMachineService {
	if x != nil {
		if x.xxx_hidden_VirtualMachineServices != nil {
			return *x.xxx_hidden_VirtualMachineServices
		}
	}
	return nil
}

func (x *ListVirtualMachineServicesResponse) SetVirtualMachineServices(v []*VirtualMachineService) {
	x.xxx_hidden_VirtualMachineServices = &v
}

type ListVirtualMachineServicesResponse_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	VirtualMachineServices []*VirtualMachineService
}

func (b0 ListVirtualMachineServicesResponse_builder) Build() *ListVirtualMachineServicesResponse {
	m0 := &ListVirtualMachineServicesResponse{}
	b, x := &b0, m0
	_, _ = b, x
	x.xxx_hidden_VirtualMachineServices = &b.VirtualMachineServices
	return m0
}

type GetVirtualMachineServiceRequest struct {
	state                   protoimpl.MessageState `protogen:"opaque.v1"`
	xxx_hidden_ScopeUuid    *string                `protobuf:"bytes,1,opt,name=scope_uuid,json=scopeUuid"`
	xxx_hidden_FacilityName *string                `protobuf:"bytes,2,opt,name=facility_name,json=facilityName"`
	xxx_hidden_Name         *string                `protobuf:"bytes,3,opt,name=name"`
	xxx_hidden_Namespace    *string                `protobuf:"bytes,4,opt,name=namespace"`
	XXX_raceDetectHookData  protoimpl.RaceDetectHookData
	XXX_presence            [1]uint32
	unknownFields           protoimpl.UnknownFields
	sizeCache               protoimpl.SizeCache
}

func (x *GetVirtualMachineServiceRequest) Reset() {
	*x = GetVirtualMachineServiceRequest{}
	mi := &file_api_kubevirt_v1_kubevirt_proto_msgTypes[38]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetVirtualMachineServiceRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetVirtualMachineServiceRequest) ProtoMessage() {}

func (x *GetVirtualMachineServiceRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_kubevirt_v1_kubevirt_proto_msgTypes[38]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *GetVirtualMachineServiceRequest) GetScopeUuid() string {
	if x != nil {
		if x.xxx_hidden_ScopeUuid != nil {
			return *x.xxx_hidden_ScopeUuid
		}
		return ""
	}
	return ""
}

func (x *GetVirtualMachineServiceRequest) GetFacilityName() string {
	if x != nil {
		if x.xxx_hidden_FacilityName != nil {
			return *x.xxx_hidden_FacilityName
		}
		return ""
	}
	return ""
}

func (x *GetVirtualMachineServiceRequest) GetName() string {
	if x != nil {
		if x.xxx_hidden_Name != nil {
			return *x.xxx_hidden_Name
		}
		return ""
	}
	return ""
}

func (x *GetVirtualMachineServiceRequest) GetNamespace() string {
	if x != nil {
		if x.xxx_hidden_Namespace != nil {
			return *x.xxx_hidden_Namespace
		}
		return ""
	}
	return ""
}

func (x *GetVirtualMachineServiceRequest) SetScopeUuid(v string) {
	x.xxx_hidden_ScopeUuid = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 0, 4)
}

func (x *GetVirtualMachineServiceRequest) SetFacilityName(v string) {
	x.xxx_hidden_FacilityName = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 1, 4)
}

func (x *GetVirtualMachineServiceRequest) SetName(v string) {
	x.xxx_hidden_Name = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 2, 4)
}

func (x *GetVirtualMachineServiceRequest) SetNamespace(v string) {
	x.xxx_hidden_Namespace = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 3, 4)
}

func (x *GetVirtualMachineServiceRequest) HasScopeUuid() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 0)
}

func (x *GetVirtualMachineServiceRequest) HasFacilityName() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 1)
}

func (x *GetVirtualMachineServiceRequest) HasName() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 2)
}

func (x *GetVirtualMachineServiceRequest) HasNamespace() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 3)
}

func (x *GetVirtualMachineServiceRequest) ClearScopeUuid() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 0)
	x.xxx_hidden_ScopeUuid = nil
}

func (x *GetVirtualMachineServiceRequest) ClearFacilityName() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 1)
	x.xxx_hidden_FacilityName = nil
}

func (x *GetVirtualMachineServiceRequest) ClearName() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 2)
	x.xxx_hidden_Name = nil
}

func (x *GetVirtualMachineServiceRequest) ClearNamespace() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 3)
	x.xxx_hidden_Namespace = nil
}

type GetVirtualMachineServiceRequest_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	ScopeUuid    *string
	FacilityName *string
	Name         *string
	Namespace    *string
}

func (b0 GetVirtualMachineServiceRequest_builder) Build() *GetVirtualMachineServiceRequest {
	m0 := &GetVirtualMachineServiceRequest{}
	b, x := &b0, m0
	_, _ = b, x
	if b.ScopeUuid != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 0, 4)
		x.xxx_hidden_ScopeUuid = b.ScopeUuid
	}
	if b.FacilityName != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 1, 4)
		x.xxx_hidden_FacilityName = b.FacilityName
	}
	if b.Name != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 2, 4)
		x.xxx_hidden_Name = b.Name
	}
	if b.Namespace != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 3, 4)
		x.xxx_hidden_Namespace = b.Namespace
	}
	return m0
}

type UpdateVirtualMachineServiceRequest struct {
	state                            protoimpl.MessageState `protogen:"opaque.v1"`
	xxx_hidden_ScopeUuid             *string                `protobuf:"bytes,1,opt,name=scope_uuid,json=scopeUuid"`
	xxx_hidden_FacilityName          *string                `protobuf:"bytes,2,opt,name=facility_name,json=facilityName"`
	xxx_hidden_Name                  *string                `protobuf:"bytes,3,opt,name=name"`
	xxx_hidden_Namespace             *string                `protobuf:"bytes,4,opt,name=namespace"`
	xxx_hidden_VirtualMachineService *VirtualMachineService `protobuf:"bytes,5,opt,name=virtual_machine_service,json=virtualMachineService"`
	XXX_raceDetectHookData           protoimpl.RaceDetectHookData
	XXX_presence                     [1]uint32
	unknownFields                    protoimpl.UnknownFields
	sizeCache                        protoimpl.SizeCache
}

func (x *UpdateVirtualMachineServiceRequest) Reset() {
	*x = UpdateVirtualMachineServiceRequest{}
	mi := &file_api_kubevirt_v1_kubevirt_proto_msgTypes[39]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UpdateVirtualMachineServiceRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateVirtualMachineServiceRequest) ProtoMessage() {}

func (x *UpdateVirtualMachineServiceRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_kubevirt_v1_kubevirt_proto_msgTypes[39]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *UpdateVirtualMachineServiceRequest) GetScopeUuid() string {
	if x != nil {
		if x.xxx_hidden_ScopeUuid != nil {
			return *x.xxx_hidden_ScopeUuid
		}
		return ""
	}
	return ""
}

func (x *UpdateVirtualMachineServiceRequest) GetFacilityName() string {
	if x != nil {
		if x.xxx_hidden_FacilityName != nil {
			return *x.xxx_hidden_FacilityName
		}
		return ""
	}
	return ""
}

func (x *UpdateVirtualMachineServiceRequest) GetName() string {
	if x != nil {
		if x.xxx_hidden_Name != nil {
			return *x.xxx_hidden_Name
		}
		return ""
	}
	return ""
}

func (x *UpdateVirtualMachineServiceRequest) GetNamespace() string {
	if x != nil {
		if x.xxx_hidden_Namespace != nil {
			return *x.xxx_hidden_Namespace
		}
		return ""
	}
	return ""
}

func (x *UpdateVirtualMachineServiceRequest) GetVirtualMachineService() *VirtualMachineService {
	if x != nil {
		return x.xxx_hidden_VirtualMachineService
	}
	return nil
}

func (x *UpdateVirtualMachineServiceRequest) SetScopeUuid(v string) {
	x.xxx_hidden_ScopeUuid = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 0, 5)
}

func (x *UpdateVirtualMachineServiceRequest) SetFacilityName(v string) {
	x.xxx_hidden_FacilityName = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 1, 5)
}

func (x *UpdateVirtualMachineServiceRequest) SetName(v string) {
	x.xxx_hidden_Name = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 2, 5)
}

func (x *UpdateVirtualMachineServiceRequest) SetNamespace(v string) {
	x.xxx_hidden_Namespace = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 3, 5)
}

func (x *UpdateVirtualMachineServiceRequest) SetVirtualMachineService(v *VirtualMachineService) {
	x.xxx_hidden_VirtualMachineService = v
}

func (x *UpdateVirtualMachineServiceRequest) HasScopeUuid() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 0)
}

func (x *UpdateVirtualMachineServiceRequest) HasFacilityName() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 1)
}

func (x *UpdateVirtualMachineServiceRequest) HasName() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 2)
}

func (x *UpdateVirtualMachineServiceRequest) HasNamespace() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 3)
}

func (x *UpdateVirtualMachineServiceRequest) HasVirtualMachineService() bool {
	if x == nil {
		return false
	}
	return x.xxx_hidden_VirtualMachineService != nil
}

func (x *UpdateVirtualMachineServiceRequest) ClearScopeUuid() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 0)
	x.xxx_hidden_ScopeUuid = nil
}

func (x *UpdateVirtualMachineServiceRequest) ClearFacilityName() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 1)
	x.xxx_hidden_FacilityName = nil
}

func (x *UpdateVirtualMachineServiceRequest) ClearName() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 2)
	x.xxx_hidden_Name = nil
}

func (x *UpdateVirtualMachineServiceRequest) ClearNamespace() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 3)
	x.xxx_hidden_Namespace = nil
}

func (x *UpdateVirtualMachineServiceRequest) ClearVirtualMachineService() {
	x.xxx_hidden_VirtualMachineService = nil
}

type UpdateVirtualMachineServiceRequest_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	ScopeUuid             *string
	FacilityName          *string
	Name                  *string
	Namespace             *string
	VirtualMachineService *VirtualMachineService
}

func (b0 UpdateVirtualMachineServiceRequest_builder) Build() *UpdateVirtualMachineServiceRequest {
	m0 := &UpdateVirtualMachineServiceRequest{}
	b, x := &b0, m0
	_, _ = b, x
	if b.ScopeUuid != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 0, 5)
		x.xxx_hidden_ScopeUuid = b.ScopeUuid
	}
	if b.FacilityName != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 1, 5)
		x.xxx_hidden_FacilityName = b.FacilityName
	}
	if b.Name != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 2, 5)
		x.xxx_hidden_Name = b.Name
	}
	if b.Namespace != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 3, 5)
		x.xxx_hidden_Namespace = b.Namespace
	}
	x.xxx_hidden_VirtualMachineService = b.VirtualMachineService
	return m0
}

type DeleteVirtualMachineServiceRequest struct {
	state                   protoimpl.MessageState `protogen:"opaque.v1"`
	xxx_hidden_ScopeUuid    *string                `protobuf:"bytes,1,opt,name=scope_uuid,json=scopeUuid"`
	xxx_hidden_FacilityName *string                `protobuf:"bytes,2,opt,name=facility_name,json=facilityName"`
	xxx_hidden_Name         *string                `protobuf:"bytes,3,opt,name=name"`
	xxx_hidden_Namespace    *string                `protobuf:"bytes,4,opt,name=namespace"`
	XXX_raceDetectHookData  protoimpl.RaceDetectHookData
	XXX_presence            [1]uint32
	unknownFields           protoimpl.UnknownFields
	sizeCache               protoimpl.SizeCache
}

func (x *DeleteVirtualMachineServiceRequest) Reset() {
	*x = DeleteVirtualMachineServiceRequest{}
	mi := &file_api_kubevirt_v1_kubevirt_proto_msgTypes[40]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DeleteVirtualMachineServiceRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteVirtualMachineServiceRequest) ProtoMessage() {}

func (x *DeleteVirtualMachineServiceRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_kubevirt_v1_kubevirt_proto_msgTypes[40]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *DeleteVirtualMachineServiceRequest) GetScopeUuid() string {
	if x != nil {
		if x.xxx_hidden_ScopeUuid != nil {
			return *x.xxx_hidden_ScopeUuid
		}
		return ""
	}
	return ""
}

func (x *DeleteVirtualMachineServiceRequest) GetFacilityName() string {
	if x != nil {
		if x.xxx_hidden_FacilityName != nil {
			return *x.xxx_hidden_FacilityName
		}
		return ""
	}
	return ""
}

func (x *DeleteVirtualMachineServiceRequest) GetName() string {
	if x != nil {
		if x.xxx_hidden_Name != nil {
			return *x.xxx_hidden_Name
		}
		return ""
	}
	return ""
}

func (x *DeleteVirtualMachineServiceRequest) GetNamespace() string {
	if x != nil {
		if x.xxx_hidden_Namespace != nil {
			return *x.xxx_hidden_Namespace
		}
		return ""
	}
	return ""
}

func (x *DeleteVirtualMachineServiceRequest) SetScopeUuid(v string) {
	x.xxx_hidden_ScopeUuid = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 0, 4)
}

func (x *DeleteVirtualMachineServiceRequest) SetFacilityName(v string) {
	x.xxx_hidden_FacilityName = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 1, 4)
}

func (x *DeleteVirtualMachineServiceRequest) SetName(v string) {
	x.xxx_hidden_Name = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 2, 4)
}

func (x *DeleteVirtualMachineServiceRequest) SetNamespace(v string) {
	x.xxx_hidden_Namespace = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 3, 4)
}

func (x *DeleteVirtualMachineServiceRequest) HasScopeUuid() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 0)
}

func (x *DeleteVirtualMachineServiceRequest) HasFacilityName() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 1)
}

func (x *DeleteVirtualMachineServiceRequest) HasName() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 2)
}

func (x *DeleteVirtualMachineServiceRequest) HasNamespace() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 3)
}

func (x *DeleteVirtualMachineServiceRequest) ClearScopeUuid() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 0)
	x.xxx_hidden_ScopeUuid = nil
}

func (x *DeleteVirtualMachineServiceRequest) ClearFacilityName() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 1)
	x.xxx_hidden_FacilityName = nil
}

func (x *DeleteVirtualMachineServiceRequest) ClearName() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 2)
	x.xxx_hidden_Name = nil
}

func (x *DeleteVirtualMachineServiceRequest) ClearNamespace() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 3)
	x.xxx_hidden_Namespace = nil
}

type DeleteVirtualMachineServiceRequest_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	ScopeUuid    *string
	FacilityName *string
	Name         *string
	Namespace    *string
}

func (b0 DeleteVirtualMachineServiceRequest_builder) Build() *DeleteVirtualMachineServiceRequest {
	m0 := &DeleteVirtualMachineServiceRequest{}
	b, x := &b0, m0
	_, _ = b, x
	if b.ScopeUuid != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 0, 4)
		x.xxx_hidden_ScopeUuid = b.ScopeUuid
	}
	if b.FacilityName != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 1, 4)
		x.xxx_hidden_FacilityName = b.FacilityName
	}
	if b.Name != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 2, 4)
		x.xxx_hidden_Name = b.Name
	}
	if b.Namespace != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 3, 4)
		x.xxx_hidden_Namespace = b.Namespace
	}
	return m0
}

type CreateInstanceTypeRequest struct {
	state                   protoimpl.MessageState `protogen:"opaque.v1"`
	xxx_hidden_ScopeUuid    *string                `protobuf:"bytes,1,opt,name=scope_uuid,json=scopeUuid"`
	xxx_hidden_FacilityName *string                `protobuf:"bytes,2,opt,name=facility_name,json=facilityName"`
	xxx_hidden_InstanceType *InstanceType          `protobuf:"bytes,3,opt,name=instanceType"`
	XXX_raceDetectHookData  protoimpl.RaceDetectHookData
	XXX_presence            [1]uint32
	unknownFields           protoimpl.UnknownFields
	sizeCache               protoimpl.SizeCache
}

func (x *CreateInstanceTypeRequest) Reset() {
	*x = CreateInstanceTypeRequest{}
	mi := &file_api_kubevirt_v1_kubevirt_proto_msgTypes[41]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CreateInstanceTypeRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateInstanceTypeRequest) ProtoMessage() {}

func (x *CreateInstanceTypeRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_kubevirt_v1_kubevirt_proto_msgTypes[41]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *CreateInstanceTypeRequest) GetScopeUuid() string {
	if x != nil {
		if x.xxx_hidden_ScopeUuid != nil {
			return *x.xxx_hidden_ScopeUuid
		}
		return ""
	}
	return ""
}

func (x *CreateInstanceTypeRequest) GetFacilityName() string {
	if x != nil {
		if x.xxx_hidden_FacilityName != nil {
			return *x.xxx_hidden_FacilityName
		}
		return ""
	}
	return ""
}

func (x *CreateInstanceTypeRequest) GetInstanceType() *InstanceType {
	if x != nil {
		return x.xxx_hidden_InstanceType
	}
	return nil
}

func (x *CreateInstanceTypeRequest) SetScopeUuid(v string) {
	x.xxx_hidden_ScopeUuid = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 0, 3)
}

func (x *CreateInstanceTypeRequest) SetFacilityName(v string) {
	x.xxx_hidden_FacilityName = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 1, 3)
}

func (x *CreateInstanceTypeRequest) SetInstanceType(v *InstanceType) {
	x.xxx_hidden_InstanceType = v
}

func (x *CreateInstanceTypeRequest) HasScopeUuid() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 0)
}

func (x *CreateInstanceTypeRequest) HasFacilityName() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 1)
}

func (x *CreateInstanceTypeRequest) HasInstanceType() bool {
	if x == nil {
		return false
	}
	return x.xxx_hidden_InstanceType != nil
}

func (x *CreateInstanceTypeRequest) ClearScopeUuid() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 0)
	x.xxx_hidden_ScopeUuid = nil
}

func (x *CreateInstanceTypeRequest) ClearFacilityName() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 1)
	x.xxx_hidden_FacilityName = nil
}

func (x *CreateInstanceTypeRequest) ClearInstanceType() {
	x.xxx_hidden_InstanceType = nil
}

type CreateInstanceTypeRequest_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	ScopeUuid    *string
	FacilityName *string
	InstanceType *InstanceType
}

func (b0 CreateInstanceTypeRequest_builder) Build() *CreateInstanceTypeRequest {
	m0 := &CreateInstanceTypeRequest{}
	b, x := &b0, m0
	_, _ = b, x
	if b.ScopeUuid != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 0, 3)
		x.xxx_hidden_ScopeUuid = b.ScopeUuid
	}
	if b.FacilityName != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 1, 3)
		x.xxx_hidden_FacilityName = b.FacilityName
	}
	x.xxx_hidden_InstanceType = b.InstanceType
	return m0
}

type ListInstanceTypesRequest struct {
	state                   protoimpl.MessageState `protogen:"opaque.v1"`
	xxx_hidden_ScopeUuid    *string                `protobuf:"bytes,1,opt,name=scope_uuid,json=scopeUuid"`
	xxx_hidden_FacilityName *string                `protobuf:"bytes,2,opt,name=facility_name,json=facilityName"`
	XXX_raceDetectHookData  protoimpl.RaceDetectHookData
	XXX_presence            [1]uint32
	unknownFields           protoimpl.UnknownFields
	sizeCache               protoimpl.SizeCache
}

func (x *ListInstanceTypesRequest) Reset() {
	*x = ListInstanceTypesRequest{}
	mi := &file_api_kubevirt_v1_kubevirt_proto_msgTypes[42]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListInstanceTypesRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListInstanceTypesRequest) ProtoMessage() {}

func (x *ListInstanceTypesRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_kubevirt_v1_kubevirt_proto_msgTypes[42]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *ListInstanceTypesRequest) GetScopeUuid() string {
	if x != nil {
		if x.xxx_hidden_ScopeUuid != nil {
			return *x.xxx_hidden_ScopeUuid
		}
		return ""
	}
	return ""
}

func (x *ListInstanceTypesRequest) GetFacilityName() string {
	if x != nil {
		if x.xxx_hidden_FacilityName != nil {
			return *x.xxx_hidden_FacilityName
		}
		return ""
	}
	return ""
}

func (x *ListInstanceTypesRequest) SetScopeUuid(v string) {
	x.xxx_hidden_ScopeUuid = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 0, 2)
}

func (x *ListInstanceTypesRequest) SetFacilityName(v string) {
	x.xxx_hidden_FacilityName = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 1, 2)
}

func (x *ListInstanceTypesRequest) HasScopeUuid() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 0)
}

func (x *ListInstanceTypesRequest) HasFacilityName() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 1)
}

func (x *ListInstanceTypesRequest) ClearScopeUuid() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 0)
	x.xxx_hidden_ScopeUuid = nil
}

func (x *ListInstanceTypesRequest) ClearFacilityName() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 1)
	x.xxx_hidden_FacilityName = nil
}

type ListInstanceTypesRequest_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	ScopeUuid    *string
	FacilityName *string
}

func (b0 ListInstanceTypesRequest_builder) Build() *ListInstanceTypesRequest {
	m0 := &ListInstanceTypesRequest{}
	b, x := &b0, m0
	_, _ = b, x
	if b.ScopeUuid != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 0, 2)
		x.xxx_hidden_ScopeUuid = b.ScopeUuid
	}
	if b.FacilityName != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 1, 2)
		x.xxx_hidden_FacilityName = b.FacilityName
	}
	return m0
}

type ListInstanceTypesResponse struct {
	state                    protoimpl.MessageState `protogen:"opaque.v1"`
	xxx_hidden_InstanceTypes *[]*InstanceType       `protobuf:"bytes,1,rep,name=instanceTypes"`
	unknownFields            protoimpl.UnknownFields
	sizeCache                protoimpl.SizeCache
}

func (x *ListInstanceTypesResponse) Reset() {
	*x = ListInstanceTypesResponse{}
	mi := &file_api_kubevirt_v1_kubevirt_proto_msgTypes[43]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListInstanceTypesResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListInstanceTypesResponse) ProtoMessage() {}

func (x *ListInstanceTypesResponse) ProtoReflect() protoreflect.Message {
	mi := &file_api_kubevirt_v1_kubevirt_proto_msgTypes[43]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *ListInstanceTypesResponse) GetInstanceTypes() []*InstanceType {
	if x != nil {
		if x.xxx_hidden_InstanceTypes != nil {
			return *x.xxx_hidden_InstanceTypes
		}
	}
	return nil
}

func (x *ListInstanceTypesResponse) SetInstanceTypes(v []*InstanceType) {
	x.xxx_hidden_InstanceTypes = &v
}

type ListInstanceTypesResponse_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	InstanceTypes []*InstanceType
}

func (b0 ListInstanceTypesResponse_builder) Build() *ListInstanceTypesResponse {
	m0 := &ListInstanceTypesResponse{}
	b, x := &b0, m0
	_, _ = b, x
	x.xxx_hidden_InstanceTypes = &b.InstanceTypes
	return m0
}

type GetInstanceTypeRequest struct {
	state                   protoimpl.MessageState `protogen:"opaque.v1"`
	xxx_hidden_ScopeUuid    *string                `protobuf:"bytes,1,opt,name=scope_uuid,json=scopeUuid"`
	xxx_hidden_FacilityName *string                `protobuf:"bytes,2,opt,name=facility_name,json=facilityName"`
	xxx_hidden_Name         *string                `protobuf:"bytes,3,opt,name=name"`
	XXX_raceDetectHookData  protoimpl.RaceDetectHookData
	XXX_presence            [1]uint32
	unknownFields           protoimpl.UnknownFields
	sizeCache               protoimpl.SizeCache
}

func (x *GetInstanceTypeRequest) Reset() {
	*x = GetInstanceTypeRequest{}
	mi := &file_api_kubevirt_v1_kubevirt_proto_msgTypes[44]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetInstanceTypeRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetInstanceTypeRequest) ProtoMessage() {}

func (x *GetInstanceTypeRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_kubevirt_v1_kubevirt_proto_msgTypes[44]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *GetInstanceTypeRequest) GetScopeUuid() string {
	if x != nil {
		if x.xxx_hidden_ScopeUuid != nil {
			return *x.xxx_hidden_ScopeUuid
		}
		return ""
	}
	return ""
}

func (x *GetInstanceTypeRequest) GetFacilityName() string {
	if x != nil {
		if x.xxx_hidden_FacilityName != nil {
			return *x.xxx_hidden_FacilityName
		}
		return ""
	}
	return ""
}

func (x *GetInstanceTypeRequest) GetName() string {
	if x != nil {
		if x.xxx_hidden_Name != nil {
			return *x.xxx_hidden_Name
		}
		return ""
	}
	return ""
}

func (x *GetInstanceTypeRequest) SetScopeUuid(v string) {
	x.xxx_hidden_ScopeUuid = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 0, 3)
}

func (x *GetInstanceTypeRequest) SetFacilityName(v string) {
	x.xxx_hidden_FacilityName = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 1, 3)
}

func (x *GetInstanceTypeRequest) SetName(v string) {
	x.xxx_hidden_Name = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 2, 3)
}

func (x *GetInstanceTypeRequest) HasScopeUuid() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 0)
}

func (x *GetInstanceTypeRequest) HasFacilityName() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 1)
}

func (x *GetInstanceTypeRequest) HasName() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 2)
}

func (x *GetInstanceTypeRequest) ClearScopeUuid() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 0)
	x.xxx_hidden_ScopeUuid = nil
}

func (x *GetInstanceTypeRequest) ClearFacilityName() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 1)
	x.xxx_hidden_FacilityName = nil
}

func (x *GetInstanceTypeRequest) ClearName() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 2)
	x.xxx_hidden_Name = nil
}

type GetInstanceTypeRequest_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	ScopeUuid    *string
	FacilityName *string
	Name         *string
}

func (b0 GetInstanceTypeRequest_builder) Build() *GetInstanceTypeRequest {
	m0 := &GetInstanceTypeRequest{}
	b, x := &b0, m0
	_, _ = b, x
	if b.ScopeUuid != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 0, 3)
		x.xxx_hidden_ScopeUuid = b.ScopeUuid
	}
	if b.FacilityName != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 1, 3)
		x.xxx_hidden_FacilityName = b.FacilityName
	}
	if b.Name != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 2, 3)
		x.xxx_hidden_Name = b.Name
	}
	return m0
}

type DeleteInstanceTypeRequest struct {
	state                   protoimpl.MessageState `protogen:"opaque.v1"`
	xxx_hidden_ScopeUuid    *string                `protobuf:"bytes,1,opt,name=scope_uuid,json=scopeUuid"`
	xxx_hidden_FacilityName *string                `protobuf:"bytes,2,opt,name=facility_name,json=facilityName"`
	xxx_hidden_Name         *string                `protobuf:"bytes,3,opt,name=name"`
	XXX_raceDetectHookData  protoimpl.RaceDetectHookData
	XXX_presence            [1]uint32
	unknownFields           protoimpl.UnknownFields
	sizeCache               protoimpl.SizeCache
}

func (x *DeleteInstanceTypeRequest) Reset() {
	*x = DeleteInstanceTypeRequest{}
	mi := &file_api_kubevirt_v1_kubevirt_proto_msgTypes[45]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DeleteInstanceTypeRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteInstanceTypeRequest) ProtoMessage() {}

func (x *DeleteInstanceTypeRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_kubevirt_v1_kubevirt_proto_msgTypes[45]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *DeleteInstanceTypeRequest) GetScopeUuid() string {
	if x != nil {
		if x.xxx_hidden_ScopeUuid != nil {
			return *x.xxx_hidden_ScopeUuid
		}
		return ""
	}
	return ""
}

func (x *DeleteInstanceTypeRequest) GetFacilityName() string {
	if x != nil {
		if x.xxx_hidden_FacilityName != nil {
			return *x.xxx_hidden_FacilityName
		}
		return ""
	}
	return ""
}

func (x *DeleteInstanceTypeRequest) GetName() string {
	if x != nil {
		if x.xxx_hidden_Name != nil {
			return *x.xxx_hidden_Name
		}
		return ""
	}
	return ""
}

func (x *DeleteInstanceTypeRequest) SetScopeUuid(v string) {
	x.xxx_hidden_ScopeUuid = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 0, 3)
}

func (x *DeleteInstanceTypeRequest) SetFacilityName(v string) {
	x.xxx_hidden_FacilityName = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 1, 3)
}

func (x *DeleteInstanceTypeRequest) SetName(v string) {
	x.xxx_hidden_Name = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 2, 3)
}

func (x *DeleteInstanceTypeRequest) HasScopeUuid() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 0)
}

func (x *DeleteInstanceTypeRequest) HasFacilityName() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 1)
}

func (x *DeleteInstanceTypeRequest) HasName() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 2)
}

func (x *DeleteInstanceTypeRequest) ClearScopeUuid() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 0)
	x.xxx_hidden_ScopeUuid = nil
}

func (x *DeleteInstanceTypeRequest) ClearFacilityName() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 1)
	x.xxx_hidden_FacilityName = nil
}

func (x *DeleteInstanceTypeRequest) ClearName() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 2)
	x.xxx_hidden_Name = nil
}

type DeleteInstanceTypeRequest_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	ScopeUuid    *string
	FacilityName *string
	Name         *string
}

func (b0 DeleteInstanceTypeRequest_builder) Build() *DeleteInstanceTypeRequest {
	m0 := &DeleteInstanceTypeRequest{}
	b, x := &b0, m0
	_, _ = b, x
	if b.ScopeUuid != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 0, 3)
		x.xxx_hidden_ScopeUuid = b.ScopeUuid
	}
	if b.FacilityName != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 1, 3)
		x.xxx_hidden_FacilityName = b.FacilityName
	}
	if b.Name != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 2, 3)
		x.xxx_hidden_Name = b.Name
	}
	return m0
}

var File_api_kubevirt_v1_kubevirt_proto protoreflect.FileDescriptor

const file_api_kubevirt_v1_kubevirt_proto_rawDesc = "" +
	"\n" +
	"\x1eapi/kubevirt/v1/kubevirt.proto\x12\x16otterscale.kubevirt.v1\x1a\x1bgoogle/protobuf/empty.proto\x1a\x1fgoogle/protobuf/timestamp.proto\"\xb3\x02\n" +
	"\bMetadata\x12\x12\n" +
	"\x04name\x18\x01 \x01(\tR\x04name\x12\x1c\n" +
	"\tnamespace\x18\x02 \x01(\tR\tnamespace\x12D\n" +
	"\x06labels\x18\x03 \x03(\v2,.otterscale.kubevirt.v1.Metadata.LabelsEntryR\x06labels\x129\n" +
	"\n" +
	"created_at\x18\x05 \x01(\v2\x1a.google.protobuf.TimestampR\tcreatedAt\x129\n" +
	"\n" +
	"updated_at\x18\x06 \x01(\v2\x1a.google.protobuf.TimestampR\tupdatedAt\x1a9\n" +
	"\vLabelsEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\tR\x05value:\x028\x01\"\xeb\x02\n" +
	"\x0eVirtualMachine\x12<\n" +
	"\bmetadata\x18\x01 \x01(\v2 .otterscale.kubevirt.v1.MetadataR\bmetadata\x12!\n" +
	"\fnetwork_name\x18\v \x01(\tR\vnetworkName\x12%\n" +
	"\x0estartup_script\x18\f \x01(\tR\rstartupScript\x12\x1b\n" +
	"\tnode_name\x18\r \x01(\tR\bnodeName\x12O\n" +
	"\n" +
	"resoureces\x18\x15 \x01(\v2/.otterscale.kubevirt.v1.VirtualMachineResourcesR\n" +
	"resoureces\x12@\n" +
	"\x05disks\x18\x16 \x03(\v2*.otterscale.kubevirt.v1.VirtualMachineDiskR\x05disks\x12!\n" +
	"\fstatus_phase\x18\x1f \x01(\tR\vstatusPhase\"\x80\x03\n" +
	"\x16VirtualMachineSnapshot\x12\x12\n" +
	"\x04name\x18\x01 \x01(\tR\x04name\x12\x1c\n" +
	"\tnamespace\x18\x02 \x01(\tR\tnamespace\x12\x1f\n" +
	"\vsource_name\x18\x03 \x01(\tR\n" +
	"sourceName\x12)\n" +
	"\x10source_namespace\x18\x04 \x01(\tR\x0fsourceNamespace\x129\n" +
	"\n" +
	"created_at\x18\x05 \x01(\v2\x1a.google.protobuf.TimestampR\tcreatedAt\x12 \n" +
	"\vdescription\x18\x06 \x01(\tR\vdescription\x12!\n" +
	"\fstatus_phase\x18\v \x01(\tR\vstatusPhase\x124\n" +
	"\x16last_condition_message\x18\f \x01(\tR\x14lastConditionMessage\x122\n" +
	"\x15last_condition_reason\x18\r \x01(\tR\x13lastConditionReason\"Y\n" +
	"\x17VirtualMachineResources\x12\x1b\n" +
	"\tcpu_cores\x18\x01 \x01(\rR\bcpuCores\x12!\n" +
	"\fmemory_bytes\x18\x02 \x01(\x03R\vmemoryBytes\"\x8c\x01\n" +
	"\fInstanceType\x12<\n" +
	"\bmetadata\x18\x01 \x01(\v2 .otterscale.kubevirt.v1.MetadataR\bmetadata\x12\x1b\n" +
	"\tcpu_cores\x18\x02 \x01(\rR\bcpuCores\x12!\n" +
	"\fmemory_bytes\x18\x03 \x01(\x03R\vmemoryBytes\"\xf1\x03\n" +
	"\n" +
	"DataVolume\x12<\n" +
	"\bmetadata\x18\x01 \x01(\v2 .otterscale.kubevirt.v1.MetadataR\bmetadata\x12\x16\n" +
	"\x06source\x18\x02 \x01(\tR\x06source\x12\x12\n" +
	"\x04type\x18\x03 \x01(\tR\x04type\x12\x1d\n" +
	"\n" +
	"size_bytes\x18\x04 \x01(\x03R\tsizeBytes\x12\x1f\n" +
	"\vaccess_mode\x18\x05 \x01(\tR\n" +
	"accessMode\x12#\n" +
	"\rstorage_class\x18\x06 \x01(\tR\fstorageClass\x12!\n" +
	"\fstatus_phase\x18\a \x01(\tR\vstatusPhase\x12'\n" +
	"\x0fstatus_progress\x18\b \x01(\tR\x0estatusProgress\x12*\n" +
	"\x11status_claim_name\x18\t \x01(\tR\x0fstatusClaimName\x124\n" +
	"\x16last_condition_message\x18\n" +
	" \x01(\tR\x14lastConditionMessage\x122\n" +
	"\x15last_condition_reason\x18\v \x01(\tR\x13lastConditionReason\x122\n" +
	"\x15last_condition_status\x18\f \x01(\tR\x13lastConditionStatus\"\xe9\x01\n" +
	"\x15VirtualMachineService\x12<\n" +
	"\bmetadata\x18\x01 \x01(\v2 .otterscale.kubevirt.v1.MetadataR\bmetadata\x12E\n" +
	"\x04spec\x18\v \x01(\v21.otterscale.kubevirt.v1.VirtualMachineServiceSpecR\x04spec\x12K\n" +
	"\x06status\x18\f \x01(\v23.otterscale.kubevirt.v1.VirtualMachineServiceStatusR\x06status\"\xae\x03\n" +
	"\x19VirtualMachineServiceSpec\x120\n" +
	"\x14virtual_machine_name\x18\x01 \x01(\tR\x12virtualMachineName\x12J\n" +
	"\x04type\x18\x02 \x01(\x0e26.otterscale.kubevirt.v1.VirtualMachineServiceSpec.TypeR\x04type\x129\n" +
	"\x05ports\x18\v \x03(\v2#.otterscale.kubevirt.v1.ServicePortR\x05ports\x12[\n" +
	"\bselector\x18\x15 \x03(\v2?.otterscale.kubevirt.v1.VirtualMachineServiceSpec.SelectorEntryR\bselector\x1a;\n" +
	"\rSelectorEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\tR\x05value:\x028\x01\">\n" +
	"\x04Type\x12\x14\n" +
	"\x10TYPE_UNSPECIFIED\x10\x00\x12\r\n" +
	"\tNODE_PORT\x10\x01\x12\x11\n" +
	"\rLOAD_BALANCER\x10\x02\"\xd4\x01\n" +
	"\vServicePort\x12\x12\n" +
	"\x04name\x18\x01 \x01(\tR\x04name\x12\x12\n" +
	"\x04port\x18\x02 \x01(\x05R\x04port\x12H\n" +
	"\bprotocol\x18\x04 \x01(\x0e2,.otterscale.kubevirt.v1.ServicePort.ProtocolR\bprotocol\x12\x1b\n" +
	"\tnode_port\x18\x05 \x01(\x05R\bnodePort\"6\n" +
	"\bProtocol\x12\x18\n" +
	"\x14PROTOCOL_UNSPECIFIED\x10\x00\x12\a\n" +
	"\x03TCP\x10\x01\x12\a\n" +
	"\x03UDP\x10\x02\"\x91\x01\n" +
	"\x1bVirtualMachineServiceStatus\x12\x1d\n" +
	"\n" +
	"cluster_ip\x18\x01 \x01(\tR\tclusterIp\x12\x1f\n" +
	"\vcluster_ips\x18\x02 \x03(\tR\n" +
	"clusterIps\x122\n" +
	"\x15load_balancer_ingress\x18\x03 \x03(\tR\x13loadBalancerIngress\"~\n" +
	"\x1aListVirtualMachinesRequest\x12\x1d\n" +
	"\n" +
	"scope_uuid\x18\x01 \x01(\tR\tscopeUuid\x12#\n" +
	"\rfacility_name\x18\x02 \x01(\tR\ffacilityName\x12\x1c\n" +
	"\tnamespace\x18\x03 \x01(\tR\tnamespace\"o\n" +
	"\x1bListVirtualMachinesResponse\x12P\n" +
	"\x0fvirtualMachines\x18\x01 \x03(\v2&.otterscale.kubevirt.v1.VirtualMachineR\x0fvirtualMachines\"\x90\x01\n" +
	"\x18GetVirtualMachineRequest\x12\x1d\n" +
	"\n" +
	"scope_uuid\x18\x01 \x01(\tR\tscopeUuid\x12#\n" +
	"\rfacility_name\x18\x02 \x01(\tR\ffacilityName\x12\x12\n" +
	"\x04name\x18\x03 \x01(\tR\x04name\x12\x1c\n" +
	"\tnamespace\x18\x04 \x01(\tR\tnamespace\"\x95\x02\n" +
	"\x12VirtualMachineDisk\x12\x12\n" +
	"\x04name\x18\x01 \x01(\tR\x04name\x12L\n" +
	"\tdisk_type\x18\x02 \x01(\x0e2/.otterscale.kubevirt.v1.VirtualMachineDisk.typeR\bdiskType\x12\x10\n" +
	"\x03bus\x18\x03 \x01(\tR\x03bus\x12\x16\n" +
	"\x06source\x18\x04 \x01(\tR\x06source\"s\n" +
	"\x04type\x12\x0f\n" +
	"\vUNSPECIFIED\x10\x00\x12\x0e\n" +
	"\n" +
	"DATAVOLUME\x10\x01\x12\x19\n" +
	"\x15PERSISTENTVOLUMECLAIM\x10\x02\x12\r\n" +
	"\tCONFIGMAP\x10\x03\x12\n" +
	"\n" +
	"\x06SECRET\x10\x04\x12\x14\n" +
	"\x10CLOUDINITNOCLOUD\x10\x05\"\xb1\x04\n" +
	"\x1bCreateVirtualMachineRequest\x12\x1d\n" +
	"\n" +
	"scope_uuid\x18\x01 \x01(\tR\tscopeUuid\x12#\n" +
	"\rfacility_name\x18\x02 \x01(\tR\ffacilityName\x12\x12\n" +
	"\x04name\x18\x03 \x01(\tR\x04name\x12\x1c\n" +
	"\tnamespace\x18\x04 \x01(\tR\tnamespace\x12!\n" +
	"\fnetwork_name\x18\x05 \x01(\tR\vnetworkName\x12%\n" +
	"\x0estartup_script\x18\x06 \x01(\tR\rstartupScript\x12W\n" +
	"\x06labels\x18\v \x03(\v2?.otterscale.kubevirt.v1.CreateVirtualMachineRequest.LabelsEntryR\x06labels\x12@\n" +
	"\x05disks\x18\x15 \x03(\v2*.otterscale.kubevirt.v1.VirtualMachineDiskR\x05disks\x12$\n" +
	"\finstancetype\x18\x1f \x01(\tH\x00R\finstancetype\x12I\n" +
	"\x06custom\x18  \x01(\v2/.otterscale.kubevirt.v1.VirtualMachineResourcesH\x00R\x06custom\x1a9\n" +
	"\vLabelsEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\tR\x05value:\x028\x01B\v\n" +
	"\tresources\"\x8c\x03\n" +
	"\x1bUpdateVirtualMachineRequest\x12\x1d\n" +
	"\n" +
	"scope_uuid\x18\x01 \x01(\tR\tscopeUuid\x12#\n" +
	"\rfacility_name\x18\x02 \x01(\tR\ffacilityName\x12\x12\n" +
	"\x04name\x18\x03 \x01(\tR\x04name\x12\x1c\n" +
	"\tnamespace\x18\x04 \x01(\tR\tnamespace\x12!\n" +
	"\fnetwork_name\x18\x05 \x01(\tR\vnetworkName\x12W\n" +
	"\x06labels\x18\v \x03(\v2?.otterscale.kubevirt.v1.UpdateVirtualMachineRequest.LabelsEntryR\x06labels\x12@\n" +
	"\x05disks\x18\x1f \x03(\v2*.otterscale.kubevirt.v1.VirtualMachineDiskR\x05disks\x1a9\n" +
	"\vLabelsEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\tR\x05value:\x028\x01\"\x93\x01\n" +
	"\x1bDeleteVirtualMachineRequest\x12\x1d\n" +
	"\n" +
	"scope_uuid\x18\x01 \x01(\tR\tscopeUuid\x12#\n" +
	"\rfacility_name\x18\x02 \x01(\tR\ffacilityName\x12\x12\n" +
	"\x04name\x18\x03 \x01(\tR\x04name\x12\x1c\n" +
	"\tnamespace\x18\x04 \x01(\tR\tnamespace\"\x92\x01\n" +
	"\x1aStartVirtualMachineRequest\x12\x1d\n" +
	"\n" +
	"scope_uuid\x18\x01 \x01(\tR\tscopeUuid\x12#\n" +
	"\rfacility_name\x18\x02 \x01(\tR\ffacilityName\x12\x12\n" +
	"\x04name\x18\x03 \x01(\tR\x04name\x12\x1c\n" +
	"\tnamespace\x18\x04 \x01(\tR\tnamespace\"\x91\x01\n" +
	"\x19StopVirtualMachineRequest\x12\x1d\n" +
	"\n" +
	"scope_uuid\x18\x01 \x01(\tR\tscopeUuid\x12#\n" +
	"\rfacility_name\x18\x02 \x01(\tR\ffacilityName\x12\x12\n" +
	"\x04name\x18\x03 \x01(\tR\x04name\x12\x1c\n" +
	"\tnamespace\x18\x04 \x01(\tR\tnamespace\"\x92\x01\n" +
	"\x1aPauseVirtualMachineRequest\x12\x1d\n" +
	"\n" +
	"scope_uuid\x18\x01 \x01(\tR\tscopeUuid\x12#\n" +
	"\rfacility_name\x18\x02 \x01(\tR\ffacilityName\x12\x12\n" +
	"\x04name\x18\x03 \x01(\tR\x04name\x12\x1c\n" +
	"\tnamespace\x18\x04 \x01(\tR\tnamespace\"\x93\x01\n" +
	"\x1bResumeVirtualMachineRequest\x12\x1d\n" +
	"\n" +
	"scope_uuid\x18\x01 \x01(\tR\tscopeUuid\x12#\n" +
	"\rfacility_name\x18\x02 \x01(\tR\ffacilityName\x12\x12\n" +
	"\x04name\x18\x03 \x01(\tR\x04name\x12\x1c\n" +
	"\tnamespace\x18\x04 \x01(\tR\tnamespace\"\xdc\x01\n" +
	"\x1dSnapshotVirtualMachineRequest\x12\x1d\n" +
	"\n" +
	"scope_uuid\x18\x01 \x01(\tR\tscopeUuid\x12#\n" +
	"\rfacility_name\x18\x02 \x01(\tR\ffacilityName\x12\x12\n" +
	"\x04name\x18\x03 \x01(\tR\x04name\x12\x1c\n" +
	"\tnamespace\x18\x04 \x01(\tR\tnamespace\x12#\n" +
	"\rsnapshot_name\x18\x05 \x01(\tR\fsnapshotName\x12 \n" +
	"\vdescription\x18\v \x01(\tR\vdescription\"\xf8\x01\n" +
	"\x1aCloneVirtualMachineRequest\x12\x1d\n" +
	"\n" +
	"scope_uuid\x18\x01 \x01(\tR\tscopeUuid\x12#\n" +
	"\rfacility_name\x18\x02 \x01(\tR\ffacilityName\x12\x1f\n" +
	"\vtarget_name\x18\x03 \x01(\tR\n" +
	"targetName\x12)\n" +
	"\x10target_namespace\x18\x04 \x01(\tR\x0ftargetNamespace\x12\x1f\n" +
	"\vsource_name\x18\x05 \x01(\tR\n" +
	"sourceName\x12)\n" +
	"\x10source_namespace\x18\x06 \x01(\tR\x0fsourceNamespace\"\xb9\x01\n" +
	"\x1cRestoreVirtualMachineRequest\x12\x1d\n" +
	"\n" +
	"scope_uuid\x18\x01 \x01(\tR\tscopeUuid\x12#\n" +
	"\rfacility_name\x18\x02 \x01(\tR\ffacilityName\x12\x12\n" +
	"\x04name\x18\x03 \x01(\tR\x04name\x12\x1c\n" +
	"\tnamespace\x18\x04 \x01(\tR\tnamespace\x12#\n" +
	"\rsnapshot_name\x18\x05 \x01(\tR\fsnapshotName\"\xb5\x01\n" +
	"\x1cMigrateVirtualMachineRequest\x12\x1d\n" +
	"\n" +
	"scope_uuid\x18\x01 \x01(\tR\tscopeUuid\x12#\n" +
	"\rfacility_name\x18\x02 \x01(\tR\ffacilityName\x12\x12\n" +
	"\x04name\x18\x03 \x01(\tR\x04name\x12\x1c\n" +
	"\tnamespace\x18\x04 \x01(\tR\tnamespace\x12\x1f\n" +
	"\vtarget_node\x18\x05 \x01(\tR\n" +
	"targetNode\"\x98\x01\n" +
	" GetVirtualMachineSnapshotRequest\x12\x1d\n" +
	"\n" +
	"scope_uuid\x18\x01 \x01(\tR\tscopeUuid\x12#\n" +
	"\rfacility_name\x18\x02 \x01(\tR\ffacilityName\x12\x12\n" +
	"\x04name\x18\x03 \x01(\tR\x04name\x12\x1c\n" +
	"\tnamespace\x18\x04 \x01(\tR\tnamespace\"\x9e\x01\n" +
	"\"ListVirtualMachineSnapshotsRequest\x12\x1d\n" +
	"\n" +
	"scope_uuid\x18\x01 \x01(\tR\tscopeUuid\x12#\n" +
	"\rfacility_name\x18\x02 \x01(\tR\ffacilityName\x12\x1c\n" +
	"\tnamespace\x18\x03 \x01(\tR\tnamespace\x12\x16\n" +
	"\x06vmName\x18\x04 \x01(\tR\x06vmName\"\x9b\x01\n" +
	"#DeleteVirtualMachineSnapshotRequest\x12\x1d\n" +
	"\n" +
	"scope_uuid\x18\x01 \x01(\tR\tscopeUuid\x12#\n" +
	"\rfacility_name\x18\x02 \x01(\tR\ffacilityName\x12\x12\n" +
	"\x04name\x18\x03 \x01(\tR\x04name\x12\x1c\n" +
	"\tnamespace\x18\x04 \x01(\tR\tnamespace\"s\n" +
	"#ListVirtualMachineSnapshotsResponse\x12L\n" +
	"\tsnapshots\x18\x01 \x03(\v2..otterscale.kubevirt.v1.VirtualMachineSnapshotR\tsnapshots\"\xc3\x01\n" +
	"\x17CreateDataVolumeRequest\x12\x1d\n" +
	"\n" +
	"scope_uuid\x18\x01 \x01(\tR\tscopeUuid\x12#\n" +
	"\rfacility_name\x18\x02 \x01(\tR\ffacilityName\x12C\n" +
	"\vdata_volume\x18\x03 \x01(\v2\".otterscale.kubevirt.v1.DataVolumeR\n" +
	"dataVolume\x12\x1f\n" +
	"\vis_bootable\x18\x04 \x01(\bR\n" +
	"isBootable\"z\n" +
	"\x16ListDataVolumesRequest\x12\x1d\n" +
	"\n" +
	"scope_uuid\x18\x01 \x01(\tR\tscopeUuid\x12#\n" +
	"\rfacility_name\x18\x02 \x01(\tR\ffacilityName\x12\x1c\n" +
	"\tnamespace\x18\x03 \x01(\tR\tnamespace\"_\n" +
	"\x17ListDataVolumesResponse\x12D\n" +
	"\vdatavolumes\x18\x01 \x03(\v2\".otterscale.kubevirt.v1.DataVolumeR\vdatavolumes\"\x8c\x01\n" +
	"\x14GetDataVolumeRequest\x12\x1d\n" +
	"\n" +
	"scope_uuid\x18\x01 \x01(\tR\tscopeUuid\x12#\n" +
	"\rfacility_name\x18\x02 \x01(\tR\ffacilityName\x12\x12\n" +
	"\x04name\x18\x03 \x01(\tR\x04name\x12\x1c\n" +
	"\tnamespace\x18\x04 \x01(\tR\tnamespace\"\x8f\x01\n" +
	"\x17DeleteDataVolumeRequest\x12\x1d\n" +
	"\n" +
	"scope_uuid\x18\x01 \x01(\tR\tscopeUuid\x12#\n" +
	"\rfacility_name\x18\x02 \x01(\tR\ffacilityName\x12\x12\n" +
	"\x04name\x18\x03 \x01(\tR\x04name\x12\x1c\n" +
	"\tnamespace\x18\x04 \x01(\tR\tnamespace\"\xae\x01\n" +
	"\x17ExtendDataVolumeRequest\x12\x1d\n" +
	"\n" +
	"scope_uuid\x18\x01 \x01(\tR\tscopeUuid\x12#\n" +
	"\rfacility_name\x18\x02 \x01(\tR\ffacilityName\x12\x12\n" +
	"\x04name\x18\x03 \x01(\tR\x04name\x12\x1c\n" +
	"\tnamespace\x18\x04 \x01(\tR\tnamespace\x12\x1d\n" +
	"\n" +
	"size_bytes\x18\x05 \x01(\x03R\tsizeBytes\"\xed\x01\n" +
	"\"CreateVirtualMachineServiceRequest\x12\x1d\n" +
	"\n" +
	"scope_uuid\x18\x01 \x01(\tR\tscopeUuid\x12#\n" +
	"\rfacility_name\x18\x02 \x01(\tR\ffacilityName\x12\x1c\n" +
	"\tnamespace\x18\x03 \x01(\tR\tnamespace\x12e\n" +
	"\x17virtual_machine_service\x18\x04 \x01(\v2-.otterscale.kubevirt.v1.VirtualMachineServiceR\x15virtualMachineService\"\x85\x01\n" +
	"!ListVirtualMachineServicesRequest\x12\x1d\n" +
	"\n" +
	"scope_uuid\x18\x01 \x01(\tR\tscopeUuid\x12#\n" +
	"\rfacility_name\x18\x02 \x01(\tR\ffacilityName\x12\x1c\n" +
	"\tnamespace\x18\x03 \x01(\tR\tnamespace\"\x8d\x01\n" +
	"\"ListVirtualMachineServicesResponse\x12g\n" +
	"\x18virtual_machine_services\x18\x01 \x03(\v2-.otterscale.kubevirt.v1.VirtualMachineServiceR\x16virtualMachineServices\"\x97\x01\n" +
	"\x1fGetVirtualMachineServiceRequest\x12\x1d\n" +
	"\n" +
	"scope_uuid\x18\x01 \x01(\tR\tscopeUuid\x12#\n" +
	"\rfacility_name\x18\x02 \x01(\tR\ffacilityName\x12\x12\n" +
	"\x04name\x18\x03 \x01(\tR\x04name\x12\x1c\n" +
	"\tnamespace\x18\x04 \x01(\tR\tnamespace\"\x81\x02\n" +
	"\"UpdateVirtualMachineServiceRequest\x12\x1d\n" +
	"\n" +
	"scope_uuid\x18\x01 \x01(\tR\tscopeUuid\x12#\n" +
	"\rfacility_name\x18\x02 \x01(\tR\ffacilityName\x12\x12\n" +
	"\x04name\x18\x03 \x01(\tR\x04name\x12\x1c\n" +
	"\tnamespace\x18\x04 \x01(\tR\tnamespace\x12e\n" +
	"\x17virtual_machine_service\x18\x05 \x01(\v2-.otterscale.kubevirt.v1.VirtualMachineServiceR\x15virtualMachineService\"\x9a\x01\n" +
	"\"DeleteVirtualMachineServiceRequest\x12\x1d\n" +
	"\n" +
	"scope_uuid\x18\x01 \x01(\tR\tscopeUuid\x12#\n" +
	"\rfacility_name\x18\x02 \x01(\tR\ffacilityName\x12\x12\n" +
	"\x04name\x18\x03 \x01(\tR\x04name\x12\x1c\n" +
	"\tnamespace\x18\x04 \x01(\tR\tnamespace\"\xa9\x01\n" +
	"\x19CreateInstanceTypeRequest\x12\x1d\n" +
	"\n" +
	"scope_uuid\x18\x01 \x01(\tR\tscopeUuid\x12#\n" +
	"\rfacility_name\x18\x02 \x01(\tR\ffacilityName\x12H\n" +
	"\finstanceType\x18\x03 \x01(\v2$.otterscale.kubevirt.v1.InstanceTypeR\finstanceType\"^\n" +
	"\x18ListInstanceTypesRequest\x12\x1d\n" +
	"\n" +
	"scope_uuid\x18\x01 \x01(\tR\tscopeUuid\x12#\n" +
	"\rfacility_name\x18\x02 \x01(\tR\ffacilityName\"g\n" +
	"\x19ListInstanceTypesResponse\x12J\n" +
	"\rinstanceTypes\x18\x01 \x03(\v2$.otterscale.kubevirt.v1.InstanceTypeR\rinstanceTypes\"p\n" +
	"\x16GetInstanceTypeRequest\x12\x1d\n" +
	"\n" +
	"scope_uuid\x18\x01 \x01(\tR\tscopeUuid\x12#\n" +
	"\rfacility_name\x18\x02 \x01(\tR\ffacilityName\x12\x12\n" +
	"\x04name\x18\x03 \x01(\tR\x04name\"s\n" +
	"\x19DeleteInstanceTypeRequest\x12\x1d\n" +
	"\n" +
	"scope_uuid\x18\x01 \x01(\tR\tscopeUuid\x12#\n" +
	"\rfacility_name\x18\x02 \x01(\tR\ffacilityName\x12\x12\n" +
	"\x04name\x18\x03 \x01(\tR\x04name2\xdc\x1a\n" +
	"\x0fKubeVirtService\x12s\n" +
	"\x14CreateVirtualMachine\x123.otterscale.kubevirt.v1.CreateVirtualMachineRequest\x1a&.otterscale.kubevirt.v1.VirtualMachine\x12m\n" +
	"\x11GetVirtualMachine\x120.otterscale.kubevirt.v1.GetVirtualMachineRequest\x1a&.otterscale.kubevirt.v1.VirtualMachine\x12~\n" +
	"\x13ListVirtualMachines\x122.otterscale.kubevirt.v1.ListVirtualMachinesRequest\x1a3.otterscale.kubevirt.v1.ListVirtualMachinesResponse\x12s\n" +
	"\x14UpdateVirtualMachine\x123.otterscale.kubevirt.v1.UpdateVirtualMachineRequest\x1a&.otterscale.kubevirt.v1.VirtualMachine\x12c\n" +
	"\x14DeleteVirtualMachine\x123.otterscale.kubevirt.v1.DeleteVirtualMachineRequest\x1a\x16.google.protobuf.Empty\x12a\n" +
	"\x13StartVirtualMachine\x122.otterscale.kubevirt.v1.StartVirtualMachineRequest\x1a\x16.google.protobuf.Empty\x12_\n" +
	"\x12StopVirtualMachine\x121.otterscale.kubevirt.v1.StopVirtualMachineRequest\x1a\x16.google.protobuf.Empty\x12a\n" +
	"\x13PauseVirtualMachine\x122.otterscale.kubevirt.v1.PauseVirtualMachineRequest\x1a\x16.google.protobuf.Empty\x12c\n" +
	"\x14ResumeVirtualMachine\x123.otterscale.kubevirt.v1.ResumeVirtualMachineRequest\x1a\x16.google.protobuf.Empty\x12a\n" +
	"\x13CloneVirtualMachine\x122.otterscale.kubevirt.v1.CloneVirtualMachineRequest\x1a\x16.google.protobuf.Empty\x12g\n" +
	"\x16SnapshotVirtualMachine\x125.otterscale.kubevirt.v1.SnapshotVirtualMachineRequest\x1a\x16.google.protobuf.Empty\x12e\n" +
	"\x15RestoreVirtualMachine\x124.otterscale.kubevirt.v1.RestoreVirtualMachineRequest\x1a\x16.google.protobuf.Empty\x12e\n" +
	"\x15MigrateVirtualMachine\x124.otterscale.kubevirt.v1.MigrateVirtualMachineRequest\x1a\x16.google.protobuf.Empty\x12\x85\x01\n" +
	"\x19GetVirtualMachineSnapshot\x128.otterscale.kubevirt.v1.GetVirtualMachineSnapshotRequest\x1a..otterscale.kubevirt.v1.VirtualMachineSnapshot\x12\x96\x01\n" +
	"\x1bListVirtualMachineSnapshots\x12:.otterscale.kubevirt.v1.ListVirtualMachineSnapshotsRequest\x1a;.otterscale.kubevirt.v1.ListVirtualMachineSnapshotsResponse\x12s\n" +
	"\x1cDeleteVirtualMachineSnapshot\x12;.otterscale.kubevirt.v1.DeleteVirtualMachineSnapshotRequest\x1a\x16.google.protobuf.Empty\x12g\n" +
	"\x10CreateDataVolume\x12/.otterscale.kubevirt.v1.CreateDataVolumeRequest\x1a\".otterscale.kubevirt.v1.DataVolume\x12a\n" +
	"\rGetDataVolume\x12,.otterscale.kubevirt.v1.GetDataVolumeRequest\x1a\".otterscale.kubevirt.v1.DataVolume\x12r\n" +
	"\x0fListDataVolumes\x12..otterscale.kubevirt.v1.ListDataVolumesRequest\x1a/.otterscale.kubevirt.v1.ListDataVolumesResponse\x12[\n" +
	"\x10DeleteDataVolume\x12/.otterscale.kubevirt.v1.DeleteDataVolumeRequest\x1a\x16.google.protobuf.Empty\x12[\n" +
	"\x10ExtendDataVolume\x12/.otterscale.kubevirt.v1.ExtendDataVolumeRequest\x1a\x16.google.protobuf.Empty\x12\x88\x01\n" +
	"\x1bCreateVirtualMachineService\x12:.otterscale.kubevirt.v1.CreateVirtualMachineServiceRequest\x1a-.otterscale.kubevirt.v1.VirtualMachineService\x12\x82\x01\n" +
	"\x18GetVirtualMachineService\x127.otterscale.kubevirt.v1.GetVirtualMachineServiceRequest\x1a-.otterscale.kubevirt.v1.VirtualMachineService\x12\x93\x01\n" +
	"\x1aListVirtualMachineServices\x129.otterscale.kubevirt.v1.ListVirtualMachineServicesRequest\x1a:.otterscale.kubevirt.v1.ListVirtualMachineServicesResponse\x12\x88\x01\n" +
	"\x1bUpdateVirtualMachineService\x12:.otterscale.kubevirt.v1.UpdateVirtualMachineServiceRequest\x1a-.otterscale.kubevirt.v1.VirtualMachineService\x12q\n" +
	"\x1bDeleteVirtualMachineService\x12:.otterscale.kubevirt.v1.DeleteVirtualMachineServiceRequest\x1a\x16.google.protobuf.Empty\x12m\n" +
	"\x12CreateInstanceType\x121.otterscale.kubevirt.v1.CreateInstanceTypeRequest\x1a$.otterscale.kubevirt.v1.InstanceType\x12g\n" +
	"\x0fGetInstanceType\x12..otterscale.kubevirt.v1.GetInstanceTypeRequest\x1a$.otterscale.kubevirt.v1.InstanceType\x12x\n" +
	"\x11ListInstanceTypes\x120.otterscale.kubevirt.v1.ListInstanceTypesRequest\x1a1.otterscale.kubevirt.v1.ListInstanceTypesResponse\x12_\n" +
	"\x12DeleteInstanceType\x121.otterscale.kubevirt.v1.DeleteInstanceTypeRequest\x1a\x16.google.protobuf.EmptyB5Z3github.com/otterscale/otterscale/api/kubevirt/v1;pbb\beditionsp\xe8\a"

var file_api_kubevirt_v1_kubevirt_proto_enumTypes = make([]protoimpl.EnumInfo, 3)
var file_api_kubevirt_v1_kubevirt_proto_msgTypes = make([]protoimpl.MessageInfo, 50)
var file_api_kubevirt_v1_kubevirt_proto_goTypes = []any{
	(VirtualMachineServiceSpec_Type)(0),         // 0: otterscale.kubevirt.v1.VirtualMachineServiceSpec.Type
	(ServicePort_Protocol)(0),                   // 1: otterscale.kubevirt.v1.ServicePort.Protocol
	(VirtualMachineDiskType)(0),                 // 2: otterscale.kubevirt.v1.VirtualMachineDisk.type
	(*Metadata)(nil),                            // 3: otterscale.kubevirt.v1.Metadata
	(*VirtualMachine)(nil),                      // 4: otterscale.kubevirt.v1.VirtualMachine
	(*VirtualMachineSnapshot)(nil),              // 5: otterscale.kubevirt.v1.VirtualMachineSnapshot
	(*VirtualMachineResources)(nil),             // 6: otterscale.kubevirt.v1.VirtualMachineResources
	(*InstanceType)(nil),                        // 7: otterscale.kubevirt.v1.InstanceType
	(*DataVolume)(nil),                          // 8: otterscale.kubevirt.v1.DataVolume
	(*VirtualMachineService)(nil),               // 9: otterscale.kubevirt.v1.VirtualMachineService
	(*VirtualMachineServiceSpec)(nil),           // 10: otterscale.kubevirt.v1.VirtualMachineServiceSpec
	(*ServicePort)(nil),                         // 11: otterscale.kubevirt.v1.ServicePort
	(*VirtualMachineServiceStatus)(nil),         // 12: otterscale.kubevirt.v1.VirtualMachineServiceStatus
	(*ListVirtualMachinesRequest)(nil),          // 13: otterscale.kubevirt.v1.ListVirtualMachinesRequest
	(*ListVirtualMachinesResponse)(nil),         // 14: otterscale.kubevirt.v1.ListVirtualMachinesResponse
	(*GetVirtualMachineRequest)(nil),            // 15: otterscale.kubevirt.v1.GetVirtualMachineRequest
	(*VirtualMachineDisk)(nil),                  // 16: otterscale.kubevirt.v1.VirtualMachineDisk
	(*CreateVirtualMachineRequest)(nil),         // 17: otterscale.kubevirt.v1.CreateVirtualMachineRequest
	(*UpdateVirtualMachineRequest)(nil),         // 18: otterscale.kubevirt.v1.UpdateVirtualMachineRequest
	(*DeleteVirtualMachineRequest)(nil),         // 19: otterscale.kubevirt.v1.DeleteVirtualMachineRequest
	(*StartVirtualMachineRequest)(nil),          // 20: otterscale.kubevirt.v1.StartVirtualMachineRequest
	(*StopVirtualMachineRequest)(nil),           // 21: otterscale.kubevirt.v1.StopVirtualMachineRequest
	(*PauseVirtualMachineRequest)(nil),          // 22: otterscale.kubevirt.v1.PauseVirtualMachineRequest
	(*ResumeVirtualMachineRequest)(nil),         // 23: otterscale.kubevirt.v1.ResumeVirtualMachineRequest
	(*SnapshotVirtualMachineRequest)(nil),       // 24: otterscale.kubevirt.v1.SnapshotVirtualMachineRequest
	(*CloneVirtualMachineRequest)(nil),          // 25: otterscale.kubevirt.v1.CloneVirtualMachineRequest
	(*RestoreVirtualMachineRequest)(nil),        // 26: otterscale.kubevirt.v1.RestoreVirtualMachineRequest
	(*MigrateVirtualMachineRequest)(nil),        // 27: otterscale.kubevirt.v1.MigrateVirtualMachineRequest
	(*GetVirtualMachineSnapshotRequest)(nil),    // 28: otterscale.kubevirt.v1.GetVirtualMachineSnapshotRequest
	(*ListVirtualMachineSnapshotsRequest)(nil),  // 29: otterscale.kubevirt.v1.ListVirtualMachineSnapshotsRequest
	(*DeleteVirtualMachineSnapshotRequest)(nil), // 30: otterscale.kubevirt.v1.DeleteVirtualMachineSnapshotRequest
	(*ListVirtualMachineSnapshotsResponse)(nil), // 31: otterscale.kubevirt.v1.ListVirtualMachineSnapshotsResponse
	(*CreateDataVolumeRequest)(nil),             // 32: otterscale.kubevirt.v1.CreateDataVolumeRequest
	(*ListDataVolumesRequest)(nil),              // 33: otterscale.kubevirt.v1.ListDataVolumesRequest
	(*ListDataVolumesResponse)(nil),             // 34: otterscale.kubevirt.v1.ListDataVolumesResponse
	(*GetDataVolumeRequest)(nil),                // 35: otterscale.kubevirt.v1.GetDataVolumeRequest
	(*DeleteDataVolumeRequest)(nil),             // 36: otterscale.kubevirt.v1.DeleteDataVolumeRequest
	(*ExtendDataVolumeRequest)(nil),             // 37: otterscale.kubevirt.v1.ExtendDataVolumeRequest
	(*CreateVirtualMachineServiceRequest)(nil),  // 38: otterscale.kubevirt.v1.CreateVirtualMachineServiceRequest
	(*ListVirtualMachineServicesRequest)(nil),   // 39: otterscale.kubevirt.v1.ListVirtualMachineServicesRequest
	(*ListVirtualMachineServicesResponse)(nil),  // 40: otterscale.kubevirt.v1.ListVirtualMachineServicesResponse
	(*GetVirtualMachineServiceRequest)(nil),     // 41: otterscale.kubevirt.v1.GetVirtualMachineServiceRequest
	(*UpdateVirtualMachineServiceRequest)(nil),  // 42: otterscale.kubevirt.v1.UpdateVirtualMachineServiceRequest
	(*DeleteVirtualMachineServiceRequest)(nil),  // 43: otterscale.kubevirt.v1.DeleteVirtualMachineServiceRequest
	(*CreateInstanceTypeRequest)(nil),           // 44: otterscale.kubevirt.v1.CreateInstanceTypeRequest
	(*ListInstanceTypesRequest)(nil),            // 45: otterscale.kubevirt.v1.ListInstanceTypesRequest
	(*ListInstanceTypesResponse)(nil),           // 46: otterscale.kubevirt.v1.ListInstanceTypesResponse
	(*GetInstanceTypeRequest)(nil),              // 47: otterscale.kubevirt.v1.GetInstanceTypeRequest
	(*DeleteInstanceTypeRequest)(nil),           // 48: otterscale.kubevirt.v1.DeleteInstanceTypeRequest
	nil,                                         // 49: otterscale.kubevirt.v1.Metadata.LabelsEntry
	nil,                                         // 50: otterscale.kubevirt.v1.VirtualMachineServiceSpec.SelectorEntry
	nil,                                         // 51: otterscale.kubevirt.v1.CreateVirtualMachineRequest.LabelsEntry
	nil,                                         // 52: otterscale.kubevirt.v1.UpdateVirtualMachineRequest.LabelsEntry
	(*timestamppb.Timestamp)(nil),               // 53: google.protobuf.Timestamp
	(*emptypb.Empty)(nil),                       // 54: google.protobuf.Empty
}
var file_api_kubevirt_v1_kubevirt_proto_depIdxs = []int32{
	49, // 0: otterscale.kubevirt.v1.Metadata.labels:type_name -> otterscale.kubevirt.v1.Metadata.LabelsEntry
	53, // 1: otterscale.kubevirt.v1.Metadata.created_at:type_name -> google.protobuf.Timestamp
	53, // 2: otterscale.kubevirt.v1.Metadata.updated_at:type_name -> google.protobuf.Timestamp
	3,  // 3: otterscale.kubevirt.v1.VirtualMachine.metadata:type_name -> otterscale.kubevirt.v1.Metadata
	6,  // 4: otterscale.kubevirt.v1.VirtualMachine.resoureces:type_name -> otterscale.kubevirt.v1.VirtualMachineResources
	16, // 5: otterscale.kubevirt.v1.VirtualMachine.disks:type_name -> otterscale.kubevirt.v1.VirtualMachineDisk
	53, // 6: otterscale.kubevirt.v1.VirtualMachineSnapshot.created_at:type_name -> google.protobuf.Timestamp
	3,  // 7: otterscale.kubevirt.v1.InstanceType.metadata:type_name -> otterscale.kubevirt.v1.Metadata
	3,  // 8: otterscale.kubevirt.v1.DataVolume.metadata:type_name -> otterscale.kubevirt.v1.Metadata
	3,  // 9: otterscale.kubevirt.v1.VirtualMachineService.metadata:type_name -> otterscale.kubevirt.v1.Metadata
	10, // 10: otterscale.kubevirt.v1.VirtualMachineService.spec:type_name -> otterscale.kubevirt.v1.VirtualMachineServiceSpec
	12, // 11: otterscale.kubevirt.v1.VirtualMachineService.status:type_name -> otterscale.kubevirt.v1.VirtualMachineServiceStatus
	0,  // 12: otterscale.kubevirt.v1.VirtualMachineServiceSpec.type:type_name -> otterscale.kubevirt.v1.VirtualMachineServiceSpec.Type
	11, // 13: otterscale.kubevirt.v1.VirtualMachineServiceSpec.ports:type_name -> otterscale.kubevirt.v1.ServicePort
	50, // 14: otterscale.kubevirt.v1.VirtualMachineServiceSpec.selector:type_name -> otterscale.kubevirt.v1.VirtualMachineServiceSpec.SelectorEntry
	1,  // 15: otterscale.kubevirt.v1.ServicePort.protocol:type_name -> otterscale.kubevirt.v1.ServicePort.Protocol
	4,  // 16: otterscale.kubevirt.v1.ListVirtualMachinesResponse.virtualMachines:type_name -> otterscale.kubevirt.v1.VirtualMachine
	2,  // 17: otterscale.kubevirt.v1.VirtualMachineDisk.disk_type:type_name -> otterscale.kubevirt.v1.VirtualMachineDisk.type
	51, // 18: otterscale.kubevirt.v1.CreateVirtualMachineRequest.labels:type_name -> otterscale.kubevirt.v1.CreateVirtualMachineRequest.LabelsEntry
	16, // 19: otterscale.kubevirt.v1.CreateVirtualMachineRequest.disks:type_name -> otterscale.kubevirt.v1.VirtualMachineDisk
	6,  // 20: otterscale.kubevirt.v1.CreateVirtualMachineRequest.custom:type_name -> otterscale.kubevirt.v1.VirtualMachineResources
	52, // 21: otterscale.kubevirt.v1.UpdateVirtualMachineRequest.labels:type_name -> otterscale.kubevirt.v1.UpdateVirtualMachineRequest.LabelsEntry
	16, // 22: otterscale.kubevirt.v1.UpdateVirtualMachineRequest.disks:type_name -> otterscale.kubevirt.v1.VirtualMachineDisk
	5,  // 23: otterscale.kubevirt.v1.ListVirtualMachineSnapshotsResponse.snapshots:type_name -> otterscale.kubevirt.v1.VirtualMachineSnapshot
	8,  // 24: otterscale.kubevirt.v1.CreateDataVolumeRequest.data_volume:type_name -> otterscale.kubevirt.v1.DataVolume
	8,  // 25: otterscale.kubevirt.v1.ListDataVolumesResponse.datavolumes:type_name -> otterscale.kubevirt.v1.DataVolume
	9,  // 26: otterscale.kubevirt.v1.CreateVirtualMachineServiceRequest.virtual_machine_service:type_name -> otterscale.kubevirt.v1.VirtualMachineService
	9,  // 27: otterscale.kubevirt.v1.ListVirtualMachineServicesResponse.virtual_machine_services:type_name -> otterscale.kubevirt.v1.VirtualMachineService
	9,  // 28: otterscale.kubevirt.v1.UpdateVirtualMachineServiceRequest.virtual_machine_service:type_name -> otterscale.kubevirt.v1.VirtualMachineService
	7,  // 29: otterscale.kubevirt.v1.CreateInstanceTypeRequest.instanceType:type_name -> otterscale.kubevirt.v1.InstanceType
	7,  // 30: otterscale.kubevirt.v1.ListInstanceTypesResponse.instanceTypes:type_name -> otterscale.kubevirt.v1.InstanceType
	17, // 31: otterscale.kubevirt.v1.KubeVirtService.CreateVirtualMachine:input_type -> otterscale.kubevirt.v1.CreateVirtualMachineRequest
	15, // 32: otterscale.kubevirt.v1.KubeVirtService.GetVirtualMachine:input_type -> otterscale.kubevirt.v1.GetVirtualMachineRequest
	13, // 33: otterscale.kubevirt.v1.KubeVirtService.ListVirtualMachines:input_type -> otterscale.kubevirt.v1.ListVirtualMachinesRequest
	18, // 34: otterscale.kubevirt.v1.KubeVirtService.UpdateVirtualMachine:input_type -> otterscale.kubevirt.v1.UpdateVirtualMachineRequest
	19, // 35: otterscale.kubevirt.v1.KubeVirtService.DeleteVirtualMachine:input_type -> otterscale.kubevirt.v1.DeleteVirtualMachineRequest
	20, // 36: otterscale.kubevirt.v1.KubeVirtService.StartVirtualMachine:input_type -> otterscale.kubevirt.v1.StartVirtualMachineRequest
	21, // 37: otterscale.kubevirt.v1.KubeVirtService.StopVirtualMachine:input_type -> otterscale.kubevirt.v1.StopVirtualMachineRequest
	22, // 38: otterscale.kubevirt.v1.KubeVirtService.PauseVirtualMachine:input_type -> otterscale.kubevirt.v1.PauseVirtualMachineRequest
	23, // 39: otterscale.kubevirt.v1.KubeVirtService.ResumeVirtualMachine:input_type -> otterscale.kubevirt.v1.ResumeVirtualMachineRequest
	25, // 40: otterscale.kubevirt.v1.KubeVirtService.CloneVirtualMachine:input_type -> otterscale.kubevirt.v1.CloneVirtualMachineRequest
	24, // 41: otterscale.kubevirt.v1.KubeVirtService.SnapshotVirtualMachine:input_type -> otterscale.kubevirt.v1.SnapshotVirtualMachineRequest
	26, // 42: otterscale.kubevirt.v1.KubeVirtService.RestoreVirtualMachine:input_type -> otterscale.kubevirt.v1.RestoreVirtualMachineRequest
	27, // 43: otterscale.kubevirt.v1.KubeVirtService.MigrateVirtualMachine:input_type -> otterscale.kubevirt.v1.MigrateVirtualMachineRequest
	28, // 44: otterscale.kubevirt.v1.KubeVirtService.GetVirtualMachineSnapshot:input_type -> otterscale.kubevirt.v1.GetVirtualMachineSnapshotRequest
	29, // 45: otterscale.kubevirt.v1.KubeVirtService.ListVirtualMachineSnapshots:input_type -> otterscale.kubevirt.v1.ListVirtualMachineSnapshotsRequest
	30, // 46: otterscale.kubevirt.v1.KubeVirtService.DeleteVirtualMachineSnapshot:input_type -> otterscale.kubevirt.v1.DeleteVirtualMachineSnapshotRequest
	32, // 47: otterscale.kubevirt.v1.KubeVirtService.CreateDataVolume:input_type -> otterscale.kubevirt.v1.CreateDataVolumeRequest
	35, // 48: otterscale.kubevirt.v1.KubeVirtService.GetDataVolume:input_type -> otterscale.kubevirt.v1.GetDataVolumeRequest
	33, // 49: otterscale.kubevirt.v1.KubeVirtService.ListDataVolumes:input_type -> otterscale.kubevirt.v1.ListDataVolumesRequest
	36, // 50: otterscale.kubevirt.v1.KubeVirtService.DeleteDataVolume:input_type -> otterscale.kubevirt.v1.DeleteDataVolumeRequest
	37, // 51: otterscale.kubevirt.v1.KubeVirtService.ExtendDataVolume:input_type -> otterscale.kubevirt.v1.ExtendDataVolumeRequest
	38, // 52: otterscale.kubevirt.v1.KubeVirtService.CreateVirtualMachineService:input_type -> otterscale.kubevirt.v1.CreateVirtualMachineServiceRequest
	41, // 53: otterscale.kubevirt.v1.KubeVirtService.GetVirtualMachineService:input_type -> otterscale.kubevirt.v1.GetVirtualMachineServiceRequest
	39, // 54: otterscale.kubevirt.v1.KubeVirtService.ListVirtualMachineServices:input_type -> otterscale.kubevirt.v1.ListVirtualMachineServicesRequest
	42, // 55: otterscale.kubevirt.v1.KubeVirtService.UpdateVirtualMachineService:input_type -> otterscale.kubevirt.v1.UpdateVirtualMachineServiceRequest
	43, // 56: otterscale.kubevirt.v1.KubeVirtService.DeleteVirtualMachineService:input_type -> otterscale.kubevirt.v1.DeleteVirtualMachineServiceRequest
	44, // 57: otterscale.kubevirt.v1.KubeVirtService.CreateInstanceType:input_type -> otterscale.kubevirt.v1.CreateInstanceTypeRequest
	47, // 58: otterscale.kubevirt.v1.KubeVirtService.GetInstanceType:input_type -> otterscale.kubevirt.v1.GetInstanceTypeRequest
	45, // 59: otterscale.kubevirt.v1.KubeVirtService.ListInstanceTypes:input_type -> otterscale.kubevirt.v1.ListInstanceTypesRequest
	48, // 60: otterscale.kubevirt.v1.KubeVirtService.DeleteInstanceType:input_type -> otterscale.kubevirt.v1.DeleteInstanceTypeRequest
	4,  // 61: otterscale.kubevirt.v1.KubeVirtService.CreateVirtualMachine:output_type -> otterscale.kubevirt.v1.VirtualMachine
	4,  // 62: otterscale.kubevirt.v1.KubeVirtService.GetVirtualMachine:output_type -> otterscale.kubevirt.v1.VirtualMachine
	14, // 63: otterscale.kubevirt.v1.KubeVirtService.ListVirtualMachines:output_type -> otterscale.kubevirt.v1.ListVirtualMachinesResponse
	4,  // 64: otterscale.kubevirt.v1.KubeVirtService.UpdateVirtualMachine:output_type -> otterscale.kubevirt.v1.VirtualMachine
	54, // 65: otterscale.kubevirt.v1.KubeVirtService.DeleteVirtualMachine:output_type -> google.protobuf.Empty
	54, // 66: otterscale.kubevirt.v1.KubeVirtService.StartVirtualMachine:output_type -> google.protobuf.Empty
	54, // 67: otterscale.kubevirt.v1.KubeVirtService.StopVirtualMachine:output_type -> google.protobuf.Empty
	54, // 68: otterscale.kubevirt.v1.KubeVirtService.PauseVirtualMachine:output_type -> google.protobuf.Empty
	54, // 69: otterscale.kubevirt.v1.KubeVirtService.ResumeVirtualMachine:output_type -> google.protobuf.Empty
	54, // 70: otterscale.kubevirt.v1.KubeVirtService.CloneVirtualMachine:output_type -> google.protobuf.Empty
	54, // 71: otterscale.kubevirt.v1.KubeVirtService.SnapshotVirtualMachine:output_type -> google.protobuf.Empty
	54, // 72: otterscale.kubevirt.v1.KubeVirtService.RestoreVirtualMachine:output_type -> google.protobuf.Empty
	54, // 73: otterscale.kubevirt.v1.KubeVirtService.MigrateVirtualMachine:output_type -> google.protobuf.Empty
	5,  // 74: otterscale.kubevirt.v1.KubeVirtService.GetVirtualMachineSnapshot:output_type -> otterscale.kubevirt.v1.VirtualMachineSnapshot
	31, // 75: otterscale.kubevirt.v1.KubeVirtService.ListVirtualMachineSnapshots:output_type -> otterscale.kubevirt.v1.ListVirtualMachineSnapshotsResponse
	54, // 76: otterscale.kubevirt.v1.KubeVirtService.DeleteVirtualMachineSnapshot:output_type -> google.protobuf.Empty
	8,  // 77: otterscale.kubevirt.v1.KubeVirtService.CreateDataVolume:output_type -> otterscale.kubevirt.v1.DataVolume
	8,  // 78: otterscale.kubevirt.v1.KubeVirtService.GetDataVolume:output_type -> otterscale.kubevirt.v1.DataVolume
	34, // 79: otterscale.kubevirt.v1.KubeVirtService.ListDataVolumes:output_type -> otterscale.kubevirt.v1.ListDataVolumesResponse
	54, // 80: otterscale.kubevirt.v1.KubeVirtService.DeleteDataVolume:output_type -> google.protobuf.Empty
	54, // 81: otterscale.kubevirt.v1.KubeVirtService.ExtendDataVolume:output_type -> google.protobuf.Empty
	9,  // 82: otterscale.kubevirt.v1.KubeVirtService.CreateVirtualMachineService:output_type -> otterscale.kubevirt.v1.VirtualMachineService
	9,  // 83: otterscale.kubevirt.v1.KubeVirtService.GetVirtualMachineService:output_type -> otterscale.kubevirt.v1.VirtualMachineService
	40, // 84: otterscale.kubevirt.v1.KubeVirtService.ListVirtualMachineServices:output_type -> otterscale.kubevirt.v1.ListVirtualMachineServicesResponse
	9,  // 85: otterscale.kubevirt.v1.KubeVirtService.UpdateVirtualMachineService:output_type -> otterscale.kubevirt.v1.VirtualMachineService
	54, // 86: otterscale.kubevirt.v1.KubeVirtService.DeleteVirtualMachineService:output_type -> google.protobuf.Empty
	7,  // 87: otterscale.kubevirt.v1.KubeVirtService.CreateInstanceType:output_type -> otterscale.kubevirt.v1.InstanceType
	7,  // 88: otterscale.kubevirt.v1.KubeVirtService.GetInstanceType:output_type -> otterscale.kubevirt.v1.InstanceType
	46, // 89: otterscale.kubevirt.v1.KubeVirtService.ListInstanceTypes:output_type -> otterscale.kubevirt.v1.ListInstanceTypesResponse
	54, // 90: otterscale.kubevirt.v1.KubeVirtService.DeleteInstanceType:output_type -> google.protobuf.Empty
	61, // [61:91] is the sub-list for method output_type
	31, // [31:61] is the sub-list for method input_type
	31, // [31:31] is the sub-list for extension type_name
	31, // [31:31] is the sub-list for extension extendee
	0,  // [0:31] is the sub-list for field type_name
}

func init() { file_api_kubevirt_v1_kubevirt_proto_init() }
func file_api_kubevirt_v1_kubevirt_proto_init() {
	if File_api_kubevirt_v1_kubevirt_proto != nil {
		return
	}
	file_api_kubevirt_v1_kubevirt_proto_msgTypes[14].OneofWrappers = []any{
		(*createVirtualMachineRequest_Instancetype)(nil),
		(*createVirtualMachineRequest_Custom)(nil),
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_api_kubevirt_v1_kubevirt_proto_rawDesc), len(file_api_kubevirt_v1_kubevirt_proto_rawDesc)),
			NumEnums:      3,
			NumMessages:   50,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_api_kubevirt_v1_kubevirt_proto_goTypes,
		DependencyIndexes: file_api_kubevirt_v1_kubevirt_proto_depIdxs,
		EnumInfos:         file_api_kubevirt_v1_kubevirt_proto_enumTypes,
		MessageInfos:      file_api_kubevirt_v1_kubevirt_proto_msgTypes,
	}.Build()
	File_api_kubevirt_v1_kubevirt_proto = out.File
	file_api_kubevirt_v1_kubevirt_proto_goTypes = nil
	file_api_kubevirt_v1_kubevirt_proto_depIdxs = nil
}
