// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.5
// 	protoc        v6.30.1
// source: api/nexus/v1/nexus.proto

package pb

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	emptypb "google.golang.org/protobuf/types/known/emptypb"
	structpb "google.golang.org/protobuf/types/known/structpb"
	timestamppb "google.golang.org/protobuf/types/known/timestamppb"
	reflect "reflect"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type ErrorLevel int32

const (
	ErrorLevel_ERRORLEVEL_INFO     ErrorLevel = 0
	ErrorLevel_ERRORLEVEL_LOW      ErrorLevel = 1
	ErrorLevel_ERRORLEVEL_MEDIUM   ErrorLevel = 2
	ErrorLevel_ERRORLEVEL_HIGH     ErrorLevel = 3
	ErrorLevel_ERRORLEVEL_CRITICAL ErrorLevel = 4
)

// Enum value maps for ErrorLevel.
var (
	ErrorLevel_name = map[int32]string{
		0: "ERRORLEVEL_INFO",
		1: "ERRORLEVEL_LOW",
		2: "ERRORLEVEL_MEDIUM",
		3: "ERRORLEVEL_HIGH",
		4: "ERRORLEVEL_CRITICAL",
	}
	ErrorLevel_value = map[string]int32{
		"ERRORLEVEL_INFO":     0,
		"ERRORLEVEL_LOW":      1,
		"ERRORLEVEL_MEDIUM":   2,
		"ERRORLEVEL_HIGH":     3,
		"ERRORLEVEL_CRITICAL": 4,
	}
)

func (x ErrorLevel) Enum() *ErrorLevel {
	p := new(ErrorLevel)
	*p = x
	return p
}

func (x ErrorLevel) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (ErrorLevel) Descriptor() protoreflect.EnumDescriptor {
	return file_api_nexus_v1_nexus_proto_enumTypes[0].Descriptor()
}

func (ErrorLevel) Type() protoreflect.EnumType {
	return &file_api_nexus_v1_nexus_proto_enumTypes[0]
}

func (x ErrorLevel) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

type Configuration struct {
	state                          protoimpl.MessageState              `protogen:"opaque.v1"`
	xxx_hidden_NtpServer           *Configuration_NTPServer            `protobuf:"bytes,1,opt,name=ntp_server,json=ntpServer"`
	xxx_hidden_PackageRepositories *[]*Configuration_PackageRepository `protobuf:"bytes,2,rep,name=package_repositories,json=packageRepositories"`
	xxx_hidden_BootImages          *[]*Configuration_BootImage         `protobuf:"bytes,3,rep,name=boot_images,json=bootImages"`
	unknownFields                  protoimpl.UnknownFields
	sizeCache                      protoimpl.SizeCache
}

func (x *Configuration) Reset() {
	*x = Configuration{}
	mi := &file_api_nexus_v1_nexus_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Configuration) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Configuration) ProtoMessage() {}

func (x *Configuration) ProtoReflect() protoreflect.Message {
	mi := &file_api_nexus_v1_nexus_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *Configuration) GetNtpServer() *Configuration_NTPServer {
	if x != nil {
		return x.xxx_hidden_NtpServer
	}
	return nil
}

func (x *Configuration) GetPackageRepositories() []*Configuration_PackageRepository {
	if x != nil {
		if x.xxx_hidden_PackageRepositories != nil {
			return *x.xxx_hidden_PackageRepositories
		}
	}
	return nil
}

func (x *Configuration) GetBootImages() []*Configuration_BootImage {
	if x != nil {
		if x.xxx_hidden_BootImages != nil {
			return *x.xxx_hidden_BootImages
		}
	}
	return nil
}

func (x *Configuration) SetNtpServer(v *Configuration_NTPServer) {
	x.xxx_hidden_NtpServer = v
}

func (x *Configuration) SetPackageRepositories(v []*Configuration_PackageRepository) {
	x.xxx_hidden_PackageRepositories = &v
}

func (x *Configuration) SetBootImages(v []*Configuration_BootImage) {
	x.xxx_hidden_BootImages = &v
}

func (x *Configuration) HasNtpServer() bool {
	if x == nil {
		return false
	}
	return x.xxx_hidden_NtpServer != nil
}

func (x *Configuration) ClearNtpServer() {
	x.xxx_hidden_NtpServer = nil
}

type Configuration_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	NtpServer           *Configuration_NTPServer
	PackageRepositories []*Configuration_PackageRepository
	BootImages          []*Configuration_BootImage
}

func (b0 Configuration_builder) Build() *Configuration {
	m0 := &Configuration{}
	b, x := &b0, m0
	_, _ = b, x
	x.xxx_hidden_NtpServer = b.NtpServer
	x.xxx_hidden_PackageRepositories = &b.PackageRepositories
	x.xxx_hidden_BootImages = &b.BootImages
	return m0
}

type Network struct {
	state             protoimpl.MessageState `protogen:"opaque.v1"`
	xxx_hidden_Fabric *Network_Fabric        `protobuf:"bytes,1,opt,name=fabric"`
	xxx_hidden_Vlan   *Network_VLAN          `protobuf:"bytes,2,opt,name=vlan"`
	xxx_hidden_Subnet *Network_Subnet        `protobuf:"bytes,3,opt,name=subnet"`
	unknownFields     protoimpl.UnknownFields
	sizeCache         protoimpl.SizeCache
}

func (x *Network) Reset() {
	*x = Network{}
	mi := &file_api_nexus_v1_nexus_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Network) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Network) ProtoMessage() {}

func (x *Network) ProtoReflect() protoreflect.Message {
	mi := &file_api_nexus_v1_nexus_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *Network) GetFabric() *Network_Fabric {
	if x != nil {
		return x.xxx_hidden_Fabric
	}
	return nil
}

func (x *Network) GetVlan() *Network_VLAN {
	if x != nil {
		return x.xxx_hidden_Vlan
	}
	return nil
}

func (x *Network) GetSubnet() *Network_Subnet {
	if x != nil {
		return x.xxx_hidden_Subnet
	}
	return nil
}

func (x *Network) SetFabric(v *Network_Fabric) {
	x.xxx_hidden_Fabric = v
}

func (x *Network) SetVlan(v *Network_VLAN) {
	x.xxx_hidden_Vlan = v
}

func (x *Network) SetSubnet(v *Network_Subnet) {
	x.xxx_hidden_Subnet = v
}

func (x *Network) HasFabric() bool {
	if x == nil {
		return false
	}
	return x.xxx_hidden_Fabric != nil
}

func (x *Network) HasVlan() bool {
	if x == nil {
		return false
	}
	return x.xxx_hidden_Vlan != nil
}

func (x *Network) HasSubnet() bool {
	if x == nil {
		return false
	}
	return x.xxx_hidden_Subnet != nil
}

func (x *Network) ClearFabric() {
	x.xxx_hidden_Fabric = nil
}

func (x *Network) ClearVlan() {
	x.xxx_hidden_Vlan = nil
}

func (x *Network) ClearSubnet() {
	x.xxx_hidden_Subnet = nil
}

type Network_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	Fabric *Network_Fabric
	Vlan   *Network_VLAN
	Subnet *Network_Subnet
}

func (b0 Network_builder) Build() *Network {
	m0 := &Network{}
	b, x := &b0, m0
	_, _ = b, x
	x.xxx_hidden_Fabric = b.Fabric
	x.xxx_hidden_Vlan = b.Vlan
	x.xxx_hidden_Subnet = b.Subnet
	return m0
}

type Machine struct {
	state                          protoimpl.MessageState       `protogen:"opaque.v1"`
	xxx_hidden_Id                  *string                      `protobuf:"bytes,1,opt,name=id"`
	xxx_hidden_HardwareUuid        *string                      `protobuf:"bytes,101,opt,name=hardware_uuid,json=hardwareUuid"`
	xxx_hidden_Hostname            *string                      `protobuf:"bytes,102,opt,name=hostname"`
	xxx_hidden_Fqdn                *string                      `protobuf:"bytes,103,opt,name=fqdn"`
	xxx_hidden_Tags                []string                     `protobuf:"bytes,104,rep,name=tags"`
	xxx_hidden_Description         *string                      `protobuf:"bytes,105,opt,name=description"`
	xxx_hidden_Status              *string                      `protobuf:"bytes,201,opt,name=status"`
	xxx_hidden_StatusMessage       *string                      `protobuf:"bytes,202,opt,name=status_message,json=statusMessage"`
	xxx_hidden_PowerState          *string                      `protobuf:"bytes,301,opt,name=power_state,json=powerState"`
	xxx_hidden_PowerType           *string                      `protobuf:"bytes,302,opt,name=power_type,json=powerType"`
	xxx_hidden_Osystem             *string                      `protobuf:"bytes,401,opt,name=osystem"`
	xxx_hidden_DistroSeries        *string                      `protobuf:"bytes,402,opt,name=distro_series,json=distroSeries"`
	xxx_hidden_HweKernel           *string                      `protobuf:"bytes,403,opt,name=hwe_kernel,json=hweKernel"`
	xxx_hidden_Architecture        *string                      `protobuf:"bytes,404,opt,name=architecture"`
	xxx_hidden_CpuSpeed            int64                        `protobuf:"varint,405,opt,name=cpu_speed,json=cpuSpeed"`
	xxx_hidden_CpuCount            int64                        `protobuf:"varint,406,opt,name=cpu_count,json=cpuCount"`
	xxx_hidden_MemoryMb            int64                        `protobuf:"varint,407,opt,name=memory_mb,json=memoryMb"`
	xxx_hidden_StorageMb           float64                      `protobuf:"fixed64,408,opt,name=storage_mb,json=storageMb"`
	xxx_hidden_IpAddresses         []string                     `protobuf:"bytes,409,rep,name=ip_addresses,json=ipAddresses"`
	xxx_hidden_WorkloadAnnotations map[string]string            `protobuf:"bytes,501,rep,name=workload_annotations,json=workloadAnnotations" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	xxx_hidden_HardwareInformation map[string]string            `protobuf:"bytes,601,rep,name=hardware_information,json=hardwareInformation" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	xxx_hidden_BiosBootMethod      *string                      `protobuf:"bytes,602,opt,name=bios_boot_method,json=biosBootMethod"`
	xxx_hidden_NumaNodes           *[]*Machine_NUMANode         `protobuf:"bytes,701,rep,name=numa_nodes,json=numaNodes"`
	xxx_hidden_BlockDevices        *[]*Machine_BlockDevice      `protobuf:"bytes,801,rep,name=block_devices,json=blockDevices"`
	xxx_hidden_NetworkInterfaces   *[]*Machine_NetworkInterface `protobuf:"bytes,802,rep,name=network_interfaces,json=networkInterfaces"`
	XXX_raceDetectHookData         protoimpl.RaceDetectHookData
	XXX_presence                   [1]uint32
	unknownFields                  protoimpl.UnknownFields
	sizeCache                      protoimpl.SizeCache
}

func (x *Machine) Reset() {
	*x = Machine{}
	mi := &file_api_nexus_v1_nexus_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Machine) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Machine) ProtoMessage() {}

func (x *Machine) ProtoReflect() protoreflect.Message {
	mi := &file_api_nexus_v1_nexus_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *Machine) GetId() string {
	if x != nil {
		if x.xxx_hidden_Id != nil {
			return *x.xxx_hidden_Id
		}
		return ""
	}
	return ""
}

func (x *Machine) GetHardwareUuid() string {
	if x != nil {
		if x.xxx_hidden_HardwareUuid != nil {
			return *x.xxx_hidden_HardwareUuid
		}
		return ""
	}
	return ""
}

func (x *Machine) GetHostname() string {
	if x != nil {
		if x.xxx_hidden_Hostname != nil {
			return *x.xxx_hidden_Hostname
		}
		return ""
	}
	return ""
}

func (x *Machine) GetFqdn() string {
	if x != nil {
		if x.xxx_hidden_Fqdn != nil {
			return *x.xxx_hidden_Fqdn
		}
		return ""
	}
	return ""
}

func (x *Machine) GetTags() []string {
	if x != nil {
		return x.xxx_hidden_Tags
	}
	return nil
}

func (x *Machine) GetDescription() string {
	if x != nil {
		if x.xxx_hidden_Description != nil {
			return *x.xxx_hidden_Description
		}
		return ""
	}
	return ""
}

func (x *Machine) GetStatus() string {
	if x != nil {
		if x.xxx_hidden_Status != nil {
			return *x.xxx_hidden_Status
		}
		return ""
	}
	return ""
}

func (x *Machine) GetStatusMessage() string {
	if x != nil {
		if x.xxx_hidden_StatusMessage != nil {
			return *x.xxx_hidden_StatusMessage
		}
		return ""
	}
	return ""
}

func (x *Machine) GetPowerState() string {
	if x != nil {
		if x.xxx_hidden_PowerState != nil {
			return *x.xxx_hidden_PowerState
		}
		return ""
	}
	return ""
}

func (x *Machine) GetPowerType() string {
	if x != nil {
		if x.xxx_hidden_PowerType != nil {
			return *x.xxx_hidden_PowerType
		}
		return ""
	}
	return ""
}

func (x *Machine) GetOsystem() string {
	if x != nil {
		if x.xxx_hidden_Osystem != nil {
			return *x.xxx_hidden_Osystem
		}
		return ""
	}
	return ""
}

func (x *Machine) GetDistroSeries() string {
	if x != nil {
		if x.xxx_hidden_DistroSeries != nil {
			return *x.xxx_hidden_DistroSeries
		}
		return ""
	}
	return ""
}

func (x *Machine) GetHweKernel() string {
	if x != nil {
		if x.xxx_hidden_HweKernel != nil {
			return *x.xxx_hidden_HweKernel
		}
		return ""
	}
	return ""
}

func (x *Machine) GetArchitecture() string {
	if x != nil {
		if x.xxx_hidden_Architecture != nil {
			return *x.xxx_hidden_Architecture
		}
		return ""
	}
	return ""
}

func (x *Machine) GetCpuSpeed() int64 {
	if x != nil {
		return x.xxx_hidden_CpuSpeed
	}
	return 0
}

func (x *Machine) GetCpuCount() int64 {
	if x != nil {
		return x.xxx_hidden_CpuCount
	}
	return 0
}

func (x *Machine) GetMemoryMb() int64 {
	if x != nil {
		return x.xxx_hidden_MemoryMb
	}
	return 0
}

func (x *Machine) GetStorageMb() float64 {
	if x != nil {
		return x.xxx_hidden_StorageMb
	}
	return 0
}

func (x *Machine) GetIpAddresses() []string {
	if x != nil {
		return x.xxx_hidden_IpAddresses
	}
	return nil
}

func (x *Machine) GetWorkloadAnnotations() map[string]string {
	if x != nil {
		return x.xxx_hidden_WorkloadAnnotations
	}
	return nil
}

func (x *Machine) GetHardwareInformation() map[string]string {
	if x != nil {
		return x.xxx_hidden_HardwareInformation
	}
	return nil
}

func (x *Machine) GetBiosBootMethod() string {
	if x != nil {
		if x.xxx_hidden_BiosBootMethod != nil {
			return *x.xxx_hidden_BiosBootMethod
		}
		return ""
	}
	return ""
}

func (x *Machine) GetNumaNodes() []*Machine_NUMANode {
	if x != nil {
		if x.xxx_hidden_NumaNodes != nil {
			return *x.xxx_hidden_NumaNodes
		}
	}
	return nil
}

func (x *Machine) GetBlockDevices() []*Machine_BlockDevice {
	if x != nil {
		if x.xxx_hidden_BlockDevices != nil {
			return *x.xxx_hidden_BlockDevices
		}
	}
	return nil
}

func (x *Machine) GetNetworkInterfaces() []*Machine_NetworkInterface {
	if x != nil {
		if x.xxx_hidden_NetworkInterfaces != nil {
			return *x.xxx_hidden_NetworkInterfaces
		}
	}
	return nil
}

func (x *Machine) SetId(v string) {
	x.xxx_hidden_Id = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 0, 25)
}

func (x *Machine) SetHardwareUuid(v string) {
	x.xxx_hidden_HardwareUuid = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 1, 25)
}

func (x *Machine) SetHostname(v string) {
	x.xxx_hidden_Hostname = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 2, 25)
}

func (x *Machine) SetFqdn(v string) {
	x.xxx_hidden_Fqdn = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 3, 25)
}

func (x *Machine) SetTags(v []string) {
	x.xxx_hidden_Tags = v
}

func (x *Machine) SetDescription(v string) {
	x.xxx_hidden_Description = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 5, 25)
}

func (x *Machine) SetStatus(v string) {
	x.xxx_hidden_Status = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 6, 25)
}

func (x *Machine) SetStatusMessage(v string) {
	x.xxx_hidden_StatusMessage = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 7, 25)
}

func (x *Machine) SetPowerState(v string) {
	x.xxx_hidden_PowerState = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 8, 25)
}

func (x *Machine) SetPowerType(v string) {
	x.xxx_hidden_PowerType = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 9, 25)
}

func (x *Machine) SetOsystem(v string) {
	x.xxx_hidden_Osystem = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 10, 25)
}

func (x *Machine) SetDistroSeries(v string) {
	x.xxx_hidden_DistroSeries = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 11, 25)
}

func (x *Machine) SetHweKernel(v string) {
	x.xxx_hidden_HweKernel = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 12, 25)
}

func (x *Machine) SetArchitecture(v string) {
	x.xxx_hidden_Architecture = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 13, 25)
}

func (x *Machine) SetCpuSpeed(v int64) {
	x.xxx_hidden_CpuSpeed = v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 14, 25)
}

func (x *Machine) SetCpuCount(v int64) {
	x.xxx_hidden_CpuCount = v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 15, 25)
}

func (x *Machine) SetMemoryMb(v int64) {
	x.xxx_hidden_MemoryMb = v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 16, 25)
}

func (x *Machine) SetStorageMb(v float64) {
	x.xxx_hidden_StorageMb = v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 17, 25)
}

func (x *Machine) SetIpAddresses(v []string) {
	x.xxx_hidden_IpAddresses = v
}

func (x *Machine) SetWorkloadAnnotations(v map[string]string) {
	x.xxx_hidden_WorkloadAnnotations = v
}

func (x *Machine) SetHardwareInformation(v map[string]string) {
	x.xxx_hidden_HardwareInformation = v
}

func (x *Machine) SetBiosBootMethod(v string) {
	x.xxx_hidden_BiosBootMethod = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 21, 25)
}

func (x *Machine) SetNumaNodes(v []*Machine_NUMANode) {
	x.xxx_hidden_NumaNodes = &v
}

func (x *Machine) SetBlockDevices(v []*Machine_BlockDevice) {
	x.xxx_hidden_BlockDevices = &v
}

func (x *Machine) SetNetworkInterfaces(v []*Machine_NetworkInterface) {
	x.xxx_hidden_NetworkInterfaces = &v
}

func (x *Machine) HasId() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 0)
}

func (x *Machine) HasHardwareUuid() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 1)
}

func (x *Machine) HasHostname() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 2)
}

func (x *Machine) HasFqdn() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 3)
}

func (x *Machine) HasDescription() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 5)
}

func (x *Machine) HasStatus() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 6)
}

func (x *Machine) HasStatusMessage() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 7)
}

func (x *Machine) HasPowerState() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 8)
}

func (x *Machine) HasPowerType() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 9)
}

func (x *Machine) HasOsystem() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 10)
}

func (x *Machine) HasDistroSeries() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 11)
}

func (x *Machine) HasHweKernel() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 12)
}

func (x *Machine) HasArchitecture() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 13)
}

func (x *Machine) HasCpuSpeed() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 14)
}

func (x *Machine) HasCpuCount() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 15)
}

func (x *Machine) HasMemoryMb() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 16)
}

func (x *Machine) HasStorageMb() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 17)
}

func (x *Machine) HasBiosBootMethod() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 21)
}

func (x *Machine) ClearId() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 0)
	x.xxx_hidden_Id = nil
}

func (x *Machine) ClearHardwareUuid() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 1)
	x.xxx_hidden_HardwareUuid = nil
}

func (x *Machine) ClearHostname() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 2)
	x.xxx_hidden_Hostname = nil
}

func (x *Machine) ClearFqdn() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 3)
	x.xxx_hidden_Fqdn = nil
}

func (x *Machine) ClearDescription() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 5)
	x.xxx_hidden_Description = nil
}

func (x *Machine) ClearStatus() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 6)
	x.xxx_hidden_Status = nil
}

func (x *Machine) ClearStatusMessage() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 7)
	x.xxx_hidden_StatusMessage = nil
}

func (x *Machine) ClearPowerState() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 8)
	x.xxx_hidden_PowerState = nil
}

func (x *Machine) ClearPowerType() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 9)
	x.xxx_hidden_PowerType = nil
}

func (x *Machine) ClearOsystem() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 10)
	x.xxx_hidden_Osystem = nil
}

func (x *Machine) ClearDistroSeries() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 11)
	x.xxx_hidden_DistroSeries = nil
}

func (x *Machine) ClearHweKernel() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 12)
	x.xxx_hidden_HweKernel = nil
}

func (x *Machine) ClearArchitecture() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 13)
	x.xxx_hidden_Architecture = nil
}

func (x *Machine) ClearCpuSpeed() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 14)
	x.xxx_hidden_CpuSpeed = 0
}

func (x *Machine) ClearCpuCount() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 15)
	x.xxx_hidden_CpuCount = 0
}

func (x *Machine) ClearMemoryMb() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 16)
	x.xxx_hidden_MemoryMb = 0
}

func (x *Machine) ClearStorageMb() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 17)
	x.xxx_hidden_StorageMb = 0
}

func (x *Machine) ClearBiosBootMethod() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 21)
	x.xxx_hidden_BiosBootMethod = nil
}

type Machine_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	Id                  *string
	HardwareUuid        *string
	Hostname            *string
	Fqdn                *string
	Tags                []string
	Description         *string
	Status              *string
	StatusMessage       *string
	PowerState          *string
	PowerType           *string
	Osystem             *string
	DistroSeries        *string
	HweKernel           *string
	Architecture        *string
	CpuSpeed            *int64
	CpuCount            *int64
	MemoryMb            *int64
	StorageMb           *float64
	IpAddresses         []string
	WorkloadAnnotations map[string]string
	HardwareInformation map[string]string
	BiosBootMethod      *string
	NumaNodes           []*Machine_NUMANode
	BlockDevices        []*Machine_BlockDevice
	NetworkInterfaces   []*Machine_NetworkInterface
}

func (b0 Machine_builder) Build() *Machine {
	m0 := &Machine{}
	b, x := &b0, m0
	_, _ = b, x
	if b.Id != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 0, 25)
		x.xxx_hidden_Id = b.Id
	}
	if b.HardwareUuid != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 1, 25)
		x.xxx_hidden_HardwareUuid = b.HardwareUuid
	}
	if b.Hostname != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 2, 25)
		x.xxx_hidden_Hostname = b.Hostname
	}
	if b.Fqdn != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 3, 25)
		x.xxx_hidden_Fqdn = b.Fqdn
	}
	x.xxx_hidden_Tags = b.Tags
	if b.Description != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 5, 25)
		x.xxx_hidden_Description = b.Description
	}
	if b.Status != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 6, 25)
		x.xxx_hidden_Status = b.Status
	}
	if b.StatusMessage != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 7, 25)
		x.xxx_hidden_StatusMessage = b.StatusMessage
	}
	if b.PowerState != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 8, 25)
		x.xxx_hidden_PowerState = b.PowerState
	}
	if b.PowerType != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 9, 25)
		x.xxx_hidden_PowerType = b.PowerType
	}
	if b.Osystem != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 10, 25)
		x.xxx_hidden_Osystem = b.Osystem
	}
	if b.DistroSeries != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 11, 25)
		x.xxx_hidden_DistroSeries = b.DistroSeries
	}
	if b.HweKernel != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 12, 25)
		x.xxx_hidden_HweKernel = b.HweKernel
	}
	if b.Architecture != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 13, 25)
		x.xxx_hidden_Architecture = b.Architecture
	}
	if b.CpuSpeed != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 14, 25)
		x.xxx_hidden_CpuSpeed = *b.CpuSpeed
	}
	if b.CpuCount != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 15, 25)
		x.xxx_hidden_CpuCount = *b.CpuCount
	}
	if b.MemoryMb != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 16, 25)
		x.xxx_hidden_MemoryMb = *b.MemoryMb
	}
	if b.StorageMb != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 17, 25)
		x.xxx_hidden_StorageMb = *b.StorageMb
	}
	x.xxx_hidden_IpAddresses = b.IpAddresses
	x.xxx_hidden_WorkloadAnnotations = b.WorkloadAnnotations
	x.xxx_hidden_HardwareInformation = b.HardwareInformation
	if b.BiosBootMethod != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 21, 25)
		x.xxx_hidden_BiosBootMethod = b.BiosBootMethod
	}
	x.xxx_hidden_NumaNodes = &b.NumaNodes
	x.xxx_hidden_BlockDevices = &b.BlockDevices
	x.xxx_hidden_NetworkInterfaces = &b.NetworkInterfaces
	return m0
}

type Scope struct {
	state                   protoimpl.MessageState `protogen:"opaque.v1"`
	xxx_hidden_Uuid         *string                `protobuf:"bytes,1,opt,name=uuid"`
	xxx_hidden_Name         *string                `protobuf:"bytes,2,opt,name=name"`
	xxx_hidden_Type         *string                `protobuf:"bytes,3,opt,name=type"`
	xxx_hidden_ProviderType *string                `protobuf:"bytes,4,opt,name=provider_type,json=providerType"`
	xxx_hidden_Life         *string                `protobuf:"bytes,5,opt,name=life"`
	xxx_hidden_Status       *string                `protobuf:"bytes,6,opt,name=status"`
	xxx_hidden_AgentVersion *string                `protobuf:"bytes,7,opt,name=agent_version,json=agentVersion"`
	xxx_hidden_Controller   bool                   `protobuf:"varint,8,opt,name=controller"`
	xxx_hidden_MachineCount int64                  `protobuf:"varint,21,opt,name=machine_count,json=machineCount"`
	xxx_hidden_CoreCount    int64                  `protobuf:"varint,22,opt,name=core_count,json=coreCount"`
	xxx_hidden_UnitCount    int64                  `protobuf:"varint,23,opt,name=unit_count,json=unitCount"`
	XXX_raceDetectHookData  protoimpl.RaceDetectHookData
	XXX_presence            [1]uint32
	unknownFields           protoimpl.UnknownFields
	sizeCache               protoimpl.SizeCache
}

func (x *Scope) Reset() {
	*x = Scope{}
	mi := &file_api_nexus_v1_nexus_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Scope) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Scope) ProtoMessage() {}

func (x *Scope) ProtoReflect() protoreflect.Message {
	mi := &file_api_nexus_v1_nexus_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *Scope) GetUuid() string {
	if x != nil {
		if x.xxx_hidden_Uuid != nil {
			return *x.xxx_hidden_Uuid
		}
		return ""
	}
	return ""
}

func (x *Scope) GetName() string {
	if x != nil {
		if x.xxx_hidden_Name != nil {
			return *x.xxx_hidden_Name
		}
		return ""
	}
	return ""
}

func (x *Scope) GetType() string {
	if x != nil {
		if x.xxx_hidden_Type != nil {
			return *x.xxx_hidden_Type
		}
		return ""
	}
	return ""
}

func (x *Scope) GetProviderType() string {
	if x != nil {
		if x.xxx_hidden_ProviderType != nil {
			return *x.xxx_hidden_ProviderType
		}
		return ""
	}
	return ""
}

func (x *Scope) GetLife() string {
	if x != nil {
		if x.xxx_hidden_Life != nil {
			return *x.xxx_hidden_Life
		}
		return ""
	}
	return ""
}

func (x *Scope) GetStatus() string {
	if x != nil {
		if x.xxx_hidden_Status != nil {
			return *x.xxx_hidden_Status
		}
		return ""
	}
	return ""
}

func (x *Scope) GetAgentVersion() string {
	if x != nil {
		if x.xxx_hidden_AgentVersion != nil {
			return *x.xxx_hidden_AgentVersion
		}
		return ""
	}
	return ""
}

func (x *Scope) GetController() bool {
	if x != nil {
		return x.xxx_hidden_Controller
	}
	return false
}

func (x *Scope) GetMachineCount() int64 {
	if x != nil {
		return x.xxx_hidden_MachineCount
	}
	return 0
}

func (x *Scope) GetCoreCount() int64 {
	if x != nil {
		return x.xxx_hidden_CoreCount
	}
	return 0
}

func (x *Scope) GetUnitCount() int64 {
	if x != nil {
		return x.xxx_hidden_UnitCount
	}
	return 0
}

func (x *Scope) SetUuid(v string) {
	x.xxx_hidden_Uuid = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 0, 11)
}

func (x *Scope) SetName(v string) {
	x.xxx_hidden_Name = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 1, 11)
}

func (x *Scope) SetType(v string) {
	x.xxx_hidden_Type = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 2, 11)
}

func (x *Scope) SetProviderType(v string) {
	x.xxx_hidden_ProviderType = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 3, 11)
}

func (x *Scope) SetLife(v string) {
	x.xxx_hidden_Life = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 4, 11)
}

func (x *Scope) SetStatus(v string) {
	x.xxx_hidden_Status = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 5, 11)
}

func (x *Scope) SetAgentVersion(v string) {
	x.xxx_hidden_AgentVersion = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 6, 11)
}

func (x *Scope) SetController(v bool) {
	x.xxx_hidden_Controller = v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 7, 11)
}

func (x *Scope) SetMachineCount(v int64) {
	x.xxx_hidden_MachineCount = v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 8, 11)
}

func (x *Scope) SetCoreCount(v int64) {
	x.xxx_hidden_CoreCount = v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 9, 11)
}

func (x *Scope) SetUnitCount(v int64) {
	x.xxx_hidden_UnitCount = v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 10, 11)
}

func (x *Scope) HasUuid() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 0)
}

func (x *Scope) HasName() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 1)
}

func (x *Scope) HasType() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 2)
}

func (x *Scope) HasProviderType() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 3)
}

func (x *Scope) HasLife() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 4)
}

func (x *Scope) HasStatus() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 5)
}

func (x *Scope) HasAgentVersion() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 6)
}

func (x *Scope) HasController() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 7)
}

func (x *Scope) HasMachineCount() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 8)
}

func (x *Scope) HasCoreCount() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 9)
}

func (x *Scope) HasUnitCount() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 10)
}

func (x *Scope) ClearUuid() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 0)
	x.xxx_hidden_Uuid = nil
}

func (x *Scope) ClearName() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 1)
	x.xxx_hidden_Name = nil
}

func (x *Scope) ClearType() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 2)
	x.xxx_hidden_Type = nil
}

func (x *Scope) ClearProviderType() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 3)
	x.xxx_hidden_ProviderType = nil
}

func (x *Scope) ClearLife() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 4)
	x.xxx_hidden_Life = nil
}

func (x *Scope) ClearStatus() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 5)
	x.xxx_hidden_Status = nil
}

func (x *Scope) ClearAgentVersion() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 6)
	x.xxx_hidden_AgentVersion = nil
}

func (x *Scope) ClearController() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 7)
	x.xxx_hidden_Controller = false
}

func (x *Scope) ClearMachineCount() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 8)
	x.xxx_hidden_MachineCount = 0
}

func (x *Scope) ClearCoreCount() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 9)
	x.xxx_hidden_CoreCount = 0
}

func (x *Scope) ClearUnitCount() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 10)
	x.xxx_hidden_UnitCount = 0
}

type Scope_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	Uuid         *string
	Name         *string
	Type         *string
	ProviderType *string
	Life         *string
	Status       *string
	AgentVersion *string
	Controller   *bool
	MachineCount *int64
	CoreCount    *int64
	UnitCount    *int64
}

func (b0 Scope_builder) Build() *Scope {
	m0 := &Scope{}
	b, x := &b0, m0
	_, _ = b, x
	if b.Uuid != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 0, 11)
		x.xxx_hidden_Uuid = b.Uuid
	}
	if b.Name != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 1, 11)
		x.xxx_hidden_Name = b.Name
	}
	if b.Type != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 2, 11)
		x.xxx_hidden_Type = b.Type
	}
	if b.ProviderType != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 3, 11)
		x.xxx_hidden_ProviderType = b.ProviderType
	}
	if b.Life != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 4, 11)
		x.xxx_hidden_Life = b.Life
	}
	if b.Status != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 5, 11)
		x.xxx_hidden_Status = b.Status
	}
	if b.AgentVersion != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 6, 11)
		x.xxx_hidden_AgentVersion = b.AgentVersion
	}
	if b.Controller != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 7, 11)
		x.xxx_hidden_Controller = *b.Controller
	}
	if b.MachineCount != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 8, 11)
		x.xxx_hidden_MachineCount = *b.MachineCount
	}
	if b.CoreCount != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 9, 11)
		x.xxx_hidden_CoreCount = *b.CoreCount
	}
	if b.UnitCount != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 10, 11)
		x.xxx_hidden_UnitCount = *b.UnitCount
	}
	return m0
}

type Facility struct {
	state                  protoimpl.MessageState   `protogen:"opaque.v1"`
	xxx_hidden_Name        *string                  `protobuf:"bytes,1,opt,name=name"`
	xxx_hidden_Status      *Facility_Status         `protobuf:"bytes,2,opt,name=status"`
	xxx_hidden_CharmName   *string                  `protobuf:"bytes,11,opt,name=charm_name,json=charmName"`
	xxx_hidden_Version     *string                  `protobuf:"bytes,12,opt,name=version"`
	xxx_hidden_Revision    int64                    `protobuf:"varint,13,opt,name=revision"`
	xxx_hidden_Metadata    *Facility_Charm_Metadata `protobuf:"bytes,21,opt,name=metadata"`
	xxx_hidden_Units       *[]*Facility_Unit        `protobuf:"bytes,31,rep,name=units"`
	XXX_raceDetectHookData protoimpl.RaceDetectHookData
	XXX_presence           [1]uint32
	unknownFields          protoimpl.UnknownFields
	sizeCache              protoimpl.SizeCache
}

func (x *Facility) Reset() {
	*x = Facility{}
	mi := &file_api_nexus_v1_nexus_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Facility) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Facility) ProtoMessage() {}

func (x *Facility) ProtoReflect() protoreflect.Message {
	mi := &file_api_nexus_v1_nexus_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *Facility) GetName() string {
	if x != nil {
		if x.xxx_hidden_Name != nil {
			return *x.xxx_hidden_Name
		}
		return ""
	}
	return ""
}

func (x *Facility) GetStatus() *Facility_Status {
	if x != nil {
		return x.xxx_hidden_Status
	}
	return nil
}

func (x *Facility) GetCharmName() string {
	if x != nil {
		if x.xxx_hidden_CharmName != nil {
			return *x.xxx_hidden_CharmName
		}
		return ""
	}
	return ""
}

func (x *Facility) GetVersion() string {
	if x != nil {
		if x.xxx_hidden_Version != nil {
			return *x.xxx_hidden_Version
		}
		return ""
	}
	return ""
}

func (x *Facility) GetRevision() int64 {
	if x != nil {
		return x.xxx_hidden_Revision
	}
	return 0
}

func (x *Facility) GetMetadata() *Facility_Charm_Metadata {
	if x != nil {
		return x.xxx_hidden_Metadata
	}
	return nil
}

func (x *Facility) GetUnits() []*Facility_Unit {
	if x != nil {
		if x.xxx_hidden_Units != nil {
			return *x.xxx_hidden_Units
		}
	}
	return nil
}

func (x *Facility) SetName(v string) {
	x.xxx_hidden_Name = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 0, 7)
}

func (x *Facility) SetStatus(v *Facility_Status) {
	x.xxx_hidden_Status = v
}

func (x *Facility) SetCharmName(v string) {
	x.xxx_hidden_CharmName = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 2, 7)
}

func (x *Facility) SetVersion(v string) {
	x.xxx_hidden_Version = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 3, 7)
}

func (x *Facility) SetRevision(v int64) {
	x.xxx_hidden_Revision = v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 4, 7)
}

func (x *Facility) SetMetadata(v *Facility_Charm_Metadata) {
	x.xxx_hidden_Metadata = v
}

func (x *Facility) SetUnits(v []*Facility_Unit) {
	x.xxx_hidden_Units = &v
}

func (x *Facility) HasName() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 0)
}

func (x *Facility) HasStatus() bool {
	if x == nil {
		return false
	}
	return x.xxx_hidden_Status != nil
}

func (x *Facility) HasCharmName() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 2)
}

func (x *Facility) HasVersion() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 3)
}

func (x *Facility) HasRevision() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 4)
}

func (x *Facility) HasMetadata() bool {
	if x == nil {
		return false
	}
	return x.xxx_hidden_Metadata != nil
}

func (x *Facility) ClearName() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 0)
	x.xxx_hidden_Name = nil
}

func (x *Facility) ClearStatus() {
	x.xxx_hidden_Status = nil
}

func (x *Facility) ClearCharmName() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 2)
	x.xxx_hidden_CharmName = nil
}

func (x *Facility) ClearVersion() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 3)
	x.xxx_hidden_Version = nil
}

func (x *Facility) ClearRevision() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 4)
	x.xxx_hidden_Revision = 0
}

func (x *Facility) ClearMetadata() {
	x.xxx_hidden_Metadata = nil
}

type Facility_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	Name      *string
	Status    *Facility_Status
	CharmName *string
	Version   *string
	Revision  *int64
	Metadata  *Facility_Charm_Metadata
	Units     []*Facility_Unit
}

func (b0 Facility_builder) Build() *Facility {
	m0 := &Facility{}
	b, x := &b0, m0
	_, _ = b, x
	if b.Name != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 0, 7)
		x.xxx_hidden_Name = b.Name
	}
	x.xxx_hidden_Status = b.Status
	if b.CharmName != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 2, 7)
		x.xxx_hidden_CharmName = b.CharmName
	}
	if b.Version != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 3, 7)
		x.xxx_hidden_Version = b.Version
	}
	if b.Revision != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 4, 7)
		x.xxx_hidden_Revision = *b.Revision
	}
	x.xxx_hidden_Metadata = b.Metadata
	x.xxx_hidden_Units = &b.Units
	return m0
}

type Application struct {
	state                             protoimpl.MessageState                `protogen:"opaque.v1"`
	xxx_hidden_Type                   *string                               `protobuf:"bytes,1,opt,name=type"`
	xxx_hidden_Name                   *string                               `protobuf:"bytes,2,opt,name=name"`
	xxx_hidden_Namespace              *string                               `protobuf:"bytes,3,opt,name=namespace"`
	xxx_hidden_Labels                 map[string]string                     `protobuf:"bytes,4,rep,name=labels" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	xxx_hidden_Replicas               int32                                 `protobuf:"varint,5,opt,name=replicas"`
	xxx_hidden_Healthies              int32                                 `protobuf:"varint,11,opt,name=healthies"`
	xxx_hidden_Metadata               *Application_Chart_Metadata           `protobuf:"bytes,21,opt,name=metadata"`
	xxx_hidden_Containers             *[]*Application_Container             `protobuf:"bytes,31,rep,name=containers"`
	xxx_hidden_Services               *[]*Application_Service               `protobuf:"bytes,101,rep,name=services"`
	xxx_hidden_Pods                   *[]*Application_Pod                   `protobuf:"bytes,102,rep,name=pods"`
	xxx_hidden_PersistentVolumeClaims *[]*Application_PersistentVolumeClaim `protobuf:"bytes,103,rep,name=persistent_volume_claims,json=persistentVolumeClaims"`
	xxx_hidden_CreatedAt              *timestamppb.Timestamp                `protobuf:"bytes,201,opt,name=created_at,json=createdAt"`
	XXX_raceDetectHookData            protoimpl.RaceDetectHookData
	XXX_presence                      [1]uint32
	unknownFields                     protoimpl.UnknownFields
	sizeCache                         protoimpl.SizeCache
}

func (x *Application) Reset() {
	*x = Application{}
	mi := &file_api_nexus_v1_nexus_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Application) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Application) ProtoMessage() {}

func (x *Application) ProtoReflect() protoreflect.Message {
	mi := &file_api_nexus_v1_nexus_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *Application) GetType() string {
	if x != nil {
		if x.xxx_hidden_Type != nil {
			return *x.xxx_hidden_Type
		}
		return ""
	}
	return ""
}

func (x *Application) GetName() string {
	if x != nil {
		if x.xxx_hidden_Name != nil {
			return *x.xxx_hidden_Name
		}
		return ""
	}
	return ""
}

func (x *Application) GetNamespace() string {
	if x != nil {
		if x.xxx_hidden_Namespace != nil {
			return *x.xxx_hidden_Namespace
		}
		return ""
	}
	return ""
}

func (x *Application) GetLabels() map[string]string {
	if x != nil {
		return x.xxx_hidden_Labels
	}
	return nil
}

func (x *Application) GetReplicas() int32 {
	if x != nil {
		return x.xxx_hidden_Replicas
	}
	return 0
}

func (x *Application) GetHealthies() int32 {
	if x != nil {
		return x.xxx_hidden_Healthies
	}
	return 0
}

func (x *Application) GetMetadata() *Application_Chart_Metadata {
	if x != nil {
		return x.xxx_hidden_Metadata
	}
	return nil
}

func (x *Application) GetContainers() []*Application_Container {
	if x != nil {
		if x.xxx_hidden_Containers != nil {
			return *x.xxx_hidden_Containers
		}
	}
	return nil
}

func (x *Application) GetServices() []*Application_Service {
	if x != nil {
		if x.xxx_hidden_Services != nil {
			return *x.xxx_hidden_Services
		}
	}
	return nil
}

func (x *Application) GetPods() []*Application_Pod {
	if x != nil {
		if x.xxx_hidden_Pods != nil {
			return *x.xxx_hidden_Pods
		}
	}
	return nil
}

func (x *Application) GetPersistentVolumeClaims() []*Application_PersistentVolumeClaim {
	if x != nil {
		if x.xxx_hidden_PersistentVolumeClaims != nil {
			return *x.xxx_hidden_PersistentVolumeClaims
		}
	}
	return nil
}

func (x *Application) GetCreatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.xxx_hidden_CreatedAt
	}
	return nil
}

func (x *Application) SetType(v string) {
	x.xxx_hidden_Type = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 0, 12)
}

func (x *Application) SetName(v string) {
	x.xxx_hidden_Name = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 1, 12)
}

func (x *Application) SetNamespace(v string) {
	x.xxx_hidden_Namespace = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 2, 12)
}

func (x *Application) SetLabels(v map[string]string) {
	x.xxx_hidden_Labels = v
}

func (x *Application) SetReplicas(v int32) {
	x.xxx_hidden_Replicas = v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 4, 12)
}

func (x *Application) SetHealthies(v int32) {
	x.xxx_hidden_Healthies = v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 5, 12)
}

func (x *Application) SetMetadata(v *Application_Chart_Metadata) {
	x.xxx_hidden_Metadata = v
}

func (x *Application) SetContainers(v []*Application_Container) {
	x.xxx_hidden_Containers = &v
}

func (x *Application) SetServices(v []*Application_Service) {
	x.xxx_hidden_Services = &v
}

func (x *Application) SetPods(v []*Application_Pod) {
	x.xxx_hidden_Pods = &v
}

func (x *Application) SetPersistentVolumeClaims(v []*Application_PersistentVolumeClaim) {
	x.xxx_hidden_PersistentVolumeClaims = &v
}

func (x *Application) SetCreatedAt(v *timestamppb.Timestamp) {
	x.xxx_hidden_CreatedAt = v
}

func (x *Application) HasType() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 0)
}

func (x *Application) HasName() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 1)
}

func (x *Application) HasNamespace() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 2)
}

func (x *Application) HasReplicas() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 4)
}

func (x *Application) HasHealthies() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 5)
}

func (x *Application) HasMetadata() bool {
	if x == nil {
		return false
	}
	return x.xxx_hidden_Metadata != nil
}

func (x *Application) HasCreatedAt() bool {
	if x == nil {
		return false
	}
	return x.xxx_hidden_CreatedAt != nil
}

func (x *Application) ClearType() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 0)
	x.xxx_hidden_Type = nil
}

func (x *Application) ClearName() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 1)
	x.xxx_hidden_Name = nil
}

func (x *Application) ClearNamespace() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 2)
	x.xxx_hidden_Namespace = nil
}

func (x *Application) ClearReplicas() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 4)
	x.xxx_hidden_Replicas = 0
}

func (x *Application) ClearHealthies() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 5)
	x.xxx_hidden_Healthies = 0
}

func (x *Application) ClearMetadata() {
	x.xxx_hidden_Metadata = nil
}

func (x *Application) ClearCreatedAt() {
	x.xxx_hidden_CreatedAt = nil
}

type Application_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	Type                   *string
	Name                   *string
	Namespace              *string
	Labels                 map[string]string
	Replicas               *int32
	Healthies              *int32
	Metadata               *Application_Chart_Metadata
	Containers             []*Application_Container
	Services               []*Application_Service
	Pods                   []*Application_Pod
	PersistentVolumeClaims []*Application_PersistentVolumeClaim
	CreatedAt              *timestamppb.Timestamp
}

func (b0 Application_builder) Build() *Application {
	m0 := &Application{}
	b, x := &b0, m0
	_, _ = b, x
	if b.Type != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 0, 12)
		x.xxx_hidden_Type = b.Type
	}
	if b.Name != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 1, 12)
		x.xxx_hidden_Name = b.Name
	}
	if b.Namespace != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 2, 12)
		x.xxx_hidden_Namespace = b.Namespace
	}
	x.xxx_hidden_Labels = b.Labels
	if b.Replicas != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 4, 12)
		x.xxx_hidden_Replicas = *b.Replicas
	}
	if b.Healthies != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 5, 12)
		x.xxx_hidden_Healthies = *b.Healthies
	}
	x.xxx_hidden_Metadata = b.Metadata
	x.xxx_hidden_Containers = &b.Containers
	x.xxx_hidden_Services = &b.Services
	x.xxx_hidden_Pods = &b.Pods
	x.xxx_hidden_PersistentVolumeClaims = &b.PersistentVolumeClaims
	x.xxx_hidden_CreatedAt = b.CreatedAt
	return m0
}

type Customization struct {
	state                  protoimpl.MessageState `protogen:"opaque.v1"`
	xxx_hidden_Type        *string                `protobuf:"bytes,1,opt,name=type"`
	xxx_hidden_Name        *string                `protobuf:"bytes,2,opt,name=name"`
	xxx_hidden_Verison     *string                `protobuf:"bytes,3,opt,name=verison"`
	xxx_hidden_Values      *structpb.Struct       `protobuf:"bytes,11,opt,name=values"`
	XXX_raceDetectHookData protoimpl.RaceDetectHookData
	XXX_presence           [1]uint32
	unknownFields          protoimpl.UnknownFields
	sizeCache              protoimpl.SizeCache
}

func (x *Customization) Reset() {
	*x = Customization{}
	mi := &file_api_nexus_v1_nexus_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Customization) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Customization) ProtoMessage() {}

func (x *Customization) ProtoReflect() protoreflect.Message {
	mi := &file_api_nexus_v1_nexus_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *Customization) GetType() string {
	if x != nil {
		if x.xxx_hidden_Type != nil {
			return *x.xxx_hidden_Type
		}
		return ""
	}
	return ""
}

func (x *Customization) GetName() string {
	if x != nil {
		if x.xxx_hidden_Name != nil {
			return *x.xxx_hidden_Name
		}
		return ""
	}
	return ""
}

func (x *Customization) GetVerison() string {
	if x != nil {
		if x.xxx_hidden_Verison != nil {
			return *x.xxx_hidden_Verison
		}
		return ""
	}
	return ""
}

func (x *Customization) GetValues() *structpb.Struct {
	if x != nil {
		return x.xxx_hidden_Values
	}
	return nil
}

func (x *Customization) SetType(v string) {
	x.xxx_hidden_Type = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 0, 4)
}

func (x *Customization) SetName(v string) {
	x.xxx_hidden_Name = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 1, 4)
}

func (x *Customization) SetVerison(v string) {
	x.xxx_hidden_Verison = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 2, 4)
}

func (x *Customization) SetValues(v *structpb.Struct) {
	x.xxx_hidden_Values = v
}

func (x *Customization) HasType() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 0)
}

func (x *Customization) HasName() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 1)
}

func (x *Customization) HasVerison() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 2)
}

func (x *Customization) HasValues() bool {
	if x == nil {
		return false
	}
	return x.xxx_hidden_Values != nil
}

func (x *Customization) ClearType() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 0)
	x.xxx_hidden_Type = nil
}

func (x *Customization) ClearName() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 1)
	x.xxx_hidden_Name = nil
}

func (x *Customization) ClearVerison() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 2)
	x.xxx_hidden_Verison = nil
}

func (x *Customization) ClearValues() {
	x.xxx_hidden_Values = nil
}

type Customization_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	Type    *string
	Name    *string
	Verison *string
	Values  *structpb.Struct
}

func (b0 Customization_builder) Build() *Customization {
	m0 := &Customization{}
	b, x := &b0, m0
	_, _ = b, x
	if b.Type != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 0, 4)
		x.xxx_hidden_Type = b.Type
	}
	if b.Name != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 1, 4)
		x.xxx_hidden_Name = b.Name
	}
	if b.Verison != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 2, 4)
		x.xxx_hidden_Verison = b.Verison
	}
	x.xxx_hidden_Values = b.Values
	return m0
}

type Tag struct {
	state                  protoimpl.MessageState `protogen:"opaque.v1"`
	xxx_hidden_Name        *string                `protobuf:"bytes,1,opt,name=name"`
	xxx_hidden_Comment     *string                `protobuf:"bytes,2,opt,name=comment"`
	XXX_raceDetectHookData protoimpl.RaceDetectHookData
	XXX_presence           [1]uint32
	unknownFields          protoimpl.UnknownFields
	sizeCache              protoimpl.SizeCache
}

func (x *Tag) Reset() {
	*x = Tag{}
	mi := &file_api_nexus_v1_nexus_proto_msgTypes[7]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Tag) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Tag) ProtoMessage() {}

func (x *Tag) ProtoReflect() protoreflect.Message {
	mi := &file_api_nexus_v1_nexus_proto_msgTypes[7]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *Tag) GetName() string {
	if x != nil {
		if x.xxx_hidden_Name != nil {
			return *x.xxx_hidden_Name
		}
		return ""
	}
	return ""
}

func (x *Tag) GetComment() string {
	if x != nil {
		if x.xxx_hidden_Comment != nil {
			return *x.xxx_hidden_Comment
		}
		return ""
	}
	return ""
}

func (x *Tag) SetName(v string) {
	x.xxx_hidden_Name = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 0, 2)
}

func (x *Tag) SetComment(v string) {
	x.xxx_hidden_Comment = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 1, 2)
}

func (x *Tag) HasName() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 0)
}

func (x *Tag) HasComment() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 1)
}

func (x *Tag) ClearName() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 0)
	x.xxx_hidden_Name = nil
}

func (x *Tag) ClearComment() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 1)
	x.xxx_hidden_Comment = nil
}

type Tag_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	Name    *string
	Comment *string
}

func (b0 Tag_builder) Build() *Tag {
	m0 := &Tag{}
	b, x := &b0, m0
	_, _ = b, x
	if b.Name != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 0, 2)
		x.xxx_hidden_Name = b.Name
	}
	if b.Comment != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 1, 2)
		x.xxx_hidden_Comment = b.Comment
	}
	return m0
}

type StorageClass struct {
	state                        protoimpl.MessageState `protogen:"opaque.v1"`
	xxx_hidden_Name              *string                `protobuf:"bytes,1,opt,name=name"`
	xxx_hidden_Provisioner       *string                `protobuf:"bytes,2,opt,name=provisioner"`
	xxx_hidden_ReclaimPolicy     *string                `protobuf:"bytes,3,opt,name=reclaim_policy,json=reclaimPolicy"`
	xxx_hidden_VolumeBindingMode *string                `protobuf:"bytes,4,opt,name=volume_binding_mode,json=volumeBindingMode"`
	xxx_hidden_Parameters        map[string]string      `protobuf:"bytes,5,rep,name=parameters" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	xxx_hidden_CreatedAt         *timestamppb.Timestamp `protobuf:"bytes,201,opt,name=created_at,json=createdAt"`
	XXX_raceDetectHookData       protoimpl.RaceDetectHookData
	XXX_presence                 [1]uint32
	unknownFields                protoimpl.UnknownFields
	sizeCache                    protoimpl.SizeCache
}

func (x *StorageClass) Reset() {
	*x = StorageClass{}
	mi := &file_api_nexus_v1_nexus_proto_msgTypes[8]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *StorageClass) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StorageClass) ProtoMessage() {}

func (x *StorageClass) ProtoReflect() protoreflect.Message {
	mi := &file_api_nexus_v1_nexus_proto_msgTypes[8]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *StorageClass) GetName() string {
	if x != nil {
		if x.xxx_hidden_Name != nil {
			return *x.xxx_hidden_Name
		}
		return ""
	}
	return ""
}

func (x *StorageClass) GetProvisioner() string {
	if x != nil {
		if x.xxx_hidden_Provisioner != nil {
			return *x.xxx_hidden_Provisioner
		}
		return ""
	}
	return ""
}

func (x *StorageClass) GetReclaimPolicy() string {
	if x != nil {
		if x.xxx_hidden_ReclaimPolicy != nil {
			return *x.xxx_hidden_ReclaimPolicy
		}
		return ""
	}
	return ""
}

func (x *StorageClass) GetVolumeBindingMode() string {
	if x != nil {
		if x.xxx_hidden_VolumeBindingMode != nil {
			return *x.xxx_hidden_VolumeBindingMode
		}
		return ""
	}
	return ""
}

func (x *StorageClass) GetParameters() map[string]string {
	if x != nil {
		return x.xxx_hidden_Parameters
	}
	return nil
}

func (x *StorageClass) GetCreatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.xxx_hidden_CreatedAt
	}
	return nil
}

func (x *StorageClass) SetName(v string) {
	x.xxx_hidden_Name = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 0, 6)
}

func (x *StorageClass) SetProvisioner(v string) {
	x.xxx_hidden_Provisioner = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 1, 6)
}

func (x *StorageClass) SetReclaimPolicy(v string) {
	x.xxx_hidden_ReclaimPolicy = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 2, 6)
}

func (x *StorageClass) SetVolumeBindingMode(v string) {
	x.xxx_hidden_VolumeBindingMode = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 3, 6)
}

func (x *StorageClass) SetParameters(v map[string]string) {
	x.xxx_hidden_Parameters = v
}

func (x *StorageClass) SetCreatedAt(v *timestamppb.Timestamp) {
	x.xxx_hidden_CreatedAt = v
}

func (x *StorageClass) HasName() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 0)
}

func (x *StorageClass) HasProvisioner() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 1)
}

func (x *StorageClass) HasReclaimPolicy() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 2)
}

func (x *StorageClass) HasVolumeBindingMode() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 3)
}

func (x *StorageClass) HasCreatedAt() bool {
	if x == nil {
		return false
	}
	return x.xxx_hidden_CreatedAt != nil
}

func (x *StorageClass) ClearName() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 0)
	x.xxx_hidden_Name = nil
}

func (x *StorageClass) ClearProvisioner() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 1)
	x.xxx_hidden_Provisioner = nil
}

func (x *StorageClass) ClearReclaimPolicy() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 2)
	x.xxx_hidden_ReclaimPolicy = nil
}

func (x *StorageClass) ClearVolumeBindingMode() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 3)
	x.xxx_hidden_VolumeBindingMode = nil
}

func (x *StorageClass) ClearCreatedAt() {
	x.xxx_hidden_CreatedAt = nil
}

type StorageClass_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	Name              *string
	Provisioner       *string
	ReclaimPolicy     *string
	VolumeBindingMode *string
	Parameters        map[string]string
	CreatedAt         *timestamppb.Timestamp
}

func (b0 StorageClass_builder) Build() *StorageClass {
	m0 := &StorageClass{}
	b, x := &b0, m0
	_, _ = b, x
	if b.Name != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 0, 6)
		x.xxx_hidden_Name = b.Name
	}
	if b.Provisioner != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 1, 6)
		x.xxx_hidden_Provisioner = b.Provisioner
	}
	if b.ReclaimPolicy != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 2, 6)
		x.xxx_hidden_ReclaimPolicy = b.ReclaimPolicy
	}
	if b.VolumeBindingMode != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 3, 6)
		x.xxx_hidden_VolumeBindingMode = b.VolumeBindingMode
	}
	x.xxx_hidden_Parameters = b.Parameters
	x.xxx_hidden_CreatedAt = b.CreatedAt
	return m0
}

type Error struct {
	state                  protoimpl.MessageState `protogen:"opaque.v1"`
	xxx_hidden_Code        *string                `protobuf:"bytes,1,opt,name=code"`
	xxx_hidden_Level       ErrorLevel             `protobuf:"varint,11,opt,name=level,enum=openhdc.nexus.v1.ErrorLevel"`
	xxx_hidden_Message     *string                `protobuf:"bytes,12,opt,name=message"`
	xxx_hidden_Details     *string                `protobuf:"bytes,13,opt,name=details"`
	xxx_hidden_Url         *string                `protobuf:"bytes,21,opt,name=url"`
	XXX_raceDetectHookData protoimpl.RaceDetectHookData
	XXX_presence           [1]uint32
	unknownFields          protoimpl.UnknownFields
	sizeCache              protoimpl.SizeCache
}

func (x *Error) Reset() {
	*x = Error{}
	mi := &file_api_nexus_v1_nexus_proto_msgTypes[9]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Error) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Error) ProtoMessage() {}

func (x *Error) ProtoReflect() protoreflect.Message {
	mi := &file_api_nexus_v1_nexus_proto_msgTypes[9]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *Error) GetCode() string {
	if x != nil {
		if x.xxx_hidden_Code != nil {
			return *x.xxx_hidden_Code
		}
		return ""
	}
	return ""
}

func (x *Error) GetLevel() ErrorLevel {
	if x != nil {
		if protoimpl.X.Present(&(x.XXX_presence[0]), 1) {
			return x.xxx_hidden_Level
		}
	}
	return ErrorLevel_ERRORLEVEL_INFO
}

func (x *Error) GetMessage() string {
	if x != nil {
		if x.xxx_hidden_Message != nil {
			return *x.xxx_hidden_Message
		}
		return ""
	}
	return ""
}

func (x *Error) GetDetails() string {
	if x != nil {
		if x.xxx_hidden_Details != nil {
			return *x.xxx_hidden_Details
		}
		return ""
	}
	return ""
}

func (x *Error) GetUrl() string {
	if x != nil {
		if x.xxx_hidden_Url != nil {
			return *x.xxx_hidden_Url
		}
		return ""
	}
	return ""
}

func (x *Error) SetCode(v string) {
	x.xxx_hidden_Code = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 0, 5)
}

func (x *Error) SetLevel(v ErrorLevel) {
	x.xxx_hidden_Level = v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 1, 5)
}

func (x *Error) SetMessage(v string) {
	x.xxx_hidden_Message = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 2, 5)
}

func (x *Error) SetDetails(v string) {
	x.xxx_hidden_Details = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 3, 5)
}

func (x *Error) SetUrl(v string) {
	x.xxx_hidden_Url = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 4, 5)
}

func (x *Error) HasCode() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 0)
}

func (x *Error) HasLevel() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 1)
}

func (x *Error) HasMessage() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 2)
}

func (x *Error) HasDetails() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 3)
}

func (x *Error) HasUrl() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 4)
}

func (x *Error) ClearCode() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 0)
	x.xxx_hidden_Code = nil
}

func (x *Error) ClearLevel() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 1)
	x.xxx_hidden_Level = ErrorLevel_ERRORLEVEL_INFO
}

func (x *Error) ClearMessage() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 2)
	x.xxx_hidden_Message = nil
}

func (x *Error) ClearDetails() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 3)
	x.xxx_hidden_Details = nil
}

func (x *Error) ClearUrl() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 4)
	x.xxx_hidden_Url = nil
}

type Error_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	Code    *string
	Level   *ErrorLevel
	Message *string
	Details *string
	Url     *string
}

func (b0 Error_builder) Build() *Error {
	m0 := &Error{}
	b, x := &b0, m0
	_, _ = b, x
	if b.Code != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 0, 5)
		x.xxx_hidden_Code = b.Code
	}
	if b.Level != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 1, 5)
		x.xxx_hidden_Level = *b.Level
	}
	if b.Message != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 2, 5)
		x.xxx_hidden_Message = b.Message
	}
	if b.Details != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 3, 5)
		x.xxx_hidden_Details = b.Details
	}
	if b.Url != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 4, 5)
		x.xxx_hidden_Url = b.Url
	}
	return m0
}

type VerifyEnvironmentRequest struct {
	state         protoimpl.MessageState `protogen:"opaque.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *VerifyEnvironmentRequest) Reset() {
	*x = VerifyEnvironmentRequest{}
	mi := &file_api_nexus_v1_nexus_proto_msgTypes[10]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *VerifyEnvironmentRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*VerifyEnvironmentRequest) ProtoMessage() {}

func (x *VerifyEnvironmentRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_nexus_v1_nexus_proto_msgTypes[10]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

type VerifyEnvironmentRequest_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

}

func (b0 VerifyEnvironmentRequest_builder) Build() *VerifyEnvironmentRequest {
	m0 := &VerifyEnvironmentRequest{}
	b, x := &b0, m0
	_, _ = b, x
	return m0
}

type VerifyEnvironmentResponse struct {
	state             protoimpl.MessageState `protogen:"opaque.v1"`
	xxx_hidden_Errors *[]*Error              `protobuf:"bytes,1,rep,name=errors"`
	unknownFields     protoimpl.UnknownFields
	sizeCache         protoimpl.SizeCache
}

func (x *VerifyEnvironmentResponse) Reset() {
	*x = VerifyEnvironmentResponse{}
	mi := &file_api_nexus_v1_nexus_proto_msgTypes[11]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *VerifyEnvironmentResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*VerifyEnvironmentResponse) ProtoMessage() {}

func (x *VerifyEnvironmentResponse) ProtoReflect() protoreflect.Message {
	mi := &file_api_nexus_v1_nexus_proto_msgTypes[11]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *VerifyEnvironmentResponse) GetErrors() []*Error {
	if x != nil {
		if x.xxx_hidden_Errors != nil {
			return *x.xxx_hidden_Errors
		}
	}
	return nil
}

func (x *VerifyEnvironmentResponse) SetErrors(v []*Error) {
	x.xxx_hidden_Errors = &v
}

type VerifyEnvironmentResponse_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	Errors []*Error
}

func (b0 VerifyEnvironmentResponse_builder) Build() *VerifyEnvironmentResponse {
	m0 := &VerifyEnvironmentResponse{}
	b, x := &b0, m0
	_, _ = b, x
	x.xxx_hidden_Errors = &b.Errors
	return m0
}

type ListCephesRequest struct {
	state                  protoimpl.MessageState `protogen:"opaque.v1"`
	xxx_hidden_ScopeUuid   *string                `protobuf:"bytes,1,opt,name=scope_uuid,json=scopeUuid"`
	XXX_raceDetectHookData protoimpl.RaceDetectHookData
	XXX_presence           [1]uint32
	unknownFields          protoimpl.UnknownFields
	sizeCache              protoimpl.SizeCache
}

func (x *ListCephesRequest) Reset() {
	*x = ListCephesRequest{}
	mi := &file_api_nexus_v1_nexus_proto_msgTypes[12]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListCephesRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListCephesRequest) ProtoMessage() {}

func (x *ListCephesRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_nexus_v1_nexus_proto_msgTypes[12]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *ListCephesRequest) GetScopeUuid() string {
	if x != nil {
		if x.xxx_hidden_ScopeUuid != nil {
			return *x.xxx_hidden_ScopeUuid
		}
		return ""
	}
	return ""
}

func (x *ListCephesRequest) SetScopeUuid(v string) {
	x.xxx_hidden_ScopeUuid = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 0, 1)
}

func (x *ListCephesRequest) HasScopeUuid() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 0)
}

func (x *ListCephesRequest) ClearScopeUuid() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 0)
	x.xxx_hidden_ScopeUuid = nil
}

type ListCephesRequest_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	ScopeUuid *string
}

func (b0 ListCephesRequest_builder) Build() *ListCephesRequest {
	m0 := &ListCephesRequest{}
	b, x := &b0, m0
	_, _ = b, x
	if b.ScopeUuid != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 0, 1)
		x.xxx_hidden_ScopeUuid = b.ScopeUuid
	}
	return m0
}

type ListCephesResponse struct {
	state             protoimpl.MessageState `protogen:"opaque.v1"`
	xxx_hidden_Cephes *[]*Facility_Info      `protobuf:"bytes,1,rep,name=cephes"`
	unknownFields     protoimpl.UnknownFields
	sizeCache         protoimpl.SizeCache
}

func (x *ListCephesResponse) Reset() {
	*x = ListCephesResponse{}
	mi := &file_api_nexus_v1_nexus_proto_msgTypes[13]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListCephesResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListCephesResponse) ProtoMessage() {}

func (x *ListCephesResponse) ProtoReflect() protoreflect.Message {
	mi := &file_api_nexus_v1_nexus_proto_msgTypes[13]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *ListCephesResponse) GetCephes() []*Facility_Info {
	if x != nil {
		if x.xxx_hidden_Cephes != nil {
			return *x.xxx_hidden_Cephes
		}
	}
	return nil
}

func (x *ListCephesResponse) SetCephes(v []*Facility_Info) {
	x.xxx_hidden_Cephes = &v
}

type ListCephesResponse_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	Cephes []*Facility_Info
}

func (b0 ListCephesResponse_builder) Build() *ListCephesResponse {
	m0 := &ListCephesResponse{}
	b, x := &b0, m0
	_, _ = b, x
	x.xxx_hidden_Cephes = &b.Cephes
	return m0
}

type CreateCephRequest struct {
	state                  protoimpl.MessageState `protogen:"opaque.v1"`
	xxx_hidden_ScopeUuid   *string                `protobuf:"bytes,1,opt,name=scope_uuid,json=scopeUuid"`
	xxx_hidden_MachineId   *string                `protobuf:"bytes,2,opt,name=machine_id,json=machineId"`
	xxx_hidden_PrefixName  *string                `protobuf:"bytes,3,opt,name=prefix_name,json=prefixName"`
	xxx_hidden_OsdDevices  []string               `protobuf:"bytes,11,rep,name=osd_devices,json=osdDevices"`
	xxx_hidden_Development bool                   `protobuf:"varint,21,opt,name=development"`
	XXX_raceDetectHookData protoimpl.RaceDetectHookData
	XXX_presence           [1]uint32
	unknownFields          protoimpl.UnknownFields
	sizeCache              protoimpl.SizeCache
}

func (x *CreateCephRequest) Reset() {
	*x = CreateCephRequest{}
	mi := &file_api_nexus_v1_nexus_proto_msgTypes[14]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CreateCephRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateCephRequest) ProtoMessage() {}

func (x *CreateCephRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_nexus_v1_nexus_proto_msgTypes[14]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *CreateCephRequest) GetScopeUuid() string {
	if x != nil {
		if x.xxx_hidden_ScopeUuid != nil {
			return *x.xxx_hidden_ScopeUuid
		}
		return ""
	}
	return ""
}

func (x *CreateCephRequest) GetMachineId() string {
	if x != nil {
		if x.xxx_hidden_MachineId != nil {
			return *x.xxx_hidden_MachineId
		}
		return ""
	}
	return ""
}

func (x *CreateCephRequest) GetPrefixName() string {
	if x != nil {
		if x.xxx_hidden_PrefixName != nil {
			return *x.xxx_hidden_PrefixName
		}
		return ""
	}
	return ""
}

func (x *CreateCephRequest) GetOsdDevices() []string {
	if x != nil {
		return x.xxx_hidden_OsdDevices
	}
	return nil
}

func (x *CreateCephRequest) GetDevelopment() bool {
	if x != nil {
		return x.xxx_hidden_Development
	}
	return false
}

func (x *CreateCephRequest) SetScopeUuid(v string) {
	x.xxx_hidden_ScopeUuid = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 0, 5)
}

func (x *CreateCephRequest) SetMachineId(v string) {
	x.xxx_hidden_MachineId = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 1, 5)
}

func (x *CreateCephRequest) SetPrefixName(v string) {
	x.xxx_hidden_PrefixName = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 2, 5)
}

func (x *CreateCephRequest) SetOsdDevices(v []string) {
	x.xxx_hidden_OsdDevices = v
}

func (x *CreateCephRequest) SetDevelopment(v bool) {
	x.xxx_hidden_Development = v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 4, 5)
}

func (x *CreateCephRequest) HasScopeUuid() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 0)
}

func (x *CreateCephRequest) HasMachineId() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 1)
}

func (x *CreateCephRequest) HasPrefixName() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 2)
}

func (x *CreateCephRequest) HasDevelopment() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 4)
}

func (x *CreateCephRequest) ClearScopeUuid() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 0)
	x.xxx_hidden_ScopeUuid = nil
}

func (x *CreateCephRequest) ClearMachineId() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 1)
	x.xxx_hidden_MachineId = nil
}

func (x *CreateCephRequest) ClearPrefixName() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 2)
	x.xxx_hidden_PrefixName = nil
}

func (x *CreateCephRequest) ClearDevelopment() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 4)
	x.xxx_hidden_Development = false
}

type CreateCephRequest_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	ScopeUuid   *string
	MachineId   *string
	PrefixName  *string
	OsdDevices  []string
	Development *bool
}

func (b0 CreateCephRequest_builder) Build() *CreateCephRequest {
	m0 := &CreateCephRequest{}
	b, x := &b0, m0
	_, _ = b, x
	if b.ScopeUuid != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 0, 5)
		x.xxx_hidden_ScopeUuid = b.ScopeUuid
	}
	if b.MachineId != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 1, 5)
		x.xxx_hidden_MachineId = b.MachineId
	}
	if b.PrefixName != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 2, 5)
		x.xxx_hidden_PrefixName = b.PrefixName
	}
	x.xxx_hidden_OsdDevices = b.OsdDevices
	if b.Development != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 4, 5)
		x.xxx_hidden_Development = *b.Development
	}
	return m0
}

type AddCephUnitsRequest struct {
	state                   protoimpl.MessageState `protogen:"opaque.v1"`
	xxx_hidden_ScopeUuid    *string                `protobuf:"bytes,1,opt,name=scope_uuid,json=scopeUuid"`
	xxx_hidden_FacilityName *string                `protobuf:"bytes,2,opt,name=facility_name,json=facilityName"`
	xxx_hidden_Number       int32                  `protobuf:"varint,3,opt,name=number"`
	xxx_hidden_MachineIds   []string               `protobuf:"bytes,4,rep,name=machine_ids,json=machineIds"`
	XXX_raceDetectHookData  protoimpl.RaceDetectHookData
	XXX_presence            [1]uint32
	unknownFields           protoimpl.UnknownFields
	sizeCache               protoimpl.SizeCache
}

func (x *AddCephUnitsRequest) Reset() {
	*x = AddCephUnitsRequest{}
	mi := &file_api_nexus_v1_nexus_proto_msgTypes[15]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *AddCephUnitsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddCephUnitsRequest) ProtoMessage() {}

func (x *AddCephUnitsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_nexus_v1_nexus_proto_msgTypes[15]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *AddCephUnitsRequest) GetScopeUuid() string {
	if x != nil {
		if x.xxx_hidden_ScopeUuid != nil {
			return *x.xxx_hidden_ScopeUuid
		}
		return ""
	}
	return ""
}

func (x *AddCephUnitsRequest) GetFacilityName() string {
	if x != nil {
		if x.xxx_hidden_FacilityName != nil {
			return *x.xxx_hidden_FacilityName
		}
		return ""
	}
	return ""
}

func (x *AddCephUnitsRequest) GetNumber() int32 {
	if x != nil {
		return x.xxx_hidden_Number
	}
	return 0
}

func (x *AddCephUnitsRequest) GetMachineIds() []string {
	if x != nil {
		return x.xxx_hidden_MachineIds
	}
	return nil
}

func (x *AddCephUnitsRequest) SetScopeUuid(v string) {
	x.xxx_hidden_ScopeUuid = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 0, 4)
}

func (x *AddCephUnitsRequest) SetFacilityName(v string) {
	x.xxx_hidden_FacilityName = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 1, 4)
}

func (x *AddCephUnitsRequest) SetNumber(v int32) {
	x.xxx_hidden_Number = v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 2, 4)
}

func (x *AddCephUnitsRequest) SetMachineIds(v []string) {
	x.xxx_hidden_MachineIds = v
}

func (x *AddCephUnitsRequest) HasScopeUuid() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 0)
}

func (x *AddCephUnitsRequest) HasFacilityName() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 1)
}

func (x *AddCephUnitsRequest) HasNumber() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 2)
}

func (x *AddCephUnitsRequest) ClearScopeUuid() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 0)
	x.xxx_hidden_ScopeUuid = nil
}

func (x *AddCephUnitsRequest) ClearFacilityName() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 1)
	x.xxx_hidden_FacilityName = nil
}

func (x *AddCephUnitsRequest) ClearNumber() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 2)
	x.xxx_hidden_Number = 0
}

type AddCephUnitsRequest_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	ScopeUuid    *string
	FacilityName *string
	Number       *int32
	MachineIds   []string
}

func (b0 AddCephUnitsRequest_builder) Build() *AddCephUnitsRequest {
	m0 := &AddCephUnitsRequest{}
	b, x := &b0, m0
	_, _ = b, x
	if b.ScopeUuid != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 0, 4)
		x.xxx_hidden_ScopeUuid = b.ScopeUuid
	}
	if b.FacilityName != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 1, 4)
		x.xxx_hidden_FacilityName = b.FacilityName
	}
	if b.Number != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 2, 4)
		x.xxx_hidden_Number = *b.Number
	}
	x.xxx_hidden_MachineIds = b.MachineIds
	return m0
}

type ListKubernetesesRequest struct {
	state                  protoimpl.MessageState `protogen:"opaque.v1"`
	xxx_hidden_ScopeUuid   *string                `protobuf:"bytes,1,opt,name=scope_uuid,json=scopeUuid"`
	XXX_raceDetectHookData protoimpl.RaceDetectHookData
	XXX_presence           [1]uint32
	unknownFields          protoimpl.UnknownFields
	sizeCache              protoimpl.SizeCache
}

func (x *ListKubernetesesRequest) Reset() {
	*x = ListKubernetesesRequest{}
	mi := &file_api_nexus_v1_nexus_proto_msgTypes[16]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListKubernetesesRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListKubernetesesRequest) ProtoMessage() {}

func (x *ListKubernetesesRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_nexus_v1_nexus_proto_msgTypes[16]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *ListKubernetesesRequest) GetScopeUuid() string {
	if x != nil {
		if x.xxx_hidden_ScopeUuid != nil {
			return *x.xxx_hidden_ScopeUuid
		}
		return ""
	}
	return ""
}

func (x *ListKubernetesesRequest) SetScopeUuid(v string) {
	x.xxx_hidden_ScopeUuid = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 0, 1)
}

func (x *ListKubernetesesRequest) HasScopeUuid() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 0)
}

func (x *ListKubernetesesRequest) ClearScopeUuid() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 0)
	x.xxx_hidden_ScopeUuid = nil
}

type ListKubernetesesRequest_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	ScopeUuid *string
}

func (b0 ListKubernetesesRequest_builder) Build() *ListKubernetesesRequest {
	m0 := &ListKubernetesesRequest{}
	b, x := &b0, m0
	_, _ = b, x
	if b.ScopeUuid != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 0, 1)
		x.xxx_hidden_ScopeUuid = b.ScopeUuid
	}
	return m0
}

type ListKubernetesesResponse struct {
	state                   protoimpl.MessageState `protogen:"opaque.v1"`
	xxx_hidden_Kuberneteses *[]*Facility_Info      `protobuf:"bytes,1,rep,name=kuberneteses"`
	unknownFields           protoimpl.UnknownFields
	sizeCache               protoimpl.SizeCache
}

func (x *ListKubernetesesResponse) Reset() {
	*x = ListKubernetesesResponse{}
	mi := &file_api_nexus_v1_nexus_proto_msgTypes[17]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListKubernetesesResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListKubernetesesResponse) ProtoMessage() {}

func (x *ListKubernetesesResponse) ProtoReflect() protoreflect.Message {
	mi := &file_api_nexus_v1_nexus_proto_msgTypes[17]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *ListKubernetesesResponse) GetKuberneteses() []*Facility_Info {
	if x != nil {
		if x.xxx_hidden_Kuberneteses != nil {
			return *x.xxx_hidden_Kuberneteses
		}
	}
	return nil
}

func (x *ListKubernetesesResponse) SetKuberneteses(v []*Facility_Info) {
	x.xxx_hidden_Kuberneteses = &v
}

type ListKubernetesesResponse_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	Kuberneteses []*Facility_Info
}

func (b0 ListKubernetesesResponse_builder) Build() *ListKubernetesesResponse {
	m0 := &ListKubernetesesResponse{}
	b, x := &b0, m0
	_, _ = b, x
	x.xxx_hidden_Kuberneteses = &b.Kuberneteses
	return m0
}

type CreateKubernetesRequest struct {
	state                  protoimpl.MessageState `protogen:"opaque.v1"`
	xxx_hidden_ScopeUuid   *string                `protobuf:"bytes,1,opt,name=scope_uuid,json=scopeUuid"`
	xxx_hidden_MachineId   *string                `protobuf:"bytes,2,opt,name=machine_id,json=machineId"`
	xxx_hidden_PrefixName  *string                `protobuf:"bytes,3,opt,name=prefix_name,json=prefixName"`
	xxx_hidden_VirtualIps  []string               `protobuf:"bytes,11,rep,name=virtual_ips,json=virtualIps"`
	xxx_hidden_CalicoCidr  *string                `protobuf:"bytes,13,opt,name=calico_cidr,json=calicoCidr"`
	XXX_raceDetectHookData protoimpl.RaceDetectHookData
	XXX_presence           [1]uint32
	unknownFields          protoimpl.UnknownFields
	sizeCache              protoimpl.SizeCache
}

func (x *CreateKubernetesRequest) Reset() {
	*x = CreateKubernetesRequest{}
	mi := &file_api_nexus_v1_nexus_proto_msgTypes[18]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CreateKubernetesRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateKubernetesRequest) ProtoMessage() {}

func (x *CreateKubernetesRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_nexus_v1_nexus_proto_msgTypes[18]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *CreateKubernetesRequest) GetScopeUuid() string {
	if x != nil {
		if x.xxx_hidden_ScopeUuid != nil {
			return *x.xxx_hidden_ScopeUuid
		}
		return ""
	}
	return ""
}

func (x *CreateKubernetesRequest) GetMachineId() string {
	if x != nil {
		if x.xxx_hidden_MachineId != nil {
			return *x.xxx_hidden_MachineId
		}
		return ""
	}
	return ""
}

func (x *CreateKubernetesRequest) GetPrefixName() string {
	if x != nil {
		if x.xxx_hidden_PrefixName != nil {
			return *x.xxx_hidden_PrefixName
		}
		return ""
	}
	return ""
}

func (x *CreateKubernetesRequest) GetVirtualIps() []string {
	if x != nil {
		return x.xxx_hidden_VirtualIps
	}
	return nil
}

func (x *CreateKubernetesRequest) GetCalicoCidr() string {
	if x != nil {
		if x.xxx_hidden_CalicoCidr != nil {
			return *x.xxx_hidden_CalicoCidr
		}
		return ""
	}
	return ""
}

func (x *CreateKubernetesRequest) SetScopeUuid(v string) {
	x.xxx_hidden_ScopeUuid = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 0, 5)
}

func (x *CreateKubernetesRequest) SetMachineId(v string) {
	x.xxx_hidden_MachineId = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 1, 5)
}

func (x *CreateKubernetesRequest) SetPrefixName(v string) {
	x.xxx_hidden_PrefixName = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 2, 5)
}

func (x *CreateKubernetesRequest) SetVirtualIps(v []string) {
	x.xxx_hidden_VirtualIps = v
}

func (x *CreateKubernetesRequest) SetCalicoCidr(v string) {
	x.xxx_hidden_CalicoCidr = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 4, 5)
}

func (x *CreateKubernetesRequest) HasScopeUuid() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 0)
}

func (x *CreateKubernetesRequest) HasMachineId() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 1)
}

func (x *CreateKubernetesRequest) HasPrefixName() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 2)
}

func (x *CreateKubernetesRequest) HasCalicoCidr() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 4)
}

func (x *CreateKubernetesRequest) ClearScopeUuid() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 0)
	x.xxx_hidden_ScopeUuid = nil
}

func (x *CreateKubernetesRequest) ClearMachineId() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 1)
	x.xxx_hidden_MachineId = nil
}

func (x *CreateKubernetesRequest) ClearPrefixName() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 2)
	x.xxx_hidden_PrefixName = nil
}

func (x *CreateKubernetesRequest) ClearCalicoCidr() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 4)
	x.xxx_hidden_CalicoCidr = nil
}

type CreateKubernetesRequest_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	ScopeUuid  *string
	MachineId  *string
	PrefixName *string
	VirtualIps []string
	CalicoCidr *string
}

func (b0 CreateKubernetesRequest_builder) Build() *CreateKubernetesRequest {
	m0 := &CreateKubernetesRequest{}
	b, x := &b0, m0
	_, _ = b, x
	if b.ScopeUuid != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 0, 5)
		x.xxx_hidden_ScopeUuid = b.ScopeUuid
	}
	if b.MachineId != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 1, 5)
		x.xxx_hidden_MachineId = b.MachineId
	}
	if b.PrefixName != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 2, 5)
		x.xxx_hidden_PrefixName = b.PrefixName
	}
	x.xxx_hidden_VirtualIps = b.VirtualIps
	if b.CalicoCidr != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 4, 5)
		x.xxx_hidden_CalicoCidr = b.CalicoCidr
	}
	return m0
}

type AddKubernetesUnitsRequest struct {
	state                   protoimpl.MessageState `protogen:"opaque.v1"`
	xxx_hidden_ScopeUuid    *string                `protobuf:"bytes,1,opt,name=scope_uuid,json=scopeUuid"`
	xxx_hidden_FacilityName *string                `protobuf:"bytes,2,opt,name=facility_name,json=facilityName"`
	xxx_hidden_Number       int32                  `protobuf:"varint,3,opt,name=number"`
	xxx_hidden_MachineIds   []string               `protobuf:"bytes,4,rep,name=machine_ids,json=machineIds"`
	xxx_hidden_Force        bool                   `protobuf:"varint,11,opt,name=force"`
	XXX_raceDetectHookData  protoimpl.RaceDetectHookData
	XXX_presence            [1]uint32
	unknownFields           protoimpl.UnknownFields
	sizeCache               protoimpl.SizeCache
}

func (x *AddKubernetesUnitsRequest) Reset() {
	*x = AddKubernetesUnitsRequest{}
	mi := &file_api_nexus_v1_nexus_proto_msgTypes[19]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *AddKubernetesUnitsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddKubernetesUnitsRequest) ProtoMessage() {}

func (x *AddKubernetesUnitsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_nexus_v1_nexus_proto_msgTypes[19]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *AddKubernetesUnitsRequest) GetScopeUuid() string {
	if x != nil {
		if x.xxx_hidden_ScopeUuid != nil {
			return *x.xxx_hidden_ScopeUuid
		}
		return ""
	}
	return ""
}

func (x *AddKubernetesUnitsRequest) GetFacilityName() string {
	if x != nil {
		if x.xxx_hidden_FacilityName != nil {
			return *x.xxx_hidden_FacilityName
		}
		return ""
	}
	return ""
}

func (x *AddKubernetesUnitsRequest) GetNumber() int32 {
	if x != nil {
		return x.xxx_hidden_Number
	}
	return 0
}

func (x *AddKubernetesUnitsRequest) GetMachineIds() []string {
	if x != nil {
		return x.xxx_hidden_MachineIds
	}
	return nil
}

func (x *AddKubernetesUnitsRequest) GetForce() bool {
	if x != nil {
		return x.xxx_hidden_Force
	}
	return false
}

func (x *AddKubernetesUnitsRequest) SetScopeUuid(v string) {
	x.xxx_hidden_ScopeUuid = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 0, 5)
}

func (x *AddKubernetesUnitsRequest) SetFacilityName(v string) {
	x.xxx_hidden_FacilityName = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 1, 5)
}

func (x *AddKubernetesUnitsRequest) SetNumber(v int32) {
	x.xxx_hidden_Number = v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 2, 5)
}

func (x *AddKubernetesUnitsRequest) SetMachineIds(v []string) {
	x.xxx_hidden_MachineIds = v
}

func (x *AddKubernetesUnitsRequest) SetForce(v bool) {
	x.xxx_hidden_Force = v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 4, 5)
}

func (x *AddKubernetesUnitsRequest) HasScopeUuid() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 0)
}

func (x *AddKubernetesUnitsRequest) HasFacilityName() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 1)
}

func (x *AddKubernetesUnitsRequest) HasNumber() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 2)
}

func (x *AddKubernetesUnitsRequest) HasForce() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 4)
}

func (x *AddKubernetesUnitsRequest) ClearScopeUuid() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 0)
	x.xxx_hidden_ScopeUuid = nil
}

func (x *AddKubernetesUnitsRequest) ClearFacilityName() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 1)
	x.xxx_hidden_FacilityName = nil
}

func (x *AddKubernetesUnitsRequest) ClearNumber() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 2)
	x.xxx_hidden_Number = 0
}

func (x *AddKubernetesUnitsRequest) ClearForce() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 4)
	x.xxx_hidden_Force = false
}

type AddKubernetesUnitsRequest_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	ScopeUuid    *string
	FacilityName *string
	Number       *int32
	MachineIds   []string
	Force        *bool
}

func (b0 AddKubernetesUnitsRequest_builder) Build() *AddKubernetesUnitsRequest {
	m0 := &AddKubernetesUnitsRequest{}
	b, x := &b0, m0
	_, _ = b, x
	if b.ScopeUuid != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 0, 5)
		x.xxx_hidden_ScopeUuid = b.ScopeUuid
	}
	if b.FacilityName != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 1, 5)
		x.xxx_hidden_FacilityName = b.FacilityName
	}
	if b.Number != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 2, 5)
		x.xxx_hidden_Number = *b.Number
	}
	x.xxx_hidden_MachineIds = b.MachineIds
	if b.Force != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 4, 5)
		x.xxx_hidden_Force = *b.Force
	}
	return m0
}

type GetConfigurationRequest struct {
	state         protoimpl.MessageState `protogen:"opaque.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetConfigurationRequest) Reset() {
	*x = GetConfigurationRequest{}
	mi := &file_api_nexus_v1_nexus_proto_msgTypes[20]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetConfigurationRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetConfigurationRequest) ProtoMessage() {}

func (x *GetConfigurationRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_nexus_v1_nexus_proto_msgTypes[20]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

type GetConfigurationRequest_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

}

func (b0 GetConfigurationRequest_builder) Build() *GetConfigurationRequest {
	m0 := &GetConfigurationRequest{}
	b, x := &b0, m0
	_, _ = b, x
	return m0
}

type UpdateNTPServerRequest struct {
	state                protoimpl.MessageState `protogen:"opaque.v1"`
	xxx_hidden_Addresses []string               `protobuf:"bytes,1,rep,name=addresses"`
	unknownFields        protoimpl.UnknownFields
	sizeCache            protoimpl.SizeCache
}

func (x *UpdateNTPServerRequest) Reset() {
	*x = UpdateNTPServerRequest{}
	mi := &file_api_nexus_v1_nexus_proto_msgTypes[21]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UpdateNTPServerRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateNTPServerRequest) ProtoMessage() {}

func (x *UpdateNTPServerRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_nexus_v1_nexus_proto_msgTypes[21]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *UpdateNTPServerRequest) GetAddresses() []string {
	if x != nil {
		return x.xxx_hidden_Addresses
	}
	return nil
}

func (x *UpdateNTPServerRequest) SetAddresses(v []string) {
	x.xxx_hidden_Addresses = v
}

type UpdateNTPServerRequest_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	Addresses []string
}

func (b0 UpdateNTPServerRequest_builder) Build() *UpdateNTPServerRequest {
	m0 := &UpdateNTPServerRequest{}
	b, x := &b0, m0
	_, _ = b, x
	x.xxx_hidden_Addresses = b.Addresses
	return m0
}

type UpdatePackageRepositoryRequest struct {
	state                  protoimpl.MessageState `protogen:"opaque.v1"`
	xxx_hidden_Id          int64                  `protobuf:"varint,1,opt,name=id"`
	xxx_hidden_Url         *string                `protobuf:"bytes,2,opt,name=url"`
	xxx_hidden_SkipJuju    bool                   `protobuf:"varint,3,opt,name=skip_juju,json=skipJuju"`
	XXX_raceDetectHookData protoimpl.RaceDetectHookData
	XXX_presence           [1]uint32
	unknownFields          protoimpl.UnknownFields
	sizeCache              protoimpl.SizeCache
}

func (x *UpdatePackageRepositoryRequest) Reset() {
	*x = UpdatePackageRepositoryRequest{}
	mi := &file_api_nexus_v1_nexus_proto_msgTypes[22]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UpdatePackageRepositoryRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdatePackageRepositoryRequest) ProtoMessage() {}

func (x *UpdatePackageRepositoryRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_nexus_v1_nexus_proto_msgTypes[22]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *UpdatePackageRepositoryRequest) GetId() int64 {
	if x != nil {
		return x.xxx_hidden_Id
	}
	return 0
}

func (x *UpdatePackageRepositoryRequest) GetUrl() string {
	if x != nil {
		if x.xxx_hidden_Url != nil {
			return *x.xxx_hidden_Url
		}
		return ""
	}
	return ""
}

func (x *UpdatePackageRepositoryRequest) GetSkipJuju() bool {
	if x != nil {
		return x.xxx_hidden_SkipJuju
	}
	return false
}

func (x *UpdatePackageRepositoryRequest) SetId(v int64) {
	x.xxx_hidden_Id = v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 0, 3)
}

func (x *UpdatePackageRepositoryRequest) SetUrl(v string) {
	x.xxx_hidden_Url = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 1, 3)
}

func (x *UpdatePackageRepositoryRequest) SetSkipJuju(v bool) {
	x.xxx_hidden_SkipJuju = v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 2, 3)
}

func (x *UpdatePackageRepositoryRequest) HasId() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 0)
}

func (x *UpdatePackageRepositoryRequest) HasUrl() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 1)
}

func (x *UpdatePackageRepositoryRequest) HasSkipJuju() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 2)
}

func (x *UpdatePackageRepositoryRequest) ClearId() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 0)
	x.xxx_hidden_Id = 0
}

func (x *UpdatePackageRepositoryRequest) ClearUrl() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 1)
	x.xxx_hidden_Url = nil
}

func (x *UpdatePackageRepositoryRequest) ClearSkipJuju() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 2)
	x.xxx_hidden_SkipJuju = false
}

type UpdatePackageRepositoryRequest_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	Id       *int64
	Url      *string
	SkipJuju *bool
}

func (b0 UpdatePackageRepositoryRequest_builder) Build() *UpdatePackageRepositoryRequest {
	m0 := &UpdatePackageRepositoryRequest{}
	b, x := &b0, m0
	_, _ = b, x
	if b.Id != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 0, 3)
		x.xxx_hidden_Id = *b.Id
	}
	if b.Url != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 1, 3)
		x.xxx_hidden_Url = b.Url
	}
	if b.SkipJuju != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 2, 3)
		x.xxx_hidden_SkipJuju = *b.SkipJuju
	}
	return m0
}

type CreateBootImageRequest struct {
	state                    protoimpl.MessageState `protogen:"opaque.v1"`
	xxx_hidden_DistroSeries  *string                `protobuf:"bytes,1,opt,name=distro_series,json=distroSeries"`
	xxx_hidden_Architectures []string               `protobuf:"bytes,2,rep,name=architectures"`
	XXX_raceDetectHookData   protoimpl.RaceDetectHookData
	XXX_presence             [1]uint32
	unknownFields            protoimpl.UnknownFields
	sizeCache                protoimpl.SizeCache
}

func (x *CreateBootImageRequest) Reset() {
	*x = CreateBootImageRequest{}
	mi := &file_api_nexus_v1_nexus_proto_msgTypes[23]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CreateBootImageRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateBootImageRequest) ProtoMessage() {}

func (x *CreateBootImageRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_nexus_v1_nexus_proto_msgTypes[23]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *CreateBootImageRequest) GetDistroSeries() string {
	if x != nil {
		if x.xxx_hidden_DistroSeries != nil {
			return *x.xxx_hidden_DistroSeries
		}
		return ""
	}
	return ""
}

func (x *CreateBootImageRequest) GetArchitectures() []string {
	if x != nil {
		return x.xxx_hidden_Architectures
	}
	return nil
}

func (x *CreateBootImageRequest) SetDistroSeries(v string) {
	x.xxx_hidden_DistroSeries = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 0, 2)
}

func (x *CreateBootImageRequest) SetArchitectures(v []string) {
	x.xxx_hidden_Architectures = v
}

func (x *CreateBootImageRequest) HasDistroSeries() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 0)
}

func (x *CreateBootImageRequest) ClearDistroSeries() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 0)
	x.xxx_hidden_DistroSeries = nil
}

type CreateBootImageRequest_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	DistroSeries  *string
	Architectures []string
}

func (b0 CreateBootImageRequest_builder) Build() *CreateBootImageRequest {
	m0 := &CreateBootImageRequest{}
	b, x := &b0, m0
	_, _ = b, x
	if b.DistroSeries != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 0, 2)
		x.xxx_hidden_DistroSeries = b.DistroSeries
	}
	x.xxx_hidden_Architectures = b.Architectures
	return m0
}

type SetDefaultBootImageRequest struct {
	state                   protoimpl.MessageState `protogen:"opaque.v1"`
	xxx_hidden_DistroSeries *string                `protobuf:"bytes,1,opt,name=distro_series,json=distroSeries"`
	XXX_raceDetectHookData  protoimpl.RaceDetectHookData
	XXX_presence            [1]uint32
	unknownFields           protoimpl.UnknownFields
	sizeCache               protoimpl.SizeCache
}

func (x *SetDefaultBootImageRequest) Reset() {
	*x = SetDefaultBootImageRequest{}
	mi := &file_api_nexus_v1_nexus_proto_msgTypes[24]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SetDefaultBootImageRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SetDefaultBootImageRequest) ProtoMessage() {}

func (x *SetDefaultBootImageRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_nexus_v1_nexus_proto_msgTypes[24]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *SetDefaultBootImageRequest) GetDistroSeries() string {
	if x != nil {
		if x.xxx_hidden_DistroSeries != nil {
			return *x.xxx_hidden_DistroSeries
		}
		return ""
	}
	return ""
}

func (x *SetDefaultBootImageRequest) SetDistroSeries(v string) {
	x.xxx_hidden_DistroSeries = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 0, 1)
}

func (x *SetDefaultBootImageRequest) HasDistroSeries() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 0)
}

func (x *SetDefaultBootImageRequest) ClearDistroSeries() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 0)
	x.xxx_hidden_DistroSeries = nil
}

type SetDefaultBootImageRequest_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	DistroSeries *string
}

func (b0 SetDefaultBootImageRequest_builder) Build() *SetDefaultBootImageRequest {
	m0 := &SetDefaultBootImageRequest{}
	b, x := &b0, m0
	_, _ = b, x
	if b.DistroSeries != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 0, 1)
		x.xxx_hidden_DistroSeries = b.DistroSeries
	}
	return m0
}

type ImportBootImagesRequest struct {
	state         protoimpl.MessageState `protogen:"opaque.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ImportBootImagesRequest) Reset() {
	*x = ImportBootImagesRequest{}
	mi := &file_api_nexus_v1_nexus_proto_msgTypes[25]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ImportBootImagesRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ImportBootImagesRequest) ProtoMessage() {}

func (x *ImportBootImagesRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_nexus_v1_nexus_proto_msgTypes[25]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

type ImportBootImagesRequest_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

}

func (b0 ImportBootImagesRequest_builder) Build() *ImportBootImagesRequest {
	m0 := &ImportBootImagesRequest{}
	b, x := &b0, m0
	_, _ = b, x
	return m0
}

type IsImportingBootImagesRequest struct {
	state         protoimpl.MessageState `protogen:"opaque.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *IsImportingBootImagesRequest) Reset() {
	*x = IsImportingBootImagesRequest{}
	mi := &file_api_nexus_v1_nexus_proto_msgTypes[26]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *IsImportingBootImagesRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*IsImportingBootImagesRequest) ProtoMessage() {}

func (x *IsImportingBootImagesRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_nexus_v1_nexus_proto_msgTypes[26]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

type IsImportingBootImagesRequest_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

}

func (b0 IsImportingBootImagesRequest_builder) Build() *IsImportingBootImagesRequest {
	m0 := &IsImportingBootImagesRequest{}
	b, x := &b0, m0
	_, _ = b, x
	return m0
}

type IsImportingBootImagesResponse struct {
	state                  protoimpl.MessageState `protogen:"opaque.v1"`
	xxx_hidden_Importing   bool                   `protobuf:"varint,1,opt,name=importing"`
	XXX_raceDetectHookData protoimpl.RaceDetectHookData
	XXX_presence           [1]uint32
	unknownFields          protoimpl.UnknownFields
	sizeCache              protoimpl.SizeCache
}

func (x *IsImportingBootImagesResponse) Reset() {
	*x = IsImportingBootImagesResponse{}
	mi := &file_api_nexus_v1_nexus_proto_msgTypes[27]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *IsImportingBootImagesResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*IsImportingBootImagesResponse) ProtoMessage() {}

func (x *IsImportingBootImagesResponse) ProtoReflect() protoreflect.Message {
	mi := &file_api_nexus_v1_nexus_proto_msgTypes[27]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *IsImportingBootImagesResponse) GetImporting() bool {
	if x != nil {
		return x.xxx_hidden_Importing
	}
	return false
}

func (x *IsImportingBootImagesResponse) SetImporting(v bool) {
	x.xxx_hidden_Importing = v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 0, 1)
}

func (x *IsImportingBootImagesResponse) HasImporting() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 0)
}

func (x *IsImportingBootImagesResponse) ClearImporting() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 0)
	x.xxx_hidden_Importing = false
}

type IsImportingBootImagesResponse_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	Importing *bool
}

func (b0 IsImportingBootImagesResponse_builder) Build() *IsImportingBootImagesResponse {
	m0 := &IsImportingBootImagesResponse{}
	b, x := &b0, m0
	_, _ = b, x
	if b.Importing != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 0, 1)
		x.xxx_hidden_Importing = *b.Importing
	}
	return m0
}

type ListBootImageSelectionsRequest struct {
	state         protoimpl.MessageState `protogen:"opaque.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ListBootImageSelectionsRequest) Reset() {
	*x = ListBootImageSelectionsRequest{}
	mi := &file_api_nexus_v1_nexus_proto_msgTypes[28]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListBootImageSelectionsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListBootImageSelectionsRequest) ProtoMessage() {}

func (x *ListBootImageSelectionsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_nexus_v1_nexus_proto_msgTypes[28]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

type ListBootImageSelectionsRequest_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

}

func (b0 ListBootImageSelectionsRequest_builder) Build() *ListBootImageSelectionsRequest {
	m0 := &ListBootImageSelectionsRequest{}
	b, x := &b0, m0
	_, _ = b, x
	return m0
}

type ListBootImageSelectionsResponse struct {
	state                          protoimpl.MessageState               `protogen:"opaque.v1"`
	xxx_hidden_BootImageSelections *[]*Configuration_BootImageSelection `protobuf:"bytes,1,rep,name=boot_image_selections,json=bootImageSelections"`
	unknownFields                  protoimpl.UnknownFields
	sizeCache                      protoimpl.SizeCache
}

func (x *ListBootImageSelectionsResponse) Reset() {
	*x = ListBootImageSelectionsResponse{}
	mi := &file_api_nexus_v1_nexus_proto_msgTypes[29]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListBootImageSelectionsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListBootImageSelectionsResponse) ProtoMessage() {}

func (x *ListBootImageSelectionsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_api_nexus_v1_nexus_proto_msgTypes[29]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *ListBootImageSelectionsResponse) GetBootImageSelections() []*Configuration_BootImageSelection {
	if x != nil {
		if x.xxx_hidden_BootImageSelections != nil {
			return *x.xxx_hidden_BootImageSelections
		}
	}
	return nil
}

func (x *ListBootImageSelectionsResponse) SetBootImageSelections(v []*Configuration_BootImageSelection) {
	x.xxx_hidden_BootImageSelections = &v
}

type ListBootImageSelectionsResponse_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	BootImageSelections []*Configuration_BootImageSelection
}

func (b0 ListBootImageSelectionsResponse_builder) Build() *ListBootImageSelectionsResponse {
	m0 := &ListBootImageSelectionsResponse{}
	b, x := &b0, m0
	_, _ = b, x
	x.xxx_hidden_BootImageSelections = &b.BootImageSelections
	return m0
}

type ListNetworksRequest struct {
	state         protoimpl.MessageState `protogen:"opaque.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ListNetworksRequest) Reset() {
	*x = ListNetworksRequest{}
	mi := &file_api_nexus_v1_nexus_proto_msgTypes[30]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListNetworksRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListNetworksRequest) ProtoMessage() {}

func (x *ListNetworksRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_nexus_v1_nexus_proto_msgTypes[30]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

type ListNetworksRequest_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

}

func (b0 ListNetworksRequest_builder) Build() *ListNetworksRequest {
	m0 := &ListNetworksRequest{}
	b, x := &b0, m0
	_, _ = b, x
	return m0
}

type ListNetworksResponse struct {
	state               protoimpl.MessageState `protogen:"opaque.v1"`
	xxx_hidden_Networks *[]*Network            `protobuf:"bytes,1,rep,name=networks"`
	unknownFields       protoimpl.UnknownFields
	sizeCache           protoimpl.SizeCache
}

func (x *ListNetworksResponse) Reset() {
	*x = ListNetworksResponse{}
	mi := &file_api_nexus_v1_nexus_proto_msgTypes[31]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListNetworksResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListNetworksResponse) ProtoMessage() {}

func (x *ListNetworksResponse) ProtoReflect() protoreflect.Message {
	mi := &file_api_nexus_v1_nexus_proto_msgTypes[31]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *ListNetworksResponse) GetNetworks() []*Network {
	if x != nil {
		if x.xxx_hidden_Networks != nil {
			return *x.xxx_hidden_Networks
		}
	}
	return nil
}

func (x *ListNetworksResponse) SetNetworks(v []*Network) {
	x.xxx_hidden_Networks = &v
}

type ListNetworksResponse_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	Networks []*Network
}

func (b0 ListNetworksResponse_builder) Build() *ListNetworksResponse {
	m0 := &ListNetworksResponse{}
	b, x := &b0, m0
	_, _ = b, x
	x.xxx_hidden_Networks = &b.Networks
	return m0
}

type CreateNetworkRequest struct {
	state                  protoimpl.MessageState `protogen:"opaque.v1"`
	xxx_hidden_Cidr        *string                `protobuf:"bytes,1,opt,name=cidr"`
	xxx_hidden_GatewayIp   *string                `protobuf:"bytes,2,opt,name=gateway_ip,json=gatewayIp"`
	xxx_hidden_DnsServers  []string               `protobuf:"bytes,3,rep,name=dns_servers,json=dnsServers"`
	xxx_hidden_DhcpOn      bool                   `protobuf:"varint,11,opt,name=dhcp_on,json=dhcpOn"`
	XXX_raceDetectHookData protoimpl.RaceDetectHookData
	XXX_presence           [1]uint32
	unknownFields          protoimpl.UnknownFields
	sizeCache              protoimpl.SizeCache
}

func (x *CreateNetworkRequest) Reset() {
	*x = CreateNetworkRequest{}
	mi := &file_api_nexus_v1_nexus_proto_msgTypes[32]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CreateNetworkRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateNetworkRequest) ProtoMessage() {}

func (x *CreateNetworkRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_nexus_v1_nexus_proto_msgTypes[32]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *CreateNetworkRequest) GetCidr() string {
	if x != nil {
		if x.xxx_hidden_Cidr != nil {
			return *x.xxx_hidden_Cidr
		}
		return ""
	}
	return ""
}

func (x *CreateNetworkRequest) GetGatewayIp() string {
	if x != nil {
		if x.xxx_hidden_GatewayIp != nil {
			return *x.xxx_hidden_GatewayIp
		}
		return ""
	}
	return ""
}

func (x *CreateNetworkRequest) GetDnsServers() []string {
	if x != nil {
		return x.xxx_hidden_DnsServers
	}
	return nil
}

func (x *CreateNetworkRequest) GetDhcpOn() bool {
	if x != nil {
		return x.xxx_hidden_DhcpOn
	}
	return false
}

func (x *CreateNetworkRequest) SetCidr(v string) {
	x.xxx_hidden_Cidr = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 0, 4)
}

func (x *CreateNetworkRequest) SetGatewayIp(v string) {
	x.xxx_hidden_GatewayIp = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 1, 4)
}

func (x *CreateNetworkRequest) SetDnsServers(v []string) {
	x.xxx_hidden_DnsServers = v
}

func (x *CreateNetworkRequest) SetDhcpOn(v bool) {
	x.xxx_hidden_DhcpOn = v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 3, 4)
}

func (x *CreateNetworkRequest) HasCidr() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 0)
}

func (x *CreateNetworkRequest) HasGatewayIp() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 1)
}

func (x *CreateNetworkRequest) HasDhcpOn() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 3)
}

func (x *CreateNetworkRequest) ClearCidr() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 0)
	x.xxx_hidden_Cidr = nil
}

func (x *CreateNetworkRequest) ClearGatewayIp() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 1)
	x.xxx_hidden_GatewayIp = nil
}

func (x *CreateNetworkRequest) ClearDhcpOn() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 3)
	x.xxx_hidden_DhcpOn = false
}

type CreateNetworkRequest_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	Cidr       *string
	GatewayIp  *string
	DnsServers []string
	DhcpOn     *bool
}

func (b0 CreateNetworkRequest_builder) Build() *CreateNetworkRequest {
	m0 := &CreateNetworkRequest{}
	b, x := &b0, m0
	_, _ = b, x
	if b.Cidr != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 0, 4)
		x.xxx_hidden_Cidr = b.Cidr
	}
	if b.GatewayIp != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 1, 4)
		x.xxx_hidden_GatewayIp = b.GatewayIp
	}
	x.xxx_hidden_DnsServers = b.DnsServers
	if b.DhcpOn != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 3, 4)
		x.xxx_hidden_DhcpOn = *b.DhcpOn
	}
	return m0
}

type CreateIPRangeRequest struct {
	state                  protoimpl.MessageState `protogen:"opaque.v1"`
	xxx_hidden_SubnetId    int64                  `protobuf:"varint,1,opt,name=subnet_id,json=subnetId"`
	xxx_hidden_StartIp     *string                `protobuf:"bytes,11,opt,name=start_ip,json=startIp"`
	xxx_hidden_EndIp       *string                `protobuf:"bytes,12,opt,name=end_ip,json=endIp"`
	xxx_hidden_Comment     *string                `protobuf:"bytes,13,opt,name=comment"`
	XXX_raceDetectHookData protoimpl.RaceDetectHookData
	XXX_presence           [1]uint32
	unknownFields          protoimpl.UnknownFields
	sizeCache              protoimpl.SizeCache
}

func (x *CreateIPRangeRequest) Reset() {
	*x = CreateIPRangeRequest{}
	mi := &file_api_nexus_v1_nexus_proto_msgTypes[33]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CreateIPRangeRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateIPRangeRequest) ProtoMessage() {}

func (x *CreateIPRangeRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_nexus_v1_nexus_proto_msgTypes[33]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *CreateIPRangeRequest) GetSubnetId() int64 {
	if x != nil {
		return x.xxx_hidden_SubnetId
	}
	return 0
}

func (x *CreateIPRangeRequest) GetStartIp() string {
	if x != nil {
		if x.xxx_hidden_StartIp != nil {
			return *x.xxx_hidden_StartIp
		}
		return ""
	}
	return ""
}

func (x *CreateIPRangeRequest) GetEndIp() string {
	if x != nil {
		if x.xxx_hidden_EndIp != nil {
			return *x.xxx_hidden_EndIp
		}
		return ""
	}
	return ""
}

func (x *CreateIPRangeRequest) GetComment() string {
	if x != nil {
		if x.xxx_hidden_Comment != nil {
			return *x.xxx_hidden_Comment
		}
		return ""
	}
	return ""
}

func (x *CreateIPRangeRequest) SetSubnetId(v int64) {
	x.xxx_hidden_SubnetId = v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 0, 4)
}

func (x *CreateIPRangeRequest) SetStartIp(v string) {
	x.xxx_hidden_StartIp = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 1, 4)
}

func (x *CreateIPRangeRequest) SetEndIp(v string) {
	x.xxx_hidden_EndIp = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 2, 4)
}

func (x *CreateIPRangeRequest) SetComment(v string) {
	x.xxx_hidden_Comment = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 3, 4)
}

func (x *CreateIPRangeRequest) HasSubnetId() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 0)
}

func (x *CreateIPRangeRequest) HasStartIp() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 1)
}

func (x *CreateIPRangeRequest) HasEndIp() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 2)
}

func (x *CreateIPRangeRequest) HasComment() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 3)
}

func (x *CreateIPRangeRequest) ClearSubnetId() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 0)
	x.xxx_hidden_SubnetId = 0
}

func (x *CreateIPRangeRequest) ClearStartIp() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 1)
	x.xxx_hidden_StartIp = nil
}

func (x *CreateIPRangeRequest) ClearEndIp() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 2)
	x.xxx_hidden_EndIp = nil
}

func (x *CreateIPRangeRequest) ClearComment() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 3)
	x.xxx_hidden_Comment = nil
}

type CreateIPRangeRequest_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	SubnetId *int64
	StartIp  *string
	EndIp    *string
	Comment  *string
}

func (b0 CreateIPRangeRequest_builder) Build() *CreateIPRangeRequest {
	m0 := &CreateIPRangeRequest{}
	b, x := &b0, m0
	_, _ = b, x
	if b.SubnetId != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 0, 4)
		x.xxx_hidden_SubnetId = *b.SubnetId
	}
	if b.StartIp != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 1, 4)
		x.xxx_hidden_StartIp = b.StartIp
	}
	if b.EndIp != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 2, 4)
		x.xxx_hidden_EndIp = b.EndIp
	}
	if b.Comment != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 3, 4)
		x.xxx_hidden_Comment = b.Comment
	}
	return m0
}

type DeleteNetworkRequest struct {
	state                  protoimpl.MessageState `protogen:"opaque.v1"`
	xxx_hidden_Id          int64                  `protobuf:"varint,1,opt,name=id"`
	XXX_raceDetectHookData protoimpl.RaceDetectHookData
	XXX_presence           [1]uint32
	unknownFields          protoimpl.UnknownFields
	sizeCache              protoimpl.SizeCache
}

func (x *DeleteNetworkRequest) Reset() {
	*x = DeleteNetworkRequest{}
	mi := &file_api_nexus_v1_nexus_proto_msgTypes[34]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DeleteNetworkRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteNetworkRequest) ProtoMessage() {}

func (x *DeleteNetworkRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_nexus_v1_nexus_proto_msgTypes[34]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *DeleteNetworkRequest) GetId() int64 {
	if x != nil {
		return x.xxx_hidden_Id
	}
	return 0
}

func (x *DeleteNetworkRequest) SetId(v int64) {
	x.xxx_hidden_Id = v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 0, 1)
}

func (x *DeleteNetworkRequest) HasId() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 0)
}

func (x *DeleteNetworkRequest) ClearId() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 0)
	x.xxx_hidden_Id = 0
}

type DeleteNetworkRequest_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	Id *int64
}

func (b0 DeleteNetworkRequest_builder) Build() *DeleteNetworkRequest {
	m0 := &DeleteNetworkRequest{}
	b, x := &b0, m0
	_, _ = b, x
	if b.Id != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 0, 1)
		x.xxx_hidden_Id = *b.Id
	}
	return m0
}

type DeleteIPRangeRequest struct {
	state                  protoimpl.MessageState `protogen:"opaque.v1"`
	xxx_hidden_Id          int64                  `protobuf:"varint,1,opt,name=id"`
	XXX_raceDetectHookData protoimpl.RaceDetectHookData
	XXX_presence           [1]uint32
	unknownFields          protoimpl.UnknownFields
	sizeCache              protoimpl.SizeCache
}

func (x *DeleteIPRangeRequest) Reset() {
	*x = DeleteIPRangeRequest{}
	mi := &file_api_nexus_v1_nexus_proto_msgTypes[35]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DeleteIPRangeRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteIPRangeRequest) ProtoMessage() {}

func (x *DeleteIPRangeRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_nexus_v1_nexus_proto_msgTypes[35]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *DeleteIPRangeRequest) GetId() int64 {
	if x != nil {
		return x.xxx_hidden_Id
	}
	return 0
}

func (x *DeleteIPRangeRequest) SetId(v int64) {
	x.xxx_hidden_Id = v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 0, 1)
}

func (x *DeleteIPRangeRequest) HasId() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 0)
}

func (x *DeleteIPRangeRequest) ClearId() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 0)
	x.xxx_hidden_Id = 0
}

type DeleteIPRangeRequest_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	Id *int64
}

func (b0 DeleteIPRangeRequest_builder) Build() *DeleteIPRangeRequest {
	m0 := &DeleteIPRangeRequest{}
	b, x := &b0, m0
	_, _ = b, x
	if b.Id != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 0, 1)
		x.xxx_hidden_Id = *b.Id
	}
	return m0
}

type UpdateFabricRequest struct {
	state                  protoimpl.MessageState `protogen:"opaque.v1"`
	xxx_hidden_Id          int64                  `protobuf:"varint,1,opt,name=id"`
	xxx_hidden_Name        *string                `protobuf:"bytes,11,opt,name=name"`
	XXX_raceDetectHookData protoimpl.RaceDetectHookData
	XXX_presence           [1]uint32
	unknownFields          protoimpl.UnknownFields
	sizeCache              protoimpl.SizeCache
}

func (x *UpdateFabricRequest) Reset() {
	*x = UpdateFabricRequest{}
	mi := &file_api_nexus_v1_nexus_proto_msgTypes[36]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UpdateFabricRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateFabricRequest) ProtoMessage() {}

func (x *UpdateFabricRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_nexus_v1_nexus_proto_msgTypes[36]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *UpdateFabricRequest) GetId() int64 {
	if x != nil {
		return x.xxx_hidden_Id
	}
	return 0
}

func (x *UpdateFabricRequest) GetName() string {
	if x != nil {
		if x.xxx_hidden_Name != nil {
			return *x.xxx_hidden_Name
		}
		return ""
	}
	return ""
}

func (x *UpdateFabricRequest) SetId(v int64) {
	x.xxx_hidden_Id = v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 0, 2)
}

func (x *UpdateFabricRequest) SetName(v string) {
	x.xxx_hidden_Name = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 1, 2)
}

func (x *UpdateFabricRequest) HasId() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 0)
}

func (x *UpdateFabricRequest) HasName() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 1)
}

func (x *UpdateFabricRequest) ClearId() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 0)
	x.xxx_hidden_Id = 0
}

func (x *UpdateFabricRequest) ClearName() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 1)
	x.xxx_hidden_Name = nil
}

type UpdateFabricRequest_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	Id   *int64
	Name *string
}

func (b0 UpdateFabricRequest_builder) Build() *UpdateFabricRequest {
	m0 := &UpdateFabricRequest{}
	b, x := &b0, m0
	_, _ = b, x
	if b.Id != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 0, 2)
		x.xxx_hidden_Id = *b.Id
	}
	if b.Name != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 1, 2)
		x.xxx_hidden_Name = b.Name
	}
	return m0
}

type UpdateVLANRequest struct {
	state                  protoimpl.MessageState `protogen:"opaque.v1"`
	xxx_hidden_FabricId    int64                  `protobuf:"varint,1,opt,name=fabric_id,json=fabricId"`
	xxx_hidden_Vid         int64                  `protobuf:"varint,2,opt,name=vid"`
	xxx_hidden_Name        *string                `protobuf:"bytes,11,opt,name=name"`
	xxx_hidden_Mtu         int64                  `protobuf:"varint,12,opt,name=mtu"`
	xxx_hidden_Description *string                `protobuf:"bytes,13,opt,name=description"`
	xxx_hidden_DhcpOn      bool                   `protobuf:"varint,14,opt,name=dhcp_on,json=dhcpOn"`
	XXX_raceDetectHookData protoimpl.RaceDetectHookData
	XXX_presence           [1]uint32
	unknownFields          protoimpl.UnknownFields
	sizeCache              protoimpl.SizeCache
}

func (x *UpdateVLANRequest) Reset() {
	*x = UpdateVLANRequest{}
	mi := &file_api_nexus_v1_nexus_proto_msgTypes[37]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UpdateVLANRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateVLANRequest) ProtoMessage() {}

func (x *UpdateVLANRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_nexus_v1_nexus_proto_msgTypes[37]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *UpdateVLANRequest) GetFabricId() int64 {
	if x != nil {
		return x.xxx_hidden_FabricId
	}
	return 0
}

func (x *UpdateVLANRequest) GetVid() int64 {
	if x != nil {
		return x.xxx_hidden_Vid
	}
	return 0
}

func (x *UpdateVLANRequest) GetName() string {
	if x != nil {
		if x.xxx_hidden_Name != nil {
			return *x.xxx_hidden_Name
		}
		return ""
	}
	return ""
}

func (x *UpdateVLANRequest) GetMtu() int64 {
	if x != nil {
		return x.xxx_hidden_Mtu
	}
	return 0
}

func (x *UpdateVLANRequest) GetDescription() string {
	if x != nil {
		if x.xxx_hidden_Description != nil {
			return *x.xxx_hidden_Description
		}
		return ""
	}
	return ""
}

func (x *UpdateVLANRequest) GetDhcpOn() bool {
	if x != nil {
		return x.xxx_hidden_DhcpOn
	}
	return false
}

func (x *UpdateVLANRequest) SetFabricId(v int64) {
	x.xxx_hidden_FabricId = v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 0, 6)
}

func (x *UpdateVLANRequest) SetVid(v int64) {
	x.xxx_hidden_Vid = v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 1, 6)
}

func (x *UpdateVLANRequest) SetName(v string) {
	x.xxx_hidden_Name = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 2, 6)
}

func (x *UpdateVLANRequest) SetMtu(v int64) {
	x.xxx_hidden_Mtu = v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 3, 6)
}

func (x *UpdateVLANRequest) SetDescription(v string) {
	x.xxx_hidden_Description = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 4, 6)
}

func (x *UpdateVLANRequest) SetDhcpOn(v bool) {
	x.xxx_hidden_DhcpOn = v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 5, 6)
}

func (x *UpdateVLANRequest) HasFabricId() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 0)
}

func (x *UpdateVLANRequest) HasVid() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 1)
}

func (x *UpdateVLANRequest) HasName() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 2)
}

func (x *UpdateVLANRequest) HasMtu() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 3)
}

func (x *UpdateVLANRequest) HasDescription() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 4)
}

func (x *UpdateVLANRequest) HasDhcpOn() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 5)
}

func (x *UpdateVLANRequest) ClearFabricId() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 0)
	x.xxx_hidden_FabricId = 0
}

func (x *UpdateVLANRequest) ClearVid() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 1)
	x.xxx_hidden_Vid = 0
}

func (x *UpdateVLANRequest) ClearName() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 2)
	x.xxx_hidden_Name = nil
}

func (x *UpdateVLANRequest) ClearMtu() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 3)
	x.xxx_hidden_Mtu = 0
}

func (x *UpdateVLANRequest) ClearDescription() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 4)
	x.xxx_hidden_Description = nil
}

func (x *UpdateVLANRequest) ClearDhcpOn() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 5)
	x.xxx_hidden_DhcpOn = false
}

type UpdateVLANRequest_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	FabricId    *int64
	Vid         *int64
	Name        *string
	Mtu         *int64
	Description *string
	DhcpOn      *bool
}

func (b0 UpdateVLANRequest_builder) Build() *UpdateVLANRequest {
	m0 := &UpdateVLANRequest{}
	b, x := &b0, m0
	_, _ = b, x
	if b.FabricId != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 0, 6)
		x.xxx_hidden_FabricId = *b.FabricId
	}
	if b.Vid != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 1, 6)
		x.xxx_hidden_Vid = *b.Vid
	}
	if b.Name != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 2, 6)
		x.xxx_hidden_Name = b.Name
	}
	if b.Mtu != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 3, 6)
		x.xxx_hidden_Mtu = *b.Mtu
	}
	if b.Description != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 4, 6)
		x.xxx_hidden_Description = b.Description
	}
	if b.DhcpOn != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 5, 6)
		x.xxx_hidden_DhcpOn = *b.DhcpOn
	}
	return m0
}

type UpdateSubnetRequest struct {
	state                         protoimpl.MessageState `protogen:"opaque.v1"`
	xxx_hidden_Id                 int64                  `protobuf:"varint,1,opt,name=id"`
	xxx_hidden_Name               *string                `protobuf:"bytes,11,opt,name=name"`
	xxx_hidden_Cidr               *string                `protobuf:"bytes,12,opt,name=cidr"`
	xxx_hidden_GatewayIp          *string                `protobuf:"bytes,13,opt,name=gateway_ip,json=gatewayIp"`
	xxx_hidden_DnsServers         []string               `protobuf:"bytes,14,rep,name=dns_servers,json=dnsServers"`
	xxx_hidden_Description        *string                `protobuf:"bytes,15,opt,name=description"`
	xxx_hidden_AllowDnsResolution bool                   `protobuf:"varint,16,opt,name=allow_dns_resolution,json=allowDnsResolution"`
	XXX_raceDetectHookData        protoimpl.RaceDetectHookData
	XXX_presence                  [1]uint32
	unknownFields                 protoimpl.UnknownFields
	sizeCache                     protoimpl.SizeCache
}

func (x *UpdateSubnetRequest) Reset() {
	*x = UpdateSubnetRequest{}
	mi := &file_api_nexus_v1_nexus_proto_msgTypes[38]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UpdateSubnetRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateSubnetRequest) ProtoMessage() {}

func (x *UpdateSubnetRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_nexus_v1_nexus_proto_msgTypes[38]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *UpdateSubnetRequest) GetId() int64 {
	if x != nil {
		return x.xxx_hidden_Id
	}
	return 0
}

func (x *UpdateSubnetRequest) GetName() string {
	if x != nil {
		if x.xxx_hidden_Name != nil {
			return *x.xxx_hidden_Name
		}
		return ""
	}
	return ""
}

func (x *UpdateSubnetRequest) GetCidr() string {
	if x != nil {
		if x.xxx_hidden_Cidr != nil {
			return *x.xxx_hidden_Cidr
		}
		return ""
	}
	return ""
}

func (x *UpdateSubnetRequest) GetGatewayIp() string {
	if x != nil {
		if x.xxx_hidden_GatewayIp != nil {
			return *x.xxx_hidden_GatewayIp
		}
		return ""
	}
	return ""
}

func (x *UpdateSubnetRequest) GetDnsServers() []string {
	if x != nil {
		return x.xxx_hidden_DnsServers
	}
	return nil
}

func (x *UpdateSubnetRequest) GetDescription() string {
	if x != nil {
		if x.xxx_hidden_Description != nil {
			return *x.xxx_hidden_Description
		}
		return ""
	}
	return ""
}

func (x *UpdateSubnetRequest) GetAllowDnsResolution() bool {
	if x != nil {
		return x.xxx_hidden_AllowDnsResolution
	}
	return false
}

func (x *UpdateSubnetRequest) SetId(v int64) {
	x.xxx_hidden_Id = v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 0, 7)
}

func (x *UpdateSubnetRequest) SetName(v string) {
	x.xxx_hidden_Name = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 1, 7)
}

func (x *UpdateSubnetRequest) SetCidr(v string) {
	x.xxx_hidden_Cidr = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 2, 7)
}

func (x *UpdateSubnetRequest) SetGatewayIp(v string) {
	x.xxx_hidden_GatewayIp = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 3, 7)
}

func (x *UpdateSubnetRequest) SetDnsServers(v []string) {
	x.xxx_hidden_DnsServers = v
}

func (x *UpdateSubnetRequest) SetDescription(v string) {
	x.xxx_hidden_Description = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 5, 7)
}

func (x *UpdateSubnetRequest) SetAllowDnsResolution(v bool) {
	x.xxx_hidden_AllowDnsResolution = v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 6, 7)
}

func (x *UpdateSubnetRequest) HasId() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 0)
}

func (x *UpdateSubnetRequest) HasName() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 1)
}

func (x *UpdateSubnetRequest) HasCidr() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 2)
}

func (x *UpdateSubnetRequest) HasGatewayIp() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 3)
}

func (x *UpdateSubnetRequest) HasDescription() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 5)
}

func (x *UpdateSubnetRequest) HasAllowDnsResolution() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 6)
}

func (x *UpdateSubnetRequest) ClearId() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 0)
	x.xxx_hidden_Id = 0
}

func (x *UpdateSubnetRequest) ClearName() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 1)
	x.xxx_hidden_Name = nil
}

func (x *UpdateSubnetRequest) ClearCidr() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 2)
	x.xxx_hidden_Cidr = nil
}

func (x *UpdateSubnetRequest) ClearGatewayIp() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 3)
	x.xxx_hidden_GatewayIp = nil
}

func (x *UpdateSubnetRequest) ClearDescription() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 5)
	x.xxx_hidden_Description = nil
}

func (x *UpdateSubnetRequest) ClearAllowDnsResolution() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 6)
	x.xxx_hidden_AllowDnsResolution = false
}

type UpdateSubnetRequest_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	Id                 *int64
	Name               *string
	Cidr               *string
	GatewayIp          *string
	DnsServers         []string
	Description        *string
	AllowDnsResolution *bool
}

func (b0 UpdateSubnetRequest_builder) Build() *UpdateSubnetRequest {
	m0 := &UpdateSubnetRequest{}
	b, x := &b0, m0
	_, _ = b, x
	if b.Id != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 0, 7)
		x.xxx_hidden_Id = *b.Id
	}
	if b.Name != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 1, 7)
		x.xxx_hidden_Name = b.Name
	}
	if b.Cidr != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 2, 7)
		x.xxx_hidden_Cidr = b.Cidr
	}
	if b.GatewayIp != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 3, 7)
		x.xxx_hidden_GatewayIp = b.GatewayIp
	}
	x.xxx_hidden_DnsServers = b.DnsServers
	if b.Description != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 5, 7)
		x.xxx_hidden_Description = b.Description
	}
	if b.AllowDnsResolution != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 6, 7)
		x.xxx_hidden_AllowDnsResolution = *b.AllowDnsResolution
	}
	return m0
}

type UpdateIPRangeRequest struct {
	state                  protoimpl.MessageState `protogen:"opaque.v1"`
	xxx_hidden_Id          int64                  `protobuf:"varint,1,opt,name=id"`
	xxx_hidden_StartIp     *string                `protobuf:"bytes,11,opt,name=start_ip,json=startIp"`
	xxx_hidden_EndIp       *string                `protobuf:"bytes,12,opt,name=end_ip,json=endIp"`
	xxx_hidden_Comment     *string                `protobuf:"bytes,13,opt,name=comment"`
	XXX_raceDetectHookData protoimpl.RaceDetectHookData
	XXX_presence           [1]uint32
	unknownFields          protoimpl.UnknownFields
	sizeCache              protoimpl.SizeCache
}

func (x *UpdateIPRangeRequest) Reset() {
	*x = UpdateIPRangeRequest{}
	mi := &file_api_nexus_v1_nexus_proto_msgTypes[39]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UpdateIPRangeRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateIPRangeRequest) ProtoMessage() {}

func (x *UpdateIPRangeRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_nexus_v1_nexus_proto_msgTypes[39]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *UpdateIPRangeRequest) GetId() int64 {
	if x != nil {
		return x.xxx_hidden_Id
	}
	return 0
}

func (x *UpdateIPRangeRequest) GetStartIp() string {
	if x != nil {
		if x.xxx_hidden_StartIp != nil {
			return *x.xxx_hidden_StartIp
		}
		return ""
	}
	return ""
}

func (x *UpdateIPRangeRequest) GetEndIp() string {
	if x != nil {
		if x.xxx_hidden_EndIp != nil {
			return *x.xxx_hidden_EndIp
		}
		return ""
	}
	return ""
}

func (x *UpdateIPRangeRequest) GetComment() string {
	if x != nil {
		if x.xxx_hidden_Comment != nil {
			return *x.xxx_hidden_Comment
		}
		return ""
	}
	return ""
}

func (x *UpdateIPRangeRequest) SetId(v int64) {
	x.xxx_hidden_Id = v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 0, 4)
}

func (x *UpdateIPRangeRequest) SetStartIp(v string) {
	x.xxx_hidden_StartIp = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 1, 4)
}

func (x *UpdateIPRangeRequest) SetEndIp(v string) {
	x.xxx_hidden_EndIp = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 2, 4)
}

func (x *UpdateIPRangeRequest) SetComment(v string) {
	x.xxx_hidden_Comment = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 3, 4)
}

func (x *UpdateIPRangeRequest) HasId() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 0)
}

func (x *UpdateIPRangeRequest) HasStartIp() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 1)
}

func (x *UpdateIPRangeRequest) HasEndIp() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 2)
}

func (x *UpdateIPRangeRequest) HasComment() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 3)
}

func (x *UpdateIPRangeRequest) ClearId() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 0)
	x.xxx_hidden_Id = 0
}

func (x *UpdateIPRangeRequest) ClearStartIp() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 1)
	x.xxx_hidden_StartIp = nil
}

func (x *UpdateIPRangeRequest) ClearEndIp() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 2)
	x.xxx_hidden_EndIp = nil
}

func (x *UpdateIPRangeRequest) ClearComment() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 3)
	x.xxx_hidden_Comment = nil
}

type UpdateIPRangeRequest_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	Id      *int64
	StartIp *string
	EndIp   *string
	Comment *string
}

func (b0 UpdateIPRangeRequest_builder) Build() *UpdateIPRangeRequest {
	m0 := &UpdateIPRangeRequest{}
	b, x := &b0, m0
	_, _ = b, x
	if b.Id != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 0, 4)
		x.xxx_hidden_Id = *b.Id
	}
	if b.StartIp != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 1, 4)
		x.xxx_hidden_StartIp = b.StartIp
	}
	if b.EndIp != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 2, 4)
		x.xxx_hidden_EndIp = b.EndIp
	}
	if b.Comment != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 3, 4)
		x.xxx_hidden_Comment = b.Comment
	}
	return m0
}

type ListMachinesRequest struct {
	state                  protoimpl.MessageState `protogen:"opaque.v1"`
	xxx_hidden_ScopeUuid   *string                `protobuf:"bytes,1,opt,name=scope_uuid,json=scopeUuid"`
	XXX_raceDetectHookData protoimpl.RaceDetectHookData
	XXX_presence           [1]uint32
	unknownFields          protoimpl.UnknownFields
	sizeCache              protoimpl.SizeCache
}

func (x *ListMachinesRequest) Reset() {
	*x = ListMachinesRequest{}
	mi := &file_api_nexus_v1_nexus_proto_msgTypes[40]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListMachinesRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListMachinesRequest) ProtoMessage() {}

func (x *ListMachinesRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_nexus_v1_nexus_proto_msgTypes[40]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *ListMachinesRequest) GetScopeUuid() string {
	if x != nil {
		if x.xxx_hidden_ScopeUuid != nil {
			return *x.xxx_hidden_ScopeUuid
		}
		return ""
	}
	return ""
}

func (x *ListMachinesRequest) SetScopeUuid(v string) {
	x.xxx_hidden_ScopeUuid = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 0, 1)
}

func (x *ListMachinesRequest) HasScopeUuid() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 0)
}

func (x *ListMachinesRequest) ClearScopeUuid() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 0)
	x.xxx_hidden_ScopeUuid = nil
}

type ListMachinesRequest_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	ScopeUuid *string
}

func (b0 ListMachinesRequest_builder) Build() *ListMachinesRequest {
	m0 := &ListMachinesRequest{}
	b, x := &b0, m0
	_, _ = b, x
	if b.ScopeUuid != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 0, 1)
		x.xxx_hidden_ScopeUuid = b.ScopeUuid
	}
	return m0
}

type ListMachinesResponse struct {
	state               protoimpl.MessageState `protogen:"opaque.v1"`
	xxx_hidden_Machines *[]*Machine            `protobuf:"bytes,1,rep,name=machines"`
	unknownFields       protoimpl.UnknownFields
	sizeCache           protoimpl.SizeCache
}

func (x *ListMachinesResponse) Reset() {
	*x = ListMachinesResponse{}
	mi := &file_api_nexus_v1_nexus_proto_msgTypes[41]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListMachinesResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListMachinesResponse) ProtoMessage() {}

func (x *ListMachinesResponse) ProtoReflect() protoreflect.Message {
	mi := &file_api_nexus_v1_nexus_proto_msgTypes[41]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *ListMachinesResponse) GetMachines() []*Machine {
	if x != nil {
		if x.xxx_hidden_Machines != nil {
			return *x.xxx_hidden_Machines
		}
	}
	return nil
}

func (x *ListMachinesResponse) SetMachines(v []*Machine) {
	x.xxx_hidden_Machines = &v
}

type ListMachinesResponse_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	Machines []*Machine
}

func (b0 ListMachinesResponse_builder) Build() *ListMachinesResponse {
	m0 := &ListMachinesResponse{}
	b, x := &b0, m0
	_, _ = b, x
	x.xxx_hidden_Machines = &b.Machines
	return m0
}

type GetMachineRequest struct {
	state                  protoimpl.MessageState `protogen:"opaque.v1"`
	xxx_hidden_Id          *string                `protobuf:"bytes,1,opt,name=id"`
	XXX_raceDetectHookData protoimpl.RaceDetectHookData
	XXX_presence           [1]uint32
	unknownFields          protoimpl.UnknownFields
	sizeCache              protoimpl.SizeCache
}

func (x *GetMachineRequest) Reset() {
	*x = GetMachineRequest{}
	mi := &file_api_nexus_v1_nexus_proto_msgTypes[42]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetMachineRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetMachineRequest) ProtoMessage() {}

func (x *GetMachineRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_nexus_v1_nexus_proto_msgTypes[42]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *GetMachineRequest) GetId() string {
	if x != nil {
		if x.xxx_hidden_Id != nil {
			return *x.xxx_hidden_Id
		}
		return ""
	}
	return ""
}

func (x *GetMachineRequest) SetId(v string) {
	x.xxx_hidden_Id = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 0, 1)
}

func (x *GetMachineRequest) HasId() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 0)
}

func (x *GetMachineRequest) ClearId() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 0)
	x.xxx_hidden_Id = nil
}

type GetMachineRequest_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	Id *string
}

func (b0 GetMachineRequest_builder) Build() *GetMachineRequest {
	m0 := &GetMachineRequest{}
	b, x := &b0, m0
	_, _ = b, x
	if b.Id != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 0, 1)
		x.xxx_hidden_Id = b.Id
	}
	return m0
}

type CreateMachineRequest struct {
	state                     protoimpl.MessageState `protogen:"opaque.v1"`
	xxx_hidden_Id             *string                `protobuf:"bytes,1,opt,name=id"`
	xxx_hidden_EnableSsh      bool                   `protobuf:"varint,2,opt,name=enable_ssh,json=enableSsh"`
	xxx_hidden_SkipBmcConfig  bool                   `protobuf:"varint,3,opt,name=skip_bmc_config,json=skipBmcConfig"`
	xxx_hidden_SkipNetworking bool                   `protobuf:"varint,4,opt,name=skip_networking,json=skipNetworking"`
	xxx_hidden_SkipStorage    bool                   `protobuf:"varint,5,opt,name=skip_storage,json=skipStorage"`
	xxx_hidden_ScopeUuid      *string                `protobuf:"bytes,11,opt,name=scope_uuid,json=scopeUuid"`
	xxx_hidden_Tags           []string               `protobuf:"bytes,21,rep,name=tags"`
	XXX_raceDetectHookData    protoimpl.RaceDetectHookData
	XXX_presence              [1]uint32
	unknownFields             protoimpl.UnknownFields
	sizeCache                 protoimpl.SizeCache
}

func (x *CreateMachineRequest) Reset() {
	*x = CreateMachineRequest{}
	mi := &file_api_nexus_v1_nexus_proto_msgTypes[43]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CreateMachineRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateMachineRequest) ProtoMessage() {}

func (x *CreateMachineRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_nexus_v1_nexus_proto_msgTypes[43]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *CreateMachineRequest) GetId() string {
	if x != nil {
		if x.xxx_hidden_Id != nil {
			return *x.xxx_hidden_Id
		}
		return ""
	}
	return ""
}

func (x *CreateMachineRequest) GetEnableSsh() bool {
	if x != nil {
		return x.xxx_hidden_EnableSsh
	}
	return false
}

func (x *CreateMachineRequest) GetSkipBmcConfig() bool {
	if x != nil {
		return x.xxx_hidden_SkipBmcConfig
	}
	return false
}

func (x *CreateMachineRequest) GetSkipNetworking() bool {
	if x != nil {
		return x.xxx_hidden_SkipNetworking
	}
	return false
}

func (x *CreateMachineRequest) GetSkipStorage() bool {
	if x != nil {
		return x.xxx_hidden_SkipStorage
	}
	return false
}

func (x *CreateMachineRequest) GetScopeUuid() string {
	if x != nil {
		if x.xxx_hidden_ScopeUuid != nil {
			return *x.xxx_hidden_ScopeUuid
		}
		return ""
	}
	return ""
}

func (x *CreateMachineRequest) GetTags() []string {
	if x != nil {
		return x.xxx_hidden_Tags
	}
	return nil
}

func (x *CreateMachineRequest) SetId(v string) {
	x.xxx_hidden_Id = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 0, 7)
}

func (x *CreateMachineRequest) SetEnableSsh(v bool) {
	x.xxx_hidden_EnableSsh = v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 1, 7)
}

func (x *CreateMachineRequest) SetSkipBmcConfig(v bool) {
	x.xxx_hidden_SkipBmcConfig = v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 2, 7)
}

func (x *CreateMachineRequest) SetSkipNetworking(v bool) {
	x.xxx_hidden_SkipNetworking = v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 3, 7)
}

func (x *CreateMachineRequest) SetSkipStorage(v bool) {
	x.xxx_hidden_SkipStorage = v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 4, 7)
}

func (x *CreateMachineRequest) SetScopeUuid(v string) {
	x.xxx_hidden_ScopeUuid = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 5, 7)
}

func (x *CreateMachineRequest) SetTags(v []string) {
	x.xxx_hidden_Tags = v
}

func (x *CreateMachineRequest) HasId() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 0)
}

func (x *CreateMachineRequest) HasEnableSsh() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 1)
}

func (x *CreateMachineRequest) HasSkipBmcConfig() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 2)
}

func (x *CreateMachineRequest) HasSkipNetworking() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 3)
}

func (x *CreateMachineRequest) HasSkipStorage() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 4)
}

func (x *CreateMachineRequest) HasScopeUuid() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 5)
}

func (x *CreateMachineRequest) ClearId() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 0)
	x.xxx_hidden_Id = nil
}

func (x *CreateMachineRequest) ClearEnableSsh() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 1)
	x.xxx_hidden_EnableSsh = false
}

func (x *CreateMachineRequest) ClearSkipBmcConfig() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 2)
	x.xxx_hidden_SkipBmcConfig = false
}

func (x *CreateMachineRequest) ClearSkipNetworking() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 3)
	x.xxx_hidden_SkipNetworking = false
}

func (x *CreateMachineRequest) ClearSkipStorage() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 4)
	x.xxx_hidden_SkipStorage = false
}

func (x *CreateMachineRequest) ClearScopeUuid() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 5)
	x.xxx_hidden_ScopeUuid = nil
}

type CreateMachineRequest_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	Id             *string
	EnableSsh      *bool
	SkipBmcConfig  *bool
	SkipNetworking *bool
	SkipStorage    *bool
	ScopeUuid      *string
	Tags           []string
}

func (b0 CreateMachineRequest_builder) Build() *CreateMachineRequest {
	m0 := &CreateMachineRequest{}
	b, x := &b0, m0
	_, _ = b, x
	if b.Id != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 0, 7)
		x.xxx_hidden_Id = b.Id
	}
	if b.EnableSsh != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 1, 7)
		x.xxx_hidden_EnableSsh = *b.EnableSsh
	}
	if b.SkipBmcConfig != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 2, 7)
		x.xxx_hidden_SkipBmcConfig = *b.SkipBmcConfig
	}
	if b.SkipNetworking != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 3, 7)
		x.xxx_hidden_SkipNetworking = *b.SkipNetworking
	}
	if b.SkipStorage != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 4, 7)
		x.xxx_hidden_SkipStorage = *b.SkipStorage
	}
	if b.ScopeUuid != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 5, 7)
		x.xxx_hidden_ScopeUuid = b.ScopeUuid
	}
	x.xxx_hidden_Tags = b.Tags
	return m0
}

type DeleteMachineRequest struct {
	state                  protoimpl.MessageState `protogen:"opaque.v1"`
	xxx_hidden_Id          *string                `protobuf:"bytes,1,opt,name=id"`
	xxx_hidden_Force       bool                   `protobuf:"varint,2,opt,name=force"`
	XXX_raceDetectHookData protoimpl.RaceDetectHookData
	XXX_presence           [1]uint32
	unknownFields          protoimpl.UnknownFields
	sizeCache              protoimpl.SizeCache
}

func (x *DeleteMachineRequest) Reset() {
	*x = DeleteMachineRequest{}
	mi := &file_api_nexus_v1_nexus_proto_msgTypes[44]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DeleteMachineRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteMachineRequest) ProtoMessage() {}

func (x *DeleteMachineRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_nexus_v1_nexus_proto_msgTypes[44]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *DeleteMachineRequest) GetId() string {
	if x != nil {
		if x.xxx_hidden_Id != nil {
			return *x.xxx_hidden_Id
		}
		return ""
	}
	return ""
}

func (x *DeleteMachineRequest) GetForce() bool {
	if x != nil {
		return x.xxx_hidden_Force
	}
	return false
}

func (x *DeleteMachineRequest) SetId(v string) {
	x.xxx_hidden_Id = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 0, 2)
}

func (x *DeleteMachineRequest) SetForce(v bool) {
	x.xxx_hidden_Force = v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 1, 2)
}

func (x *DeleteMachineRequest) HasId() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 0)
}

func (x *DeleteMachineRequest) HasForce() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 1)
}

func (x *DeleteMachineRequest) ClearId() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 0)
	x.xxx_hidden_Id = nil
}

func (x *DeleteMachineRequest) ClearForce() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 1)
	x.xxx_hidden_Force = false
}

type DeleteMachineRequest_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	Id    *string
	Force *bool
}

func (b0 DeleteMachineRequest_builder) Build() *DeleteMachineRequest {
	m0 := &DeleteMachineRequest{}
	b, x := &b0, m0
	_, _ = b, x
	if b.Id != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 0, 2)
		x.xxx_hidden_Id = b.Id
	}
	if b.Force != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 1, 2)
		x.xxx_hidden_Force = *b.Force
	}
	return m0
}

type PowerOnMachineRequest struct {
	state                  protoimpl.MessageState `protogen:"opaque.v1"`
	xxx_hidden_Id          *string                `protobuf:"bytes,1,opt,name=id"`
	xxx_hidden_Comment     *string                `protobuf:"bytes,2,opt,name=comment"`
	XXX_raceDetectHookData protoimpl.RaceDetectHookData
	XXX_presence           [1]uint32
	unknownFields          protoimpl.UnknownFields
	sizeCache              protoimpl.SizeCache
}

func (x *PowerOnMachineRequest) Reset() {
	*x = PowerOnMachineRequest{}
	mi := &file_api_nexus_v1_nexus_proto_msgTypes[45]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *PowerOnMachineRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PowerOnMachineRequest) ProtoMessage() {}

func (x *PowerOnMachineRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_nexus_v1_nexus_proto_msgTypes[45]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *PowerOnMachineRequest) GetId() string {
	if x != nil {
		if x.xxx_hidden_Id != nil {
			return *x.xxx_hidden_Id
		}
		return ""
	}
	return ""
}

func (x *PowerOnMachineRequest) GetComment() string {
	if x != nil {
		if x.xxx_hidden_Comment != nil {
			return *x.xxx_hidden_Comment
		}
		return ""
	}
	return ""
}

func (x *PowerOnMachineRequest) SetId(v string) {
	x.xxx_hidden_Id = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 0, 2)
}

func (x *PowerOnMachineRequest) SetComment(v string) {
	x.xxx_hidden_Comment = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 1, 2)
}

func (x *PowerOnMachineRequest) HasId() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 0)
}

func (x *PowerOnMachineRequest) HasComment() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 1)
}

func (x *PowerOnMachineRequest) ClearId() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 0)
	x.xxx_hidden_Id = nil
}

func (x *PowerOnMachineRequest) ClearComment() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 1)
	x.xxx_hidden_Comment = nil
}

type PowerOnMachineRequest_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	Id      *string
	Comment *string
}

func (b0 PowerOnMachineRequest_builder) Build() *PowerOnMachineRequest {
	m0 := &PowerOnMachineRequest{}
	b, x := &b0, m0
	_, _ = b, x
	if b.Id != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 0, 2)
		x.xxx_hidden_Id = b.Id
	}
	if b.Comment != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 1, 2)
		x.xxx_hidden_Comment = b.Comment
	}
	return m0
}

type PowerOffMachineRequest struct {
	state                  protoimpl.MessageState `protogen:"opaque.v1"`
	xxx_hidden_Id          *string                `protobuf:"bytes,1,opt,name=id"`
	xxx_hidden_Comment     *string                `protobuf:"bytes,2,opt,name=comment"`
	XXX_raceDetectHookData protoimpl.RaceDetectHookData
	XXX_presence           [1]uint32
	unknownFields          protoimpl.UnknownFields
	sizeCache              protoimpl.SizeCache
}

func (x *PowerOffMachineRequest) Reset() {
	*x = PowerOffMachineRequest{}
	mi := &file_api_nexus_v1_nexus_proto_msgTypes[46]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *PowerOffMachineRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PowerOffMachineRequest) ProtoMessage() {}

func (x *PowerOffMachineRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_nexus_v1_nexus_proto_msgTypes[46]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *PowerOffMachineRequest) GetId() string {
	if x != nil {
		if x.xxx_hidden_Id != nil {
			return *x.xxx_hidden_Id
		}
		return ""
	}
	return ""
}

func (x *PowerOffMachineRequest) GetComment() string {
	if x != nil {
		if x.xxx_hidden_Comment != nil {
			return *x.xxx_hidden_Comment
		}
		return ""
	}
	return ""
}

func (x *PowerOffMachineRequest) SetId(v string) {
	x.xxx_hidden_Id = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 0, 2)
}

func (x *PowerOffMachineRequest) SetComment(v string) {
	x.xxx_hidden_Comment = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 1, 2)
}

func (x *PowerOffMachineRequest) HasId() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 0)
}

func (x *PowerOffMachineRequest) HasComment() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 1)
}

func (x *PowerOffMachineRequest) ClearId() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 0)
	x.xxx_hidden_Id = nil
}

func (x *PowerOffMachineRequest) ClearComment() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 1)
	x.xxx_hidden_Comment = nil
}

type PowerOffMachineRequest_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	Id      *string
	Comment *string
}

func (b0 PowerOffMachineRequest_builder) Build() *PowerOffMachineRequest {
	m0 := &PowerOffMachineRequest{}
	b, x := &b0, m0
	_, _ = b, x
	if b.Id != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 0, 2)
		x.xxx_hidden_Id = b.Id
	}
	if b.Comment != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 1, 2)
		x.xxx_hidden_Comment = b.Comment
	}
	return m0
}

type AddMachineTagsRequest struct {
	state                  protoimpl.MessageState `protogen:"opaque.v1"`
	xxx_hidden_Id          *string                `protobuf:"bytes,1,opt,name=id"`
	xxx_hidden_Tags        []string               `protobuf:"bytes,2,rep,name=tags"`
	XXX_raceDetectHookData protoimpl.RaceDetectHookData
	XXX_presence           [1]uint32
	unknownFields          protoimpl.UnknownFields
	sizeCache              protoimpl.SizeCache
}

func (x *AddMachineTagsRequest) Reset() {
	*x = AddMachineTagsRequest{}
	mi := &file_api_nexus_v1_nexus_proto_msgTypes[47]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *AddMachineTagsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddMachineTagsRequest) ProtoMessage() {}

func (x *AddMachineTagsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_nexus_v1_nexus_proto_msgTypes[47]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *AddMachineTagsRequest) GetId() string {
	if x != nil {
		if x.xxx_hidden_Id != nil {
			return *x.xxx_hidden_Id
		}
		return ""
	}
	return ""
}

func (x *AddMachineTagsRequest) GetTags() []string {
	if x != nil {
		return x.xxx_hidden_Tags
	}
	return nil
}

func (x *AddMachineTagsRequest) SetId(v string) {
	x.xxx_hidden_Id = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 0, 2)
}

func (x *AddMachineTagsRequest) SetTags(v []string) {
	x.xxx_hidden_Tags = v
}

func (x *AddMachineTagsRequest) HasId() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 0)
}

func (x *AddMachineTagsRequest) ClearId() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 0)
	x.xxx_hidden_Id = nil
}

type AddMachineTagsRequest_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	Id   *string
	Tags []string
}

func (b0 AddMachineTagsRequest_builder) Build() *AddMachineTagsRequest {
	m0 := &AddMachineTagsRequest{}
	b, x := &b0, m0
	_, _ = b, x
	if b.Id != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 0, 2)
		x.xxx_hidden_Id = b.Id
	}
	x.xxx_hidden_Tags = b.Tags
	return m0
}

type RemoveMachineTagsRequest struct {
	state                  protoimpl.MessageState `protogen:"opaque.v1"`
	xxx_hidden_Id          *string                `protobuf:"bytes,1,opt,name=id"`
	xxx_hidden_Tags        []string               `protobuf:"bytes,2,rep,name=tags"`
	XXX_raceDetectHookData protoimpl.RaceDetectHookData
	XXX_presence           [1]uint32
	unknownFields          protoimpl.UnknownFields
	sizeCache              protoimpl.SizeCache
}

func (x *RemoveMachineTagsRequest) Reset() {
	*x = RemoveMachineTagsRequest{}
	mi := &file_api_nexus_v1_nexus_proto_msgTypes[48]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RemoveMachineTagsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RemoveMachineTagsRequest) ProtoMessage() {}

func (x *RemoveMachineTagsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_nexus_v1_nexus_proto_msgTypes[48]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *RemoveMachineTagsRequest) GetId() string {
	if x != nil {
		if x.xxx_hidden_Id != nil {
			return *x.xxx_hidden_Id
		}
		return ""
	}
	return ""
}

func (x *RemoveMachineTagsRequest) GetTags() []string {
	if x != nil {
		return x.xxx_hidden_Tags
	}
	return nil
}

func (x *RemoveMachineTagsRequest) SetId(v string) {
	x.xxx_hidden_Id = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 0, 2)
}

func (x *RemoveMachineTagsRequest) SetTags(v []string) {
	x.xxx_hidden_Tags = v
}

func (x *RemoveMachineTagsRequest) HasId() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 0)
}

func (x *RemoveMachineTagsRequest) ClearId() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 0)
	x.xxx_hidden_Id = nil
}

type RemoveMachineTagsRequest_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	Id   *string
	Tags []string
}

func (b0 RemoveMachineTagsRequest_builder) Build() *RemoveMachineTagsRequest {
	m0 := &RemoveMachineTagsRequest{}
	b, x := &b0, m0
	_, _ = b, x
	if b.Id != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 0, 2)
		x.xxx_hidden_Id = b.Id
	}
	x.xxx_hidden_Tags = b.Tags
	return m0
}

type ListScopesRequest struct {
	state         protoimpl.MessageState `protogen:"opaque.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ListScopesRequest) Reset() {
	*x = ListScopesRequest{}
	mi := &file_api_nexus_v1_nexus_proto_msgTypes[49]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListScopesRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListScopesRequest) ProtoMessage() {}

func (x *ListScopesRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_nexus_v1_nexus_proto_msgTypes[49]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

type ListScopesRequest_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

}

func (b0 ListScopesRequest_builder) Build() *ListScopesRequest {
	m0 := &ListScopesRequest{}
	b, x := &b0, m0
	_, _ = b, x
	return m0
}

type ListScopesResponse struct {
	state             protoimpl.MessageState `protogen:"opaque.v1"`
	xxx_hidden_Scopes *[]*Scope              `protobuf:"bytes,1,rep,name=scopes"`
	unknownFields     protoimpl.UnknownFields
	sizeCache         protoimpl.SizeCache
}

func (x *ListScopesResponse) Reset() {
	*x = ListScopesResponse{}
	mi := &file_api_nexus_v1_nexus_proto_msgTypes[50]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListScopesResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListScopesResponse) ProtoMessage() {}

func (x *ListScopesResponse) ProtoReflect() protoreflect.Message {
	mi := &file_api_nexus_v1_nexus_proto_msgTypes[50]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *ListScopesResponse) GetScopes() []*Scope {
	if x != nil {
		if x.xxx_hidden_Scopes != nil {
			return *x.xxx_hidden_Scopes
		}
	}
	return nil
}

func (x *ListScopesResponse) SetScopes(v []*Scope) {
	x.xxx_hidden_Scopes = &v
}

type ListScopesResponse_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	Scopes []*Scope
}

func (b0 ListScopesResponse_builder) Build() *ListScopesResponse {
	m0 := &ListScopesResponse{}
	b, x := &b0, m0
	_, _ = b, x
	x.xxx_hidden_Scopes = &b.Scopes
	return m0
}

type CreateScopeRequest struct {
	state                  protoimpl.MessageState `protogen:"opaque.v1"`
	xxx_hidden_Name        *string                `protobuf:"bytes,1,opt,name=name"`
	XXX_raceDetectHookData protoimpl.RaceDetectHookData
	XXX_presence           [1]uint32
	unknownFields          protoimpl.UnknownFields
	sizeCache              protoimpl.SizeCache
}

func (x *CreateScopeRequest) Reset() {
	*x = CreateScopeRequest{}
	mi := &file_api_nexus_v1_nexus_proto_msgTypes[51]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CreateScopeRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateScopeRequest) ProtoMessage() {}

func (x *CreateScopeRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_nexus_v1_nexus_proto_msgTypes[51]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *CreateScopeRequest) GetName() string {
	if x != nil {
		if x.xxx_hidden_Name != nil {
			return *x.xxx_hidden_Name
		}
		return ""
	}
	return ""
}

func (x *CreateScopeRequest) SetName(v string) {
	x.xxx_hidden_Name = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 0, 1)
}

func (x *CreateScopeRequest) HasName() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 0)
}

func (x *CreateScopeRequest) ClearName() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 0)
	x.xxx_hidden_Name = nil
}

type CreateScopeRequest_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	Name *string
}

func (b0 CreateScopeRequest_builder) Build() *CreateScopeRequest {
	m0 := &CreateScopeRequest{}
	b, x := &b0, m0
	_, _ = b, x
	if b.Name != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 0, 1)
		x.xxx_hidden_Name = b.Name
	}
	return m0
}

type ListFacilitiesRequest struct {
	state                  protoimpl.MessageState `protogen:"opaque.v1"`
	xxx_hidden_ScopeUuid   *string                `protobuf:"bytes,1,opt,name=scope_uuid,json=scopeUuid"`
	XXX_raceDetectHookData protoimpl.RaceDetectHookData
	XXX_presence           [1]uint32
	unknownFields          protoimpl.UnknownFields
	sizeCache              protoimpl.SizeCache
}

func (x *ListFacilitiesRequest) Reset() {
	*x = ListFacilitiesRequest{}
	mi := &file_api_nexus_v1_nexus_proto_msgTypes[52]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListFacilitiesRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListFacilitiesRequest) ProtoMessage() {}

func (x *ListFacilitiesRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_nexus_v1_nexus_proto_msgTypes[52]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *ListFacilitiesRequest) GetScopeUuid() string {
	if x != nil {
		if x.xxx_hidden_ScopeUuid != nil {
			return *x.xxx_hidden_ScopeUuid
		}
		return ""
	}
	return ""
}

func (x *ListFacilitiesRequest) SetScopeUuid(v string) {
	x.xxx_hidden_ScopeUuid = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 0, 1)
}

func (x *ListFacilitiesRequest) HasScopeUuid() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 0)
}

func (x *ListFacilitiesRequest) ClearScopeUuid() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 0)
	x.xxx_hidden_ScopeUuid = nil
}

type ListFacilitiesRequest_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	ScopeUuid *string
}

func (b0 ListFacilitiesRequest_builder) Build() *ListFacilitiesRequest {
	m0 := &ListFacilitiesRequest{}
	b, x := &b0, m0
	_, _ = b, x
	if b.ScopeUuid != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 0, 1)
		x.xxx_hidden_ScopeUuid = b.ScopeUuid
	}
	return m0
}

type ListFacilitiesResponse struct {
	state                 protoimpl.MessageState `protogen:"opaque.v1"`
	xxx_hidden_Facilities *[]*Facility           `protobuf:"bytes,1,rep,name=facilities"`
	unknownFields         protoimpl.UnknownFields
	sizeCache             protoimpl.SizeCache
}

func (x *ListFacilitiesResponse) Reset() {
	*x = ListFacilitiesResponse{}
	mi := &file_api_nexus_v1_nexus_proto_msgTypes[53]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListFacilitiesResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListFacilitiesResponse) ProtoMessage() {}

func (x *ListFacilitiesResponse) ProtoReflect() protoreflect.Message {
	mi := &file_api_nexus_v1_nexus_proto_msgTypes[53]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *ListFacilitiesResponse) GetFacilities() []*Facility {
	if x != nil {
		if x.xxx_hidden_Facilities != nil {
			return *x.xxx_hidden_Facilities
		}
	}
	return nil
}

func (x *ListFacilitiesResponse) SetFacilities(v []*Facility) {
	x.xxx_hidden_Facilities = &v
}

type ListFacilitiesResponse_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	Facilities []*Facility
}

func (b0 ListFacilitiesResponse_builder) Build() *ListFacilitiesResponse {
	m0 := &ListFacilitiesResponse{}
	b, x := &b0, m0
	_, _ = b, x
	x.xxx_hidden_Facilities = &b.Facilities
	return m0
}

type GetFacilityRequest struct {
	state                  protoimpl.MessageState `protogen:"opaque.v1"`
	xxx_hidden_ScopeUuid   *string                `protobuf:"bytes,1,opt,name=scope_uuid,json=scopeUuid"`
	xxx_hidden_Name        *string                `protobuf:"bytes,2,opt,name=name"`
	XXX_raceDetectHookData protoimpl.RaceDetectHookData
	XXX_presence           [1]uint32
	unknownFields          protoimpl.UnknownFields
	sizeCache              protoimpl.SizeCache
}

func (x *GetFacilityRequest) Reset() {
	*x = GetFacilityRequest{}
	mi := &file_api_nexus_v1_nexus_proto_msgTypes[54]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetFacilityRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetFacilityRequest) ProtoMessage() {}

func (x *GetFacilityRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_nexus_v1_nexus_proto_msgTypes[54]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *GetFacilityRequest) GetScopeUuid() string {
	if x != nil {
		if x.xxx_hidden_ScopeUuid != nil {
			return *x.xxx_hidden_ScopeUuid
		}
		return ""
	}
	return ""
}

func (x *GetFacilityRequest) GetName() string {
	if x != nil {
		if x.xxx_hidden_Name != nil {
			return *x.xxx_hidden_Name
		}
		return ""
	}
	return ""
}

func (x *GetFacilityRequest) SetScopeUuid(v string) {
	x.xxx_hidden_ScopeUuid = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 0, 2)
}

func (x *GetFacilityRequest) SetName(v string) {
	x.xxx_hidden_Name = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 1, 2)
}

func (x *GetFacilityRequest) HasScopeUuid() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 0)
}

func (x *GetFacilityRequest) HasName() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 1)
}

func (x *GetFacilityRequest) ClearScopeUuid() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 0)
	x.xxx_hidden_ScopeUuid = nil
}

func (x *GetFacilityRequest) ClearName() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 1)
	x.xxx_hidden_Name = nil
}

type GetFacilityRequest_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	ScopeUuid *string
	Name      *string
}

func (b0 GetFacilityRequest_builder) Build() *GetFacilityRequest {
	m0 := &GetFacilityRequest{}
	b, x := &b0, m0
	_, _ = b, x
	if b.ScopeUuid != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 0, 2)
		x.xxx_hidden_ScopeUuid = b.ScopeUuid
	}
	if b.Name != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 1, 2)
		x.xxx_hidden_Name = b.Name
	}
	return m0
}

type CreateFacilityRequest struct {
	state                  protoimpl.MessageState `protogen:"opaque.v1"`
	xxx_hidden_ScopeUuid   *string                `protobuf:"bytes,1,opt,name=scope_uuid,json=scopeUuid"`
	xxx_hidden_Name        *string                `protobuf:"bytes,2,opt,name=name"`
	xxx_hidden_ConfigYaml  *string                `protobuf:"bytes,11,opt,name=config_yaml,json=configYaml"`
	xxx_hidden_CharmName   *string                `protobuf:"bytes,21,opt,name=charm_name,json=charmName"`
	xxx_hidden_Channel     *string                `protobuf:"bytes,22,opt,name=channel"`
	xxx_hidden_Revision    int64                  `protobuf:"varint,23,opt,name=revision"`
	xxx_hidden_Number      int64                  `protobuf:"varint,24,opt,name=number"`
	xxx_hidden_Placements  *[]*Machine_Placement  `protobuf:"bytes,31,rep,name=placements"`
	xxx_hidden_Constraint  *Machine_Constraint    `protobuf:"bytes,32,opt,name=constraint"`
	xxx_hidden_Trust       bool                   `protobuf:"varint,41,opt,name=trust"`
	XXX_raceDetectHookData protoimpl.RaceDetectHookData
	XXX_presence           [1]uint32
	unknownFields          protoimpl.UnknownFields
	sizeCache              protoimpl.SizeCache
}

func (x *CreateFacilityRequest) Reset() {
	*x = CreateFacilityRequest{}
	mi := &file_api_nexus_v1_nexus_proto_msgTypes[55]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CreateFacilityRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateFacilityRequest) ProtoMessage() {}

func (x *CreateFacilityRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_nexus_v1_nexus_proto_msgTypes[55]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *CreateFacilityRequest) GetScopeUuid() string {
	if x != nil {
		if x.xxx_hidden_ScopeUuid != nil {
			return *x.xxx_hidden_ScopeUuid
		}
		return ""
	}
	return ""
}

func (x *CreateFacilityRequest) GetName() string {
	if x != nil {
		if x.xxx_hidden_Name != nil {
			return *x.xxx_hidden_Name
		}
		return ""
	}
	return ""
}

func (x *CreateFacilityRequest) GetConfigYaml() string {
	if x != nil {
		if x.xxx_hidden_ConfigYaml != nil {
			return *x.xxx_hidden_ConfigYaml
		}
		return ""
	}
	return ""
}

func (x *CreateFacilityRequest) GetCharmName() string {
	if x != nil {
		if x.xxx_hidden_CharmName != nil {
			return *x.xxx_hidden_CharmName
		}
		return ""
	}
	return ""
}

func (x *CreateFacilityRequest) GetChannel() string {
	if x != nil {
		if x.xxx_hidden_Channel != nil {
			return *x.xxx_hidden_Channel
		}
		return ""
	}
	return ""
}

func (x *CreateFacilityRequest) GetRevision() int64 {
	if x != nil {
		return x.xxx_hidden_Revision
	}
	return 0
}

func (x *CreateFacilityRequest) GetNumber() int64 {
	if x != nil {
		return x.xxx_hidden_Number
	}
	return 0
}

func (x *CreateFacilityRequest) GetPlacements() []*Machine_Placement {
	if x != nil {
		if x.xxx_hidden_Placements != nil {
			return *x.xxx_hidden_Placements
		}
	}
	return nil
}

func (x *CreateFacilityRequest) GetConstraint() *Machine_Constraint {
	if x != nil {
		return x.xxx_hidden_Constraint
	}
	return nil
}

func (x *CreateFacilityRequest) GetTrust() bool {
	if x != nil {
		return x.xxx_hidden_Trust
	}
	return false
}

func (x *CreateFacilityRequest) SetScopeUuid(v string) {
	x.xxx_hidden_ScopeUuid = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 0, 10)
}

func (x *CreateFacilityRequest) SetName(v string) {
	x.xxx_hidden_Name = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 1, 10)
}

func (x *CreateFacilityRequest) SetConfigYaml(v string) {
	x.xxx_hidden_ConfigYaml = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 2, 10)
}

func (x *CreateFacilityRequest) SetCharmName(v string) {
	x.xxx_hidden_CharmName = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 3, 10)
}

func (x *CreateFacilityRequest) SetChannel(v string) {
	x.xxx_hidden_Channel = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 4, 10)
}

func (x *CreateFacilityRequest) SetRevision(v int64) {
	x.xxx_hidden_Revision = v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 5, 10)
}

func (x *CreateFacilityRequest) SetNumber(v int64) {
	x.xxx_hidden_Number = v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 6, 10)
}

func (x *CreateFacilityRequest) SetPlacements(v []*Machine_Placement) {
	x.xxx_hidden_Placements = &v
}

func (x *CreateFacilityRequest) SetConstraint(v *Machine_Constraint) {
	x.xxx_hidden_Constraint = v
}

func (x *CreateFacilityRequest) SetTrust(v bool) {
	x.xxx_hidden_Trust = v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 9, 10)
}

func (x *CreateFacilityRequest) HasScopeUuid() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 0)
}

func (x *CreateFacilityRequest) HasName() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 1)
}

func (x *CreateFacilityRequest) HasConfigYaml() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 2)
}

func (x *CreateFacilityRequest) HasCharmName() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 3)
}

func (x *CreateFacilityRequest) HasChannel() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 4)
}

func (x *CreateFacilityRequest) HasRevision() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 5)
}

func (x *CreateFacilityRequest) HasNumber() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 6)
}

func (x *CreateFacilityRequest) HasConstraint() bool {
	if x == nil {
		return false
	}
	return x.xxx_hidden_Constraint != nil
}

func (x *CreateFacilityRequest) HasTrust() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 9)
}

func (x *CreateFacilityRequest) ClearScopeUuid() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 0)
	x.xxx_hidden_ScopeUuid = nil
}

func (x *CreateFacilityRequest) ClearName() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 1)
	x.xxx_hidden_Name = nil
}

func (x *CreateFacilityRequest) ClearConfigYaml() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 2)
	x.xxx_hidden_ConfigYaml = nil
}

func (x *CreateFacilityRequest) ClearCharmName() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 3)
	x.xxx_hidden_CharmName = nil
}

func (x *CreateFacilityRequest) ClearChannel() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 4)
	x.xxx_hidden_Channel = nil
}

func (x *CreateFacilityRequest) ClearRevision() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 5)
	x.xxx_hidden_Revision = 0
}

func (x *CreateFacilityRequest) ClearNumber() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 6)
	x.xxx_hidden_Number = 0
}

func (x *CreateFacilityRequest) ClearConstraint() {
	x.xxx_hidden_Constraint = nil
}

func (x *CreateFacilityRequest) ClearTrust() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 9)
	x.xxx_hidden_Trust = false
}

type CreateFacilityRequest_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	ScopeUuid  *string
	Name       *string
	ConfigYaml *string
	CharmName  *string
	Channel    *string
	Revision   *int64
	Number     *int64
	Placements []*Machine_Placement
	Constraint *Machine_Constraint
	Trust      *bool
}

func (b0 CreateFacilityRequest_builder) Build() *CreateFacilityRequest {
	m0 := &CreateFacilityRequest{}
	b, x := &b0, m0
	_, _ = b, x
	if b.ScopeUuid != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 0, 10)
		x.xxx_hidden_ScopeUuid = b.ScopeUuid
	}
	if b.Name != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 1, 10)
		x.xxx_hidden_Name = b.Name
	}
	if b.ConfigYaml != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 2, 10)
		x.xxx_hidden_ConfigYaml = b.ConfigYaml
	}
	if b.CharmName != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 3, 10)
		x.xxx_hidden_CharmName = b.CharmName
	}
	if b.Channel != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 4, 10)
		x.xxx_hidden_Channel = b.Channel
	}
	if b.Revision != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 5, 10)
		x.xxx_hidden_Revision = *b.Revision
	}
	if b.Number != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 6, 10)
		x.xxx_hidden_Number = *b.Number
	}
	x.xxx_hidden_Placements = &b.Placements
	x.xxx_hidden_Constraint = b.Constraint
	if b.Trust != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 9, 10)
		x.xxx_hidden_Trust = *b.Trust
	}
	return m0
}

type UpdateFacilityRequest struct {
	state                  protoimpl.MessageState `protogen:"opaque.v1"`
	xxx_hidden_ScopeUuid   *string                `protobuf:"bytes,1,opt,name=scope_uuid,json=scopeUuid"`
	xxx_hidden_Name        *string                `protobuf:"bytes,2,opt,name=name"`
	xxx_hidden_ConfigYaml  *string                `protobuf:"bytes,11,opt,name=config_yaml,json=configYaml"`
	XXX_raceDetectHookData protoimpl.RaceDetectHookData
	XXX_presence           [1]uint32
	unknownFields          protoimpl.UnknownFields
	sizeCache              protoimpl.SizeCache
}

func (x *UpdateFacilityRequest) Reset() {
	*x = UpdateFacilityRequest{}
	mi := &file_api_nexus_v1_nexus_proto_msgTypes[56]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UpdateFacilityRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateFacilityRequest) ProtoMessage() {}

func (x *UpdateFacilityRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_nexus_v1_nexus_proto_msgTypes[56]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *UpdateFacilityRequest) GetScopeUuid() string {
	if x != nil {
		if x.xxx_hidden_ScopeUuid != nil {
			return *x.xxx_hidden_ScopeUuid
		}
		return ""
	}
	return ""
}

func (x *UpdateFacilityRequest) GetName() string {
	if x != nil {
		if x.xxx_hidden_Name != nil {
			return *x.xxx_hidden_Name
		}
		return ""
	}
	return ""
}

func (x *UpdateFacilityRequest) GetConfigYaml() string {
	if x != nil {
		if x.xxx_hidden_ConfigYaml != nil {
			return *x.xxx_hidden_ConfigYaml
		}
		return ""
	}
	return ""
}

func (x *UpdateFacilityRequest) SetScopeUuid(v string) {
	x.xxx_hidden_ScopeUuid = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 0, 3)
}

func (x *UpdateFacilityRequest) SetName(v string) {
	x.xxx_hidden_Name = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 1, 3)
}

func (x *UpdateFacilityRequest) SetConfigYaml(v string) {
	x.xxx_hidden_ConfigYaml = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 2, 3)
}

func (x *UpdateFacilityRequest) HasScopeUuid() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 0)
}

func (x *UpdateFacilityRequest) HasName() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 1)
}

func (x *UpdateFacilityRequest) HasConfigYaml() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 2)
}

func (x *UpdateFacilityRequest) ClearScopeUuid() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 0)
	x.xxx_hidden_ScopeUuid = nil
}

func (x *UpdateFacilityRequest) ClearName() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 1)
	x.xxx_hidden_Name = nil
}

func (x *UpdateFacilityRequest) ClearConfigYaml() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 2)
	x.xxx_hidden_ConfigYaml = nil
}

type UpdateFacilityRequest_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	ScopeUuid  *string
	Name       *string
	ConfigYaml *string
}

func (b0 UpdateFacilityRequest_builder) Build() *UpdateFacilityRequest {
	m0 := &UpdateFacilityRequest{}
	b, x := &b0, m0
	_, _ = b, x
	if b.ScopeUuid != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 0, 3)
		x.xxx_hidden_ScopeUuid = b.ScopeUuid
	}
	if b.Name != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 1, 3)
		x.xxx_hidden_Name = b.Name
	}
	if b.ConfigYaml != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 2, 3)
		x.xxx_hidden_ConfigYaml = b.ConfigYaml
	}
	return m0
}

type DeleteFacilityRequest struct {
	state                     protoimpl.MessageState `protogen:"opaque.v1"`
	xxx_hidden_ScopeUuid      *string                `protobuf:"bytes,1,opt,name=scope_uuid,json=scopeUuid"`
	xxx_hidden_Name           *string                `protobuf:"bytes,2,opt,name=name"`
	xxx_hidden_DestroyStorage bool                   `protobuf:"varint,11,opt,name=destroy_storage,json=destroyStorage"`
	xxx_hidden_Force          bool                   `protobuf:"varint,12,opt,name=force"`
	XXX_raceDetectHookData    protoimpl.RaceDetectHookData
	XXX_presence              [1]uint32
	unknownFields             protoimpl.UnknownFields
	sizeCache                 protoimpl.SizeCache
}

func (x *DeleteFacilityRequest) Reset() {
	*x = DeleteFacilityRequest{}
	mi := &file_api_nexus_v1_nexus_proto_msgTypes[57]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DeleteFacilityRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteFacilityRequest) ProtoMessage() {}

func (x *DeleteFacilityRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_nexus_v1_nexus_proto_msgTypes[57]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *DeleteFacilityRequest) GetScopeUuid() string {
	if x != nil {
		if x.xxx_hidden_ScopeUuid != nil {
			return *x.xxx_hidden_ScopeUuid
		}
		return ""
	}
	return ""
}

func (x *DeleteFacilityRequest) GetName() string {
	if x != nil {
		if x.xxx_hidden_Name != nil {
			return *x.xxx_hidden_Name
		}
		return ""
	}
	return ""
}

func (x *DeleteFacilityRequest) GetDestroyStorage() bool {
	if x != nil {
		return x.xxx_hidden_DestroyStorage
	}
	return false
}

func (x *DeleteFacilityRequest) GetForce() bool {
	if x != nil {
		return x.xxx_hidden_Force
	}
	return false
}

func (x *DeleteFacilityRequest) SetScopeUuid(v string) {
	x.xxx_hidden_ScopeUuid = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 0, 4)
}

func (x *DeleteFacilityRequest) SetName(v string) {
	x.xxx_hidden_Name = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 1, 4)
}

func (x *DeleteFacilityRequest) SetDestroyStorage(v bool) {
	x.xxx_hidden_DestroyStorage = v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 2, 4)
}

func (x *DeleteFacilityRequest) SetForce(v bool) {
	x.xxx_hidden_Force = v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 3, 4)
}

func (x *DeleteFacilityRequest) HasScopeUuid() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 0)
}

func (x *DeleteFacilityRequest) HasName() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 1)
}

func (x *DeleteFacilityRequest) HasDestroyStorage() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 2)
}

func (x *DeleteFacilityRequest) HasForce() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 3)
}

func (x *DeleteFacilityRequest) ClearScopeUuid() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 0)
	x.xxx_hidden_ScopeUuid = nil
}

func (x *DeleteFacilityRequest) ClearName() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 1)
	x.xxx_hidden_Name = nil
}

func (x *DeleteFacilityRequest) ClearDestroyStorage() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 2)
	x.xxx_hidden_DestroyStorage = false
}

func (x *DeleteFacilityRequest) ClearForce() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 3)
	x.xxx_hidden_Force = false
}

type DeleteFacilityRequest_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	ScopeUuid      *string
	Name           *string
	DestroyStorage *bool
	Force          *bool
}

func (b0 DeleteFacilityRequest_builder) Build() *DeleteFacilityRequest {
	m0 := &DeleteFacilityRequest{}
	b, x := &b0, m0
	_, _ = b, x
	if b.ScopeUuid != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 0, 4)
		x.xxx_hidden_ScopeUuid = b.ScopeUuid
	}
	if b.Name != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 1, 4)
		x.xxx_hidden_Name = b.Name
	}
	if b.DestroyStorage != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 2, 4)
		x.xxx_hidden_DestroyStorage = *b.DestroyStorage
	}
	if b.Force != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 3, 4)
		x.xxx_hidden_Force = *b.Force
	}
	return m0
}

type ExposeFacilityRequest struct {
	state                  protoimpl.MessageState `protogen:"opaque.v1"`
	xxx_hidden_ScopeUuid   *string                `protobuf:"bytes,1,opt,name=scope_uuid,json=scopeUuid"`
	xxx_hidden_Name        *string                `protobuf:"bytes,2,opt,name=name"`
	XXX_raceDetectHookData protoimpl.RaceDetectHookData
	XXX_presence           [1]uint32
	unknownFields          protoimpl.UnknownFields
	sizeCache              protoimpl.SizeCache
}

func (x *ExposeFacilityRequest) Reset() {
	*x = ExposeFacilityRequest{}
	mi := &file_api_nexus_v1_nexus_proto_msgTypes[58]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ExposeFacilityRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ExposeFacilityRequest) ProtoMessage() {}

func (x *ExposeFacilityRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_nexus_v1_nexus_proto_msgTypes[58]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *ExposeFacilityRequest) GetScopeUuid() string {
	if x != nil {
		if x.xxx_hidden_ScopeUuid != nil {
			return *x.xxx_hidden_ScopeUuid
		}
		return ""
	}
	return ""
}

func (x *ExposeFacilityRequest) GetName() string {
	if x != nil {
		if x.xxx_hidden_Name != nil {
			return *x.xxx_hidden_Name
		}
		return ""
	}
	return ""
}

func (x *ExposeFacilityRequest) SetScopeUuid(v string) {
	x.xxx_hidden_ScopeUuid = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 0, 2)
}

func (x *ExposeFacilityRequest) SetName(v string) {
	x.xxx_hidden_Name = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 1, 2)
}

func (x *ExposeFacilityRequest) HasScopeUuid() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 0)
}

func (x *ExposeFacilityRequest) HasName() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 1)
}

func (x *ExposeFacilityRequest) ClearScopeUuid() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 0)
	x.xxx_hidden_ScopeUuid = nil
}

func (x *ExposeFacilityRequest) ClearName() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 1)
	x.xxx_hidden_Name = nil
}

type ExposeFacilityRequest_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	ScopeUuid *string
	Name      *string
}

func (b0 ExposeFacilityRequest_builder) Build() *ExposeFacilityRequest {
	m0 := &ExposeFacilityRequest{}
	b, x := &b0, m0
	_, _ = b, x
	if b.ScopeUuid != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 0, 2)
		x.xxx_hidden_ScopeUuid = b.ScopeUuid
	}
	if b.Name != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 1, 2)
		x.xxx_hidden_Name = b.Name
	}
	return m0
}

type AddFacilityUnitsRequest struct {
	state                  protoimpl.MessageState `protogen:"opaque.v1"`
	xxx_hidden_ScopeUuid   *string                `protobuf:"bytes,1,opt,name=scope_uuid,json=scopeUuid"`
	xxx_hidden_Name        *string                `protobuf:"bytes,2,opt,name=name"`
	xxx_hidden_Number      int64                  `protobuf:"varint,11,opt,name=number"`
	xxx_hidden_Placements  *[]*Machine_Placement  `protobuf:"bytes,21,rep,name=placements"`
	XXX_raceDetectHookData protoimpl.RaceDetectHookData
	XXX_presence           [1]uint32
	unknownFields          protoimpl.UnknownFields
	sizeCache              protoimpl.SizeCache
}

func (x *AddFacilityUnitsRequest) Reset() {
	*x = AddFacilityUnitsRequest{}
	mi := &file_api_nexus_v1_nexus_proto_msgTypes[59]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *AddFacilityUnitsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddFacilityUnitsRequest) ProtoMessage() {}

func (x *AddFacilityUnitsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_nexus_v1_nexus_proto_msgTypes[59]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *AddFacilityUnitsRequest) GetScopeUuid() string {
	if x != nil {
		if x.xxx_hidden_ScopeUuid != nil {
			return *x.xxx_hidden_ScopeUuid
		}
		return ""
	}
	return ""
}

func (x *AddFacilityUnitsRequest) GetName() string {
	if x != nil {
		if x.xxx_hidden_Name != nil {
			return *x.xxx_hidden_Name
		}
		return ""
	}
	return ""
}

func (x *AddFacilityUnitsRequest) GetNumber() int64 {
	if x != nil {
		return x.xxx_hidden_Number
	}
	return 0
}

func (x *AddFacilityUnitsRequest) GetPlacements() []*Machine_Placement {
	if x != nil {
		if x.xxx_hidden_Placements != nil {
			return *x.xxx_hidden_Placements
		}
	}
	return nil
}

func (x *AddFacilityUnitsRequest) SetScopeUuid(v string) {
	x.xxx_hidden_ScopeUuid = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 0, 4)
}

func (x *AddFacilityUnitsRequest) SetName(v string) {
	x.xxx_hidden_Name = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 1, 4)
}

func (x *AddFacilityUnitsRequest) SetNumber(v int64) {
	x.xxx_hidden_Number = v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 2, 4)
}

func (x *AddFacilityUnitsRequest) SetPlacements(v []*Machine_Placement) {
	x.xxx_hidden_Placements = &v
}

func (x *AddFacilityUnitsRequest) HasScopeUuid() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 0)
}

func (x *AddFacilityUnitsRequest) HasName() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 1)
}

func (x *AddFacilityUnitsRequest) HasNumber() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 2)
}

func (x *AddFacilityUnitsRequest) ClearScopeUuid() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 0)
	x.xxx_hidden_ScopeUuid = nil
}

func (x *AddFacilityUnitsRequest) ClearName() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 1)
	x.xxx_hidden_Name = nil
}

func (x *AddFacilityUnitsRequest) ClearNumber() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 2)
	x.xxx_hidden_Number = 0
}

type AddFacilityUnitsRequest_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	ScopeUuid  *string
	Name       *string
	Number     *int64
	Placements []*Machine_Placement
}

func (b0 AddFacilityUnitsRequest_builder) Build() *AddFacilityUnitsRequest {
	m0 := &AddFacilityUnitsRequest{}
	b, x := &b0, m0
	_, _ = b, x
	if b.ScopeUuid != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 0, 4)
		x.xxx_hidden_ScopeUuid = b.ScopeUuid
	}
	if b.Name != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 1, 4)
		x.xxx_hidden_Name = b.Name
	}
	if b.Number != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 2, 4)
		x.xxx_hidden_Number = *b.Number
	}
	x.xxx_hidden_Placements = &b.Placements
	return m0
}

type AddFacilityUnitsResponse struct {
	state            protoimpl.MessageState `protogen:"opaque.v1"`
	xxx_hidden_Units []string               `protobuf:"bytes,1,rep,name=units"`
	unknownFields    protoimpl.UnknownFields
	sizeCache        protoimpl.SizeCache
}

func (x *AddFacilityUnitsResponse) Reset() {
	*x = AddFacilityUnitsResponse{}
	mi := &file_api_nexus_v1_nexus_proto_msgTypes[60]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *AddFacilityUnitsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddFacilityUnitsResponse) ProtoMessage() {}

func (x *AddFacilityUnitsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_api_nexus_v1_nexus_proto_msgTypes[60]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *AddFacilityUnitsResponse) GetUnits() []string {
	if x != nil {
		return x.xxx_hidden_Units
	}
	return nil
}

func (x *AddFacilityUnitsResponse) SetUnits(v []string) {
	x.xxx_hidden_Units = v
}

type AddFacilityUnitsResponse_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	Units []string
}

func (b0 AddFacilityUnitsResponse_builder) Build() *AddFacilityUnitsResponse {
	m0 := &AddFacilityUnitsResponse{}
	b, x := &b0, m0
	_, _ = b, x
	x.xxx_hidden_Units = b.Units
	return m0
}

type ListActionsRequest struct {
	state                   protoimpl.MessageState `protogen:"opaque.v1"`
	xxx_hidden_ScopeUuid    *string                `protobuf:"bytes,1,opt,name=scope_uuid,json=scopeUuid"`
	xxx_hidden_FacilityName *string                `protobuf:"bytes,2,opt,name=facility_name,json=facilityName"`
	XXX_raceDetectHookData  protoimpl.RaceDetectHookData
	XXX_presence            [1]uint32
	unknownFields           protoimpl.UnknownFields
	sizeCache               protoimpl.SizeCache
}

func (x *ListActionsRequest) Reset() {
	*x = ListActionsRequest{}
	mi := &file_api_nexus_v1_nexus_proto_msgTypes[61]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListActionsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListActionsRequest) ProtoMessage() {}

func (x *ListActionsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_nexus_v1_nexus_proto_msgTypes[61]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *ListActionsRequest) GetScopeUuid() string {
	if x != nil {
		if x.xxx_hidden_ScopeUuid != nil {
			return *x.xxx_hidden_ScopeUuid
		}
		return ""
	}
	return ""
}

func (x *ListActionsRequest) GetFacilityName() string {
	if x != nil {
		if x.xxx_hidden_FacilityName != nil {
			return *x.xxx_hidden_FacilityName
		}
		return ""
	}
	return ""
}

func (x *ListActionsRequest) SetScopeUuid(v string) {
	x.xxx_hidden_ScopeUuid = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 0, 2)
}

func (x *ListActionsRequest) SetFacilityName(v string) {
	x.xxx_hidden_FacilityName = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 1, 2)
}

func (x *ListActionsRequest) HasScopeUuid() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 0)
}

func (x *ListActionsRequest) HasFacilityName() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 1)
}

func (x *ListActionsRequest) ClearScopeUuid() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 0)
	x.xxx_hidden_ScopeUuid = nil
}

func (x *ListActionsRequest) ClearFacilityName() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 1)
	x.xxx_hidden_FacilityName = nil
}

type ListActionsRequest_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	ScopeUuid    *string
	FacilityName *string
}

func (b0 ListActionsRequest_builder) Build() *ListActionsRequest {
	m0 := &ListActionsRequest{}
	b, x := &b0, m0
	_, _ = b, x
	if b.ScopeUuid != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 0, 2)
		x.xxx_hidden_ScopeUuid = b.ScopeUuid
	}
	if b.FacilityName != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 1, 2)
		x.xxx_hidden_FacilityName = b.FacilityName
	}
	return m0
}

type ListActionsResponse struct {
	state              protoimpl.MessageState `protogen:"opaque.v1"`
	xxx_hidden_Actions *[]*Facility_Action    `protobuf:"bytes,1,rep,name=actions"`
	unknownFields      protoimpl.UnknownFields
	sizeCache          protoimpl.SizeCache
}

func (x *ListActionsResponse) Reset() {
	*x = ListActionsResponse{}
	mi := &file_api_nexus_v1_nexus_proto_msgTypes[62]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListActionsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListActionsResponse) ProtoMessage() {}

func (x *ListActionsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_api_nexus_v1_nexus_proto_msgTypes[62]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *ListActionsResponse) GetActions() []*Facility_Action {
	if x != nil {
		if x.xxx_hidden_Actions != nil {
			return *x.xxx_hidden_Actions
		}
	}
	return nil
}

func (x *ListActionsResponse) SetActions(v []*Facility_Action) {
	x.xxx_hidden_Actions = &v
}

type ListActionsResponse_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	Actions []*Facility_Action
}

func (b0 ListActionsResponse_builder) Build() *ListActionsResponse {
	m0 := &ListActionsResponse{}
	b, x := &b0, m0
	_, _ = b, x
	x.xxx_hidden_Actions = &b.Actions
	return m0
}

type DoActionRequest struct {
	state         protoimpl.MessageState `protogen:"opaque.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DoActionRequest) Reset() {
	*x = DoActionRequest{}
	mi := &file_api_nexus_v1_nexus_proto_msgTypes[63]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DoActionRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DoActionRequest) ProtoMessage() {}

func (x *DoActionRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_nexus_v1_nexus_proto_msgTypes[63]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

type DoActionRequest_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

}

func (b0 DoActionRequest_builder) Build() *DoActionRequest {
	m0 := &DoActionRequest{}
	b, x := &b0, m0
	_, _ = b, x
	return m0
}

type ListCharmsRequest struct {
	state         protoimpl.MessageState `protogen:"opaque.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ListCharmsRequest) Reset() {
	*x = ListCharmsRequest{}
	mi := &file_api_nexus_v1_nexus_proto_msgTypes[64]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListCharmsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListCharmsRequest) ProtoMessage() {}

func (x *ListCharmsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_nexus_v1_nexus_proto_msgTypes[64]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

type ListCharmsRequest_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

}

func (b0 ListCharmsRequest_builder) Build() *ListCharmsRequest {
	m0 := &ListCharmsRequest{}
	b, x := &b0, m0
	_, _ = b, x
	return m0
}

type ListCharmsResponse struct {
	state             protoimpl.MessageState `protogen:"opaque.v1"`
	xxx_hidden_Charms *[]*Facility_Charm     `protobuf:"bytes,1,rep,name=charms"`
	unknownFields     protoimpl.UnknownFields
	sizeCache         protoimpl.SizeCache
}

func (x *ListCharmsResponse) Reset() {
	*x = ListCharmsResponse{}
	mi := &file_api_nexus_v1_nexus_proto_msgTypes[65]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListCharmsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListCharmsResponse) ProtoMessage() {}

func (x *ListCharmsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_api_nexus_v1_nexus_proto_msgTypes[65]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *ListCharmsResponse) GetCharms() []*Facility_Charm {
	if x != nil {
		if x.xxx_hidden_Charms != nil {
			return *x.xxx_hidden_Charms
		}
	}
	return nil
}

func (x *ListCharmsResponse) SetCharms(v []*Facility_Charm) {
	x.xxx_hidden_Charms = &v
}

type ListCharmsResponse_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	Charms []*Facility_Charm
}

func (b0 ListCharmsResponse_builder) Build() *ListCharmsResponse {
	m0 := &ListCharmsResponse{}
	b, x := &b0, m0
	_, _ = b, x
	x.xxx_hidden_Charms = &b.Charms
	return m0
}

type GetCharmRequest struct {
	state                  protoimpl.MessageState `protogen:"opaque.v1"`
	xxx_hidden_Name        *string                `protobuf:"bytes,1,opt,name=name"`
	XXX_raceDetectHookData protoimpl.RaceDetectHookData
	XXX_presence           [1]uint32
	unknownFields          protoimpl.UnknownFields
	sizeCache              protoimpl.SizeCache
}

func (x *GetCharmRequest) Reset() {
	*x = GetCharmRequest{}
	mi := &file_api_nexus_v1_nexus_proto_msgTypes[66]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetCharmRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetCharmRequest) ProtoMessage() {}

func (x *GetCharmRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_nexus_v1_nexus_proto_msgTypes[66]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *GetCharmRequest) GetName() string {
	if x != nil {
		if x.xxx_hidden_Name != nil {
			return *x.xxx_hidden_Name
		}
		return ""
	}
	return ""
}

func (x *GetCharmRequest) SetName(v string) {
	x.xxx_hidden_Name = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 0, 1)
}

func (x *GetCharmRequest) HasName() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 0)
}

func (x *GetCharmRequest) ClearName() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 0)
	x.xxx_hidden_Name = nil
}

type GetCharmRequest_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	Name *string
}

func (b0 GetCharmRequest_builder) Build() *GetCharmRequest {
	m0 := &GetCharmRequest{}
	b, x := &b0, m0
	_, _ = b, x
	if b.Name != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 0, 1)
		x.xxx_hidden_Name = b.Name
	}
	return m0
}

type GetCharmMetadataRequest struct {
	state                  protoimpl.MessageState `protogen:"opaque.v1"`
	xxx_hidden_Name        *string                `protobuf:"bytes,1,opt,name=name"`
	XXX_raceDetectHookData protoimpl.RaceDetectHookData
	XXX_presence           [1]uint32
	unknownFields          protoimpl.UnknownFields
	sizeCache              protoimpl.SizeCache
}

func (x *GetCharmMetadataRequest) Reset() {
	*x = GetCharmMetadataRequest{}
	mi := &file_api_nexus_v1_nexus_proto_msgTypes[67]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetCharmMetadataRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetCharmMetadataRequest) ProtoMessage() {}

func (x *GetCharmMetadataRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_nexus_v1_nexus_proto_msgTypes[67]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *GetCharmMetadataRequest) GetName() string {
	if x != nil {
		if x.xxx_hidden_Name != nil {
			return *x.xxx_hidden_Name
		}
		return ""
	}
	return ""
}

func (x *GetCharmMetadataRequest) SetName(v string) {
	x.xxx_hidden_Name = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 0, 1)
}

func (x *GetCharmMetadataRequest) HasName() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 0)
}

func (x *GetCharmMetadataRequest) ClearName() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 0)
	x.xxx_hidden_Name = nil
}

type GetCharmMetadataRequest_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	Name *string
}

func (b0 GetCharmMetadataRequest_builder) Build() *GetCharmMetadataRequest {
	m0 := &GetCharmMetadataRequest{}
	b, x := &b0, m0
	_, _ = b, x
	if b.Name != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 0, 1)
		x.xxx_hidden_Name = b.Name
	}
	return m0
}

type ListCharmArtifactsRequest struct {
	state                  protoimpl.MessageState `protogen:"opaque.v1"`
	xxx_hidden_Name        *string                `protobuf:"bytes,1,opt,name=name"`
	XXX_raceDetectHookData protoimpl.RaceDetectHookData
	XXX_presence           [1]uint32
	unknownFields          protoimpl.UnknownFields
	sizeCache              protoimpl.SizeCache
}

func (x *ListCharmArtifactsRequest) Reset() {
	*x = ListCharmArtifactsRequest{}
	mi := &file_api_nexus_v1_nexus_proto_msgTypes[68]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListCharmArtifactsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListCharmArtifactsRequest) ProtoMessage() {}

func (x *ListCharmArtifactsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_nexus_v1_nexus_proto_msgTypes[68]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *ListCharmArtifactsRequest) GetName() string {
	if x != nil {
		if x.xxx_hidden_Name != nil {
			return *x.xxx_hidden_Name
		}
		return ""
	}
	return ""
}

func (x *ListCharmArtifactsRequest) SetName(v string) {
	x.xxx_hidden_Name = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 0, 1)
}

func (x *ListCharmArtifactsRequest) HasName() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 0)
}

func (x *ListCharmArtifactsRequest) ClearName() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 0)
	x.xxx_hidden_Name = nil
}

type ListCharmArtifactsRequest_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	Name *string
}

func (b0 ListCharmArtifactsRequest_builder) Build() *ListCharmArtifactsRequest {
	m0 := &ListCharmArtifactsRequest{}
	b, x := &b0, m0
	_, _ = b, x
	if b.Name != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 0, 1)
		x.xxx_hidden_Name = b.Name
	}
	return m0
}

type ListCharmArtifactsResponse struct {
	state                protoimpl.MessageState      `protogen:"opaque.v1"`
	xxx_hidden_Artifacts *[]*Facility_Charm_Artifact `protobuf:"bytes,1,rep,name=artifacts"`
	unknownFields        protoimpl.UnknownFields
	sizeCache            protoimpl.SizeCache
}

func (x *ListCharmArtifactsResponse) Reset() {
	*x = ListCharmArtifactsResponse{}
	mi := &file_api_nexus_v1_nexus_proto_msgTypes[69]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListCharmArtifactsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListCharmArtifactsResponse) ProtoMessage() {}

func (x *ListCharmArtifactsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_api_nexus_v1_nexus_proto_msgTypes[69]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *ListCharmArtifactsResponse) GetArtifacts() []*Facility_Charm_Artifact {
	if x != nil {
		if x.xxx_hidden_Artifacts != nil {
			return *x.xxx_hidden_Artifacts
		}
	}
	return nil
}

func (x *ListCharmArtifactsResponse) SetArtifacts(v []*Facility_Charm_Artifact) {
	x.xxx_hidden_Artifacts = &v
}

type ListCharmArtifactsResponse_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	Artifacts []*Facility_Charm_Artifact
}

func (b0 ListCharmArtifactsResponse_builder) Build() *ListCharmArtifactsResponse {
	m0 := &ListCharmArtifactsResponse{}
	b, x := &b0, m0
	_, _ = b, x
	x.xxx_hidden_Artifacts = &b.Artifacts
	return m0
}

type ListApplicationsRequest struct {
	state                   protoimpl.MessageState `protogen:"opaque.v1"`
	xxx_hidden_ScopeUuid    *string                `protobuf:"bytes,1,opt,name=scope_uuid,json=scopeUuid"`
	xxx_hidden_FacilityName *string                `protobuf:"bytes,2,opt,name=facility_name,json=facilityName"`
	XXX_raceDetectHookData  protoimpl.RaceDetectHookData
	XXX_presence            [1]uint32
	unknownFields           protoimpl.UnknownFields
	sizeCache               protoimpl.SizeCache
}

func (x *ListApplicationsRequest) Reset() {
	*x = ListApplicationsRequest{}
	mi := &file_api_nexus_v1_nexus_proto_msgTypes[70]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListApplicationsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListApplicationsRequest) ProtoMessage() {}

func (x *ListApplicationsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_nexus_v1_nexus_proto_msgTypes[70]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *ListApplicationsRequest) GetScopeUuid() string {
	if x != nil {
		if x.xxx_hidden_ScopeUuid != nil {
			return *x.xxx_hidden_ScopeUuid
		}
		return ""
	}
	return ""
}

func (x *ListApplicationsRequest) GetFacilityName() string {
	if x != nil {
		if x.xxx_hidden_FacilityName != nil {
			return *x.xxx_hidden_FacilityName
		}
		return ""
	}
	return ""
}

func (x *ListApplicationsRequest) SetScopeUuid(v string) {
	x.xxx_hidden_ScopeUuid = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 0, 2)
}

func (x *ListApplicationsRequest) SetFacilityName(v string) {
	x.xxx_hidden_FacilityName = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 1, 2)
}

func (x *ListApplicationsRequest) HasScopeUuid() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 0)
}

func (x *ListApplicationsRequest) HasFacilityName() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 1)
}

func (x *ListApplicationsRequest) ClearScopeUuid() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 0)
	x.xxx_hidden_ScopeUuid = nil
}

func (x *ListApplicationsRequest) ClearFacilityName() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 1)
	x.xxx_hidden_FacilityName = nil
}

type ListApplicationsRequest_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	ScopeUuid    *string
	FacilityName *string
}

func (b0 ListApplicationsRequest_builder) Build() *ListApplicationsRequest {
	m0 := &ListApplicationsRequest{}
	b, x := &b0, m0
	_, _ = b, x
	if b.ScopeUuid != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 0, 2)
		x.xxx_hidden_ScopeUuid = b.ScopeUuid
	}
	if b.FacilityName != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 1, 2)
		x.xxx_hidden_FacilityName = b.FacilityName
	}
	return m0
}

type ListApplicationsResponse struct {
	state                   protoimpl.MessageState `protogen:"opaque.v1"`
	xxx_hidden_Applications *[]*Application        `protobuf:"bytes,1,rep,name=applications"`
	unknownFields           protoimpl.UnknownFields
	sizeCache               protoimpl.SizeCache
}

func (x *ListApplicationsResponse) Reset() {
	*x = ListApplicationsResponse{}
	mi := &file_api_nexus_v1_nexus_proto_msgTypes[71]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListApplicationsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListApplicationsResponse) ProtoMessage() {}

func (x *ListApplicationsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_api_nexus_v1_nexus_proto_msgTypes[71]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *ListApplicationsResponse) GetApplications() []*Application {
	if x != nil {
		if x.xxx_hidden_Applications != nil {
			return *x.xxx_hidden_Applications
		}
	}
	return nil
}

func (x *ListApplicationsResponse) SetApplications(v []*Application) {
	x.xxx_hidden_Applications = &v
}

type ListApplicationsResponse_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	Applications []*Application
}

func (b0 ListApplicationsResponse_builder) Build() *ListApplicationsResponse {
	m0 := &ListApplicationsResponse{}
	b, x := &b0, m0
	_, _ = b, x
	x.xxx_hidden_Applications = &b.Applications
	return m0
}

type GetApplicationRequest struct {
	state                   protoimpl.MessageState `protogen:"opaque.v1"`
	xxx_hidden_ScopeUuid    *string                `protobuf:"bytes,1,opt,name=scope_uuid,json=scopeUuid"`
	xxx_hidden_FacilityName *string                `protobuf:"bytes,2,opt,name=facility_name,json=facilityName"`
	xxx_hidden_Namespace    *string                `protobuf:"bytes,3,opt,name=namespace"`
	xxx_hidden_Name         *string                `protobuf:"bytes,4,opt,name=name"`
	XXX_raceDetectHookData  protoimpl.RaceDetectHookData
	XXX_presence            [1]uint32
	unknownFields           protoimpl.UnknownFields
	sizeCache               protoimpl.SizeCache
}

func (x *GetApplicationRequest) Reset() {
	*x = GetApplicationRequest{}
	mi := &file_api_nexus_v1_nexus_proto_msgTypes[72]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetApplicationRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetApplicationRequest) ProtoMessage() {}

func (x *GetApplicationRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_nexus_v1_nexus_proto_msgTypes[72]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *GetApplicationRequest) GetScopeUuid() string {
	if x != nil {
		if x.xxx_hidden_ScopeUuid != nil {
			return *x.xxx_hidden_ScopeUuid
		}
		return ""
	}
	return ""
}

func (x *GetApplicationRequest) GetFacilityName() string {
	if x != nil {
		if x.xxx_hidden_FacilityName != nil {
			return *x.xxx_hidden_FacilityName
		}
		return ""
	}
	return ""
}

func (x *GetApplicationRequest) GetNamespace() string {
	if x != nil {
		if x.xxx_hidden_Namespace != nil {
			return *x.xxx_hidden_Namespace
		}
		return ""
	}
	return ""
}

func (x *GetApplicationRequest) GetName() string {
	if x != nil {
		if x.xxx_hidden_Name != nil {
			return *x.xxx_hidden_Name
		}
		return ""
	}
	return ""
}

func (x *GetApplicationRequest) SetScopeUuid(v string) {
	x.xxx_hidden_ScopeUuid = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 0, 4)
}

func (x *GetApplicationRequest) SetFacilityName(v string) {
	x.xxx_hidden_FacilityName = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 1, 4)
}

func (x *GetApplicationRequest) SetNamespace(v string) {
	x.xxx_hidden_Namespace = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 2, 4)
}

func (x *GetApplicationRequest) SetName(v string) {
	x.xxx_hidden_Name = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 3, 4)
}

func (x *GetApplicationRequest) HasScopeUuid() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 0)
}

func (x *GetApplicationRequest) HasFacilityName() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 1)
}

func (x *GetApplicationRequest) HasNamespace() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 2)
}

func (x *GetApplicationRequest) HasName() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 3)
}

func (x *GetApplicationRequest) ClearScopeUuid() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 0)
	x.xxx_hidden_ScopeUuid = nil
}

func (x *GetApplicationRequest) ClearFacilityName() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 1)
	x.xxx_hidden_FacilityName = nil
}

func (x *GetApplicationRequest) ClearNamespace() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 2)
	x.xxx_hidden_Namespace = nil
}

func (x *GetApplicationRequest) ClearName() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 3)
	x.xxx_hidden_Name = nil
}

type GetApplicationRequest_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	ScopeUuid    *string
	FacilityName *string
	Namespace    *string
	Name         *string
}

func (b0 GetApplicationRequest_builder) Build() *GetApplicationRequest {
	m0 := &GetApplicationRequest{}
	b, x := &b0, m0
	_, _ = b, x
	if b.ScopeUuid != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 0, 4)
		x.xxx_hidden_ScopeUuid = b.ScopeUuid
	}
	if b.FacilityName != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 1, 4)
		x.xxx_hidden_FacilityName = b.FacilityName
	}
	if b.Namespace != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 2, 4)
		x.xxx_hidden_Namespace = b.Namespace
	}
	if b.Name != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 3, 4)
		x.xxx_hidden_Name = b.Name
	}
	return m0
}

type ListReleasesRequest struct {
	state         protoimpl.MessageState `protogen:"opaque.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ListReleasesRequest) Reset() {
	*x = ListReleasesRequest{}
	mi := &file_api_nexus_v1_nexus_proto_msgTypes[73]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListReleasesRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListReleasesRequest) ProtoMessage() {}

func (x *ListReleasesRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_nexus_v1_nexus_proto_msgTypes[73]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

type ListReleasesRequest_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

}

func (b0 ListReleasesRequest_builder) Build() *ListReleasesRequest {
	m0 := &ListReleasesRequest{}
	b, x := &b0, m0
	_, _ = b, x
	return m0
}

type ListReleasesResponse struct {
	state               protoimpl.MessageState  `protogen:"opaque.v1"`
	xxx_hidden_Releases *[]*Application_Release `protobuf:"bytes,1,rep,name=releases"`
	unknownFields       protoimpl.UnknownFields
	sizeCache           protoimpl.SizeCache
}

func (x *ListReleasesResponse) Reset() {
	*x = ListReleasesResponse{}
	mi := &file_api_nexus_v1_nexus_proto_msgTypes[74]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListReleasesResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListReleasesResponse) ProtoMessage() {}

func (x *ListReleasesResponse) ProtoReflect() protoreflect.Message {
	mi := &file_api_nexus_v1_nexus_proto_msgTypes[74]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *ListReleasesResponse) GetReleases() []*Application_Release {
	if x != nil {
		if x.xxx_hidden_Releases != nil {
			return *x.xxx_hidden_Releases
		}
	}
	return nil
}

func (x *ListReleasesResponse) SetReleases(v []*Application_Release) {
	x.xxx_hidden_Releases = &v
}

type ListReleasesResponse_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	Releases []*Application_Release
}

func (b0 ListReleasesResponse_builder) Build() *ListReleasesResponse {
	m0 := &ListReleasesResponse{}
	b, x := &b0, m0
	_, _ = b, x
	x.xxx_hidden_Releases = &b.Releases
	return m0
}

type CreateReleaseRequest struct {
	state                   protoimpl.MessageState `protogen:"opaque.v1"`
	xxx_hidden_ScopeUuid    *string                `protobuf:"bytes,1,opt,name=scope_uuid,json=scopeUuid"`
	xxx_hidden_FacilityName *string                `protobuf:"bytes,2,opt,name=facility_name,json=facilityName"`
	xxx_hidden_Namespace    *string                `protobuf:"bytes,3,opt,name=namespace"`
	xxx_hidden_Name         *string                `protobuf:"bytes,4,opt,name=name"`
	xxx_hidden_DryRun       bool                   `protobuf:"varint,5,opt,name=dry_run,json=dryRun"`
	xxx_hidden_ChartRef     *string                `protobuf:"bytes,11,opt,name=chart_ref,json=chartRef"`
	xxx_hidden_ValuesYaml   *string                `protobuf:"bytes,12,opt,name=values_yaml,json=valuesYaml"`
	XXX_raceDetectHookData  protoimpl.RaceDetectHookData
	XXX_presence            [1]uint32
	unknownFields           protoimpl.UnknownFields
	sizeCache               protoimpl.SizeCache
}

func (x *CreateReleaseRequest) Reset() {
	*x = CreateReleaseRequest{}
	mi := &file_api_nexus_v1_nexus_proto_msgTypes[75]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CreateReleaseRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateReleaseRequest) ProtoMessage() {}

func (x *CreateReleaseRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_nexus_v1_nexus_proto_msgTypes[75]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *CreateReleaseRequest) GetScopeUuid() string {
	if x != nil {
		if x.xxx_hidden_ScopeUuid != nil {
			return *x.xxx_hidden_ScopeUuid
		}
		return ""
	}
	return ""
}

func (x *CreateReleaseRequest) GetFacilityName() string {
	if x != nil {
		if x.xxx_hidden_FacilityName != nil {
			return *x.xxx_hidden_FacilityName
		}
		return ""
	}
	return ""
}

func (x *CreateReleaseRequest) GetNamespace() string {
	if x != nil {
		if x.xxx_hidden_Namespace != nil {
			return *x.xxx_hidden_Namespace
		}
		return ""
	}
	return ""
}

func (x *CreateReleaseRequest) GetName() string {
	if x != nil {
		if x.xxx_hidden_Name != nil {
			return *x.xxx_hidden_Name
		}
		return ""
	}
	return ""
}

func (x *CreateReleaseRequest) GetDryRun() bool {
	if x != nil {
		return x.xxx_hidden_DryRun
	}
	return false
}

func (x *CreateReleaseRequest) GetChartRef() string {
	if x != nil {
		if x.xxx_hidden_ChartRef != nil {
			return *x.xxx_hidden_ChartRef
		}
		return ""
	}
	return ""
}

func (x *CreateReleaseRequest) GetValuesYaml() string {
	if x != nil {
		if x.xxx_hidden_ValuesYaml != nil {
			return *x.xxx_hidden_ValuesYaml
		}
		return ""
	}
	return ""
}

func (x *CreateReleaseRequest) SetScopeUuid(v string) {
	x.xxx_hidden_ScopeUuid = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 0, 7)
}

func (x *CreateReleaseRequest) SetFacilityName(v string) {
	x.xxx_hidden_FacilityName = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 1, 7)
}

func (x *CreateReleaseRequest) SetNamespace(v string) {
	x.xxx_hidden_Namespace = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 2, 7)
}

func (x *CreateReleaseRequest) SetName(v string) {
	x.xxx_hidden_Name = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 3, 7)
}

func (x *CreateReleaseRequest) SetDryRun(v bool) {
	x.xxx_hidden_DryRun = v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 4, 7)
}

func (x *CreateReleaseRequest) SetChartRef(v string) {
	x.xxx_hidden_ChartRef = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 5, 7)
}

func (x *CreateReleaseRequest) SetValuesYaml(v string) {
	x.xxx_hidden_ValuesYaml = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 6, 7)
}

func (x *CreateReleaseRequest) HasScopeUuid() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 0)
}

func (x *CreateReleaseRequest) HasFacilityName() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 1)
}

func (x *CreateReleaseRequest) HasNamespace() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 2)
}

func (x *CreateReleaseRequest) HasName() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 3)
}

func (x *CreateReleaseRequest) HasDryRun() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 4)
}

func (x *CreateReleaseRequest) HasChartRef() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 5)
}

func (x *CreateReleaseRequest) HasValuesYaml() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 6)
}

func (x *CreateReleaseRequest) ClearScopeUuid() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 0)
	x.xxx_hidden_ScopeUuid = nil
}

func (x *CreateReleaseRequest) ClearFacilityName() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 1)
	x.xxx_hidden_FacilityName = nil
}

func (x *CreateReleaseRequest) ClearNamespace() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 2)
	x.xxx_hidden_Namespace = nil
}

func (x *CreateReleaseRequest) ClearName() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 3)
	x.xxx_hidden_Name = nil
}

func (x *CreateReleaseRequest) ClearDryRun() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 4)
	x.xxx_hidden_DryRun = false
}

func (x *CreateReleaseRequest) ClearChartRef() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 5)
	x.xxx_hidden_ChartRef = nil
}

func (x *CreateReleaseRequest) ClearValuesYaml() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 6)
	x.xxx_hidden_ValuesYaml = nil
}

type CreateReleaseRequest_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	ScopeUuid    *string
	FacilityName *string
	Namespace    *string
	Name         *string
	DryRun       *bool
	ChartRef     *string
	ValuesYaml   *string
}

func (b0 CreateReleaseRequest_builder) Build() *CreateReleaseRequest {
	m0 := &CreateReleaseRequest{}
	b, x := &b0, m0
	_, _ = b, x
	if b.ScopeUuid != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 0, 7)
		x.xxx_hidden_ScopeUuid = b.ScopeUuid
	}
	if b.FacilityName != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 1, 7)
		x.xxx_hidden_FacilityName = b.FacilityName
	}
	if b.Namespace != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 2, 7)
		x.xxx_hidden_Namespace = b.Namespace
	}
	if b.Name != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 3, 7)
		x.xxx_hidden_Name = b.Name
	}
	if b.DryRun != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 4, 7)
		x.xxx_hidden_DryRun = *b.DryRun
	}
	if b.ChartRef != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 5, 7)
		x.xxx_hidden_ChartRef = b.ChartRef
	}
	if b.ValuesYaml != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 6, 7)
		x.xxx_hidden_ValuesYaml = b.ValuesYaml
	}
	return m0
}

type UpdateReleaseRequest struct {
	state                   protoimpl.MessageState `protogen:"opaque.v1"`
	xxx_hidden_ScopeUuid    *string                `protobuf:"bytes,1,opt,name=scope_uuid,json=scopeUuid"`
	xxx_hidden_FacilityName *string                `protobuf:"bytes,2,opt,name=facility_name,json=facilityName"`
	xxx_hidden_Namespace    *string                `protobuf:"bytes,3,opt,name=namespace"`
	xxx_hidden_Name         *string                `protobuf:"bytes,4,opt,name=name"`
	xxx_hidden_DryRun       bool                   `protobuf:"varint,5,opt,name=dry_run,json=dryRun"`
	xxx_hidden_ChartRef     *string                `protobuf:"bytes,11,opt,name=chart_ref,json=chartRef"`
	xxx_hidden_ValuesYaml   *string                `protobuf:"bytes,12,opt,name=values_yaml,json=valuesYaml"`
	XXX_raceDetectHookData  protoimpl.RaceDetectHookData
	XXX_presence            [1]uint32
	unknownFields           protoimpl.UnknownFields
	sizeCache               protoimpl.SizeCache
}

func (x *UpdateReleaseRequest) Reset() {
	*x = UpdateReleaseRequest{}
	mi := &file_api_nexus_v1_nexus_proto_msgTypes[76]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UpdateReleaseRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateReleaseRequest) ProtoMessage() {}

func (x *UpdateReleaseRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_nexus_v1_nexus_proto_msgTypes[76]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *UpdateReleaseRequest) GetScopeUuid() string {
	if x != nil {
		if x.xxx_hidden_ScopeUuid != nil {
			return *x.xxx_hidden_ScopeUuid
		}
		return ""
	}
	return ""
}

func (x *UpdateReleaseRequest) GetFacilityName() string {
	if x != nil {
		if x.xxx_hidden_FacilityName != nil {
			return *x.xxx_hidden_FacilityName
		}
		return ""
	}
	return ""
}

func (x *UpdateReleaseRequest) GetNamespace() string {
	if x != nil {
		if x.xxx_hidden_Namespace != nil {
			return *x.xxx_hidden_Namespace
		}
		return ""
	}
	return ""
}

func (x *UpdateReleaseRequest) GetName() string {
	if x != nil {
		if x.xxx_hidden_Name != nil {
			return *x.xxx_hidden_Name
		}
		return ""
	}
	return ""
}

func (x *UpdateReleaseRequest) GetDryRun() bool {
	if x != nil {
		return x.xxx_hidden_DryRun
	}
	return false
}

func (x *UpdateReleaseRequest) GetChartRef() string {
	if x != nil {
		if x.xxx_hidden_ChartRef != nil {
			return *x.xxx_hidden_ChartRef
		}
		return ""
	}
	return ""
}

func (x *UpdateReleaseRequest) GetValuesYaml() string {
	if x != nil {
		if x.xxx_hidden_ValuesYaml != nil {
			return *x.xxx_hidden_ValuesYaml
		}
		return ""
	}
	return ""
}

func (x *UpdateReleaseRequest) SetScopeUuid(v string) {
	x.xxx_hidden_ScopeUuid = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 0, 7)
}

func (x *UpdateReleaseRequest) SetFacilityName(v string) {
	x.xxx_hidden_FacilityName = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 1, 7)
}

func (x *UpdateReleaseRequest) SetNamespace(v string) {
	x.xxx_hidden_Namespace = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 2, 7)
}

func (x *UpdateReleaseRequest) SetName(v string) {
	x.xxx_hidden_Name = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 3, 7)
}

func (x *UpdateReleaseRequest) SetDryRun(v bool) {
	x.xxx_hidden_DryRun = v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 4, 7)
}

func (x *UpdateReleaseRequest) SetChartRef(v string) {
	x.xxx_hidden_ChartRef = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 5, 7)
}

func (x *UpdateReleaseRequest) SetValuesYaml(v string) {
	x.xxx_hidden_ValuesYaml = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 6, 7)
}

func (x *UpdateReleaseRequest) HasScopeUuid() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 0)
}

func (x *UpdateReleaseRequest) HasFacilityName() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 1)
}

func (x *UpdateReleaseRequest) HasNamespace() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 2)
}

func (x *UpdateReleaseRequest) HasName() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 3)
}

func (x *UpdateReleaseRequest) HasDryRun() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 4)
}

func (x *UpdateReleaseRequest) HasChartRef() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 5)
}

func (x *UpdateReleaseRequest) HasValuesYaml() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 6)
}

func (x *UpdateReleaseRequest) ClearScopeUuid() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 0)
	x.xxx_hidden_ScopeUuid = nil
}

func (x *UpdateReleaseRequest) ClearFacilityName() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 1)
	x.xxx_hidden_FacilityName = nil
}

func (x *UpdateReleaseRequest) ClearNamespace() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 2)
	x.xxx_hidden_Namespace = nil
}

func (x *UpdateReleaseRequest) ClearName() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 3)
	x.xxx_hidden_Name = nil
}

func (x *UpdateReleaseRequest) ClearDryRun() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 4)
	x.xxx_hidden_DryRun = false
}

func (x *UpdateReleaseRequest) ClearChartRef() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 5)
	x.xxx_hidden_ChartRef = nil
}

func (x *UpdateReleaseRequest) ClearValuesYaml() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 6)
	x.xxx_hidden_ValuesYaml = nil
}

type UpdateReleaseRequest_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	ScopeUuid    *string
	FacilityName *string
	Namespace    *string
	Name         *string
	DryRun       *bool
	ChartRef     *string
	ValuesYaml   *string
}

func (b0 UpdateReleaseRequest_builder) Build() *UpdateReleaseRequest {
	m0 := &UpdateReleaseRequest{}
	b, x := &b0, m0
	_, _ = b, x
	if b.ScopeUuid != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 0, 7)
		x.xxx_hidden_ScopeUuid = b.ScopeUuid
	}
	if b.FacilityName != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 1, 7)
		x.xxx_hidden_FacilityName = b.FacilityName
	}
	if b.Namespace != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 2, 7)
		x.xxx_hidden_Namespace = b.Namespace
	}
	if b.Name != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 3, 7)
		x.xxx_hidden_Name = b.Name
	}
	if b.DryRun != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 4, 7)
		x.xxx_hidden_DryRun = *b.DryRun
	}
	if b.ChartRef != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 5, 7)
		x.xxx_hidden_ChartRef = b.ChartRef
	}
	if b.ValuesYaml != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 6, 7)
		x.xxx_hidden_ValuesYaml = b.ValuesYaml
	}
	return m0
}

type DeleteReleaseRequest struct {
	state                   protoimpl.MessageState `protogen:"opaque.v1"`
	xxx_hidden_ScopeUuid    *string                `protobuf:"bytes,1,opt,name=scope_uuid,json=scopeUuid"`
	xxx_hidden_FacilityName *string                `protobuf:"bytes,2,opt,name=facility_name,json=facilityName"`
	xxx_hidden_Namespace    *string                `protobuf:"bytes,3,opt,name=namespace"`
	xxx_hidden_Name         *string                `protobuf:"bytes,4,opt,name=name"`
	xxx_hidden_DryRun       bool                   `protobuf:"varint,5,opt,name=dry_run,json=dryRun"`
	XXX_raceDetectHookData  protoimpl.RaceDetectHookData
	XXX_presence            [1]uint32
	unknownFields           protoimpl.UnknownFields
	sizeCache               protoimpl.SizeCache
}

func (x *DeleteReleaseRequest) Reset() {
	*x = DeleteReleaseRequest{}
	mi := &file_api_nexus_v1_nexus_proto_msgTypes[77]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DeleteReleaseRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteReleaseRequest) ProtoMessage() {}

func (x *DeleteReleaseRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_nexus_v1_nexus_proto_msgTypes[77]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *DeleteReleaseRequest) GetScopeUuid() string {
	if x != nil {
		if x.xxx_hidden_ScopeUuid != nil {
			return *x.xxx_hidden_ScopeUuid
		}
		return ""
	}
	return ""
}

func (x *DeleteReleaseRequest) GetFacilityName() string {
	if x != nil {
		if x.xxx_hidden_FacilityName != nil {
			return *x.xxx_hidden_FacilityName
		}
		return ""
	}
	return ""
}

func (x *DeleteReleaseRequest) GetNamespace() string {
	if x != nil {
		if x.xxx_hidden_Namespace != nil {
			return *x.xxx_hidden_Namespace
		}
		return ""
	}
	return ""
}

func (x *DeleteReleaseRequest) GetName() string {
	if x != nil {
		if x.xxx_hidden_Name != nil {
			return *x.xxx_hidden_Name
		}
		return ""
	}
	return ""
}

func (x *DeleteReleaseRequest) GetDryRun() bool {
	if x != nil {
		return x.xxx_hidden_DryRun
	}
	return false
}

func (x *DeleteReleaseRequest) SetScopeUuid(v string) {
	x.xxx_hidden_ScopeUuid = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 0, 5)
}

func (x *DeleteReleaseRequest) SetFacilityName(v string) {
	x.xxx_hidden_FacilityName = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 1, 5)
}

func (x *DeleteReleaseRequest) SetNamespace(v string) {
	x.xxx_hidden_Namespace = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 2, 5)
}

func (x *DeleteReleaseRequest) SetName(v string) {
	x.xxx_hidden_Name = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 3, 5)
}

func (x *DeleteReleaseRequest) SetDryRun(v bool) {
	x.xxx_hidden_DryRun = v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 4, 5)
}

func (x *DeleteReleaseRequest) HasScopeUuid() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 0)
}

func (x *DeleteReleaseRequest) HasFacilityName() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 1)
}

func (x *DeleteReleaseRequest) HasNamespace() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 2)
}

func (x *DeleteReleaseRequest) HasName() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 3)
}

func (x *DeleteReleaseRequest) HasDryRun() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 4)
}

func (x *DeleteReleaseRequest) ClearScopeUuid() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 0)
	x.xxx_hidden_ScopeUuid = nil
}

func (x *DeleteReleaseRequest) ClearFacilityName() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 1)
	x.xxx_hidden_FacilityName = nil
}

func (x *DeleteReleaseRequest) ClearNamespace() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 2)
	x.xxx_hidden_Namespace = nil
}

func (x *DeleteReleaseRequest) ClearName() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 3)
	x.xxx_hidden_Name = nil
}

func (x *DeleteReleaseRequest) ClearDryRun() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 4)
	x.xxx_hidden_DryRun = false
}

type DeleteReleaseRequest_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	ScopeUuid    *string
	FacilityName *string
	Namespace    *string
	Name         *string
	DryRun       *bool
}

func (b0 DeleteReleaseRequest_builder) Build() *DeleteReleaseRequest {
	m0 := &DeleteReleaseRequest{}
	b, x := &b0, m0
	_, _ = b, x
	if b.ScopeUuid != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 0, 5)
		x.xxx_hidden_ScopeUuid = b.ScopeUuid
	}
	if b.FacilityName != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 1, 5)
		x.xxx_hidden_FacilityName = b.FacilityName
	}
	if b.Namespace != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 2, 5)
		x.xxx_hidden_Namespace = b.Namespace
	}
	if b.Name != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 3, 5)
		x.xxx_hidden_Name = b.Name
	}
	if b.DryRun != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 4, 5)
		x.xxx_hidden_DryRun = *b.DryRun
	}
	return m0
}

type RollbackReleaseRequest struct {
	state                   protoimpl.MessageState `protogen:"opaque.v1"`
	xxx_hidden_ScopeUuid    *string                `protobuf:"bytes,1,opt,name=scope_uuid,json=scopeUuid"`
	xxx_hidden_FacilityName *string                `protobuf:"bytes,2,opt,name=facility_name,json=facilityName"`
	xxx_hidden_Namespace    *string                `protobuf:"bytes,3,opt,name=namespace"`
	xxx_hidden_Name         *string                `protobuf:"bytes,4,opt,name=name"`
	xxx_hidden_DryRun       bool                   `protobuf:"varint,5,opt,name=dry_run,json=dryRun"`
	XXX_raceDetectHookData  protoimpl.RaceDetectHookData
	XXX_presence            [1]uint32
	unknownFields           protoimpl.UnknownFields
	sizeCache               protoimpl.SizeCache
}

func (x *RollbackReleaseRequest) Reset() {
	*x = RollbackReleaseRequest{}
	mi := &file_api_nexus_v1_nexus_proto_msgTypes[78]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RollbackReleaseRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RollbackReleaseRequest) ProtoMessage() {}

func (x *RollbackReleaseRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_nexus_v1_nexus_proto_msgTypes[78]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *RollbackReleaseRequest) GetScopeUuid() string {
	if x != nil {
		if x.xxx_hidden_ScopeUuid != nil {
			return *x.xxx_hidden_ScopeUuid
		}
		return ""
	}
	return ""
}

func (x *RollbackReleaseRequest) GetFacilityName() string {
	if x != nil {
		if x.xxx_hidden_FacilityName != nil {
			return *x.xxx_hidden_FacilityName
		}
		return ""
	}
	return ""
}

func (x *RollbackReleaseRequest) GetNamespace() string {
	if x != nil {
		if x.xxx_hidden_Namespace != nil {
			return *x.xxx_hidden_Namespace
		}
		return ""
	}
	return ""
}

func (x *RollbackReleaseRequest) GetName() string {
	if x != nil {
		if x.xxx_hidden_Name != nil {
			return *x.xxx_hidden_Name
		}
		return ""
	}
	return ""
}

func (x *RollbackReleaseRequest) GetDryRun() bool {
	if x != nil {
		return x.xxx_hidden_DryRun
	}
	return false
}

func (x *RollbackReleaseRequest) SetScopeUuid(v string) {
	x.xxx_hidden_ScopeUuid = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 0, 5)
}

func (x *RollbackReleaseRequest) SetFacilityName(v string) {
	x.xxx_hidden_FacilityName = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 1, 5)
}

func (x *RollbackReleaseRequest) SetNamespace(v string) {
	x.xxx_hidden_Namespace = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 2, 5)
}

func (x *RollbackReleaseRequest) SetName(v string) {
	x.xxx_hidden_Name = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 3, 5)
}

func (x *RollbackReleaseRequest) SetDryRun(v bool) {
	x.xxx_hidden_DryRun = v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 4, 5)
}

func (x *RollbackReleaseRequest) HasScopeUuid() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 0)
}

func (x *RollbackReleaseRequest) HasFacilityName() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 1)
}

func (x *RollbackReleaseRequest) HasNamespace() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 2)
}

func (x *RollbackReleaseRequest) HasName() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 3)
}

func (x *RollbackReleaseRequest) HasDryRun() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 4)
}

func (x *RollbackReleaseRequest) ClearScopeUuid() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 0)
	x.xxx_hidden_ScopeUuid = nil
}

func (x *RollbackReleaseRequest) ClearFacilityName() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 1)
	x.xxx_hidden_FacilityName = nil
}

func (x *RollbackReleaseRequest) ClearNamespace() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 2)
	x.xxx_hidden_Namespace = nil
}

func (x *RollbackReleaseRequest) ClearName() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 3)
	x.xxx_hidden_Name = nil
}

func (x *RollbackReleaseRequest) ClearDryRun() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 4)
	x.xxx_hidden_DryRun = false
}

type RollbackReleaseRequest_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	ScopeUuid    *string
	FacilityName *string
	Namespace    *string
	Name         *string
	DryRun       *bool
}

func (b0 RollbackReleaseRequest_builder) Build() *RollbackReleaseRequest {
	m0 := &RollbackReleaseRequest{}
	b, x := &b0, m0
	_, _ = b, x
	if b.ScopeUuid != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 0, 5)
		x.xxx_hidden_ScopeUuid = b.ScopeUuid
	}
	if b.FacilityName != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 1, 5)
		x.xxx_hidden_FacilityName = b.FacilityName
	}
	if b.Namespace != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 2, 5)
		x.xxx_hidden_Namespace = b.Namespace
	}
	if b.Name != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 3, 5)
		x.xxx_hidden_Name = b.Name
	}
	if b.DryRun != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 4, 5)
		x.xxx_hidden_DryRun = *b.DryRun
	}
	return m0
}

type ListChartsRequest struct {
	state         protoimpl.MessageState `protogen:"opaque.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ListChartsRequest) Reset() {
	*x = ListChartsRequest{}
	mi := &file_api_nexus_v1_nexus_proto_msgTypes[79]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListChartsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListChartsRequest) ProtoMessage() {}

func (x *ListChartsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_nexus_v1_nexus_proto_msgTypes[79]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

type ListChartsRequest_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

}

func (b0 ListChartsRequest_builder) Build() *ListChartsRequest {
	m0 := &ListChartsRequest{}
	b, x := &b0, m0
	_, _ = b, x
	return m0
}

type ListChartsResponse struct {
	state             protoimpl.MessageState `protogen:"opaque.v1"`
	xxx_hidden_Charts *[]*Application_Chart  `protobuf:"bytes,1,rep,name=charts"`
	unknownFields     protoimpl.UnknownFields
	sizeCache         protoimpl.SizeCache
}

func (x *ListChartsResponse) Reset() {
	*x = ListChartsResponse{}
	mi := &file_api_nexus_v1_nexus_proto_msgTypes[80]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListChartsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListChartsResponse) ProtoMessage() {}

func (x *ListChartsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_api_nexus_v1_nexus_proto_msgTypes[80]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *ListChartsResponse) GetCharts() []*Application_Chart {
	if x != nil {
		if x.xxx_hidden_Charts != nil {
			return *x.xxx_hidden_Charts
		}
	}
	return nil
}

func (x *ListChartsResponse) SetCharts(v []*Application_Chart) {
	x.xxx_hidden_Charts = &v
}

type ListChartsResponse_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	Charts []*Application_Chart
}

func (b0 ListChartsResponse_builder) Build() *ListChartsResponse {
	m0 := &ListChartsResponse{}
	b, x := &b0, m0
	_, _ = b, x
	x.xxx_hidden_Charts = &b.Charts
	return m0
}

type GetChartRequest struct {
	state                  protoimpl.MessageState `protogen:"opaque.v1"`
	xxx_hidden_Name        *string                `protobuf:"bytes,1,opt,name=name"`
	XXX_raceDetectHookData protoimpl.RaceDetectHookData
	XXX_presence           [1]uint32
	unknownFields          protoimpl.UnknownFields
	sizeCache              protoimpl.SizeCache
}

func (x *GetChartRequest) Reset() {
	*x = GetChartRequest{}
	mi := &file_api_nexus_v1_nexus_proto_msgTypes[81]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetChartRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetChartRequest) ProtoMessage() {}

func (x *GetChartRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_nexus_v1_nexus_proto_msgTypes[81]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *GetChartRequest) GetName() string {
	if x != nil {
		if x.xxx_hidden_Name != nil {
			return *x.xxx_hidden_Name
		}
		return ""
	}
	return ""
}

func (x *GetChartRequest) SetName(v string) {
	x.xxx_hidden_Name = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 0, 1)
}

func (x *GetChartRequest) HasName() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 0)
}

func (x *GetChartRequest) ClearName() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 0)
	x.xxx_hidden_Name = nil
}

type GetChartRequest_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	Name *string
}

func (b0 GetChartRequest_builder) Build() *GetChartRequest {
	m0 := &GetChartRequest{}
	b, x := &b0, m0
	_, _ = b, x
	if b.Name != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 0, 1)
		x.xxx_hidden_Name = b.Name
	}
	return m0
}

type GetChartMetadataRequest struct {
	state                  protoimpl.MessageState `protogen:"opaque.v1"`
	xxx_hidden_ChartRef    *string                `protobuf:"bytes,1,opt,name=chart_ref,json=chartRef"`
	XXX_raceDetectHookData protoimpl.RaceDetectHookData
	XXX_presence           [1]uint32
	unknownFields          protoimpl.UnknownFields
	sizeCache              protoimpl.SizeCache
}

func (x *GetChartMetadataRequest) Reset() {
	*x = GetChartMetadataRequest{}
	mi := &file_api_nexus_v1_nexus_proto_msgTypes[82]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetChartMetadataRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetChartMetadataRequest) ProtoMessage() {}

func (x *GetChartMetadataRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_nexus_v1_nexus_proto_msgTypes[82]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *GetChartMetadataRequest) GetChartRef() string {
	if x != nil {
		if x.xxx_hidden_ChartRef != nil {
			return *x.xxx_hidden_ChartRef
		}
		return ""
	}
	return ""
}

func (x *GetChartMetadataRequest) SetChartRef(v string) {
	x.xxx_hidden_ChartRef = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 0, 1)
}

func (x *GetChartMetadataRequest) HasChartRef() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 0)
}

func (x *GetChartMetadataRequest) ClearChartRef() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 0)
	x.xxx_hidden_ChartRef = nil
}

type GetChartMetadataRequest_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	ChartRef *string
}

func (b0 GetChartMetadataRequest_builder) Build() *GetChartMetadataRequest {
	m0 := &GetChartMetadataRequest{}
	b, x := &b0, m0
	_, _ = b, x
	if b.ChartRef != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 0, 1)
		x.xxx_hidden_ChartRef = b.ChartRef
	}
	return m0
}

type ListTagsRequest struct {
	state         protoimpl.MessageState `protogen:"opaque.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ListTagsRequest) Reset() {
	*x = ListTagsRequest{}
	mi := &file_api_nexus_v1_nexus_proto_msgTypes[83]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListTagsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListTagsRequest) ProtoMessage() {}

func (x *ListTagsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_nexus_v1_nexus_proto_msgTypes[83]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

type ListTagsRequest_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

}

func (b0 ListTagsRequest_builder) Build() *ListTagsRequest {
	m0 := &ListTagsRequest{}
	b, x := &b0, m0
	_, _ = b, x
	return m0
}

type ListTagsResponse struct {
	state           protoimpl.MessageState `protogen:"opaque.v1"`
	xxx_hidden_Tags *[]*Tag                `protobuf:"bytes,1,rep,name=tags"`
	unknownFields   protoimpl.UnknownFields
	sizeCache       protoimpl.SizeCache
}

func (x *ListTagsResponse) Reset() {
	*x = ListTagsResponse{}
	mi := &file_api_nexus_v1_nexus_proto_msgTypes[84]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListTagsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListTagsResponse) ProtoMessage() {}

func (x *ListTagsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_api_nexus_v1_nexus_proto_msgTypes[84]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *ListTagsResponse) GetTags() []*Tag {
	if x != nil {
		if x.xxx_hidden_Tags != nil {
			return *x.xxx_hidden_Tags
		}
	}
	return nil
}

func (x *ListTagsResponse) SetTags(v []*Tag) {
	x.xxx_hidden_Tags = &v
}

type ListTagsResponse_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	Tags []*Tag
}

func (b0 ListTagsResponse_builder) Build() *ListTagsResponse {
	m0 := &ListTagsResponse{}
	b, x := &b0, m0
	_, _ = b, x
	x.xxx_hidden_Tags = &b.Tags
	return m0
}

type GetTagRequest struct {
	state                  protoimpl.MessageState `protogen:"opaque.v1"`
	xxx_hidden_Name        *string                `protobuf:"bytes,1,opt,name=name"`
	XXX_raceDetectHookData protoimpl.RaceDetectHookData
	XXX_presence           [1]uint32
	unknownFields          protoimpl.UnknownFields
	sizeCache              protoimpl.SizeCache
}

func (x *GetTagRequest) Reset() {
	*x = GetTagRequest{}
	mi := &file_api_nexus_v1_nexus_proto_msgTypes[85]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetTagRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetTagRequest) ProtoMessage() {}

func (x *GetTagRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_nexus_v1_nexus_proto_msgTypes[85]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *GetTagRequest) GetName() string {
	if x != nil {
		if x.xxx_hidden_Name != nil {
			return *x.xxx_hidden_Name
		}
		return ""
	}
	return ""
}

func (x *GetTagRequest) SetName(v string) {
	x.xxx_hidden_Name = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 0, 1)
}

func (x *GetTagRequest) HasName() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 0)
}

func (x *GetTagRequest) ClearName() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 0)
	x.xxx_hidden_Name = nil
}

type GetTagRequest_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	Name *string
}

func (b0 GetTagRequest_builder) Build() *GetTagRequest {
	m0 := &GetTagRequest{}
	b, x := &b0, m0
	_, _ = b, x
	if b.Name != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 0, 1)
		x.xxx_hidden_Name = b.Name
	}
	return m0
}

type CreateTagRequest struct {
	state                  protoimpl.MessageState `protogen:"opaque.v1"`
	xxx_hidden_Name        *string                `protobuf:"bytes,1,opt,name=name"`
	xxx_hidden_Comment     *string                `protobuf:"bytes,2,opt,name=comment"`
	XXX_raceDetectHookData protoimpl.RaceDetectHookData
	XXX_presence           [1]uint32
	unknownFields          protoimpl.UnknownFields
	sizeCache              protoimpl.SizeCache
}

func (x *CreateTagRequest) Reset() {
	*x = CreateTagRequest{}
	mi := &file_api_nexus_v1_nexus_proto_msgTypes[86]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CreateTagRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateTagRequest) ProtoMessage() {}

func (x *CreateTagRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_nexus_v1_nexus_proto_msgTypes[86]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *CreateTagRequest) GetName() string {
	if x != nil {
		if x.xxx_hidden_Name != nil {
			return *x.xxx_hidden_Name
		}
		return ""
	}
	return ""
}

func (x *CreateTagRequest) GetComment() string {
	if x != nil {
		if x.xxx_hidden_Comment != nil {
			return *x.xxx_hidden_Comment
		}
		return ""
	}
	return ""
}

func (x *CreateTagRequest) SetName(v string) {
	x.xxx_hidden_Name = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 0, 2)
}

func (x *CreateTagRequest) SetComment(v string) {
	x.xxx_hidden_Comment = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 1, 2)
}

func (x *CreateTagRequest) HasName() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 0)
}

func (x *CreateTagRequest) HasComment() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 1)
}

func (x *CreateTagRequest) ClearName() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 0)
	x.xxx_hidden_Name = nil
}

func (x *CreateTagRequest) ClearComment() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 1)
	x.xxx_hidden_Comment = nil
}

type CreateTagRequest_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	Name    *string
	Comment *string
}

func (b0 CreateTagRequest_builder) Build() *CreateTagRequest {
	m0 := &CreateTagRequest{}
	b, x := &b0, m0
	_, _ = b, x
	if b.Name != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 0, 2)
		x.xxx_hidden_Name = b.Name
	}
	if b.Comment != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 1, 2)
		x.xxx_hidden_Comment = b.Comment
	}
	return m0
}

type DeleteTagRequest struct {
	state                  protoimpl.MessageState `protogen:"opaque.v1"`
	xxx_hidden_Name        *string                `protobuf:"bytes,1,opt,name=name"`
	XXX_raceDetectHookData protoimpl.RaceDetectHookData
	XXX_presence           [1]uint32
	unknownFields          protoimpl.UnknownFields
	sizeCache              protoimpl.SizeCache
}

func (x *DeleteTagRequest) Reset() {
	*x = DeleteTagRequest{}
	mi := &file_api_nexus_v1_nexus_proto_msgTypes[87]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DeleteTagRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteTagRequest) ProtoMessage() {}

func (x *DeleteTagRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_nexus_v1_nexus_proto_msgTypes[87]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *DeleteTagRequest) GetName() string {
	if x != nil {
		if x.xxx_hidden_Name != nil {
			return *x.xxx_hidden_Name
		}
		return ""
	}
	return ""
}

func (x *DeleteTagRequest) SetName(v string) {
	x.xxx_hidden_Name = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 0, 1)
}

func (x *DeleteTagRequest) HasName() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 0)
}

func (x *DeleteTagRequest) ClearName() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 0)
	x.xxx_hidden_Name = nil
}

type DeleteTagRequest_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	Name *string
}

func (b0 DeleteTagRequest_builder) Build() *DeleteTagRequest {
	m0 := &DeleteTagRequest{}
	b, x := &b0, m0
	_, _ = b, x
	if b.Name != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 0, 1)
		x.xxx_hidden_Name = b.Name
	}
	return m0
}

type ListStorageClassesRequest struct {
	state                   protoimpl.MessageState `protogen:"opaque.v1"`
	xxx_hidden_ScopeUuid    *string                `protobuf:"bytes,1,opt,name=scope_uuid,json=scopeUuid"`
	xxx_hidden_FacilityName *string                `protobuf:"bytes,2,opt,name=facility_name,json=facilityName"`
	XXX_raceDetectHookData  protoimpl.RaceDetectHookData
	XXX_presence            [1]uint32
	unknownFields           protoimpl.UnknownFields
	sizeCache               protoimpl.SizeCache
}

func (x *ListStorageClassesRequest) Reset() {
	*x = ListStorageClassesRequest{}
	mi := &file_api_nexus_v1_nexus_proto_msgTypes[88]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListStorageClassesRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListStorageClassesRequest) ProtoMessage() {}

func (x *ListStorageClassesRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_nexus_v1_nexus_proto_msgTypes[88]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *ListStorageClassesRequest) GetScopeUuid() string {
	if x != nil {
		if x.xxx_hidden_ScopeUuid != nil {
			return *x.xxx_hidden_ScopeUuid
		}
		return ""
	}
	return ""
}

func (x *ListStorageClassesRequest) GetFacilityName() string {
	if x != nil {
		if x.xxx_hidden_FacilityName != nil {
			return *x.xxx_hidden_FacilityName
		}
		return ""
	}
	return ""
}

func (x *ListStorageClassesRequest) SetScopeUuid(v string) {
	x.xxx_hidden_ScopeUuid = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 0, 2)
}

func (x *ListStorageClassesRequest) SetFacilityName(v string) {
	x.xxx_hidden_FacilityName = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 1, 2)
}

func (x *ListStorageClassesRequest) HasScopeUuid() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 0)
}

func (x *ListStorageClassesRequest) HasFacilityName() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 1)
}

func (x *ListStorageClassesRequest) ClearScopeUuid() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 0)
	x.xxx_hidden_ScopeUuid = nil
}

func (x *ListStorageClassesRequest) ClearFacilityName() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 1)
	x.xxx_hidden_FacilityName = nil
}

type ListStorageClassesRequest_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	ScopeUuid    *string
	FacilityName *string
}

func (b0 ListStorageClassesRequest_builder) Build() *ListStorageClassesRequest {
	m0 := &ListStorageClassesRequest{}
	b, x := &b0, m0
	_, _ = b, x
	if b.ScopeUuid != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 0, 2)
		x.xxx_hidden_ScopeUuid = b.ScopeUuid
	}
	if b.FacilityName != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 1, 2)
		x.xxx_hidden_FacilityName = b.FacilityName
	}
	return m0
}

type ListStorageClassesResponse struct {
	state                     protoimpl.MessageState `protogen:"opaque.v1"`
	xxx_hidden_StorageClasses *[]*StorageClass       `protobuf:"bytes,1,rep,name=storage_classes,json=storageClasses"`
	unknownFields             protoimpl.UnknownFields
	sizeCache                 protoimpl.SizeCache
}

func (x *ListStorageClassesResponse) Reset() {
	*x = ListStorageClassesResponse{}
	mi := &file_api_nexus_v1_nexus_proto_msgTypes[89]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListStorageClassesResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListStorageClassesResponse) ProtoMessage() {}

func (x *ListStorageClassesResponse) ProtoReflect() protoreflect.Message {
	mi := &file_api_nexus_v1_nexus_proto_msgTypes[89]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *ListStorageClassesResponse) GetStorageClasses() []*StorageClass {
	if x != nil {
		if x.xxx_hidden_StorageClasses != nil {
			return *x.xxx_hidden_StorageClasses
		}
	}
	return nil
}

func (x *ListStorageClassesResponse) SetStorageClasses(v []*StorageClass) {
	x.xxx_hidden_StorageClasses = &v
}

type ListStorageClassesResponse_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	StorageClasses []*StorageClass
}

func (b0 ListStorageClassesResponse_builder) Build() *ListStorageClassesResponse {
	m0 := &ListStorageClassesResponse{}
	b, x := &b0, m0
	_, _ = b, x
	x.xxx_hidden_StorageClasses = &b.StorageClasses
	return m0
}

type CreateStorageClassRequest struct {
	state                  protoimpl.MessageState `protogen:"opaque.v1"`
	xxx_hidden_Kubernetes  *Facility_Info         `protobuf:"bytes,1,opt,name=kubernetes"`
	xxx_hidden_Ceph        *Facility_Info         `protobuf:"bytes,2,opt,name=ceph"`
	xxx_hidden_Prefix      *string                `protobuf:"bytes,3,opt,name=prefix"`
	XXX_raceDetectHookData protoimpl.RaceDetectHookData
	XXX_presence           [1]uint32
	unknownFields          protoimpl.UnknownFields
	sizeCache              protoimpl.SizeCache
}

func (x *CreateStorageClassRequest) Reset() {
	*x = CreateStorageClassRequest{}
	mi := &file_api_nexus_v1_nexus_proto_msgTypes[90]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CreateStorageClassRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateStorageClassRequest) ProtoMessage() {}

func (x *CreateStorageClassRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_nexus_v1_nexus_proto_msgTypes[90]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *CreateStorageClassRequest) GetKubernetes() *Facility_Info {
	if x != nil {
		return x.xxx_hidden_Kubernetes
	}
	return nil
}

func (x *CreateStorageClassRequest) GetCeph() *Facility_Info {
	if x != nil {
		return x.xxx_hidden_Ceph
	}
	return nil
}

func (x *CreateStorageClassRequest) GetPrefix() string {
	if x != nil {
		if x.xxx_hidden_Prefix != nil {
			return *x.xxx_hidden_Prefix
		}
		return ""
	}
	return ""
}

func (x *CreateStorageClassRequest) SetKubernetes(v *Facility_Info) {
	x.xxx_hidden_Kubernetes = v
}

func (x *CreateStorageClassRequest) SetCeph(v *Facility_Info) {
	x.xxx_hidden_Ceph = v
}

func (x *CreateStorageClassRequest) SetPrefix(v string) {
	x.xxx_hidden_Prefix = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 2, 3)
}

func (x *CreateStorageClassRequest) HasKubernetes() bool {
	if x == nil {
		return false
	}
	return x.xxx_hidden_Kubernetes != nil
}

func (x *CreateStorageClassRequest) HasCeph() bool {
	if x == nil {
		return false
	}
	return x.xxx_hidden_Ceph != nil
}

func (x *CreateStorageClassRequest) HasPrefix() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 2)
}

func (x *CreateStorageClassRequest) ClearKubernetes() {
	x.xxx_hidden_Kubernetes = nil
}

func (x *CreateStorageClassRequest) ClearCeph() {
	x.xxx_hidden_Ceph = nil
}

func (x *CreateStorageClassRequest) ClearPrefix() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 2)
	x.xxx_hidden_Prefix = nil
}

type CreateStorageClassRequest_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	Kubernetes *Facility_Info
	Ceph       *Facility_Info
	Prefix     *string
}

func (b0 CreateStorageClassRequest_builder) Build() *CreateStorageClassRequest {
	m0 := &CreateStorageClassRequest{}
	b, x := &b0, m0
	_, _ = b, x
	x.xxx_hidden_Kubernetes = b.Kubernetes
	x.xxx_hidden_Ceph = b.Ceph
	if b.Prefix != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 2, 3)
		x.xxx_hidden_Prefix = b.Prefix
	}
	return m0
}

type Configuration_NTPServer struct {
	state                protoimpl.MessageState `protogen:"opaque.v1"`
	xxx_hidden_Addresses []string               `protobuf:"bytes,1,rep,name=addresses"`
	unknownFields        protoimpl.UnknownFields
	sizeCache            protoimpl.SizeCache
}

func (x *Configuration_NTPServer) Reset() {
	*x = Configuration_NTPServer{}
	mi := &file_api_nexus_v1_nexus_proto_msgTypes[91]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Configuration_NTPServer) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Configuration_NTPServer) ProtoMessage() {}

func (x *Configuration_NTPServer) ProtoReflect() protoreflect.Message {
	mi := &file_api_nexus_v1_nexus_proto_msgTypes[91]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *Configuration_NTPServer) GetAddresses() []string {
	if x != nil {
		return x.xxx_hidden_Addresses
	}
	return nil
}

func (x *Configuration_NTPServer) SetAddresses(v []string) {
	x.xxx_hidden_Addresses = v
}

type Configuration_NTPServer_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	Addresses []string
}

func (b0 Configuration_NTPServer_builder) Build() *Configuration_NTPServer {
	m0 := &Configuration_NTPServer{}
	b, x := &b0, m0
	_, _ = b, x
	x.xxx_hidden_Addresses = b.Addresses
	return m0
}

type Configuration_PackageRepository struct {
	state                  protoimpl.MessageState `protogen:"opaque.v1"`
	xxx_hidden_Id          int64                  `protobuf:"varint,1,opt,name=id"`
	xxx_hidden_Name        *string                `protobuf:"bytes,2,opt,name=name"`
	xxx_hidden_Url         *string                `protobuf:"bytes,3,opt,name=url"`
	xxx_hidden_Enabled     bool                   `protobuf:"varint,4,opt,name=enabled"`
	XXX_raceDetectHookData protoimpl.RaceDetectHookData
	XXX_presence           [1]uint32
	unknownFields          protoimpl.UnknownFields
	sizeCache              protoimpl.SizeCache
}

func (x *Configuration_PackageRepository) Reset() {
	*x = Configuration_PackageRepository{}
	mi := &file_api_nexus_v1_nexus_proto_msgTypes[92]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Configuration_PackageRepository) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Configuration_PackageRepository) ProtoMessage() {}

func (x *Configuration_PackageRepository) ProtoReflect() protoreflect.Message {
	mi := &file_api_nexus_v1_nexus_proto_msgTypes[92]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *Configuration_PackageRepository) GetId() int64 {
	if x != nil {
		return x.xxx_hidden_Id
	}
	return 0
}

func (x *Configuration_PackageRepository) GetName() string {
	if x != nil {
		if x.xxx_hidden_Name != nil {
			return *x.xxx_hidden_Name
		}
		return ""
	}
	return ""
}

func (x *Configuration_PackageRepository) GetUrl() string {
	if x != nil {
		if x.xxx_hidden_Url != nil {
			return *x.xxx_hidden_Url
		}
		return ""
	}
	return ""
}

func (x *Configuration_PackageRepository) GetEnabled() bool {
	if x != nil {
		return x.xxx_hidden_Enabled
	}
	return false
}

func (x *Configuration_PackageRepository) SetId(v int64) {
	x.xxx_hidden_Id = v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 0, 4)
}

func (x *Configuration_PackageRepository) SetName(v string) {
	x.xxx_hidden_Name = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 1, 4)
}

func (x *Configuration_PackageRepository) SetUrl(v string) {
	x.xxx_hidden_Url = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 2, 4)
}

func (x *Configuration_PackageRepository) SetEnabled(v bool) {
	x.xxx_hidden_Enabled = v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 3, 4)
}

func (x *Configuration_PackageRepository) HasId() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 0)
}

func (x *Configuration_PackageRepository) HasName() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 1)
}

func (x *Configuration_PackageRepository) HasUrl() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 2)
}

func (x *Configuration_PackageRepository) HasEnabled() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 3)
}

func (x *Configuration_PackageRepository) ClearId() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 0)
	x.xxx_hidden_Id = 0
}

func (x *Configuration_PackageRepository) ClearName() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 1)
	x.xxx_hidden_Name = nil
}

func (x *Configuration_PackageRepository) ClearUrl() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 2)
	x.xxx_hidden_Url = nil
}

func (x *Configuration_PackageRepository) ClearEnabled() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 3)
	x.xxx_hidden_Enabled = false
}

type Configuration_PackageRepository_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	Id      *int64
	Name    *string
	Url     *string
	Enabled *bool
}

func (b0 Configuration_PackageRepository_builder) Build() *Configuration_PackageRepository {
	m0 := &Configuration_PackageRepository{}
	b, x := &b0, m0
	_, _ = b, x
	if b.Id != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 0, 4)
		x.xxx_hidden_Id = *b.Id
	}
	if b.Name != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 1, 4)
		x.xxx_hidden_Name = b.Name
	}
	if b.Url != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 2, 4)
		x.xxx_hidden_Url = b.Url
	}
	if b.Enabled != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 3, 4)
		x.xxx_hidden_Enabled = *b.Enabled
	}
	return m0
}

type Configuration_BootImageSelection struct {
	state                    protoimpl.MessageState `protogen:"opaque.v1"`
	xxx_hidden_DistroSeries  *string                `protobuf:"bytes,1,opt,name=distro_series,json=distroSeries"`
	xxx_hidden_Name          *string                `protobuf:"bytes,2,opt,name=name"`
	xxx_hidden_Architectures []string               `protobuf:"bytes,3,rep,name=architectures"`
	XXX_raceDetectHookData   protoimpl.RaceDetectHookData
	XXX_presence             [1]uint32
	unknownFields            protoimpl.UnknownFields
	sizeCache                protoimpl.SizeCache
}

func (x *Configuration_BootImageSelection) Reset() {
	*x = Configuration_BootImageSelection{}
	mi := &file_api_nexus_v1_nexus_proto_msgTypes[93]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Configuration_BootImageSelection) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Configuration_BootImageSelection) ProtoMessage() {}

func (x *Configuration_BootImageSelection) ProtoReflect() protoreflect.Message {
	mi := &file_api_nexus_v1_nexus_proto_msgTypes[93]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *Configuration_BootImageSelection) GetDistroSeries() string {
	if x != nil {
		if x.xxx_hidden_DistroSeries != nil {
			return *x.xxx_hidden_DistroSeries
		}
		return ""
	}
	return ""
}

func (x *Configuration_BootImageSelection) GetName() string {
	if x != nil {
		if x.xxx_hidden_Name != nil {
			return *x.xxx_hidden_Name
		}
		return ""
	}
	return ""
}

func (x *Configuration_BootImageSelection) GetArchitectures() []string {
	if x != nil {
		return x.xxx_hidden_Architectures
	}
	return nil
}

func (x *Configuration_BootImageSelection) SetDistroSeries(v string) {
	x.xxx_hidden_DistroSeries = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 0, 3)
}

func (x *Configuration_BootImageSelection) SetName(v string) {
	x.xxx_hidden_Name = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 1, 3)
}

func (x *Configuration_BootImageSelection) SetArchitectures(v []string) {
	x.xxx_hidden_Architectures = v
}

func (x *Configuration_BootImageSelection) HasDistroSeries() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 0)
}

func (x *Configuration_BootImageSelection) HasName() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 1)
}

func (x *Configuration_BootImageSelection) ClearDistroSeries() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 0)
	x.xxx_hidden_DistroSeries = nil
}

func (x *Configuration_BootImageSelection) ClearName() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 1)
	x.xxx_hidden_Name = nil
}

type Configuration_BootImageSelection_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	DistroSeries  *string
	Name          *string
	Architectures []string
}

func (b0 Configuration_BootImageSelection_builder) Build() *Configuration_BootImageSelection {
	m0 := &Configuration_BootImageSelection{}
	b, x := &b0, m0
	_, _ = b, x
	if b.DistroSeries != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 0, 3)
		x.xxx_hidden_DistroSeries = b.DistroSeries
	}
	if b.Name != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 1, 3)
		x.xxx_hidden_Name = b.Name
	}
	x.xxx_hidden_Architectures = b.Architectures
	return m0
}

type Configuration_BootImage struct {
	state                            protoimpl.MessageState `protogen:"opaque.v1"`
	xxx_hidden_Source                *string                `protobuf:"bytes,1,opt,name=source"`
	xxx_hidden_DistroSeries          *string                `protobuf:"bytes,2,opt,name=distro_series,json=distroSeries"`
	xxx_hidden_Name                  *string                `protobuf:"bytes,3,opt,name=name"`
	xxx_hidden_ArchitectureStatusMap map[string]string      `protobuf:"bytes,5,rep,name=architecture_status_map,json=architectureStatusMap" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	xxx_hidden_Default               bool                   `protobuf:"varint,11,opt,name=default"`
	XXX_raceDetectHookData           protoimpl.RaceDetectHookData
	XXX_presence                     [1]uint32
	unknownFields                    protoimpl.UnknownFields
	sizeCache                        protoimpl.SizeCache
}

func (x *Configuration_BootImage) Reset() {
	*x = Configuration_BootImage{}
	mi := &file_api_nexus_v1_nexus_proto_msgTypes[94]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Configuration_BootImage) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Configuration_BootImage) ProtoMessage() {}

func (x *Configuration_BootImage) ProtoReflect() protoreflect.Message {
	mi := &file_api_nexus_v1_nexus_proto_msgTypes[94]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *Configuration_BootImage) GetSource() string {
	if x != nil {
		if x.xxx_hidden_Source != nil {
			return *x.xxx_hidden_Source
		}
		return ""
	}
	return ""
}

func (x *Configuration_BootImage) GetDistroSeries() string {
	if x != nil {
		if x.xxx_hidden_DistroSeries != nil {
			return *x.xxx_hidden_DistroSeries
		}
		return ""
	}
	return ""
}

func (x *Configuration_BootImage) GetName() string {
	if x != nil {
		if x.xxx_hidden_Name != nil {
			return *x.xxx_hidden_Name
		}
		return ""
	}
	return ""
}

func (x *Configuration_BootImage) GetArchitectureStatusMap() map[string]string {
	if x != nil {
		return x.xxx_hidden_ArchitectureStatusMap
	}
	return nil
}

func (x *Configuration_BootImage) GetDefault() bool {
	if x != nil {
		return x.xxx_hidden_Default
	}
	return false
}

func (x *Configuration_BootImage) SetSource(v string) {
	x.xxx_hidden_Source = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 0, 5)
}

func (x *Configuration_BootImage) SetDistroSeries(v string) {
	x.xxx_hidden_DistroSeries = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 1, 5)
}

func (x *Configuration_BootImage) SetName(v string) {
	x.xxx_hidden_Name = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 2, 5)
}

func (x *Configuration_BootImage) SetArchitectureStatusMap(v map[string]string) {
	x.xxx_hidden_ArchitectureStatusMap = v
}

func (x *Configuration_BootImage) SetDefault(v bool) {
	x.xxx_hidden_Default = v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 4, 5)
}

func (x *Configuration_BootImage) HasSource() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 0)
}

func (x *Configuration_BootImage) HasDistroSeries() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 1)
}

func (x *Configuration_BootImage) HasName() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 2)
}

func (x *Configuration_BootImage) HasDefault() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 4)
}

func (x *Configuration_BootImage) ClearSource() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 0)
	x.xxx_hidden_Source = nil
}

func (x *Configuration_BootImage) ClearDistroSeries() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 1)
	x.xxx_hidden_DistroSeries = nil
}

func (x *Configuration_BootImage) ClearName() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 2)
	x.xxx_hidden_Name = nil
}

func (x *Configuration_BootImage) ClearDefault() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 4)
	x.xxx_hidden_Default = false
}

type Configuration_BootImage_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	Source                *string
	DistroSeries          *string
	Name                  *string
	ArchitectureStatusMap map[string]string
	Default               *bool
}

func (b0 Configuration_BootImage_builder) Build() *Configuration_BootImage {
	m0 := &Configuration_BootImage{}
	b, x := &b0, m0
	_, _ = b, x
	if b.Source != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 0, 5)
		x.xxx_hidden_Source = b.Source
	}
	if b.DistroSeries != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 1, 5)
		x.xxx_hidden_DistroSeries = b.DistroSeries
	}
	if b.Name != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 2, 5)
		x.xxx_hidden_Name = b.Name
	}
	x.xxx_hidden_ArchitectureStatusMap = b.ArchitectureStatusMap
	if b.Default != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 4, 5)
		x.xxx_hidden_Default = *b.Default
	}
	return m0
}

type Network_IPAddress struct {
	state                  protoimpl.MessageState `protogen:"opaque.v1"`
	xxx_hidden_Type        *string                `protobuf:"bytes,1,opt,name=type"`
	xxx_hidden_Ip          *string                `protobuf:"bytes,2,opt,name=ip"`
	xxx_hidden_User        *string                `protobuf:"bytes,3,opt,name=user"`
	xxx_hidden_MachineId   *string                `protobuf:"bytes,11,opt,name=machine_id,json=machineId"`
	xxx_hidden_NodeType    *string                `protobuf:"bytes,12,opt,name=node_type,json=nodeType"`
	xxx_hidden_Hostname    *string                `protobuf:"bytes,13,opt,name=hostname"`
	XXX_raceDetectHookData protoimpl.RaceDetectHookData
	XXX_presence           [1]uint32
	unknownFields          protoimpl.UnknownFields
	sizeCache              protoimpl.SizeCache
}

func (x *Network_IPAddress) Reset() {
	*x = Network_IPAddress{}
	mi := &file_api_nexus_v1_nexus_proto_msgTypes[96]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Network_IPAddress) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Network_IPAddress) ProtoMessage() {}

func (x *Network_IPAddress) ProtoReflect() protoreflect.Message {
	mi := &file_api_nexus_v1_nexus_proto_msgTypes[96]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *Network_IPAddress) GetType() string {
	if x != nil {
		if x.xxx_hidden_Type != nil {
			return *x.xxx_hidden_Type
		}
		return ""
	}
	return ""
}

func (x *Network_IPAddress) GetIp() string {
	if x != nil {
		if x.xxx_hidden_Ip != nil {
			return *x.xxx_hidden_Ip
		}
		return ""
	}
	return ""
}

func (x *Network_IPAddress) GetUser() string {
	if x != nil {
		if x.xxx_hidden_User != nil {
			return *x.xxx_hidden_User
		}
		return ""
	}
	return ""
}

func (x *Network_IPAddress) GetMachineId() string {
	if x != nil {
		if x.xxx_hidden_MachineId != nil {
			return *x.xxx_hidden_MachineId
		}
		return ""
	}
	return ""
}

func (x *Network_IPAddress) GetNodeType() string {
	if x != nil {
		if x.xxx_hidden_NodeType != nil {
			return *x.xxx_hidden_NodeType
		}
		return ""
	}
	return ""
}

func (x *Network_IPAddress) GetHostname() string {
	if x != nil {
		if x.xxx_hidden_Hostname != nil {
			return *x.xxx_hidden_Hostname
		}
		return ""
	}
	return ""
}

func (x *Network_IPAddress) SetType(v string) {
	x.xxx_hidden_Type = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 0, 6)
}

func (x *Network_IPAddress) SetIp(v string) {
	x.xxx_hidden_Ip = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 1, 6)
}

func (x *Network_IPAddress) SetUser(v string) {
	x.xxx_hidden_User = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 2, 6)
}

func (x *Network_IPAddress) SetMachineId(v string) {
	x.xxx_hidden_MachineId = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 3, 6)
}

func (x *Network_IPAddress) SetNodeType(v string) {
	x.xxx_hidden_NodeType = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 4, 6)
}

func (x *Network_IPAddress) SetHostname(v string) {
	x.xxx_hidden_Hostname = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 5, 6)
}

func (x *Network_IPAddress) HasType() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 0)
}

func (x *Network_IPAddress) HasIp() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 1)
}

func (x *Network_IPAddress) HasUser() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 2)
}

func (x *Network_IPAddress) HasMachineId() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 3)
}

func (x *Network_IPAddress) HasNodeType() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 4)
}

func (x *Network_IPAddress) HasHostname() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 5)
}

func (x *Network_IPAddress) ClearType() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 0)
	x.xxx_hidden_Type = nil
}

func (x *Network_IPAddress) ClearIp() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 1)
	x.xxx_hidden_Ip = nil
}

func (x *Network_IPAddress) ClearUser() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 2)
	x.xxx_hidden_User = nil
}

func (x *Network_IPAddress) ClearMachineId() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 3)
	x.xxx_hidden_MachineId = nil
}

func (x *Network_IPAddress) ClearNodeType() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 4)
	x.xxx_hidden_NodeType = nil
}

func (x *Network_IPAddress) ClearHostname() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 5)
	x.xxx_hidden_Hostname = nil
}

type Network_IPAddress_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	Type      *string
	Ip        *string
	User      *string
	MachineId *string
	NodeType  *string
	Hostname  *string
}

func (b0 Network_IPAddress_builder) Build() *Network_IPAddress {
	m0 := &Network_IPAddress{}
	b, x := &b0, m0
	_, _ = b, x
	if b.Type != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 0, 6)
		x.xxx_hidden_Type = b.Type
	}
	if b.Ip != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 1, 6)
		x.xxx_hidden_Ip = b.Ip
	}
	if b.User != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 2, 6)
		x.xxx_hidden_User = b.User
	}
	if b.MachineId != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 3, 6)
		x.xxx_hidden_MachineId = b.MachineId
	}
	if b.NodeType != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 4, 6)
		x.xxx_hidden_NodeType = b.NodeType
	}
	if b.Hostname != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 5, 6)
		x.xxx_hidden_Hostname = b.Hostname
	}
	return m0
}

type Network_IPRange struct {
	state                  protoimpl.MessageState `protogen:"opaque.v1"`
	xxx_hidden_Id          int64                  `protobuf:"varint,1,opt,name=id"`
	xxx_hidden_Type        *string                `protobuf:"bytes,2,opt,name=type"`
	xxx_hidden_StartIp     *string                `protobuf:"bytes,3,opt,name=start_ip,json=startIp"`
	xxx_hidden_EndIp       *string                `protobuf:"bytes,4,opt,name=end_ip,json=endIp"`
	xxx_hidden_Comment     *string                `protobuf:"bytes,5,opt,name=comment"`
	XXX_raceDetectHookData protoimpl.RaceDetectHookData
	XXX_presence           [1]uint32
	unknownFields          protoimpl.UnknownFields
	sizeCache              protoimpl.SizeCache
}

func (x *Network_IPRange) Reset() {
	*x = Network_IPRange{}
	mi := &file_api_nexus_v1_nexus_proto_msgTypes[97]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Network_IPRange) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Network_IPRange) ProtoMessage() {}

func (x *Network_IPRange) ProtoReflect() protoreflect.Message {
	mi := &file_api_nexus_v1_nexus_proto_msgTypes[97]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *Network_IPRange) GetId() int64 {
	if x != nil {
		return x.xxx_hidden_Id
	}
	return 0
}

func (x *Network_IPRange) GetType() string {
	if x != nil {
		if x.xxx_hidden_Type != nil {
			return *x.xxx_hidden_Type
		}
		return ""
	}
	return ""
}

func (x *Network_IPRange) GetStartIp() string {
	if x != nil {
		if x.xxx_hidden_StartIp != nil {
			return *x.xxx_hidden_StartIp
		}
		return ""
	}
	return ""
}

func (x *Network_IPRange) GetEndIp() string {
	if x != nil {
		if x.xxx_hidden_EndIp != nil {
			return *x.xxx_hidden_EndIp
		}
		return ""
	}
	return ""
}

func (x *Network_IPRange) GetComment() string {
	if x != nil {
		if x.xxx_hidden_Comment != nil {
			return *x.xxx_hidden_Comment
		}
		return ""
	}
	return ""
}

func (x *Network_IPRange) SetId(v int64) {
	x.xxx_hidden_Id = v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 0, 5)
}

func (x *Network_IPRange) SetType(v string) {
	x.xxx_hidden_Type = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 1, 5)
}

func (x *Network_IPRange) SetStartIp(v string) {
	x.xxx_hidden_StartIp = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 2, 5)
}

func (x *Network_IPRange) SetEndIp(v string) {
	x.xxx_hidden_EndIp = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 3, 5)
}

func (x *Network_IPRange) SetComment(v string) {
	x.xxx_hidden_Comment = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 4, 5)
}

func (x *Network_IPRange) HasId() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 0)
}

func (x *Network_IPRange) HasType() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 1)
}

func (x *Network_IPRange) HasStartIp() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 2)
}

func (x *Network_IPRange) HasEndIp() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 3)
}

func (x *Network_IPRange) HasComment() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 4)
}

func (x *Network_IPRange) ClearId() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 0)
	x.xxx_hidden_Id = 0
}

func (x *Network_IPRange) ClearType() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 1)
	x.xxx_hidden_Type = nil
}

func (x *Network_IPRange) ClearStartIp() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 2)
	x.xxx_hidden_StartIp = nil
}

func (x *Network_IPRange) ClearEndIp() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 3)
	x.xxx_hidden_EndIp = nil
}

func (x *Network_IPRange) ClearComment() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 4)
	x.xxx_hidden_Comment = nil
}

type Network_IPRange_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	Id      *int64
	Type    *string
	StartIp *string
	EndIp   *string
	Comment *string
}

func (b0 Network_IPRange_builder) Build() *Network_IPRange {
	m0 := &Network_IPRange{}
	b, x := &b0, m0
	_, _ = b, x
	if b.Id != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 0, 5)
		x.xxx_hidden_Id = *b.Id
	}
	if b.Type != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 1, 5)
		x.xxx_hidden_Type = b.Type
	}
	if b.StartIp != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 2, 5)
		x.xxx_hidden_StartIp = b.StartIp
	}
	if b.EndIp != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 3, 5)
		x.xxx_hidden_EndIp = b.EndIp
	}
	if b.Comment != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 4, 5)
		x.xxx_hidden_Comment = b.Comment
	}
	return m0
}

type Network_Statistics struct {
	state                       protoimpl.MessageState `protogen:"opaque.v1"`
	xxx_hidden_Available        int64                  `protobuf:"varint,1,opt,name=available"`
	xxx_hidden_Total            int64                  `protobuf:"varint,2,opt,name=total"`
	xxx_hidden_UsagePercent     *string                `protobuf:"bytes,3,opt,name=usage_percent,json=usagePercent"`
	xxx_hidden_AvailablePercent *string                `protobuf:"bytes,4,opt,name=available_percent,json=availablePercent"`
	XXX_raceDetectHookData      protoimpl.RaceDetectHookData
	XXX_presence                [1]uint32
	unknownFields               protoimpl.UnknownFields
	sizeCache                   protoimpl.SizeCache
}

func (x *Network_Statistics) Reset() {
	*x = Network_Statistics{}
	mi := &file_api_nexus_v1_nexus_proto_msgTypes[98]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Network_Statistics) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Network_Statistics) ProtoMessage() {}

func (x *Network_Statistics) ProtoReflect() protoreflect.Message {
	mi := &file_api_nexus_v1_nexus_proto_msgTypes[98]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *Network_Statistics) GetAvailable() int64 {
	if x != nil {
		return x.xxx_hidden_Available
	}
	return 0
}

func (x *Network_Statistics) GetTotal() int64 {
	if x != nil {
		return x.xxx_hidden_Total
	}
	return 0
}

func (x *Network_Statistics) GetUsagePercent() string {
	if x != nil {
		if x.xxx_hidden_UsagePercent != nil {
			return *x.xxx_hidden_UsagePercent
		}
		return ""
	}
	return ""
}

func (x *Network_Statistics) GetAvailablePercent() string {
	if x != nil {
		if x.xxx_hidden_AvailablePercent != nil {
			return *x.xxx_hidden_AvailablePercent
		}
		return ""
	}
	return ""
}

func (x *Network_Statistics) SetAvailable(v int64) {
	x.xxx_hidden_Available = v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 0, 4)
}

func (x *Network_Statistics) SetTotal(v int64) {
	x.xxx_hidden_Total = v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 1, 4)
}

func (x *Network_Statistics) SetUsagePercent(v string) {
	x.xxx_hidden_UsagePercent = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 2, 4)
}

func (x *Network_Statistics) SetAvailablePercent(v string) {
	x.xxx_hidden_AvailablePercent = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 3, 4)
}

func (x *Network_Statistics) HasAvailable() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 0)
}

func (x *Network_Statistics) HasTotal() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 1)
}

func (x *Network_Statistics) HasUsagePercent() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 2)
}

func (x *Network_Statistics) HasAvailablePercent() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 3)
}

func (x *Network_Statistics) ClearAvailable() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 0)
	x.xxx_hidden_Available = 0
}

func (x *Network_Statistics) ClearTotal() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 1)
	x.xxx_hidden_Total = 0
}

func (x *Network_Statistics) ClearUsagePercent() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 2)
	x.xxx_hidden_UsagePercent = nil
}

func (x *Network_Statistics) ClearAvailablePercent() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 3)
	x.xxx_hidden_AvailablePercent = nil
}

type Network_Statistics_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	Available        *int64
	Total            *int64
	UsagePercent     *string
	AvailablePercent *string
}

func (b0 Network_Statistics_builder) Build() *Network_Statistics {
	m0 := &Network_Statistics{}
	b, x := &b0, m0
	_, _ = b, x
	if b.Available != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 0, 4)
		x.xxx_hidden_Available = *b.Available
	}
	if b.Total != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 1, 4)
		x.xxx_hidden_Total = *b.Total
	}
	if b.UsagePercent != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 2, 4)
		x.xxx_hidden_UsagePercent = b.UsagePercent
	}
	if b.AvailablePercent != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 3, 4)
		x.xxx_hidden_AvailablePercent = b.AvailablePercent
	}
	return m0
}

type Network_Fabric struct {
	state                  protoimpl.MessageState `protogen:"opaque.v1"`
	xxx_hidden_Id          int64                  `protobuf:"varint,1,opt,name=id"`
	xxx_hidden_Name        *string                `protobuf:"bytes,2,opt,name=name"`
	XXX_raceDetectHookData protoimpl.RaceDetectHookData
	XXX_presence           [1]uint32
	unknownFields          protoimpl.UnknownFields
	sizeCache              protoimpl.SizeCache
}

func (x *Network_Fabric) Reset() {
	*x = Network_Fabric{}
	mi := &file_api_nexus_v1_nexus_proto_msgTypes[99]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Network_Fabric) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Network_Fabric) ProtoMessage() {}

func (x *Network_Fabric) ProtoReflect() protoreflect.Message {
	mi := &file_api_nexus_v1_nexus_proto_msgTypes[99]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *Network_Fabric) GetId() int64 {
	if x != nil {
		return x.xxx_hidden_Id
	}
	return 0
}

func (x *Network_Fabric) GetName() string {
	if x != nil {
		if x.xxx_hidden_Name != nil {
			return *x.xxx_hidden_Name
		}
		return ""
	}
	return ""
}

func (x *Network_Fabric) SetId(v int64) {
	x.xxx_hidden_Id = v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 0, 2)
}

func (x *Network_Fabric) SetName(v string) {
	x.xxx_hidden_Name = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 1, 2)
}

func (x *Network_Fabric) HasId() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 0)
}

func (x *Network_Fabric) HasName() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 1)
}

func (x *Network_Fabric) ClearId() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 0)
	x.xxx_hidden_Id = 0
}

func (x *Network_Fabric) ClearName() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 1)
	x.xxx_hidden_Name = nil
}

type Network_Fabric_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	Id   *int64
	Name *string
}

func (b0 Network_Fabric_builder) Build() *Network_Fabric {
	m0 := &Network_Fabric{}
	b, x := &b0, m0
	_, _ = b, x
	if b.Id != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 0, 2)
		x.xxx_hidden_Id = *b.Id
	}
	if b.Name != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 1, 2)
		x.xxx_hidden_Name = b.Name
	}
	return m0
}

type Network_VLAN struct {
	state                  protoimpl.MessageState `protogen:"opaque.v1"`
	xxx_hidden_Id          int64                  `protobuf:"varint,1,opt,name=id"`
	xxx_hidden_Vid         int64                  `protobuf:"varint,2,opt,name=vid"`
	xxx_hidden_Name        *string                `protobuf:"bytes,3,opt,name=name"`
	xxx_hidden_Mtu         int64                  `protobuf:"varint,4,opt,name=mtu"`
	xxx_hidden_Description *string                `protobuf:"bytes,5,opt,name=description"`
	xxx_hidden_DhcpOn      bool                   `protobuf:"varint,6,opt,name=dhcp_on,json=dhcpOn"`
	XXX_raceDetectHookData protoimpl.RaceDetectHookData
	XXX_presence           [1]uint32
	unknownFields          protoimpl.UnknownFields
	sizeCache              protoimpl.SizeCache
}

func (x *Network_VLAN) Reset() {
	*x = Network_VLAN{}
	mi := &file_api_nexus_v1_nexus_proto_msgTypes[100]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Network_VLAN) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Network_VLAN) ProtoMessage() {}

func (x *Network_VLAN) ProtoReflect() protoreflect.Message {
	mi := &file_api_nexus_v1_nexus_proto_msgTypes[100]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *Network_VLAN) GetId() int64 {
	if x != nil {
		return x.xxx_hidden_Id
	}
	return 0
}

func (x *Network_VLAN) GetVid() int64 {
	if x != nil {
		return x.xxx_hidden_Vid
	}
	return 0
}

func (x *Network_VLAN) GetName() string {
	if x != nil {
		if x.xxx_hidden_Name != nil {
			return *x.xxx_hidden_Name
		}
		return ""
	}
	return ""
}

func (x *Network_VLAN) GetMtu() int64 {
	if x != nil {
		return x.xxx_hidden_Mtu
	}
	return 0
}

func (x *Network_VLAN) GetDescription() string {
	if x != nil {
		if x.xxx_hidden_Description != nil {
			return *x.xxx_hidden_Description
		}
		return ""
	}
	return ""
}

func (x *Network_VLAN) GetDhcpOn() bool {
	if x != nil {
		return x.xxx_hidden_DhcpOn
	}
	return false
}

func (x *Network_VLAN) SetId(v int64) {
	x.xxx_hidden_Id = v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 0, 6)
}

func (x *Network_VLAN) SetVid(v int64) {
	x.xxx_hidden_Vid = v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 1, 6)
}

func (x *Network_VLAN) SetName(v string) {
	x.xxx_hidden_Name = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 2, 6)
}

func (x *Network_VLAN) SetMtu(v int64) {
	x.xxx_hidden_Mtu = v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 3, 6)
}

func (x *Network_VLAN) SetDescription(v string) {
	x.xxx_hidden_Description = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 4, 6)
}

func (x *Network_VLAN) SetDhcpOn(v bool) {
	x.xxx_hidden_DhcpOn = v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 5, 6)
}

func (x *Network_VLAN) HasId() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 0)
}

func (x *Network_VLAN) HasVid() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 1)
}

func (x *Network_VLAN) HasName() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 2)
}

func (x *Network_VLAN) HasMtu() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 3)
}

func (x *Network_VLAN) HasDescription() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 4)
}

func (x *Network_VLAN) HasDhcpOn() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 5)
}

func (x *Network_VLAN) ClearId() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 0)
	x.xxx_hidden_Id = 0
}

func (x *Network_VLAN) ClearVid() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 1)
	x.xxx_hidden_Vid = 0
}

func (x *Network_VLAN) ClearName() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 2)
	x.xxx_hidden_Name = nil
}

func (x *Network_VLAN) ClearMtu() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 3)
	x.xxx_hidden_Mtu = 0
}

func (x *Network_VLAN) ClearDescription() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 4)
	x.xxx_hidden_Description = nil
}

func (x *Network_VLAN) ClearDhcpOn() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 5)
	x.xxx_hidden_DhcpOn = false
}

type Network_VLAN_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	Id          *int64
	Vid         *int64
	Name        *string
	Mtu         *int64
	Description *string
	DhcpOn      *bool
}

func (b0 Network_VLAN_builder) Build() *Network_VLAN {
	m0 := &Network_VLAN{}
	b, x := &b0, m0
	_, _ = b, x
	if b.Id != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 0, 6)
		x.xxx_hidden_Id = *b.Id
	}
	if b.Vid != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 1, 6)
		x.xxx_hidden_Vid = *b.Vid
	}
	if b.Name != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 2, 6)
		x.xxx_hidden_Name = b.Name
	}
	if b.Mtu != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 3, 6)
		x.xxx_hidden_Mtu = *b.Mtu
	}
	if b.Description != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 4, 6)
		x.xxx_hidden_Description = b.Description
	}
	if b.DhcpOn != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 5, 6)
		x.xxx_hidden_DhcpOn = *b.DhcpOn
	}
	return m0
}

type Network_Subnet struct {
	state                         protoimpl.MessageState `protogen:"opaque.v1"`
	xxx_hidden_Id                 int64                  `protobuf:"varint,1,opt,name=id"`
	xxx_hidden_Name               *string                `protobuf:"bytes,2,opt,name=name"`
	xxx_hidden_Cidr               *string                `protobuf:"bytes,3,opt,name=cidr"`
	xxx_hidden_GatewayIp          *string                `protobuf:"bytes,4,opt,name=gateway_ip,json=gatewayIp"`
	xxx_hidden_DnsServers         []string               `protobuf:"bytes,5,rep,name=dns_servers,json=dnsServers"`
	xxx_hidden_Description        *string                `protobuf:"bytes,6,opt,name=description"`
	xxx_hidden_ManagedAllocation  bool                   `protobuf:"varint,7,opt,name=managed_allocation,json=managedAllocation"`
	xxx_hidden_ActiveDiscovery    bool                   `protobuf:"varint,8,opt,name=active_discovery,json=activeDiscovery"`
	xxx_hidden_AllowProxyAccess   bool                   `protobuf:"varint,9,opt,name=allow_proxy_access,json=allowProxyAccess"`
	xxx_hidden_AllowDnsResolution bool                   `protobuf:"varint,10,opt,name=allow_dns_resolution,json=allowDnsResolution"`
	xxx_hidden_IpAddresses        *[]*Network_IPAddress  `protobuf:"bytes,11,rep,name=ip_addresses,json=ipAddresses"`
	xxx_hidden_IpRanges           *[]*Network_IPRange    `protobuf:"bytes,12,rep,name=ip_ranges,json=ipRanges"`
	xxx_hidden_Statistics         *Network_Statistics    `protobuf:"bytes,13,opt,name=statistics"`
	XXX_raceDetectHookData        protoimpl.RaceDetectHookData
	XXX_presence                  [1]uint32
	unknownFields                 protoimpl.UnknownFields
	sizeCache                     protoimpl.SizeCache
}

func (x *Network_Subnet) Reset() {
	*x = Network_Subnet{}
	mi := &file_api_nexus_v1_nexus_proto_msgTypes[101]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Network_Subnet) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Network_Subnet) ProtoMessage() {}

func (x *Network_Subnet) ProtoReflect() protoreflect.Message {
	mi := &file_api_nexus_v1_nexus_proto_msgTypes[101]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *Network_Subnet) GetId() int64 {
	if x != nil {
		return x.xxx_hidden_Id
	}
	return 0
}

func (x *Network_Subnet) GetName() string {
	if x != nil {
		if x.xxx_hidden_Name != nil {
			return *x.xxx_hidden_Name
		}
		return ""
	}
	return ""
}

func (x *Network_Subnet) GetCidr() string {
	if x != nil {
		if x.xxx_hidden_Cidr != nil {
			return *x.xxx_hidden_Cidr
		}
		return ""
	}
	return ""
}

func (x *Network_Subnet) GetGatewayIp() string {
	if x != nil {
		if x.xxx_hidden_GatewayIp != nil {
			return *x.xxx_hidden_GatewayIp
		}
		return ""
	}
	return ""
}

func (x *Network_Subnet) GetDnsServers() []string {
	if x != nil {
		return x.xxx_hidden_DnsServers
	}
	return nil
}

func (x *Network_Subnet) GetDescription() string {
	if x != nil {
		if x.xxx_hidden_Description != nil {
			return *x.xxx_hidden_Description
		}
		return ""
	}
	return ""
}

func (x *Network_Subnet) GetManagedAllocation() bool {
	if x != nil {
		return x.xxx_hidden_ManagedAllocation
	}
	return false
}

func (x *Network_Subnet) GetActiveDiscovery() bool {
	if x != nil {
		return x.xxx_hidden_ActiveDiscovery
	}
	return false
}

func (x *Network_Subnet) GetAllowProxyAccess() bool {
	if x != nil {
		return x.xxx_hidden_AllowProxyAccess
	}
	return false
}

func (x *Network_Subnet) GetAllowDnsResolution() bool {
	if x != nil {
		return x.xxx_hidden_AllowDnsResolution
	}
	return false
}

func (x *Network_Subnet) GetIpAddresses() []*Network_IPAddress {
	if x != nil {
		if x.xxx_hidden_IpAddresses != nil {
			return *x.xxx_hidden_IpAddresses
		}
	}
	return nil
}

func (x *Network_Subnet) GetIpRanges() []*Network_IPRange {
	if x != nil {
		if x.xxx_hidden_IpRanges != nil {
			return *x.xxx_hidden_IpRanges
		}
	}
	return nil
}

func (x *Network_Subnet) GetStatistics() *Network_Statistics {
	if x != nil {
		return x.xxx_hidden_Statistics
	}
	return nil
}

func (x *Network_Subnet) SetId(v int64) {
	x.xxx_hidden_Id = v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 0, 13)
}

func (x *Network_Subnet) SetName(v string) {
	x.xxx_hidden_Name = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 1, 13)
}

func (x *Network_Subnet) SetCidr(v string) {
	x.xxx_hidden_Cidr = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 2, 13)
}

func (x *Network_Subnet) SetGatewayIp(v string) {
	x.xxx_hidden_GatewayIp = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 3, 13)
}

func (x *Network_Subnet) SetDnsServers(v []string) {
	x.xxx_hidden_DnsServers = v
}

func (x *Network_Subnet) SetDescription(v string) {
	x.xxx_hidden_Description = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 5, 13)
}

func (x *Network_Subnet) SetManagedAllocation(v bool) {
	x.xxx_hidden_ManagedAllocation = v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 6, 13)
}

func (x *Network_Subnet) SetActiveDiscovery(v bool) {
	x.xxx_hidden_ActiveDiscovery = v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 7, 13)
}

func (x *Network_Subnet) SetAllowProxyAccess(v bool) {
	x.xxx_hidden_AllowProxyAccess = v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 8, 13)
}

func (x *Network_Subnet) SetAllowDnsResolution(v bool) {
	x.xxx_hidden_AllowDnsResolution = v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 9, 13)
}

func (x *Network_Subnet) SetIpAddresses(v []*Network_IPAddress) {
	x.xxx_hidden_IpAddresses = &v
}

func (x *Network_Subnet) SetIpRanges(v []*Network_IPRange) {
	x.xxx_hidden_IpRanges = &v
}

func (x *Network_Subnet) SetStatistics(v *Network_Statistics) {
	x.xxx_hidden_Statistics = v
}

func (x *Network_Subnet) HasId() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 0)
}

func (x *Network_Subnet) HasName() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 1)
}

func (x *Network_Subnet) HasCidr() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 2)
}

func (x *Network_Subnet) HasGatewayIp() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 3)
}

func (x *Network_Subnet) HasDescription() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 5)
}

func (x *Network_Subnet) HasManagedAllocation() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 6)
}

func (x *Network_Subnet) HasActiveDiscovery() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 7)
}

func (x *Network_Subnet) HasAllowProxyAccess() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 8)
}

func (x *Network_Subnet) HasAllowDnsResolution() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 9)
}

func (x *Network_Subnet) HasStatistics() bool {
	if x == nil {
		return false
	}
	return x.xxx_hidden_Statistics != nil
}

func (x *Network_Subnet) ClearId() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 0)
	x.xxx_hidden_Id = 0
}

func (x *Network_Subnet) ClearName() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 1)
	x.xxx_hidden_Name = nil
}

func (x *Network_Subnet) ClearCidr() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 2)
	x.xxx_hidden_Cidr = nil
}

func (x *Network_Subnet) ClearGatewayIp() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 3)
	x.xxx_hidden_GatewayIp = nil
}

func (x *Network_Subnet) ClearDescription() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 5)
	x.xxx_hidden_Description = nil
}

func (x *Network_Subnet) ClearManagedAllocation() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 6)
	x.xxx_hidden_ManagedAllocation = false
}

func (x *Network_Subnet) ClearActiveDiscovery() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 7)
	x.xxx_hidden_ActiveDiscovery = false
}

func (x *Network_Subnet) ClearAllowProxyAccess() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 8)
	x.xxx_hidden_AllowProxyAccess = false
}

func (x *Network_Subnet) ClearAllowDnsResolution() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 9)
	x.xxx_hidden_AllowDnsResolution = false
}

func (x *Network_Subnet) ClearStatistics() {
	x.xxx_hidden_Statistics = nil
}

type Network_Subnet_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	Id                 *int64
	Name               *string
	Cidr               *string
	GatewayIp          *string
	DnsServers         []string
	Description        *string
	ManagedAllocation  *bool
	ActiveDiscovery    *bool
	AllowProxyAccess   *bool
	AllowDnsResolution *bool
	IpAddresses        []*Network_IPAddress
	IpRanges           []*Network_IPRange
	Statistics         *Network_Statistics
}

func (b0 Network_Subnet_builder) Build() *Network_Subnet {
	m0 := &Network_Subnet{}
	b, x := &b0, m0
	_, _ = b, x
	if b.Id != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 0, 13)
		x.xxx_hidden_Id = *b.Id
	}
	if b.Name != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 1, 13)
		x.xxx_hidden_Name = b.Name
	}
	if b.Cidr != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 2, 13)
		x.xxx_hidden_Cidr = b.Cidr
	}
	if b.GatewayIp != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 3, 13)
		x.xxx_hidden_GatewayIp = b.GatewayIp
	}
	x.xxx_hidden_DnsServers = b.DnsServers
	if b.Description != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 5, 13)
		x.xxx_hidden_Description = b.Description
	}
	if b.ManagedAllocation != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 6, 13)
		x.xxx_hidden_ManagedAllocation = *b.ManagedAllocation
	}
	if b.ActiveDiscovery != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 7, 13)
		x.xxx_hidden_ActiveDiscovery = *b.ActiveDiscovery
	}
	if b.AllowProxyAccess != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 8, 13)
		x.xxx_hidden_AllowProxyAccess = *b.AllowProxyAccess
	}
	if b.AllowDnsResolution != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 9, 13)
		x.xxx_hidden_AllowDnsResolution = *b.AllowDnsResolution
	}
	x.xxx_hidden_IpAddresses = &b.IpAddresses
	x.xxx_hidden_IpRanges = &b.IpRanges
	x.xxx_hidden_Statistics = b.Statistics
	return m0
}

type Machine_Placement struct {
	state                  protoimpl.MessageState   `protogen:"opaque.v1"`
	xxx_hidden_Type        isMachine_Placement_Type `protobuf_oneof:"type"`
	xxx_hidden_MachineId   *string                  `protobuf:"bytes,11,opt,name=machine_id,json=machineId"`
	XXX_raceDetectHookData protoimpl.RaceDetectHookData
	XXX_presence           [1]uint32
	unknownFields          protoimpl.UnknownFields
	sizeCache              protoimpl.SizeCache
}

func (x *Machine_Placement) Reset() {
	*x = Machine_Placement{}
	mi := &file_api_nexus_v1_nexus_proto_msgTypes[102]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Machine_Placement) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Machine_Placement) ProtoMessage() {}

func (x *Machine_Placement) ProtoReflect() protoreflect.Message {
	mi := &file_api_nexus_v1_nexus_proto_msgTypes[102]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *Machine_Placement) GetLxd() bool {
	if x != nil {
		if x, ok := x.xxx_hidden_Type.(*machine_Placement_Lxd); ok {
			return x.Lxd
		}
	}
	return false
}

func (x *Machine_Placement) GetKvm() bool {
	if x != nil {
		if x, ok := x.xxx_hidden_Type.(*machine_Placement_Kvm); ok {
			return x.Kvm
		}
	}
	return false
}

func (x *Machine_Placement) GetMachine() bool {
	if x != nil {
		if x, ok := x.xxx_hidden_Type.(*machine_Placement_Machine); ok {
			return x.Machine
		}
	}
	return false
}

func (x *Machine_Placement) GetMachineId() string {
	if x != nil {
		if x.xxx_hidden_MachineId != nil {
			return *x.xxx_hidden_MachineId
		}
		return ""
	}
	return ""
}

func (x *Machine_Placement) SetLxd(v bool) {
	x.xxx_hidden_Type = &machine_Placement_Lxd{v}
}

func (x *Machine_Placement) SetKvm(v bool) {
	x.xxx_hidden_Type = &machine_Placement_Kvm{v}
}

func (x *Machine_Placement) SetMachine(v bool) {
	x.xxx_hidden_Type = &machine_Placement_Machine{v}
}

func (x *Machine_Placement) SetMachineId(v string) {
	x.xxx_hidden_MachineId = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 1, 2)
}

func (x *Machine_Placement) HasType() bool {
	if x == nil {
		return false
	}
	return x.xxx_hidden_Type != nil
}

func (x *Machine_Placement) HasLxd() bool {
	if x == nil {
		return false
	}
	_, ok := x.xxx_hidden_Type.(*machine_Placement_Lxd)
	return ok
}

func (x *Machine_Placement) HasKvm() bool {
	if x == nil {
		return false
	}
	_, ok := x.xxx_hidden_Type.(*machine_Placement_Kvm)
	return ok
}

func (x *Machine_Placement) HasMachine() bool {
	if x == nil {
		return false
	}
	_, ok := x.xxx_hidden_Type.(*machine_Placement_Machine)
	return ok
}

func (x *Machine_Placement) HasMachineId() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 1)
}

func (x *Machine_Placement) ClearType() {
	x.xxx_hidden_Type = nil
}

func (x *Machine_Placement) ClearLxd() {
	if _, ok := x.xxx_hidden_Type.(*machine_Placement_Lxd); ok {
		x.xxx_hidden_Type = nil
	}
}

func (x *Machine_Placement) ClearKvm() {
	if _, ok := x.xxx_hidden_Type.(*machine_Placement_Kvm); ok {
		x.xxx_hidden_Type = nil
	}
}

func (x *Machine_Placement) ClearMachine() {
	if _, ok := x.xxx_hidden_Type.(*machine_Placement_Machine); ok {
		x.xxx_hidden_Type = nil
	}
}

func (x *Machine_Placement) ClearMachineId() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 1)
	x.xxx_hidden_MachineId = nil
}

const Machine_Placement_Type_not_set_case case_Machine_Placement_Type = 0
const Machine_Placement_Lxd_case case_Machine_Placement_Type = 1
const Machine_Placement_Kvm_case case_Machine_Placement_Type = 2
const Machine_Placement_Machine_case case_Machine_Placement_Type = 3

func (x *Machine_Placement) WhichType() case_Machine_Placement_Type {
	if x == nil {
		return Machine_Placement_Type_not_set_case
	}
	switch x.xxx_hidden_Type.(type) {
	case *machine_Placement_Lxd:
		return Machine_Placement_Lxd_case
	case *machine_Placement_Kvm:
		return Machine_Placement_Kvm_case
	case *machine_Placement_Machine:
		return Machine_Placement_Machine_case
	default:
		return Machine_Placement_Type_not_set_case
	}
}

type Machine_Placement_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	// Fields of oneof xxx_hidden_Type:
	Lxd     *bool
	Kvm     *bool
	Machine *bool
	// -- end of xxx_hidden_Type
	MachineId *string
}

func (b0 Machine_Placement_builder) Build() *Machine_Placement {
	m0 := &Machine_Placement{}
	b, x := &b0, m0
	_, _ = b, x
	if b.Lxd != nil {
		x.xxx_hidden_Type = &machine_Placement_Lxd{*b.Lxd}
	}
	if b.Kvm != nil {
		x.xxx_hidden_Type = &machine_Placement_Kvm{*b.Kvm}
	}
	if b.Machine != nil {
		x.xxx_hidden_Type = &machine_Placement_Machine{*b.Machine}
	}
	if b.MachineId != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 1, 2)
		x.xxx_hidden_MachineId = b.MachineId
	}
	return m0
}

type case_Machine_Placement_Type protoreflect.FieldNumber

func (x case_Machine_Placement_Type) String() string {
	md := file_api_nexus_v1_nexus_proto_msgTypes[102].Descriptor()
	if x == 0 {
		return "not set"
	}
	return protoimpl.X.MessageFieldStringOf(md, protoreflect.FieldNumber(x))
}

type isMachine_Placement_Type interface {
	isMachine_Placement_Type()
}

type machine_Placement_Lxd struct {
	Lxd bool `protobuf:"varint,1,opt,name=lxd,oneof"`
}

type machine_Placement_Kvm struct {
	Kvm bool `protobuf:"varint,2,opt,name=kvm,oneof"`
}

type machine_Placement_Machine struct {
	Machine bool `protobuf:"varint,3,opt,name=machine,oneof"`
}

func (*machine_Placement_Lxd) isMachine_Placement_Type() {}

func (*machine_Placement_Kvm) isMachine_Placement_Type() {}

func (*machine_Placement_Machine) isMachine_Placement_Type() {}

type Machine_Constraint struct {
	state                   protoimpl.MessageState `protogen:"opaque.v1"`
	xxx_hidden_Architecture *string                `protobuf:"bytes,1,opt,name=architecture"`
	xxx_hidden_CpuCores     uint64                 `protobuf:"varint,2,opt,name=cpu_cores,json=cpuCores"`
	xxx_hidden_MemoryMb     uint64                 `protobuf:"varint,3,opt,name=memory_mb,json=memoryMb"`
	xxx_hidden_Tags         []string               `protobuf:"bytes,11,rep,name=tags"`
	XXX_raceDetectHookData  protoimpl.RaceDetectHookData
	XXX_presence            [1]uint32
	unknownFields           protoimpl.UnknownFields
	sizeCache               protoimpl.SizeCache
}

func (x *Machine_Constraint) Reset() {
	*x = Machine_Constraint{}
	mi := &file_api_nexus_v1_nexus_proto_msgTypes[103]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Machine_Constraint) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Machine_Constraint) ProtoMessage() {}

func (x *Machine_Constraint) ProtoReflect() protoreflect.Message {
	mi := &file_api_nexus_v1_nexus_proto_msgTypes[103]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *Machine_Constraint) GetArchitecture() string {
	if x != nil {
		if x.xxx_hidden_Architecture != nil {
			return *x.xxx_hidden_Architecture
		}
		return ""
	}
	return ""
}

func (x *Machine_Constraint) GetCpuCores() uint64 {
	if x != nil {
		return x.xxx_hidden_CpuCores
	}
	return 0
}

func (x *Machine_Constraint) GetMemoryMb() uint64 {
	if x != nil {
		return x.xxx_hidden_MemoryMb
	}
	return 0
}

func (x *Machine_Constraint) GetTags() []string {
	if x != nil {
		return x.xxx_hidden_Tags
	}
	return nil
}

func (x *Machine_Constraint) SetArchitecture(v string) {
	x.xxx_hidden_Architecture = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 0, 4)
}

func (x *Machine_Constraint) SetCpuCores(v uint64) {
	x.xxx_hidden_CpuCores = v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 1, 4)
}

func (x *Machine_Constraint) SetMemoryMb(v uint64) {
	x.xxx_hidden_MemoryMb = v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 2, 4)
}

func (x *Machine_Constraint) SetTags(v []string) {
	x.xxx_hidden_Tags = v
}

func (x *Machine_Constraint) HasArchitecture() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 0)
}

func (x *Machine_Constraint) HasCpuCores() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 1)
}

func (x *Machine_Constraint) HasMemoryMb() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 2)
}

func (x *Machine_Constraint) ClearArchitecture() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 0)
	x.xxx_hidden_Architecture = nil
}

func (x *Machine_Constraint) ClearCpuCores() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 1)
	x.xxx_hidden_CpuCores = 0
}

func (x *Machine_Constraint) ClearMemoryMb() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 2)
	x.xxx_hidden_MemoryMb = 0
}

type Machine_Constraint_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	Architecture *string
	CpuCores     *uint64
	MemoryMb     *uint64
	Tags         []string
}

func (b0 Machine_Constraint_builder) Build() *Machine_Constraint {
	m0 := &Machine_Constraint{}
	b, x := &b0, m0
	_, _ = b, x
	if b.Architecture != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 0, 4)
		x.xxx_hidden_Architecture = b.Architecture
	}
	if b.CpuCores != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 1, 4)
		x.xxx_hidden_CpuCores = *b.CpuCores
	}
	if b.MemoryMb != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 2, 4)
		x.xxx_hidden_MemoryMb = *b.MemoryMb
	}
	x.xxx_hidden_Tags = b.Tags
	return m0
}

type Machine_Factor struct {
	state                 protoimpl.MessageState `protogen:"opaque.v1"`
	xxx_hidden_Placement  *Machine_Placement     `protobuf:"bytes,1,opt,name=placement"`
	xxx_hidden_Constraint *Machine_Constraint    `protobuf:"bytes,2,opt,name=constraint"`
	unknownFields         protoimpl.UnknownFields
	sizeCache             protoimpl.SizeCache
}

func (x *Machine_Factor) Reset() {
	*x = Machine_Factor{}
	mi := &file_api_nexus_v1_nexus_proto_msgTypes[104]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Machine_Factor) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Machine_Factor) ProtoMessage() {}

func (x *Machine_Factor) ProtoReflect() protoreflect.Message {
	mi := &file_api_nexus_v1_nexus_proto_msgTypes[104]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *Machine_Factor) GetPlacement() *Machine_Placement {
	if x != nil {
		return x.xxx_hidden_Placement
	}
	return nil
}

func (x *Machine_Factor) GetConstraint() *Machine_Constraint {
	if x != nil {
		return x.xxx_hidden_Constraint
	}
	return nil
}

func (x *Machine_Factor) SetPlacement(v *Machine_Placement) {
	x.xxx_hidden_Placement = v
}

func (x *Machine_Factor) SetConstraint(v *Machine_Constraint) {
	x.xxx_hidden_Constraint = v
}

func (x *Machine_Factor) HasPlacement() bool {
	if x == nil {
		return false
	}
	return x.xxx_hidden_Placement != nil
}

func (x *Machine_Factor) HasConstraint() bool {
	if x == nil {
		return false
	}
	return x.xxx_hidden_Constraint != nil
}

func (x *Machine_Factor) ClearPlacement() {
	x.xxx_hidden_Placement = nil
}

func (x *Machine_Factor) ClearConstraint() {
	x.xxx_hidden_Constraint = nil
}

type Machine_Factor_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	Placement  *Machine_Placement
	Constraint *Machine_Constraint
}

func (b0 Machine_Factor_builder) Build() *Machine_Factor {
	m0 := &Machine_Factor{}
	b, x := &b0, m0
	_, _ = b, x
	x.xxx_hidden_Placement = b.Placement
	x.xxx_hidden_Constraint = b.Constraint
	return m0
}

type Machine_NUMANode struct {
	state                  protoimpl.MessageState `protogen:"opaque.v1"`
	xxx_hidden_Index       int64                  `protobuf:"varint,1,opt,name=index"`
	xxx_hidden_CpuCores    int64                  `protobuf:"varint,2,opt,name=cpu_cores,json=cpuCores"`
	xxx_hidden_MemoryMb    int64                  `protobuf:"varint,3,opt,name=memory_mb,json=memoryMb"`
	XXX_raceDetectHookData protoimpl.RaceDetectHookData
	XXX_presence           [1]uint32
	unknownFields          protoimpl.UnknownFields
	sizeCache              protoimpl.SizeCache
}

func (x *Machine_NUMANode) Reset() {
	*x = Machine_NUMANode{}
	mi := &file_api_nexus_v1_nexus_proto_msgTypes[105]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Machine_NUMANode) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Machine_NUMANode) ProtoMessage() {}

func (x *Machine_NUMANode) ProtoReflect() protoreflect.Message {
	mi := &file_api_nexus_v1_nexus_proto_msgTypes[105]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *Machine_NUMANode) GetIndex() int64 {
	if x != nil {
		return x.xxx_hidden_Index
	}
	return 0
}

func (x *Machine_NUMANode) GetCpuCores() int64 {
	if x != nil {
		return x.xxx_hidden_CpuCores
	}
	return 0
}

func (x *Machine_NUMANode) GetMemoryMb() int64 {
	if x != nil {
		return x.xxx_hidden_MemoryMb
	}
	return 0
}

func (x *Machine_NUMANode) SetIndex(v int64) {
	x.xxx_hidden_Index = v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 0, 3)
}

func (x *Machine_NUMANode) SetCpuCores(v int64) {
	x.xxx_hidden_CpuCores = v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 1, 3)
}

func (x *Machine_NUMANode) SetMemoryMb(v int64) {
	x.xxx_hidden_MemoryMb = v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 2, 3)
}

func (x *Machine_NUMANode) HasIndex() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 0)
}

func (x *Machine_NUMANode) HasCpuCores() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 1)
}

func (x *Machine_NUMANode) HasMemoryMb() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 2)
}

func (x *Machine_NUMANode) ClearIndex() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 0)
	x.xxx_hidden_Index = 0
}

func (x *Machine_NUMANode) ClearCpuCores() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 1)
	x.xxx_hidden_CpuCores = 0
}

func (x *Machine_NUMANode) ClearMemoryMb() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 2)
	x.xxx_hidden_MemoryMb = 0
}

type Machine_NUMANode_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	Index    *int64
	CpuCores *int64
	MemoryMb *int64
}

func (b0 Machine_NUMANode_builder) Build() *Machine_NUMANode {
	m0 := &Machine_NUMANode{}
	b, x := &b0, m0
	_, _ = b, x
	if b.Index != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 0, 3)
		x.xxx_hidden_Index = *b.Index
	}
	if b.CpuCores != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 1, 3)
		x.xxx_hidden_CpuCores = *b.CpuCores
	}
	if b.MemoryMb != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 2, 3)
		x.xxx_hidden_MemoryMb = *b.MemoryMb
	}
	return m0
}

type Machine_BlockDevice struct {
	state                      protoimpl.MessageState `protogen:"opaque.v1"`
	xxx_hidden_BootDisk        bool                   `protobuf:"varint,1,opt,name=boot_disk,json=bootDisk"`
	xxx_hidden_Name            *string                `protobuf:"bytes,11,opt,name=name"`
	xxx_hidden_Serial          *string                `protobuf:"bytes,12,opt,name=serial"`
	xxx_hidden_Model           *string                `protobuf:"bytes,21,opt,name=model"`
	xxx_hidden_FirmwareVersion *string                `protobuf:"bytes,22,opt,name=firmware_version,json=firmwareVersion"`
	xxx_hidden_StorageMb       float64                `protobuf:"fixed64,31,opt,name=storage_mb,json=storageMb"`
	xxx_hidden_Type            *string                `protobuf:"bytes,41,opt,name=type"`
	xxx_hidden_Tags            []string               `protobuf:"bytes,51,rep,name=tags"`
	xxx_hidden_UsedFor         *string                `protobuf:"bytes,61,opt,name=used_for,json=usedFor"`
	XXX_raceDetectHookData     protoimpl.RaceDetectHookData
	XXX_presence               [1]uint32
	unknownFields              protoimpl.UnknownFields
	sizeCache                  protoimpl.SizeCache
}

func (x *Machine_BlockDevice) Reset() {
	*x = Machine_BlockDevice{}
	mi := &file_api_nexus_v1_nexus_proto_msgTypes[106]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Machine_BlockDevice) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Machine_BlockDevice) ProtoMessage() {}

func (x *Machine_BlockDevice) ProtoReflect() protoreflect.Message {
	mi := &file_api_nexus_v1_nexus_proto_msgTypes[106]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *Machine_BlockDevice) GetBootDisk() bool {
	if x != nil {
		return x.xxx_hidden_BootDisk
	}
	return false
}

func (x *Machine_BlockDevice) GetName() string {
	if x != nil {
		if x.xxx_hidden_Name != nil {
			return *x.xxx_hidden_Name
		}
		return ""
	}
	return ""
}

func (x *Machine_BlockDevice) GetSerial() string {
	if x != nil {
		if x.xxx_hidden_Serial != nil {
			return *x.xxx_hidden_Serial
		}
		return ""
	}
	return ""
}

func (x *Machine_BlockDevice) GetModel() string {
	if x != nil {
		if x.xxx_hidden_Model != nil {
			return *x.xxx_hidden_Model
		}
		return ""
	}
	return ""
}

func (x *Machine_BlockDevice) GetFirmwareVersion() string {
	if x != nil {
		if x.xxx_hidden_FirmwareVersion != nil {
			return *x.xxx_hidden_FirmwareVersion
		}
		return ""
	}
	return ""
}

func (x *Machine_BlockDevice) GetStorageMb() float64 {
	if x != nil {
		return x.xxx_hidden_StorageMb
	}
	return 0
}

func (x *Machine_BlockDevice) GetType() string {
	if x != nil {
		if x.xxx_hidden_Type != nil {
			return *x.xxx_hidden_Type
		}
		return ""
	}
	return ""
}

func (x *Machine_BlockDevice) GetTags() []string {
	if x != nil {
		return x.xxx_hidden_Tags
	}
	return nil
}

func (x *Machine_BlockDevice) GetUsedFor() string {
	if x != nil {
		if x.xxx_hidden_UsedFor != nil {
			return *x.xxx_hidden_UsedFor
		}
		return ""
	}
	return ""
}

func (x *Machine_BlockDevice) SetBootDisk(v bool) {
	x.xxx_hidden_BootDisk = v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 0, 9)
}

func (x *Machine_BlockDevice) SetName(v string) {
	x.xxx_hidden_Name = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 1, 9)
}

func (x *Machine_BlockDevice) SetSerial(v string) {
	x.xxx_hidden_Serial = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 2, 9)
}

func (x *Machine_BlockDevice) SetModel(v string) {
	x.xxx_hidden_Model = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 3, 9)
}

func (x *Machine_BlockDevice) SetFirmwareVersion(v string) {
	x.xxx_hidden_FirmwareVersion = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 4, 9)
}

func (x *Machine_BlockDevice) SetStorageMb(v float64) {
	x.xxx_hidden_StorageMb = v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 5, 9)
}

func (x *Machine_BlockDevice) SetType(v string) {
	x.xxx_hidden_Type = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 6, 9)
}

func (x *Machine_BlockDevice) SetTags(v []string) {
	x.xxx_hidden_Tags = v
}

func (x *Machine_BlockDevice) SetUsedFor(v string) {
	x.xxx_hidden_UsedFor = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 8, 9)
}

func (x *Machine_BlockDevice) HasBootDisk() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 0)
}

func (x *Machine_BlockDevice) HasName() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 1)
}

func (x *Machine_BlockDevice) HasSerial() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 2)
}

func (x *Machine_BlockDevice) HasModel() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 3)
}

func (x *Machine_BlockDevice) HasFirmwareVersion() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 4)
}

func (x *Machine_BlockDevice) HasStorageMb() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 5)
}

func (x *Machine_BlockDevice) HasType() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 6)
}

func (x *Machine_BlockDevice) HasUsedFor() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 8)
}

func (x *Machine_BlockDevice) ClearBootDisk() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 0)
	x.xxx_hidden_BootDisk = false
}

func (x *Machine_BlockDevice) ClearName() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 1)
	x.xxx_hidden_Name = nil
}

func (x *Machine_BlockDevice) ClearSerial() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 2)
	x.xxx_hidden_Serial = nil
}

func (x *Machine_BlockDevice) ClearModel() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 3)
	x.xxx_hidden_Model = nil
}

func (x *Machine_BlockDevice) ClearFirmwareVersion() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 4)
	x.xxx_hidden_FirmwareVersion = nil
}

func (x *Machine_BlockDevice) ClearStorageMb() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 5)
	x.xxx_hidden_StorageMb = 0
}

func (x *Machine_BlockDevice) ClearType() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 6)
	x.xxx_hidden_Type = nil
}

func (x *Machine_BlockDevice) ClearUsedFor() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 8)
	x.xxx_hidden_UsedFor = nil
}

type Machine_BlockDevice_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	BootDisk        *bool
	Name            *string
	Serial          *string
	Model           *string
	FirmwareVersion *string
	StorageMb       *float64
	Type            *string
	Tags            []string
	UsedFor         *string
}

func (b0 Machine_BlockDevice_builder) Build() *Machine_BlockDevice {
	m0 := &Machine_BlockDevice{}
	b, x := &b0, m0
	_, _ = b, x
	if b.BootDisk != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 0, 9)
		x.xxx_hidden_BootDisk = *b.BootDisk
	}
	if b.Name != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 1, 9)
		x.xxx_hidden_Name = b.Name
	}
	if b.Serial != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 2, 9)
		x.xxx_hidden_Serial = b.Serial
	}
	if b.Model != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 3, 9)
		x.xxx_hidden_Model = b.Model
	}
	if b.FirmwareVersion != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 4, 9)
		x.xxx_hidden_FirmwareVersion = b.FirmwareVersion
	}
	if b.StorageMb != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 5, 9)
		x.xxx_hidden_StorageMb = *b.StorageMb
	}
	if b.Type != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 6, 9)
		x.xxx_hidden_Type = b.Type
	}
	x.xxx_hidden_Tags = b.Tags
	if b.UsedFor != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 8, 9)
		x.xxx_hidden_UsedFor = b.UsedFor
	}
	return m0
}

type Machine_NetworkInterface struct {
	state                     protoimpl.MessageState `protogen:"opaque.v1"`
	xxx_hidden_BootInterface  bool                   `protobuf:"varint,1,opt,name=boot_interface,json=bootInterface"`
	xxx_hidden_Name           *string                `protobuf:"bytes,11,opt,name=name"`
	xxx_hidden_MacAddress     *string                `protobuf:"bytes,12,opt,name=mac_address,json=macAddress"`
	xxx_hidden_LinkConnected  bool                   `protobuf:"varint,21,opt,name=link_connected,json=linkConnected"`
	xxx_hidden_LinkSpeed      int64                  `protobuf:"varint,22,opt,name=link_speed,json=linkSpeed"`
	xxx_hidden_InterfaceSpeed int64                  `protobuf:"varint,23,opt,name=interface_speed,json=interfaceSpeed"`
	xxx_hidden_Type           *string                `protobuf:"bytes,31,opt,name=type"`
	xxx_hidden_FabricName     *string                `protobuf:"bytes,41,opt,name=fabric_name,json=fabricName"`
	xxx_hidden_FabricId       int64                  `protobuf:"varint,42,opt,name=fabric_id,json=fabricId"`
	xxx_hidden_VlanName       *string                `protobuf:"bytes,43,opt,name=vlan_name,json=vlanName"`
	xxx_hidden_VlanId         int64                  `protobuf:"varint,44,opt,name=vlan_id,json=vlanId"`
	xxx_hidden_SubnetName     *string                `protobuf:"bytes,51,opt,name=subnet_name,json=subnetName"`
	xxx_hidden_SubnetId       int64                  `protobuf:"varint,52,opt,name=subnet_id,json=subnetId"`
	xxx_hidden_IpAddress      *string                `protobuf:"bytes,61,opt,name=ip_address,json=ipAddress"`
	xxx_hidden_DhcpOn         bool                   `protobuf:"varint,71,opt,name=dhcp_on,json=dhcpOn"`
	XXX_raceDetectHookData    protoimpl.RaceDetectHookData
	XXX_presence              [1]uint32
	unknownFields             protoimpl.UnknownFields
	sizeCache                 protoimpl.SizeCache
}

func (x *Machine_NetworkInterface) Reset() {
	*x = Machine_NetworkInterface{}
	mi := &file_api_nexus_v1_nexus_proto_msgTypes[107]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Machine_NetworkInterface) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Machine_NetworkInterface) ProtoMessage() {}

func (x *Machine_NetworkInterface) ProtoReflect() protoreflect.Message {
	mi := &file_api_nexus_v1_nexus_proto_msgTypes[107]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *Machine_NetworkInterface) GetBootInterface() bool {
	if x != nil {
		return x.xxx_hidden_BootInterface
	}
	return false
}

func (x *Machine_NetworkInterface) GetName() string {
	if x != nil {
		if x.xxx_hidden_Name != nil {
			return *x.xxx_hidden_Name
		}
		return ""
	}
	return ""
}

func (x *Machine_NetworkInterface) GetMacAddress() string {
	if x != nil {
		if x.xxx_hidden_MacAddress != nil {
			return *x.xxx_hidden_MacAddress
		}
		return ""
	}
	return ""
}

func (x *Machine_NetworkInterface) GetLinkConnected() bool {
	if x != nil {
		return x.xxx_hidden_LinkConnected
	}
	return false
}

func (x *Machine_NetworkInterface) GetLinkSpeed() int64 {
	if x != nil {
		return x.xxx_hidden_LinkSpeed
	}
	return 0
}

func (x *Machine_NetworkInterface) GetInterfaceSpeed() int64 {
	if x != nil {
		return x.xxx_hidden_InterfaceSpeed
	}
	return 0
}

func (x *Machine_NetworkInterface) GetType() string {
	if x != nil {
		if x.xxx_hidden_Type != nil {
			return *x.xxx_hidden_Type
		}
		return ""
	}
	return ""
}

func (x *Machine_NetworkInterface) GetFabricName() string {
	if x != nil {
		if x.xxx_hidden_FabricName != nil {
			return *x.xxx_hidden_FabricName
		}
		return ""
	}
	return ""
}

func (x *Machine_NetworkInterface) GetFabricId() int64 {
	if x != nil {
		return x.xxx_hidden_FabricId
	}
	return 0
}

func (x *Machine_NetworkInterface) GetVlanName() string {
	if x != nil {
		if x.xxx_hidden_VlanName != nil {
			return *x.xxx_hidden_VlanName
		}
		return ""
	}
	return ""
}

func (x *Machine_NetworkInterface) GetVlanId() int64 {
	if x != nil {
		return x.xxx_hidden_VlanId
	}
	return 0
}

func (x *Machine_NetworkInterface) GetSubnetName() string {
	if x != nil {
		if x.xxx_hidden_SubnetName != nil {
			return *x.xxx_hidden_SubnetName
		}
		return ""
	}
	return ""
}

func (x *Machine_NetworkInterface) GetSubnetId() int64 {
	if x != nil {
		return x.xxx_hidden_SubnetId
	}
	return 0
}

func (x *Machine_NetworkInterface) GetIpAddress() string {
	if x != nil {
		if x.xxx_hidden_IpAddress != nil {
			return *x.xxx_hidden_IpAddress
		}
		return ""
	}
	return ""
}

func (x *Machine_NetworkInterface) GetDhcpOn() bool {
	if x != nil {
		return x.xxx_hidden_DhcpOn
	}
	return false
}

func (x *Machine_NetworkInterface) SetBootInterface(v bool) {
	x.xxx_hidden_BootInterface = v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 0, 15)
}

func (x *Machine_NetworkInterface) SetName(v string) {
	x.xxx_hidden_Name = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 1, 15)
}

func (x *Machine_NetworkInterface) SetMacAddress(v string) {
	x.xxx_hidden_MacAddress = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 2, 15)
}

func (x *Machine_NetworkInterface) SetLinkConnected(v bool) {
	x.xxx_hidden_LinkConnected = v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 3, 15)
}

func (x *Machine_NetworkInterface) SetLinkSpeed(v int64) {
	x.xxx_hidden_LinkSpeed = v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 4, 15)
}

func (x *Machine_NetworkInterface) SetInterfaceSpeed(v int64) {
	x.xxx_hidden_InterfaceSpeed = v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 5, 15)
}

func (x *Machine_NetworkInterface) SetType(v string) {
	x.xxx_hidden_Type = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 6, 15)
}

func (x *Machine_NetworkInterface) SetFabricName(v string) {
	x.xxx_hidden_FabricName = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 7, 15)
}

func (x *Machine_NetworkInterface) SetFabricId(v int64) {
	x.xxx_hidden_FabricId = v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 8, 15)
}

func (x *Machine_NetworkInterface) SetVlanName(v string) {
	x.xxx_hidden_VlanName = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 9, 15)
}

func (x *Machine_NetworkInterface) SetVlanId(v int64) {
	x.xxx_hidden_VlanId = v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 10, 15)
}

func (x *Machine_NetworkInterface) SetSubnetName(v string) {
	x.xxx_hidden_SubnetName = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 11, 15)
}

func (x *Machine_NetworkInterface) SetSubnetId(v int64) {
	x.xxx_hidden_SubnetId = v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 12, 15)
}

func (x *Machine_NetworkInterface) SetIpAddress(v string) {
	x.xxx_hidden_IpAddress = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 13, 15)
}

func (x *Machine_NetworkInterface) SetDhcpOn(v bool) {
	x.xxx_hidden_DhcpOn = v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 14, 15)
}

func (x *Machine_NetworkInterface) HasBootInterface() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 0)
}

func (x *Machine_NetworkInterface) HasName() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 1)
}

func (x *Machine_NetworkInterface) HasMacAddress() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 2)
}

func (x *Machine_NetworkInterface) HasLinkConnected() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 3)
}

func (x *Machine_NetworkInterface) HasLinkSpeed() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 4)
}

func (x *Machine_NetworkInterface) HasInterfaceSpeed() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 5)
}

func (x *Machine_NetworkInterface) HasType() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 6)
}

func (x *Machine_NetworkInterface) HasFabricName() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 7)
}

func (x *Machine_NetworkInterface) HasFabricId() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 8)
}

func (x *Machine_NetworkInterface) HasVlanName() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 9)
}

func (x *Machine_NetworkInterface) HasVlanId() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 10)
}

func (x *Machine_NetworkInterface) HasSubnetName() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 11)
}

func (x *Machine_NetworkInterface) HasSubnetId() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 12)
}

func (x *Machine_NetworkInterface) HasIpAddress() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 13)
}

func (x *Machine_NetworkInterface) HasDhcpOn() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 14)
}

func (x *Machine_NetworkInterface) ClearBootInterface() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 0)
	x.xxx_hidden_BootInterface = false
}

func (x *Machine_NetworkInterface) ClearName() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 1)
	x.xxx_hidden_Name = nil
}

func (x *Machine_NetworkInterface) ClearMacAddress() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 2)
	x.xxx_hidden_MacAddress = nil
}

func (x *Machine_NetworkInterface) ClearLinkConnected() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 3)
	x.xxx_hidden_LinkConnected = false
}

func (x *Machine_NetworkInterface) ClearLinkSpeed() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 4)
	x.xxx_hidden_LinkSpeed = 0
}

func (x *Machine_NetworkInterface) ClearInterfaceSpeed() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 5)
	x.xxx_hidden_InterfaceSpeed = 0
}

func (x *Machine_NetworkInterface) ClearType() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 6)
	x.xxx_hidden_Type = nil
}

func (x *Machine_NetworkInterface) ClearFabricName() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 7)
	x.xxx_hidden_FabricName = nil
}

func (x *Machine_NetworkInterface) ClearFabricId() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 8)
	x.xxx_hidden_FabricId = 0
}

func (x *Machine_NetworkInterface) ClearVlanName() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 9)
	x.xxx_hidden_VlanName = nil
}

func (x *Machine_NetworkInterface) ClearVlanId() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 10)
	x.xxx_hidden_VlanId = 0
}

func (x *Machine_NetworkInterface) ClearSubnetName() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 11)
	x.xxx_hidden_SubnetName = nil
}

func (x *Machine_NetworkInterface) ClearSubnetId() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 12)
	x.xxx_hidden_SubnetId = 0
}

func (x *Machine_NetworkInterface) ClearIpAddress() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 13)
	x.xxx_hidden_IpAddress = nil
}

func (x *Machine_NetworkInterface) ClearDhcpOn() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 14)
	x.xxx_hidden_DhcpOn = false
}

type Machine_NetworkInterface_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	BootInterface  *bool
	Name           *string
	MacAddress     *string
	LinkConnected  *bool
	LinkSpeed      *int64
	InterfaceSpeed *int64
	Type           *string
	FabricName     *string
	FabricId       *int64
	VlanName       *string
	VlanId         *int64
	SubnetName     *string
	SubnetId       *int64
	IpAddress      *string
	DhcpOn         *bool
}

func (b0 Machine_NetworkInterface_builder) Build() *Machine_NetworkInterface {
	m0 := &Machine_NetworkInterface{}
	b, x := &b0, m0
	_, _ = b, x
	if b.BootInterface != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 0, 15)
		x.xxx_hidden_BootInterface = *b.BootInterface
	}
	if b.Name != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 1, 15)
		x.xxx_hidden_Name = b.Name
	}
	if b.MacAddress != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 2, 15)
		x.xxx_hidden_MacAddress = b.MacAddress
	}
	if b.LinkConnected != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 3, 15)
		x.xxx_hidden_LinkConnected = *b.LinkConnected
	}
	if b.LinkSpeed != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 4, 15)
		x.xxx_hidden_LinkSpeed = *b.LinkSpeed
	}
	if b.InterfaceSpeed != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 5, 15)
		x.xxx_hidden_InterfaceSpeed = *b.InterfaceSpeed
	}
	if b.Type != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 6, 15)
		x.xxx_hidden_Type = b.Type
	}
	if b.FabricName != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 7, 15)
		x.xxx_hidden_FabricName = b.FabricName
	}
	if b.FabricId != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 8, 15)
		x.xxx_hidden_FabricId = *b.FabricId
	}
	if b.VlanName != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 9, 15)
		x.xxx_hidden_VlanName = b.VlanName
	}
	if b.VlanId != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 10, 15)
		x.xxx_hidden_VlanId = *b.VlanId
	}
	if b.SubnetName != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 11, 15)
		x.xxx_hidden_SubnetName = b.SubnetName
	}
	if b.SubnetId != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 12, 15)
		x.xxx_hidden_SubnetId = *b.SubnetId
	}
	if b.IpAddress != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 13, 15)
		x.xxx_hidden_IpAddress = b.IpAddress
	}
	if b.DhcpOn != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 14, 15)
		x.xxx_hidden_DhcpOn = *b.DhcpOn
	}
	return m0
}

type Facility_Info struct {
	state                   protoimpl.MessageState `protogen:"opaque.v1"`
	xxx_hidden_ScopeUuid    *string                `protobuf:"bytes,1,opt,name=scope_uuid,json=scopeUuid"`
	xxx_hidden_ScopeName    *string                `protobuf:"bytes,2,opt,name=scope_name,json=scopeName"`
	xxx_hidden_FacilityName *string                `protobuf:"bytes,3,opt,name=facility_name,json=facilityName"`
	XXX_raceDetectHookData  protoimpl.RaceDetectHookData
	XXX_presence            [1]uint32
	unknownFields           protoimpl.UnknownFields
	sizeCache               protoimpl.SizeCache
}

func (x *Facility_Info) Reset() {
	*x = Facility_Info{}
	mi := &file_api_nexus_v1_nexus_proto_msgTypes[110]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Facility_Info) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Facility_Info) ProtoMessage() {}

func (x *Facility_Info) ProtoReflect() protoreflect.Message {
	mi := &file_api_nexus_v1_nexus_proto_msgTypes[110]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *Facility_Info) GetScopeUuid() string {
	if x != nil {
		if x.xxx_hidden_ScopeUuid != nil {
			return *x.xxx_hidden_ScopeUuid
		}
		return ""
	}
	return ""
}

func (x *Facility_Info) GetScopeName() string {
	if x != nil {
		if x.xxx_hidden_ScopeName != nil {
			return *x.xxx_hidden_ScopeName
		}
		return ""
	}
	return ""
}

func (x *Facility_Info) GetFacilityName() string {
	if x != nil {
		if x.xxx_hidden_FacilityName != nil {
			return *x.xxx_hidden_FacilityName
		}
		return ""
	}
	return ""
}

func (x *Facility_Info) SetScopeUuid(v string) {
	x.xxx_hidden_ScopeUuid = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 0, 3)
}

func (x *Facility_Info) SetScopeName(v string) {
	x.xxx_hidden_ScopeName = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 1, 3)
}

func (x *Facility_Info) SetFacilityName(v string) {
	x.xxx_hidden_FacilityName = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 2, 3)
}

func (x *Facility_Info) HasScopeUuid() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 0)
}

func (x *Facility_Info) HasScopeName() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 1)
}

func (x *Facility_Info) HasFacilityName() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 2)
}

func (x *Facility_Info) ClearScopeUuid() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 0)
	x.xxx_hidden_ScopeUuid = nil
}

func (x *Facility_Info) ClearScopeName() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 1)
	x.xxx_hidden_ScopeName = nil
}

func (x *Facility_Info) ClearFacilityName() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 2)
	x.xxx_hidden_FacilityName = nil
}

type Facility_Info_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	ScopeUuid    *string
	ScopeName    *string
	FacilityName *string
}

func (b0 Facility_Info_builder) Build() *Facility_Info {
	m0 := &Facility_Info{}
	b, x := &b0, m0
	_, _ = b, x
	if b.ScopeUuid != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 0, 3)
		x.xxx_hidden_ScopeUuid = b.ScopeUuid
	}
	if b.ScopeName != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 1, 3)
		x.xxx_hidden_ScopeName = b.ScopeName
	}
	if b.FacilityName != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 2, 3)
		x.xxx_hidden_FacilityName = b.FacilityName
	}
	return m0
}

type Facility_Charm struct {
	state                      protoimpl.MessageState   `protogen:"opaque.v1"`
	xxx_hidden_Id              *string                  `protobuf:"bytes,1,opt,name=id"`
	xxx_hidden_Type            *string                  `protobuf:"bytes,2,opt,name=type"`
	xxx_hidden_Name            *string                  `protobuf:"bytes,3,opt,name=name"`
	xxx_hidden_Verified        bool                     `protobuf:"varint,4,opt,name=verified"`
	xxx_hidden_Title           *string                  `protobuf:"bytes,11,opt,name=title"`
	xxx_hidden_Summary         *string                  `protobuf:"bytes,12,opt,name=summary"`
	xxx_hidden_Icon            *string                  `protobuf:"bytes,13,opt,name=icon"`
	xxx_hidden_Description     *string                  `protobuf:"bytes,14,opt,name=description"`
	xxx_hidden_Categories      []string                 `protobuf:"bytes,15,rep,name=categories"`
	xxx_hidden_DeployableOn    []string                 `protobuf:"bytes,16,rep,name=deployable_on,json=deployableOn"`
	xxx_hidden_Publisher       *string                  `protobuf:"bytes,17,opt,name=publisher"`
	xxx_hidden_License         *string                  `protobuf:"bytes,18,opt,name=license"`
	xxx_hidden_StoreUrl        *string                  `protobuf:"bytes,21,opt,name=store_url,json=storeUrl"`
	xxx_hidden_Website         *string                  `protobuf:"bytes,22,opt,name=website"`
	xxx_hidden_DefaultArtifact *Facility_Charm_Artifact `protobuf:"bytes,31,opt,name=default_artifact,json=defaultArtifact"`
	XXX_raceDetectHookData     protoimpl.RaceDetectHookData
	XXX_presence               [1]uint32
	unknownFields              protoimpl.UnknownFields
	sizeCache                  protoimpl.SizeCache
}

func (x *Facility_Charm) Reset() {
	*x = Facility_Charm{}
	mi := &file_api_nexus_v1_nexus_proto_msgTypes[111]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Facility_Charm) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Facility_Charm) ProtoMessage() {}

func (x *Facility_Charm) ProtoReflect() protoreflect.Message {
	mi := &file_api_nexus_v1_nexus_proto_msgTypes[111]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *Facility_Charm) GetId() string {
	if x != nil {
		if x.xxx_hidden_Id != nil {
			return *x.xxx_hidden_Id
		}
		return ""
	}
	return ""
}

func (x *Facility_Charm) GetType() string {
	if x != nil {
		if x.xxx_hidden_Type != nil {
			return *x.xxx_hidden_Type
		}
		return ""
	}
	return ""
}

func (x *Facility_Charm) GetName() string {
	if x != nil {
		if x.xxx_hidden_Name != nil {
			return *x.xxx_hidden_Name
		}
		return ""
	}
	return ""
}

func (x *Facility_Charm) GetVerified() bool {
	if x != nil {
		return x.xxx_hidden_Verified
	}
	return false
}

func (x *Facility_Charm) GetTitle() string {
	if x != nil {
		if x.xxx_hidden_Title != nil {
			return *x.xxx_hidden_Title
		}
		return ""
	}
	return ""
}

func (x *Facility_Charm) GetSummary() string {
	if x != nil {
		if x.xxx_hidden_Summary != nil {
			return *x.xxx_hidden_Summary
		}
		return ""
	}
	return ""
}

func (x *Facility_Charm) GetIcon() string {
	if x != nil {
		if x.xxx_hidden_Icon != nil {
			return *x.xxx_hidden_Icon
		}
		return ""
	}
	return ""
}

func (x *Facility_Charm) GetDescription() string {
	if x != nil {
		if x.xxx_hidden_Description != nil {
			return *x.xxx_hidden_Description
		}
		return ""
	}
	return ""
}

func (x *Facility_Charm) GetCategories() []string {
	if x != nil {
		return x.xxx_hidden_Categories
	}
	return nil
}

func (x *Facility_Charm) GetDeployableOn() []string {
	if x != nil {
		return x.xxx_hidden_DeployableOn
	}
	return nil
}

func (x *Facility_Charm) GetPublisher() string {
	if x != nil {
		if x.xxx_hidden_Publisher != nil {
			return *x.xxx_hidden_Publisher
		}
		return ""
	}
	return ""
}

func (x *Facility_Charm) GetLicense() string {
	if x != nil {
		if x.xxx_hidden_License != nil {
			return *x.xxx_hidden_License
		}
		return ""
	}
	return ""
}

func (x *Facility_Charm) GetStoreUrl() string {
	if x != nil {
		if x.xxx_hidden_StoreUrl != nil {
			return *x.xxx_hidden_StoreUrl
		}
		return ""
	}
	return ""
}

func (x *Facility_Charm) GetWebsite() string {
	if x != nil {
		if x.xxx_hidden_Website != nil {
			return *x.xxx_hidden_Website
		}
		return ""
	}
	return ""
}

func (x *Facility_Charm) GetDefaultArtifact() *Facility_Charm_Artifact {
	if x != nil {
		return x.xxx_hidden_DefaultArtifact
	}
	return nil
}

func (x *Facility_Charm) SetId(v string) {
	x.xxx_hidden_Id = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 0, 15)
}

func (x *Facility_Charm) SetType(v string) {
	x.xxx_hidden_Type = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 1, 15)
}

func (x *Facility_Charm) SetName(v string) {
	x.xxx_hidden_Name = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 2, 15)
}

func (x *Facility_Charm) SetVerified(v bool) {
	x.xxx_hidden_Verified = v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 3, 15)
}

func (x *Facility_Charm) SetTitle(v string) {
	x.xxx_hidden_Title = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 4, 15)
}

func (x *Facility_Charm) SetSummary(v string) {
	x.xxx_hidden_Summary = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 5, 15)
}

func (x *Facility_Charm) SetIcon(v string) {
	x.xxx_hidden_Icon = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 6, 15)
}

func (x *Facility_Charm) SetDescription(v string) {
	x.xxx_hidden_Description = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 7, 15)
}

func (x *Facility_Charm) SetCategories(v []string) {
	x.xxx_hidden_Categories = v
}

func (x *Facility_Charm) SetDeployableOn(v []string) {
	x.xxx_hidden_DeployableOn = v
}

func (x *Facility_Charm) SetPublisher(v string) {
	x.xxx_hidden_Publisher = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 10, 15)
}

func (x *Facility_Charm) SetLicense(v string) {
	x.xxx_hidden_License = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 11, 15)
}

func (x *Facility_Charm) SetStoreUrl(v string) {
	x.xxx_hidden_StoreUrl = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 12, 15)
}

func (x *Facility_Charm) SetWebsite(v string) {
	x.xxx_hidden_Website = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 13, 15)
}

func (x *Facility_Charm) SetDefaultArtifact(v *Facility_Charm_Artifact) {
	x.xxx_hidden_DefaultArtifact = v
}

func (x *Facility_Charm) HasId() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 0)
}

func (x *Facility_Charm) HasType() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 1)
}

func (x *Facility_Charm) HasName() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 2)
}

func (x *Facility_Charm) HasVerified() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 3)
}

func (x *Facility_Charm) HasTitle() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 4)
}

func (x *Facility_Charm) HasSummary() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 5)
}

func (x *Facility_Charm) HasIcon() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 6)
}

func (x *Facility_Charm) HasDescription() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 7)
}

func (x *Facility_Charm) HasPublisher() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 10)
}

func (x *Facility_Charm) HasLicense() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 11)
}

func (x *Facility_Charm) HasStoreUrl() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 12)
}

func (x *Facility_Charm) HasWebsite() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 13)
}

func (x *Facility_Charm) HasDefaultArtifact() bool {
	if x == nil {
		return false
	}
	return x.xxx_hidden_DefaultArtifact != nil
}

func (x *Facility_Charm) ClearId() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 0)
	x.xxx_hidden_Id = nil
}

func (x *Facility_Charm) ClearType() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 1)
	x.xxx_hidden_Type = nil
}

func (x *Facility_Charm) ClearName() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 2)
	x.xxx_hidden_Name = nil
}

func (x *Facility_Charm) ClearVerified() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 3)
	x.xxx_hidden_Verified = false
}

func (x *Facility_Charm) ClearTitle() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 4)
	x.xxx_hidden_Title = nil
}

func (x *Facility_Charm) ClearSummary() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 5)
	x.xxx_hidden_Summary = nil
}

func (x *Facility_Charm) ClearIcon() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 6)
	x.xxx_hidden_Icon = nil
}

func (x *Facility_Charm) ClearDescription() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 7)
	x.xxx_hidden_Description = nil
}

func (x *Facility_Charm) ClearPublisher() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 10)
	x.xxx_hidden_Publisher = nil
}

func (x *Facility_Charm) ClearLicense() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 11)
	x.xxx_hidden_License = nil
}

func (x *Facility_Charm) ClearStoreUrl() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 12)
	x.xxx_hidden_StoreUrl = nil
}

func (x *Facility_Charm) ClearWebsite() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 13)
	x.xxx_hidden_Website = nil
}

func (x *Facility_Charm) ClearDefaultArtifact() {
	x.xxx_hidden_DefaultArtifact = nil
}

type Facility_Charm_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	Id              *string
	Type            *string
	Name            *string
	Verified        *bool
	Title           *string
	Summary         *string
	Icon            *string
	Description     *string
	Categories      []string
	DeployableOn    []string
	Publisher       *string
	License         *string
	StoreUrl        *string
	Website         *string
	DefaultArtifact *Facility_Charm_Artifact
}

func (b0 Facility_Charm_builder) Build() *Facility_Charm {
	m0 := &Facility_Charm{}
	b, x := &b0, m0
	_, _ = b, x
	if b.Id != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 0, 15)
		x.xxx_hidden_Id = b.Id
	}
	if b.Type != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 1, 15)
		x.xxx_hidden_Type = b.Type
	}
	if b.Name != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 2, 15)
		x.xxx_hidden_Name = b.Name
	}
	if b.Verified != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 3, 15)
		x.xxx_hidden_Verified = *b.Verified
	}
	if b.Title != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 4, 15)
		x.xxx_hidden_Title = b.Title
	}
	if b.Summary != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 5, 15)
		x.xxx_hidden_Summary = b.Summary
	}
	if b.Icon != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 6, 15)
		x.xxx_hidden_Icon = b.Icon
	}
	if b.Description != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 7, 15)
		x.xxx_hidden_Description = b.Description
	}
	x.xxx_hidden_Categories = b.Categories
	x.xxx_hidden_DeployableOn = b.DeployableOn
	if b.Publisher != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 10, 15)
		x.xxx_hidden_Publisher = b.Publisher
	}
	if b.License != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 11, 15)
		x.xxx_hidden_License = b.License
	}
	if b.StoreUrl != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 12, 15)
		x.xxx_hidden_StoreUrl = b.StoreUrl
	}
	if b.Website != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 13, 15)
		x.xxx_hidden_Website = b.Website
	}
	x.xxx_hidden_DefaultArtifact = b.DefaultArtifact
	return m0
}

type Facility_Action struct {
	state                  protoimpl.MessageState `protogen:"opaque.v1"`
	xxx_hidden_Name        *string                `protobuf:"bytes,1,opt,name=name"`
	xxx_hidden_Description *string                `protobuf:"bytes,2,opt,name=description"`
	XXX_raceDetectHookData protoimpl.RaceDetectHookData
	XXX_presence           [1]uint32
	unknownFields          protoimpl.UnknownFields
	sizeCache              protoimpl.SizeCache
}

func (x *Facility_Action) Reset() {
	*x = Facility_Action{}
	mi := &file_api_nexus_v1_nexus_proto_msgTypes[112]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Facility_Action) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Facility_Action) ProtoMessage() {}

func (x *Facility_Action) ProtoReflect() protoreflect.Message {
	mi := &file_api_nexus_v1_nexus_proto_msgTypes[112]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *Facility_Action) GetName() string {
	if x != nil {
		if x.xxx_hidden_Name != nil {
			return *x.xxx_hidden_Name
		}
		return ""
	}
	return ""
}

func (x *Facility_Action) GetDescription() string {
	if x != nil {
		if x.xxx_hidden_Description != nil {
			return *x.xxx_hidden_Description
		}
		return ""
	}
	return ""
}

func (x *Facility_Action) SetName(v string) {
	x.xxx_hidden_Name = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 0, 2)
}

func (x *Facility_Action) SetDescription(v string) {
	x.xxx_hidden_Description = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 1, 2)
}

func (x *Facility_Action) HasName() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 0)
}

func (x *Facility_Action) HasDescription() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 1)
}

func (x *Facility_Action) ClearName() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 0)
	x.xxx_hidden_Name = nil
}

func (x *Facility_Action) ClearDescription() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 1)
	x.xxx_hidden_Description = nil
}

type Facility_Action_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	Name        *string
	Description *string
}

func (b0 Facility_Action_builder) Build() *Facility_Action {
	m0 := &Facility_Action{}
	b, x := &b0, m0
	_, _ = b, x
	if b.Name != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 0, 2)
		x.xxx_hidden_Name = b.Name
	}
	if b.Description != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 1, 2)
		x.xxx_hidden_Description = b.Description
	}
	return m0
}

type Facility_Status struct {
	state                  protoimpl.MessageState `protogen:"opaque.v1"`
	xxx_hidden_State       *string                `protobuf:"bytes,1,opt,name=state"`
	xxx_hidden_Details     *string                `protobuf:"bytes,2,opt,name=details"`
	xxx_hidden_CreatedAt   *timestamppb.Timestamp `protobuf:"bytes,3,opt,name=created_at,json=createdAt"`
	XXX_raceDetectHookData protoimpl.RaceDetectHookData
	XXX_presence           [1]uint32
	unknownFields          protoimpl.UnknownFields
	sizeCache              protoimpl.SizeCache
}

func (x *Facility_Status) Reset() {
	*x = Facility_Status{}
	mi := &file_api_nexus_v1_nexus_proto_msgTypes[113]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Facility_Status) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Facility_Status) ProtoMessage() {}

func (x *Facility_Status) ProtoReflect() protoreflect.Message {
	mi := &file_api_nexus_v1_nexus_proto_msgTypes[113]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *Facility_Status) GetState() string {
	if x != nil {
		if x.xxx_hidden_State != nil {
			return *x.xxx_hidden_State
		}
		return ""
	}
	return ""
}

func (x *Facility_Status) GetDetails() string {
	if x != nil {
		if x.xxx_hidden_Details != nil {
			return *x.xxx_hidden_Details
		}
		return ""
	}
	return ""
}

func (x *Facility_Status) GetCreatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.xxx_hidden_CreatedAt
	}
	return nil
}

func (x *Facility_Status) SetState(v string) {
	x.xxx_hidden_State = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 0, 3)
}

func (x *Facility_Status) SetDetails(v string) {
	x.xxx_hidden_Details = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 1, 3)
}

func (x *Facility_Status) SetCreatedAt(v *timestamppb.Timestamp) {
	x.xxx_hidden_CreatedAt = v
}

func (x *Facility_Status) HasState() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 0)
}

func (x *Facility_Status) HasDetails() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 1)
}

func (x *Facility_Status) HasCreatedAt() bool {
	if x == nil {
		return false
	}
	return x.xxx_hidden_CreatedAt != nil
}

func (x *Facility_Status) ClearState() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 0)
	x.xxx_hidden_State = nil
}

func (x *Facility_Status) ClearDetails() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 1)
	x.xxx_hidden_Details = nil
}

func (x *Facility_Status) ClearCreatedAt() {
	x.xxx_hidden_CreatedAt = nil
}

type Facility_Status_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	State     *string
	Details   *string
	CreatedAt *timestamppb.Timestamp
}

func (b0 Facility_Status_builder) Build() *Facility_Status {
	m0 := &Facility_Status{}
	b, x := &b0, m0
	_, _ = b, x
	if b.State != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 0, 3)
		x.xxx_hidden_State = b.State
	}
	if b.Details != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 1, 3)
		x.xxx_hidden_Details = b.Details
	}
	x.xxx_hidden_CreatedAt = b.CreatedAt
	return m0
}

type Facility_Unit struct {
	state                     protoimpl.MessageState `protogen:"opaque.v1"`
	xxx_hidden_Name           *string                `protobuf:"bytes,1,opt,name=name"`
	xxx_hidden_AgentStatus    *Facility_Status       `protobuf:"bytes,2,opt,name=agent_status,json=agentStatus"`
	xxx_hidden_WorkloadStatus *Facility_Status       `protobuf:"bytes,3,opt,name=workload_status,json=workloadStatus"`
	xxx_hidden_Leader         bool                   `protobuf:"varint,4,opt,name=leader"`
	xxx_hidden_MachineId      *string                `protobuf:"bytes,11,opt,name=machine_id,json=machineId"`
	xxx_hidden_IpAddress      *string                `protobuf:"bytes,12,opt,name=ip_address,json=ipAddress"`
	xxx_hidden_Ports          []string               `protobuf:"bytes,13,rep,name=ports"`
	xxx_hidden_CharmName      *string                `protobuf:"bytes,21,opt,name=charm_name,json=charmName"`
	xxx_hidden_Version        *string                `protobuf:"bytes,22,opt,name=version"`
	xxx_hidden_Subordinates   *[]*Facility_Unit      `protobuf:"bytes,31,rep,name=subordinates"`
	XXX_raceDetectHookData    protoimpl.RaceDetectHookData
	XXX_presence              [1]uint32
	unknownFields             protoimpl.UnknownFields
	sizeCache                 protoimpl.SizeCache
}

func (x *Facility_Unit) Reset() {
	*x = Facility_Unit{}
	mi := &file_api_nexus_v1_nexus_proto_msgTypes[114]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Facility_Unit) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Facility_Unit) ProtoMessage() {}

func (x *Facility_Unit) ProtoReflect() protoreflect.Message {
	mi := &file_api_nexus_v1_nexus_proto_msgTypes[114]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *Facility_Unit) GetName() string {
	if x != nil {
		if x.xxx_hidden_Name != nil {
			return *x.xxx_hidden_Name
		}
		return ""
	}
	return ""
}

func (x *Facility_Unit) GetAgentStatus() *Facility_Status {
	if x != nil {
		return x.xxx_hidden_AgentStatus
	}
	return nil
}

func (x *Facility_Unit) GetWorkloadStatus() *Facility_Status {
	if x != nil {
		return x.xxx_hidden_WorkloadStatus
	}
	return nil
}

func (x *Facility_Unit) GetLeader() bool {
	if x != nil {
		return x.xxx_hidden_Leader
	}
	return false
}

func (x *Facility_Unit) GetMachineId() string {
	if x != nil {
		if x.xxx_hidden_MachineId != nil {
			return *x.xxx_hidden_MachineId
		}
		return ""
	}
	return ""
}

func (x *Facility_Unit) GetIpAddress() string {
	if x != nil {
		if x.xxx_hidden_IpAddress != nil {
			return *x.xxx_hidden_IpAddress
		}
		return ""
	}
	return ""
}

func (x *Facility_Unit) GetPorts() []string {
	if x != nil {
		return x.xxx_hidden_Ports
	}
	return nil
}

func (x *Facility_Unit) GetCharmName() string {
	if x != nil {
		if x.xxx_hidden_CharmName != nil {
			return *x.xxx_hidden_CharmName
		}
		return ""
	}
	return ""
}

func (x *Facility_Unit) GetVersion() string {
	if x != nil {
		if x.xxx_hidden_Version != nil {
			return *x.xxx_hidden_Version
		}
		return ""
	}
	return ""
}

func (x *Facility_Unit) GetSubordinates() []*Facility_Unit {
	if x != nil {
		if x.xxx_hidden_Subordinates != nil {
			return *x.xxx_hidden_Subordinates
		}
	}
	return nil
}

func (x *Facility_Unit) SetName(v string) {
	x.xxx_hidden_Name = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 0, 10)
}

func (x *Facility_Unit) SetAgentStatus(v *Facility_Status) {
	x.xxx_hidden_AgentStatus = v
}

func (x *Facility_Unit) SetWorkloadStatus(v *Facility_Status) {
	x.xxx_hidden_WorkloadStatus = v
}

func (x *Facility_Unit) SetLeader(v bool) {
	x.xxx_hidden_Leader = v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 3, 10)
}

func (x *Facility_Unit) SetMachineId(v string) {
	x.xxx_hidden_MachineId = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 4, 10)
}

func (x *Facility_Unit) SetIpAddress(v string) {
	x.xxx_hidden_IpAddress = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 5, 10)
}

func (x *Facility_Unit) SetPorts(v []string) {
	x.xxx_hidden_Ports = v
}

func (x *Facility_Unit) SetCharmName(v string) {
	x.xxx_hidden_CharmName = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 7, 10)
}

func (x *Facility_Unit) SetVersion(v string) {
	x.xxx_hidden_Version = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 8, 10)
}

func (x *Facility_Unit) SetSubordinates(v []*Facility_Unit) {
	x.xxx_hidden_Subordinates = &v
}

func (x *Facility_Unit) HasName() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 0)
}

func (x *Facility_Unit) HasAgentStatus() bool {
	if x == nil {
		return false
	}
	return x.xxx_hidden_AgentStatus != nil
}

func (x *Facility_Unit) HasWorkloadStatus() bool {
	if x == nil {
		return false
	}
	return x.xxx_hidden_WorkloadStatus != nil
}

func (x *Facility_Unit) HasLeader() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 3)
}

func (x *Facility_Unit) HasMachineId() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 4)
}

func (x *Facility_Unit) HasIpAddress() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 5)
}

func (x *Facility_Unit) HasCharmName() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 7)
}

func (x *Facility_Unit) HasVersion() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 8)
}

func (x *Facility_Unit) ClearName() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 0)
	x.xxx_hidden_Name = nil
}

func (x *Facility_Unit) ClearAgentStatus() {
	x.xxx_hidden_AgentStatus = nil
}

func (x *Facility_Unit) ClearWorkloadStatus() {
	x.xxx_hidden_WorkloadStatus = nil
}

func (x *Facility_Unit) ClearLeader() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 3)
	x.xxx_hidden_Leader = false
}

func (x *Facility_Unit) ClearMachineId() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 4)
	x.xxx_hidden_MachineId = nil
}

func (x *Facility_Unit) ClearIpAddress() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 5)
	x.xxx_hidden_IpAddress = nil
}

func (x *Facility_Unit) ClearCharmName() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 7)
	x.xxx_hidden_CharmName = nil
}

func (x *Facility_Unit) ClearVersion() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 8)
	x.xxx_hidden_Version = nil
}

type Facility_Unit_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	Name           *string
	AgentStatus    *Facility_Status
	WorkloadStatus *Facility_Status
	Leader         *bool
	MachineId      *string
	IpAddress      *string
	Ports          []string
	CharmName      *string
	Version        *string
	Subordinates   []*Facility_Unit
}

func (b0 Facility_Unit_builder) Build() *Facility_Unit {
	m0 := &Facility_Unit{}
	b, x := &b0, m0
	_, _ = b, x
	if b.Name != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 0, 10)
		x.xxx_hidden_Name = b.Name
	}
	x.xxx_hidden_AgentStatus = b.AgentStatus
	x.xxx_hidden_WorkloadStatus = b.WorkloadStatus
	if b.Leader != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 3, 10)
		x.xxx_hidden_Leader = *b.Leader
	}
	if b.MachineId != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 4, 10)
		x.xxx_hidden_MachineId = b.MachineId
	}
	if b.IpAddress != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 5, 10)
		x.xxx_hidden_IpAddress = b.IpAddress
	}
	x.xxx_hidden_Ports = b.Ports
	if b.CharmName != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 7, 10)
		x.xxx_hidden_CharmName = b.CharmName
	}
	if b.Version != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 8, 10)
		x.xxx_hidden_Version = b.Version
	}
	x.xxx_hidden_Subordinates = &b.Subordinates
	return m0
}

type Facility_Charm_Metadata struct {
	state                    protoimpl.MessageState `protogen:"opaque.v1"`
	xxx_hidden_ConfigYaml    *string                `protobuf:"bytes,1,opt,name=config_yaml,json=configYaml"`
	xxx_hidden_Customization *Customization         `protobuf:"bytes,11,opt,name=customization"`
	XXX_raceDetectHookData   protoimpl.RaceDetectHookData
	XXX_presence             [1]uint32
	unknownFields            protoimpl.UnknownFields
	sizeCache                protoimpl.SizeCache
}

func (x *Facility_Charm_Metadata) Reset() {
	*x = Facility_Charm_Metadata{}
	mi := &file_api_nexus_v1_nexus_proto_msgTypes[115]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Facility_Charm_Metadata) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Facility_Charm_Metadata) ProtoMessage() {}

func (x *Facility_Charm_Metadata) ProtoReflect() protoreflect.Message {
	mi := &file_api_nexus_v1_nexus_proto_msgTypes[115]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *Facility_Charm_Metadata) GetConfigYaml() string {
	if x != nil {
		if x.xxx_hidden_ConfigYaml != nil {
			return *x.xxx_hidden_ConfigYaml
		}
		return ""
	}
	return ""
}

func (x *Facility_Charm_Metadata) GetCustomization() *Customization {
	if x != nil {
		return x.xxx_hidden_Customization
	}
	return nil
}

func (x *Facility_Charm_Metadata) SetConfigYaml(v string) {
	x.xxx_hidden_ConfigYaml = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 0, 2)
}

func (x *Facility_Charm_Metadata) SetCustomization(v *Customization) {
	x.xxx_hidden_Customization = v
}

func (x *Facility_Charm_Metadata) HasConfigYaml() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 0)
}

func (x *Facility_Charm_Metadata) HasCustomization() bool {
	if x == nil {
		return false
	}
	return x.xxx_hidden_Customization != nil
}

func (x *Facility_Charm_Metadata) ClearConfigYaml() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 0)
	x.xxx_hidden_ConfigYaml = nil
}

func (x *Facility_Charm_Metadata) ClearCustomization() {
	x.xxx_hidden_Customization = nil
}

type Facility_Charm_Metadata_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	ConfigYaml    *string
	Customization *Customization
}

func (b0 Facility_Charm_Metadata_builder) Build() *Facility_Charm_Metadata {
	m0 := &Facility_Charm_Metadata{}
	b, x := &b0, m0
	_, _ = b, x
	if b.ConfigYaml != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 0, 2)
		x.xxx_hidden_ConfigYaml = b.ConfigYaml
	}
	x.xxx_hidden_Customization = b.Customization
	return m0
}

type Facility_Charm_Base struct {
	state                   protoimpl.MessageState `protogen:"opaque.v1"`
	xxx_hidden_Name         *string                `protobuf:"bytes,1,opt,name=name"`
	xxx_hidden_Channel      *string                `protobuf:"bytes,2,opt,name=channel"`
	xxx_hidden_Architecture *string                `protobuf:"bytes,3,opt,name=architecture"`
	XXX_raceDetectHookData  protoimpl.RaceDetectHookData
	XXX_presence            [1]uint32
	unknownFields           protoimpl.UnknownFields
	sizeCache               protoimpl.SizeCache
}

func (x *Facility_Charm_Base) Reset() {
	*x = Facility_Charm_Base{}
	mi := &file_api_nexus_v1_nexus_proto_msgTypes[116]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Facility_Charm_Base) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Facility_Charm_Base) ProtoMessage() {}

func (x *Facility_Charm_Base) ProtoReflect() protoreflect.Message {
	mi := &file_api_nexus_v1_nexus_proto_msgTypes[116]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *Facility_Charm_Base) GetName() string {
	if x != nil {
		if x.xxx_hidden_Name != nil {
			return *x.xxx_hidden_Name
		}
		return ""
	}
	return ""
}

func (x *Facility_Charm_Base) GetChannel() string {
	if x != nil {
		if x.xxx_hidden_Channel != nil {
			return *x.xxx_hidden_Channel
		}
		return ""
	}
	return ""
}

func (x *Facility_Charm_Base) GetArchitecture() string {
	if x != nil {
		if x.xxx_hidden_Architecture != nil {
			return *x.xxx_hidden_Architecture
		}
		return ""
	}
	return ""
}

func (x *Facility_Charm_Base) SetName(v string) {
	x.xxx_hidden_Name = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 0, 3)
}

func (x *Facility_Charm_Base) SetChannel(v string) {
	x.xxx_hidden_Channel = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 1, 3)
}

func (x *Facility_Charm_Base) SetArchitecture(v string) {
	x.xxx_hidden_Architecture = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 2, 3)
}

func (x *Facility_Charm_Base) HasName() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 0)
}

func (x *Facility_Charm_Base) HasChannel() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 1)
}

func (x *Facility_Charm_Base) HasArchitecture() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 2)
}

func (x *Facility_Charm_Base) ClearName() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 0)
	x.xxx_hidden_Name = nil
}

func (x *Facility_Charm_Base) ClearChannel() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 1)
	x.xxx_hidden_Channel = nil
}

func (x *Facility_Charm_Base) ClearArchitecture() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 2)
	x.xxx_hidden_Architecture = nil
}

type Facility_Charm_Base_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	Name         *string
	Channel      *string
	Architecture *string
}

func (b0 Facility_Charm_Base_builder) Build() *Facility_Charm_Base {
	m0 := &Facility_Charm_Base{}
	b, x := &b0, m0
	_, _ = b, x
	if b.Name != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 0, 3)
		x.xxx_hidden_Name = b.Name
	}
	if b.Channel != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 1, 3)
		x.xxx_hidden_Channel = b.Channel
	}
	if b.Architecture != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 2, 3)
		x.xxx_hidden_Architecture = b.Architecture
	}
	return m0
}

type Facility_Charm_Artifact struct {
	state                  protoimpl.MessageState  `protogen:"opaque.v1"`
	xxx_hidden_Channel     *string                 `protobuf:"bytes,1,opt,name=channel"`
	xxx_hidden_Revision    int64                   `protobuf:"varint,2,opt,name=revision"`
	xxx_hidden_Version     *string                 `protobuf:"bytes,11,opt,name=version"`
	xxx_hidden_Bases       *[]*Facility_Charm_Base `protobuf:"bytes,12,rep,name=bases"`
	xxx_hidden_CreatedAt   *timestamppb.Timestamp  `protobuf:"bytes,21,opt,name=created_at,json=createdAt"`
	XXX_raceDetectHookData protoimpl.RaceDetectHookData
	XXX_presence           [1]uint32
	unknownFields          protoimpl.UnknownFields
	sizeCache              protoimpl.SizeCache
}

func (x *Facility_Charm_Artifact) Reset() {
	*x = Facility_Charm_Artifact{}
	mi := &file_api_nexus_v1_nexus_proto_msgTypes[117]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Facility_Charm_Artifact) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Facility_Charm_Artifact) ProtoMessage() {}

func (x *Facility_Charm_Artifact) ProtoReflect() protoreflect.Message {
	mi := &file_api_nexus_v1_nexus_proto_msgTypes[117]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *Facility_Charm_Artifact) GetChannel() string {
	if x != nil {
		if x.xxx_hidden_Channel != nil {
			return *x.xxx_hidden_Channel
		}
		return ""
	}
	return ""
}

func (x *Facility_Charm_Artifact) GetRevision() int64 {
	if x != nil {
		return x.xxx_hidden_Revision
	}
	return 0
}

func (x *Facility_Charm_Artifact) GetVersion() string {
	if x != nil {
		if x.xxx_hidden_Version != nil {
			return *x.xxx_hidden_Version
		}
		return ""
	}
	return ""
}

func (x *Facility_Charm_Artifact) GetBases() []*Facility_Charm_Base {
	if x != nil {
		if x.xxx_hidden_Bases != nil {
			return *x.xxx_hidden_Bases
		}
	}
	return nil
}

func (x *Facility_Charm_Artifact) GetCreatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.xxx_hidden_CreatedAt
	}
	return nil
}

func (x *Facility_Charm_Artifact) SetChannel(v string) {
	x.xxx_hidden_Channel = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 0, 5)
}

func (x *Facility_Charm_Artifact) SetRevision(v int64) {
	x.xxx_hidden_Revision = v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 1, 5)
}

func (x *Facility_Charm_Artifact) SetVersion(v string) {
	x.xxx_hidden_Version = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 2, 5)
}

func (x *Facility_Charm_Artifact) SetBases(v []*Facility_Charm_Base) {
	x.xxx_hidden_Bases = &v
}

func (x *Facility_Charm_Artifact) SetCreatedAt(v *timestamppb.Timestamp) {
	x.xxx_hidden_CreatedAt = v
}

func (x *Facility_Charm_Artifact) HasChannel() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 0)
}

func (x *Facility_Charm_Artifact) HasRevision() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 1)
}

func (x *Facility_Charm_Artifact) HasVersion() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 2)
}

func (x *Facility_Charm_Artifact) HasCreatedAt() bool {
	if x == nil {
		return false
	}
	return x.xxx_hidden_CreatedAt != nil
}

func (x *Facility_Charm_Artifact) ClearChannel() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 0)
	x.xxx_hidden_Channel = nil
}

func (x *Facility_Charm_Artifact) ClearRevision() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 1)
	x.xxx_hidden_Revision = 0
}

func (x *Facility_Charm_Artifact) ClearVersion() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 2)
	x.xxx_hidden_Version = nil
}

func (x *Facility_Charm_Artifact) ClearCreatedAt() {
	x.xxx_hidden_CreatedAt = nil
}

type Facility_Charm_Artifact_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	Channel   *string
	Revision  *int64
	Version   *string
	Bases     []*Facility_Charm_Base
	CreatedAt *timestamppb.Timestamp
}

func (b0 Facility_Charm_Artifact_builder) Build() *Facility_Charm_Artifact {
	m0 := &Facility_Charm_Artifact{}
	b, x := &b0, m0
	_, _ = b, x
	if b.Channel != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 0, 5)
		x.xxx_hidden_Channel = b.Channel
	}
	if b.Revision != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 1, 5)
		x.xxx_hidden_Revision = *b.Revision
	}
	if b.Version != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 2, 5)
		x.xxx_hidden_Version = b.Version
	}
	x.xxx_hidden_Bases = &b.Bases
	x.xxx_hidden_CreatedAt = b.CreatedAt
	return m0
}

type Application_Chart struct {
	state                   protoimpl.MessageState           `protogen:"opaque.v1"`
	xxx_hidden_Name         *string                          `protobuf:"bytes,1,opt,name=name"`
	xxx_hidden_Icon         *string                          `protobuf:"bytes,2,opt,name=icon"`
	xxx_hidden_Description  *string                          `protobuf:"bytes,3,opt,name=description"`
	xxx_hidden_Deprecated   bool                             `protobuf:"varint,4,opt,name=deprecated"`
	xxx_hidden_Tags         *string                          `protobuf:"bytes,5,opt,name=tags"`
	xxx_hidden_Keywords     []string                         `protobuf:"bytes,6,rep,name=keywords"`
	xxx_hidden_License      *string                          `protobuf:"bytes,7,opt,name=license"`
	xxx_hidden_Verified     bool                             `protobuf:"varint,8,opt,name=verified"`
	xxx_hidden_Home         *string                          `protobuf:"bytes,11,opt,name=home"`
	xxx_hidden_Sources      []string                         `protobuf:"bytes,12,rep,name=sources"`
	xxx_hidden_Maintainers  *[]*Application_Chart_Maintainer `protobuf:"bytes,21,rep,name=maintainers"`
	xxx_hidden_Dependencies *[]*Application_Chart_Dependency `protobuf:"bytes,31,rep,name=dependencies"`
	xxx_hidden_Versions     *[]*Application_Chart_Version    `protobuf:"bytes,41,rep,name=versions"`
	XXX_raceDetectHookData  protoimpl.RaceDetectHookData
	XXX_presence            [1]uint32
	unknownFields           protoimpl.UnknownFields
	sizeCache               protoimpl.SizeCache
}

func (x *Application_Chart) Reset() {
	*x = Application_Chart{}
	mi := &file_api_nexus_v1_nexus_proto_msgTypes[118]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Application_Chart) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Application_Chart) ProtoMessage() {}

func (x *Application_Chart) ProtoReflect() protoreflect.Message {
	mi := &file_api_nexus_v1_nexus_proto_msgTypes[118]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *Application_Chart) GetName() string {
	if x != nil {
		if x.xxx_hidden_Name != nil {
			return *x.xxx_hidden_Name
		}
		return ""
	}
	return ""
}

func (x *Application_Chart) GetIcon() string {
	if x != nil {
		if x.xxx_hidden_Icon != nil {
			return *x.xxx_hidden_Icon
		}
		return ""
	}
	return ""
}

func (x *Application_Chart) GetDescription() string {
	if x != nil {
		if x.xxx_hidden_Description != nil {
			return *x.xxx_hidden_Description
		}
		return ""
	}
	return ""
}

func (x *Application_Chart) GetDeprecated() bool {
	if x != nil {
		return x.xxx_hidden_Deprecated
	}
	return false
}

func (x *Application_Chart) GetTags() string {
	if x != nil {
		if x.xxx_hidden_Tags != nil {
			return *x.xxx_hidden_Tags
		}
		return ""
	}
	return ""
}

func (x *Application_Chart) GetKeywords() []string {
	if x != nil {
		return x.xxx_hidden_Keywords
	}
	return nil
}

func (x *Application_Chart) GetLicense() string {
	if x != nil {
		if x.xxx_hidden_License != nil {
			return *x.xxx_hidden_License
		}
		return ""
	}
	return ""
}

func (x *Application_Chart) GetVerified() bool {
	if x != nil {
		return x.xxx_hidden_Verified
	}
	return false
}

func (x *Application_Chart) GetHome() string {
	if x != nil {
		if x.xxx_hidden_Home != nil {
			return *x.xxx_hidden_Home
		}
		return ""
	}
	return ""
}

func (x *Application_Chart) GetSources() []string {
	if x != nil {
		return x.xxx_hidden_Sources
	}
	return nil
}

func (x *Application_Chart) GetMaintainers() []*Application_Chart_Maintainer {
	if x != nil {
		if x.xxx_hidden_Maintainers != nil {
			return *x.xxx_hidden_Maintainers
		}
	}
	return nil
}

func (x *Application_Chart) GetDependencies() []*Application_Chart_Dependency {
	if x != nil {
		if x.xxx_hidden_Dependencies != nil {
			return *x.xxx_hidden_Dependencies
		}
	}
	return nil
}

func (x *Application_Chart) GetVersions() []*Application_Chart_Version {
	if x != nil {
		if x.xxx_hidden_Versions != nil {
			return *x.xxx_hidden_Versions
		}
	}
	return nil
}

func (x *Application_Chart) SetName(v string) {
	x.xxx_hidden_Name = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 0, 13)
}

func (x *Application_Chart) SetIcon(v string) {
	x.xxx_hidden_Icon = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 1, 13)
}

func (x *Application_Chart) SetDescription(v string) {
	x.xxx_hidden_Description = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 2, 13)
}

func (x *Application_Chart) SetDeprecated(v bool) {
	x.xxx_hidden_Deprecated = v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 3, 13)
}

func (x *Application_Chart) SetTags(v string) {
	x.xxx_hidden_Tags = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 4, 13)
}

func (x *Application_Chart) SetKeywords(v []string) {
	x.xxx_hidden_Keywords = v
}

func (x *Application_Chart) SetLicense(v string) {
	x.xxx_hidden_License = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 6, 13)
}

func (x *Application_Chart) SetVerified(v bool) {
	x.xxx_hidden_Verified = v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 7, 13)
}

func (x *Application_Chart) SetHome(v string) {
	x.xxx_hidden_Home = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 8, 13)
}

func (x *Application_Chart) SetSources(v []string) {
	x.xxx_hidden_Sources = v
}

func (x *Application_Chart) SetMaintainers(v []*Application_Chart_Maintainer) {
	x.xxx_hidden_Maintainers = &v
}

func (x *Application_Chart) SetDependencies(v []*Application_Chart_Dependency) {
	x.xxx_hidden_Dependencies = &v
}

func (x *Application_Chart) SetVersions(v []*Application_Chart_Version) {
	x.xxx_hidden_Versions = &v
}

func (x *Application_Chart) HasName() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 0)
}

func (x *Application_Chart) HasIcon() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 1)
}

func (x *Application_Chart) HasDescription() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 2)
}

func (x *Application_Chart) HasDeprecated() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 3)
}

func (x *Application_Chart) HasTags() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 4)
}

func (x *Application_Chart) HasLicense() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 6)
}

func (x *Application_Chart) HasVerified() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 7)
}

func (x *Application_Chart) HasHome() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 8)
}

func (x *Application_Chart) ClearName() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 0)
	x.xxx_hidden_Name = nil
}

func (x *Application_Chart) ClearIcon() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 1)
	x.xxx_hidden_Icon = nil
}

func (x *Application_Chart) ClearDescription() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 2)
	x.xxx_hidden_Description = nil
}

func (x *Application_Chart) ClearDeprecated() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 3)
	x.xxx_hidden_Deprecated = false
}

func (x *Application_Chart) ClearTags() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 4)
	x.xxx_hidden_Tags = nil
}

func (x *Application_Chart) ClearLicense() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 6)
	x.xxx_hidden_License = nil
}

func (x *Application_Chart) ClearVerified() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 7)
	x.xxx_hidden_Verified = false
}

func (x *Application_Chart) ClearHome() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 8)
	x.xxx_hidden_Home = nil
}

type Application_Chart_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	Name         *string
	Icon         *string
	Description  *string
	Deprecated   *bool
	Tags         *string
	Keywords     []string
	License      *string
	Verified     *bool
	Home         *string
	Sources      []string
	Maintainers  []*Application_Chart_Maintainer
	Dependencies []*Application_Chart_Dependency
	Versions     []*Application_Chart_Version
}

func (b0 Application_Chart_builder) Build() *Application_Chart {
	m0 := &Application_Chart{}
	b, x := &b0, m0
	_, _ = b, x
	if b.Name != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 0, 13)
		x.xxx_hidden_Name = b.Name
	}
	if b.Icon != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 1, 13)
		x.xxx_hidden_Icon = b.Icon
	}
	if b.Description != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 2, 13)
		x.xxx_hidden_Description = b.Description
	}
	if b.Deprecated != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 3, 13)
		x.xxx_hidden_Deprecated = *b.Deprecated
	}
	if b.Tags != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 4, 13)
		x.xxx_hidden_Tags = b.Tags
	}
	x.xxx_hidden_Keywords = b.Keywords
	if b.License != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 6, 13)
		x.xxx_hidden_License = b.License
	}
	if b.Verified != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 7, 13)
		x.xxx_hidden_Verified = *b.Verified
	}
	if b.Home != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 8, 13)
		x.xxx_hidden_Home = b.Home
	}
	x.xxx_hidden_Sources = b.Sources
	x.xxx_hidden_Maintainers = &b.Maintainers
	x.xxx_hidden_Dependencies = &b.Dependencies
	x.xxx_hidden_Versions = &b.Versions
	return m0
}

type Application_Release struct {
	state                   protoimpl.MessageState     `protogen:"opaque.v1"`
	xxx_hidden_ScopeName    *string                    `protobuf:"bytes,1,opt,name=scope_name,json=scopeName"`
	xxx_hidden_ScopeUuid    *string                    `protobuf:"bytes,2,opt,name=scope_uuid,json=scopeUuid"`
	xxx_hidden_FacilityName *string                    `protobuf:"bytes,3,opt,name=facility_name,json=facilityName"`
	xxx_hidden_Namespace    *string                    `protobuf:"bytes,4,opt,name=namespace"`
	xxx_hidden_Name         *string                    `protobuf:"bytes,5,opt,name=name"`
	xxx_hidden_Revision     int32                      `protobuf:"varint,6,opt,name=revision"`
	xxx_hidden_ChartName    *string                    `protobuf:"bytes,11,opt,name=chart_name,json=chartName"`
	xxx_hidden_Version      *Application_Chart_Version `protobuf:"bytes,12,opt,name=version"`
	XXX_raceDetectHookData  protoimpl.RaceDetectHookData
	XXX_presence            [1]uint32
	unknownFields           protoimpl.UnknownFields
	sizeCache               protoimpl.SizeCache
}

func (x *Application_Release) Reset() {
	*x = Application_Release{}
	mi := &file_api_nexus_v1_nexus_proto_msgTypes[119]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Application_Release) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Application_Release) ProtoMessage() {}

func (x *Application_Release) ProtoReflect() protoreflect.Message {
	mi := &file_api_nexus_v1_nexus_proto_msgTypes[119]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *Application_Release) GetScopeName() string {
	if x != nil {
		if x.xxx_hidden_ScopeName != nil {
			return *x.xxx_hidden_ScopeName
		}
		return ""
	}
	return ""
}

func (x *Application_Release) GetScopeUuid() string {
	if x != nil {
		if x.xxx_hidden_ScopeUuid != nil {
			return *x.xxx_hidden_ScopeUuid
		}
		return ""
	}
	return ""
}

func (x *Application_Release) GetFacilityName() string {
	if x != nil {
		if x.xxx_hidden_FacilityName != nil {
			return *x.xxx_hidden_FacilityName
		}
		return ""
	}
	return ""
}

func (x *Application_Release) GetNamespace() string {
	if x != nil {
		if x.xxx_hidden_Namespace != nil {
			return *x.xxx_hidden_Namespace
		}
		return ""
	}
	return ""
}

func (x *Application_Release) GetName() string {
	if x != nil {
		if x.xxx_hidden_Name != nil {
			return *x.xxx_hidden_Name
		}
		return ""
	}
	return ""
}

func (x *Application_Release) GetRevision() int32 {
	if x != nil {
		return x.xxx_hidden_Revision
	}
	return 0
}

func (x *Application_Release) GetChartName() string {
	if x != nil {
		if x.xxx_hidden_ChartName != nil {
			return *x.xxx_hidden_ChartName
		}
		return ""
	}
	return ""
}

func (x *Application_Release) GetVersion() *Application_Chart_Version {
	if x != nil {
		return x.xxx_hidden_Version
	}
	return nil
}

func (x *Application_Release) SetScopeName(v string) {
	x.xxx_hidden_ScopeName = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 0, 8)
}

func (x *Application_Release) SetScopeUuid(v string) {
	x.xxx_hidden_ScopeUuid = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 1, 8)
}

func (x *Application_Release) SetFacilityName(v string) {
	x.xxx_hidden_FacilityName = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 2, 8)
}

func (x *Application_Release) SetNamespace(v string) {
	x.xxx_hidden_Namespace = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 3, 8)
}

func (x *Application_Release) SetName(v string) {
	x.xxx_hidden_Name = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 4, 8)
}

func (x *Application_Release) SetRevision(v int32) {
	x.xxx_hidden_Revision = v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 5, 8)
}

func (x *Application_Release) SetChartName(v string) {
	x.xxx_hidden_ChartName = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 6, 8)
}

func (x *Application_Release) SetVersion(v *Application_Chart_Version) {
	x.xxx_hidden_Version = v
}

func (x *Application_Release) HasScopeName() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 0)
}

func (x *Application_Release) HasScopeUuid() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 1)
}

func (x *Application_Release) HasFacilityName() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 2)
}

func (x *Application_Release) HasNamespace() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 3)
}

func (x *Application_Release) HasName() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 4)
}

func (x *Application_Release) HasRevision() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 5)
}

func (x *Application_Release) HasChartName() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 6)
}

func (x *Application_Release) HasVersion() bool {
	if x == nil {
		return false
	}
	return x.xxx_hidden_Version != nil
}

func (x *Application_Release) ClearScopeName() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 0)
	x.xxx_hidden_ScopeName = nil
}

func (x *Application_Release) ClearScopeUuid() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 1)
	x.xxx_hidden_ScopeUuid = nil
}

func (x *Application_Release) ClearFacilityName() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 2)
	x.xxx_hidden_FacilityName = nil
}

func (x *Application_Release) ClearNamespace() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 3)
	x.xxx_hidden_Namespace = nil
}

func (x *Application_Release) ClearName() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 4)
	x.xxx_hidden_Name = nil
}

func (x *Application_Release) ClearRevision() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 5)
	x.xxx_hidden_Revision = 0
}

func (x *Application_Release) ClearChartName() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 6)
	x.xxx_hidden_ChartName = nil
}

func (x *Application_Release) ClearVersion() {
	x.xxx_hidden_Version = nil
}

type Application_Release_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	ScopeName    *string
	ScopeUuid    *string
	FacilityName *string
	Namespace    *string
	Name         *string
	Revision     *int32
	ChartName    *string
	Version      *Application_Chart_Version
}

func (b0 Application_Release_builder) Build() *Application_Release {
	m0 := &Application_Release{}
	b, x := &b0, m0
	_, _ = b, x
	if b.ScopeName != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 0, 8)
		x.xxx_hidden_ScopeName = b.ScopeName
	}
	if b.ScopeUuid != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 1, 8)
		x.xxx_hidden_ScopeUuid = b.ScopeUuid
	}
	if b.FacilityName != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 2, 8)
		x.xxx_hidden_FacilityName = b.FacilityName
	}
	if b.Namespace != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 3, 8)
		x.xxx_hidden_Namespace = b.Namespace
	}
	if b.Name != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 4, 8)
		x.xxx_hidden_Name = b.Name
	}
	if b.Revision != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 5, 8)
		x.xxx_hidden_Revision = *b.Revision
	}
	if b.ChartName != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 6, 8)
		x.xxx_hidden_ChartName = b.ChartName
	}
	x.xxx_hidden_Version = b.Version
	return m0
}

type Application_Condition struct {
	state                     protoimpl.MessageState `protogen:"opaque.v1"`
	xxx_hidden_Type           *string                `protobuf:"bytes,1,opt,name=type"`
	xxx_hidden_Status         *string                `protobuf:"bytes,2,opt,name=status"`
	xxx_hidden_Reason         *string                `protobuf:"bytes,3,opt,name=reason"`
	xxx_hidden_Message        *string                `protobuf:"bytes,4,opt,name=message"`
	xxx_hidden_ProbedAt       *timestamppb.Timestamp `protobuf:"bytes,201,opt,name=probed_at,json=probedAt"`
	xxx_hidden_TransitionedAt *timestamppb.Timestamp `protobuf:"bytes,202,opt,name=transitioned_at,json=transitionedAt"`
	XXX_raceDetectHookData    protoimpl.RaceDetectHookData
	XXX_presence              [1]uint32
	unknownFields             protoimpl.UnknownFields
	sizeCache                 protoimpl.SizeCache
}

func (x *Application_Condition) Reset() {
	*x = Application_Condition{}
	mi := &file_api_nexus_v1_nexus_proto_msgTypes[120]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Application_Condition) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Application_Condition) ProtoMessage() {}

func (x *Application_Condition) ProtoReflect() protoreflect.Message {
	mi := &file_api_nexus_v1_nexus_proto_msgTypes[120]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *Application_Condition) GetType() string {
	if x != nil {
		if x.xxx_hidden_Type != nil {
			return *x.xxx_hidden_Type
		}
		return ""
	}
	return ""
}

func (x *Application_Condition) GetStatus() string {
	if x != nil {
		if x.xxx_hidden_Status != nil {
			return *x.xxx_hidden_Status
		}
		return ""
	}
	return ""
}

func (x *Application_Condition) GetReason() string {
	if x != nil {
		if x.xxx_hidden_Reason != nil {
			return *x.xxx_hidden_Reason
		}
		return ""
	}
	return ""
}

func (x *Application_Condition) GetMessage() string {
	if x != nil {
		if x.xxx_hidden_Message != nil {
			return *x.xxx_hidden_Message
		}
		return ""
	}
	return ""
}

func (x *Application_Condition) GetProbedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.xxx_hidden_ProbedAt
	}
	return nil
}

func (x *Application_Condition) GetTransitionedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.xxx_hidden_TransitionedAt
	}
	return nil
}

func (x *Application_Condition) SetType(v string) {
	x.xxx_hidden_Type = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 0, 6)
}

func (x *Application_Condition) SetStatus(v string) {
	x.xxx_hidden_Status = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 1, 6)
}

func (x *Application_Condition) SetReason(v string) {
	x.xxx_hidden_Reason = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 2, 6)
}

func (x *Application_Condition) SetMessage(v string) {
	x.xxx_hidden_Message = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 3, 6)
}

func (x *Application_Condition) SetProbedAt(v *timestamppb.Timestamp) {
	x.xxx_hidden_ProbedAt = v
}

func (x *Application_Condition) SetTransitionedAt(v *timestamppb.Timestamp) {
	x.xxx_hidden_TransitionedAt = v
}

func (x *Application_Condition) HasType() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 0)
}

func (x *Application_Condition) HasStatus() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 1)
}

func (x *Application_Condition) HasReason() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 2)
}

func (x *Application_Condition) HasMessage() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 3)
}

func (x *Application_Condition) HasProbedAt() bool {
	if x == nil {
		return false
	}
	return x.xxx_hidden_ProbedAt != nil
}

func (x *Application_Condition) HasTransitionedAt() bool {
	if x == nil {
		return false
	}
	return x.xxx_hidden_TransitionedAt != nil
}

func (x *Application_Condition) ClearType() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 0)
	x.xxx_hidden_Type = nil
}

func (x *Application_Condition) ClearStatus() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 1)
	x.xxx_hidden_Status = nil
}

func (x *Application_Condition) ClearReason() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 2)
	x.xxx_hidden_Reason = nil
}

func (x *Application_Condition) ClearMessage() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 3)
	x.xxx_hidden_Message = nil
}

func (x *Application_Condition) ClearProbedAt() {
	x.xxx_hidden_ProbedAt = nil
}

func (x *Application_Condition) ClearTransitionedAt() {
	x.xxx_hidden_TransitionedAt = nil
}

type Application_Condition_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	Type           *string
	Status         *string
	Reason         *string
	Message        *string
	ProbedAt       *timestamppb.Timestamp
	TransitionedAt *timestamppb.Timestamp
}

func (b0 Application_Condition_builder) Build() *Application_Condition {
	m0 := &Application_Condition{}
	b, x := &b0, m0
	_, _ = b, x
	if b.Type != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 0, 6)
		x.xxx_hidden_Type = b.Type
	}
	if b.Status != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 1, 6)
		x.xxx_hidden_Status = b.Status
	}
	if b.Reason != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 2, 6)
		x.xxx_hidden_Reason = b.Reason
	}
	if b.Message != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 3, 6)
		x.xxx_hidden_Message = b.Message
	}
	x.xxx_hidden_ProbedAt = b.ProbedAt
	x.xxx_hidden_TransitionedAt = b.TransitionedAt
	return m0
}

type Application_Container struct {
	state                      protoimpl.MessageState `protogen:"opaque.v1"`
	xxx_hidden_ImageName       *string                `protobuf:"bytes,1,opt,name=image_name,json=imageName"`
	xxx_hidden_ImagePullPolicy *string                `protobuf:"bytes,2,opt,name=image_pull_policy,json=imagePullPolicy"`
	XXX_raceDetectHookData     protoimpl.RaceDetectHookData
	XXX_presence               [1]uint32
	unknownFields              protoimpl.UnknownFields
	sizeCache                  protoimpl.SizeCache
}

func (x *Application_Container) Reset() {
	*x = Application_Container{}
	mi := &file_api_nexus_v1_nexus_proto_msgTypes[121]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Application_Container) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Application_Container) ProtoMessage() {}

func (x *Application_Container) ProtoReflect() protoreflect.Message {
	mi := &file_api_nexus_v1_nexus_proto_msgTypes[121]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *Application_Container) GetImageName() string {
	if x != nil {
		if x.xxx_hidden_ImageName != nil {
			return *x.xxx_hidden_ImageName
		}
		return ""
	}
	return ""
}

func (x *Application_Container) GetImagePullPolicy() string {
	if x != nil {
		if x.xxx_hidden_ImagePullPolicy != nil {
			return *x.xxx_hidden_ImagePullPolicy
		}
		return ""
	}
	return ""
}

func (x *Application_Container) SetImageName(v string) {
	x.xxx_hidden_ImageName = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 0, 2)
}

func (x *Application_Container) SetImagePullPolicy(v string) {
	x.xxx_hidden_ImagePullPolicy = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 1, 2)
}

func (x *Application_Container) HasImageName() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 0)
}

func (x *Application_Container) HasImagePullPolicy() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 1)
}

func (x *Application_Container) ClearImageName() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 0)
	x.xxx_hidden_ImageName = nil
}

func (x *Application_Container) ClearImagePullPolicy() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 1)
	x.xxx_hidden_ImagePullPolicy = nil
}

type Application_Container_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	ImageName       *string
	ImagePullPolicy *string
}

func (b0 Application_Container_builder) Build() *Application_Container {
	m0 := &Application_Container{}
	b, x := &b0, m0
	_, _ = b, x
	if b.ImageName != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 0, 2)
		x.xxx_hidden_ImageName = b.ImageName
	}
	if b.ImagePullPolicy != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 1, 2)
		x.xxx_hidden_ImagePullPolicy = b.ImagePullPolicy
	}
	return m0
}

type Application_Service struct {
	state                  protoimpl.MessageState       `protogen:"opaque.v1"`
	xxx_hidden_Name        *string                      `protobuf:"bytes,1,opt,name=name"`
	xxx_hidden_Type        *string                      `protobuf:"bytes,2,opt,name=type"`
	xxx_hidden_ClusterIp   *string                      `protobuf:"bytes,3,opt,name=cluster_ip,json=clusterIp"`
	xxx_hidden_Ports       *[]*Application_Service_Port `protobuf:"bytes,11,rep,name=ports"`
	xxx_hidden_CreatedAt   *timestamppb.Timestamp       `protobuf:"bytes,201,opt,name=created_at,json=createdAt"`
	XXX_raceDetectHookData protoimpl.RaceDetectHookData
	XXX_presence           [1]uint32
	unknownFields          protoimpl.UnknownFields
	sizeCache              protoimpl.SizeCache
}

func (x *Application_Service) Reset() {
	*x = Application_Service{}
	mi := &file_api_nexus_v1_nexus_proto_msgTypes[122]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Application_Service) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Application_Service) ProtoMessage() {}

func (x *Application_Service) ProtoReflect() protoreflect.Message {
	mi := &file_api_nexus_v1_nexus_proto_msgTypes[122]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *Application_Service) GetName() string {
	if x != nil {
		if x.xxx_hidden_Name != nil {
			return *x.xxx_hidden_Name
		}
		return ""
	}
	return ""
}

func (x *Application_Service) GetType() string {
	if x != nil {
		if x.xxx_hidden_Type != nil {
			return *x.xxx_hidden_Type
		}
		return ""
	}
	return ""
}

func (x *Application_Service) GetClusterIp() string {
	if x != nil {
		if x.xxx_hidden_ClusterIp != nil {
			return *x.xxx_hidden_ClusterIp
		}
		return ""
	}
	return ""
}

func (x *Application_Service) GetPorts() []*Application_Service_Port {
	if x != nil {
		if x.xxx_hidden_Ports != nil {
			return *x.xxx_hidden_Ports
		}
	}
	return nil
}

func (x *Application_Service) GetCreatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.xxx_hidden_CreatedAt
	}
	return nil
}

func (x *Application_Service) SetName(v string) {
	x.xxx_hidden_Name = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 0, 5)
}

func (x *Application_Service) SetType(v string) {
	x.xxx_hidden_Type = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 1, 5)
}

func (x *Application_Service) SetClusterIp(v string) {
	x.xxx_hidden_ClusterIp = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 2, 5)
}

func (x *Application_Service) SetPorts(v []*Application_Service_Port) {
	x.xxx_hidden_Ports = &v
}

func (x *Application_Service) SetCreatedAt(v *timestamppb.Timestamp) {
	x.xxx_hidden_CreatedAt = v
}

func (x *Application_Service) HasName() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 0)
}

func (x *Application_Service) HasType() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 1)
}

func (x *Application_Service) HasClusterIp() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 2)
}

func (x *Application_Service) HasCreatedAt() bool {
	if x == nil {
		return false
	}
	return x.xxx_hidden_CreatedAt != nil
}

func (x *Application_Service) ClearName() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 0)
	x.xxx_hidden_Name = nil
}

func (x *Application_Service) ClearType() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 1)
	x.xxx_hidden_Type = nil
}

func (x *Application_Service) ClearClusterIp() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 2)
	x.xxx_hidden_ClusterIp = nil
}

func (x *Application_Service) ClearCreatedAt() {
	x.xxx_hidden_CreatedAt = nil
}

type Application_Service_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	Name      *string
	Type      *string
	ClusterIp *string
	Ports     []*Application_Service_Port
	CreatedAt *timestamppb.Timestamp
}

func (b0 Application_Service_builder) Build() *Application_Service {
	m0 := &Application_Service{}
	b, x := &b0, m0
	_, _ = b, x
	if b.Name != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 0, 5)
		x.xxx_hidden_Name = b.Name
	}
	if b.Type != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 1, 5)
		x.xxx_hidden_Type = b.Type
	}
	if b.ClusterIp != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 2, 5)
		x.xxx_hidden_ClusterIp = b.ClusterIp
	}
	x.xxx_hidden_Ports = &b.Ports
	x.xxx_hidden_CreatedAt = b.CreatedAt
	return m0
}

type Application_Pod struct {
	state                    protoimpl.MessageState `protogen:"opaque.v1"`
	xxx_hidden_Name          *string                `protobuf:"bytes,1,opt,name=name"`
	xxx_hidden_Phase         *string                `protobuf:"bytes,2,opt,name=phase"`
	xxx_hidden_Ready         *string                `protobuf:"bytes,3,opt,name=ready"`
	xxx_hidden_Restarts      *string                `protobuf:"bytes,4,opt,name=restarts"`
	xxx_hidden_LastCondition *Application_Condition `protobuf:"bytes,11,opt,name=last_condition,json=lastCondition"`
	xxx_hidden_CreatedAt     *timestamppb.Timestamp `protobuf:"bytes,201,opt,name=created_at,json=createdAt"`
	XXX_raceDetectHookData   protoimpl.RaceDetectHookData
	XXX_presence             [1]uint32
	unknownFields            protoimpl.UnknownFields
	sizeCache                protoimpl.SizeCache
}

func (x *Application_Pod) Reset() {
	*x = Application_Pod{}
	mi := &file_api_nexus_v1_nexus_proto_msgTypes[123]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Application_Pod) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Application_Pod) ProtoMessage() {}

func (x *Application_Pod) ProtoReflect() protoreflect.Message {
	mi := &file_api_nexus_v1_nexus_proto_msgTypes[123]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *Application_Pod) GetName() string {
	if x != nil {
		if x.xxx_hidden_Name != nil {
			return *x.xxx_hidden_Name
		}
		return ""
	}
	return ""
}

func (x *Application_Pod) GetPhase() string {
	if x != nil {
		if x.xxx_hidden_Phase != nil {
			return *x.xxx_hidden_Phase
		}
		return ""
	}
	return ""
}

func (x *Application_Pod) GetReady() string {
	if x != nil {
		if x.xxx_hidden_Ready != nil {
			return *x.xxx_hidden_Ready
		}
		return ""
	}
	return ""
}

func (x *Application_Pod) GetRestarts() string {
	if x != nil {
		if x.xxx_hidden_Restarts != nil {
			return *x.xxx_hidden_Restarts
		}
		return ""
	}
	return ""
}

func (x *Application_Pod) GetLastCondition() *Application_Condition {
	if x != nil {
		return x.xxx_hidden_LastCondition
	}
	return nil
}

func (x *Application_Pod) GetCreatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.xxx_hidden_CreatedAt
	}
	return nil
}

func (x *Application_Pod) SetName(v string) {
	x.xxx_hidden_Name = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 0, 6)
}

func (x *Application_Pod) SetPhase(v string) {
	x.xxx_hidden_Phase = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 1, 6)
}

func (x *Application_Pod) SetReady(v string) {
	x.xxx_hidden_Ready = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 2, 6)
}

func (x *Application_Pod) SetRestarts(v string) {
	x.xxx_hidden_Restarts = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 3, 6)
}

func (x *Application_Pod) SetLastCondition(v *Application_Condition) {
	x.xxx_hidden_LastCondition = v
}

func (x *Application_Pod) SetCreatedAt(v *timestamppb.Timestamp) {
	x.xxx_hidden_CreatedAt = v
}

func (x *Application_Pod) HasName() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 0)
}

func (x *Application_Pod) HasPhase() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 1)
}

func (x *Application_Pod) HasReady() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 2)
}

func (x *Application_Pod) HasRestarts() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 3)
}

func (x *Application_Pod) HasLastCondition() bool {
	if x == nil {
		return false
	}
	return x.xxx_hidden_LastCondition != nil
}

func (x *Application_Pod) HasCreatedAt() bool {
	if x == nil {
		return false
	}
	return x.xxx_hidden_CreatedAt != nil
}

func (x *Application_Pod) ClearName() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 0)
	x.xxx_hidden_Name = nil
}

func (x *Application_Pod) ClearPhase() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 1)
	x.xxx_hidden_Phase = nil
}

func (x *Application_Pod) ClearReady() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 2)
	x.xxx_hidden_Ready = nil
}

func (x *Application_Pod) ClearRestarts() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 3)
	x.xxx_hidden_Restarts = nil
}

func (x *Application_Pod) ClearLastCondition() {
	x.xxx_hidden_LastCondition = nil
}

func (x *Application_Pod) ClearCreatedAt() {
	x.xxx_hidden_CreatedAt = nil
}

type Application_Pod_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	Name          *string
	Phase         *string
	Ready         *string
	Restarts      *string
	LastCondition *Application_Condition
	CreatedAt     *timestamppb.Timestamp
}

func (b0 Application_Pod_builder) Build() *Application_Pod {
	m0 := &Application_Pod{}
	b, x := &b0, m0
	_, _ = b, x
	if b.Name != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 0, 6)
		x.xxx_hidden_Name = b.Name
	}
	if b.Phase != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 1, 6)
		x.xxx_hidden_Phase = b.Phase
	}
	if b.Ready != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 2, 6)
		x.xxx_hidden_Ready = b.Ready
	}
	if b.Restarts != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 3, 6)
		x.xxx_hidden_Restarts = b.Restarts
	}
	x.xxx_hidden_LastCondition = b.LastCondition
	x.xxx_hidden_CreatedAt = b.CreatedAt
	return m0
}

type Application_PersistentVolumeClaim struct {
	state                   protoimpl.MessageState `protogen:"opaque.v1"`
	xxx_hidden_Name         *string                `protobuf:"bytes,1,opt,name=name"`
	xxx_hidden_Status       *string                `protobuf:"bytes,2,opt,name=status"`
	xxx_hidden_AccessModes  []string               `protobuf:"bytes,3,rep,name=access_modes,json=accessModes"`
	xxx_hidden_Capacity     *string                `protobuf:"bytes,4,opt,name=capacity"`
	xxx_hidden_StorageClass *StorageClass          `protobuf:"bytes,11,opt,name=storage_class,json=storageClass"`
	xxx_hidden_CreatedAt    *timestamppb.Timestamp `protobuf:"bytes,201,opt,name=created_at,json=createdAt"`
	XXX_raceDetectHookData  protoimpl.RaceDetectHookData
	XXX_presence            [1]uint32
	unknownFields           protoimpl.UnknownFields
	sizeCache               protoimpl.SizeCache
}

func (x *Application_PersistentVolumeClaim) Reset() {
	*x = Application_PersistentVolumeClaim{}
	mi := &file_api_nexus_v1_nexus_proto_msgTypes[124]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Application_PersistentVolumeClaim) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Application_PersistentVolumeClaim) ProtoMessage() {}

func (x *Application_PersistentVolumeClaim) ProtoReflect() protoreflect.Message {
	mi := &file_api_nexus_v1_nexus_proto_msgTypes[124]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *Application_PersistentVolumeClaim) GetName() string {
	if x != nil {
		if x.xxx_hidden_Name != nil {
			return *x.xxx_hidden_Name
		}
		return ""
	}
	return ""
}

func (x *Application_PersistentVolumeClaim) GetStatus() string {
	if x != nil {
		if x.xxx_hidden_Status != nil {
			return *x.xxx_hidden_Status
		}
		return ""
	}
	return ""
}

func (x *Application_PersistentVolumeClaim) GetAccessModes() []string {
	if x != nil {
		return x.xxx_hidden_AccessModes
	}
	return nil
}

func (x *Application_PersistentVolumeClaim) GetCapacity() string {
	if x != nil {
		if x.xxx_hidden_Capacity != nil {
			return *x.xxx_hidden_Capacity
		}
		return ""
	}
	return ""
}

func (x *Application_PersistentVolumeClaim) GetStorageClass() *StorageClass {
	if x != nil {
		return x.xxx_hidden_StorageClass
	}
	return nil
}

func (x *Application_PersistentVolumeClaim) GetCreatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.xxx_hidden_CreatedAt
	}
	return nil
}

func (x *Application_PersistentVolumeClaim) SetName(v string) {
	x.xxx_hidden_Name = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 0, 6)
}

func (x *Application_PersistentVolumeClaim) SetStatus(v string) {
	x.xxx_hidden_Status = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 1, 6)
}

func (x *Application_PersistentVolumeClaim) SetAccessModes(v []string) {
	x.xxx_hidden_AccessModes = v
}

func (x *Application_PersistentVolumeClaim) SetCapacity(v string) {
	x.xxx_hidden_Capacity = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 3, 6)
}

func (x *Application_PersistentVolumeClaim) SetStorageClass(v *StorageClass) {
	x.xxx_hidden_StorageClass = v
}

func (x *Application_PersistentVolumeClaim) SetCreatedAt(v *timestamppb.Timestamp) {
	x.xxx_hidden_CreatedAt = v
}

func (x *Application_PersistentVolumeClaim) HasName() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 0)
}

func (x *Application_PersistentVolumeClaim) HasStatus() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 1)
}

func (x *Application_PersistentVolumeClaim) HasCapacity() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 3)
}

func (x *Application_PersistentVolumeClaim) HasStorageClass() bool {
	if x == nil {
		return false
	}
	return x.xxx_hidden_StorageClass != nil
}

func (x *Application_PersistentVolumeClaim) HasCreatedAt() bool {
	if x == nil {
		return false
	}
	return x.xxx_hidden_CreatedAt != nil
}

func (x *Application_PersistentVolumeClaim) ClearName() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 0)
	x.xxx_hidden_Name = nil
}

func (x *Application_PersistentVolumeClaim) ClearStatus() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 1)
	x.xxx_hidden_Status = nil
}

func (x *Application_PersistentVolumeClaim) ClearCapacity() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 3)
	x.xxx_hidden_Capacity = nil
}

func (x *Application_PersistentVolumeClaim) ClearStorageClass() {
	x.xxx_hidden_StorageClass = nil
}

func (x *Application_PersistentVolumeClaim) ClearCreatedAt() {
	x.xxx_hidden_CreatedAt = nil
}

type Application_PersistentVolumeClaim_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	Name         *string
	Status       *string
	AccessModes  []string
	Capacity     *string
	StorageClass *StorageClass
	CreatedAt    *timestamppb.Timestamp
}

func (b0 Application_PersistentVolumeClaim_builder) Build() *Application_PersistentVolumeClaim {
	m0 := &Application_PersistentVolumeClaim{}
	b, x := &b0, m0
	_, _ = b, x
	if b.Name != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 0, 6)
		x.xxx_hidden_Name = b.Name
	}
	if b.Status != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 1, 6)
		x.xxx_hidden_Status = b.Status
	}
	x.xxx_hidden_AccessModes = b.AccessModes
	if b.Capacity != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 3, 6)
		x.xxx_hidden_Capacity = b.Capacity
	}
	x.xxx_hidden_StorageClass = b.StorageClass
	x.xxx_hidden_CreatedAt = b.CreatedAt
	return m0
}

type Application_Chart_Metadata struct {
	state                    protoimpl.MessageState `protogen:"opaque.v1"`
	xxx_hidden_ValuesYaml    *string                `protobuf:"bytes,1,opt,name=values_yaml,json=valuesYaml"`
	xxx_hidden_ReadmeMd      *string                `protobuf:"bytes,2,opt,name=readme_md,json=readmeMd"`
	xxx_hidden_Customization *Customization         `protobuf:"bytes,11,opt,name=customization"`
	XXX_raceDetectHookData   protoimpl.RaceDetectHookData
	XXX_presence             [1]uint32
	unknownFields            protoimpl.UnknownFields
	sizeCache                protoimpl.SizeCache
}

func (x *Application_Chart_Metadata) Reset() {
	*x = Application_Chart_Metadata{}
	mi := &file_api_nexus_v1_nexus_proto_msgTypes[126]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Application_Chart_Metadata) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Application_Chart_Metadata) ProtoMessage() {}

func (x *Application_Chart_Metadata) ProtoReflect() protoreflect.Message {
	mi := &file_api_nexus_v1_nexus_proto_msgTypes[126]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *Application_Chart_Metadata) GetValuesYaml() string {
	if x != nil {
		if x.xxx_hidden_ValuesYaml != nil {
			return *x.xxx_hidden_ValuesYaml
		}
		return ""
	}
	return ""
}

func (x *Application_Chart_Metadata) GetReadmeMd() string {
	if x != nil {
		if x.xxx_hidden_ReadmeMd != nil {
			return *x.xxx_hidden_ReadmeMd
		}
		return ""
	}
	return ""
}

func (x *Application_Chart_Metadata) GetCustomization() *Customization {
	if x != nil {
		return x.xxx_hidden_Customization
	}
	return nil
}

func (x *Application_Chart_Metadata) SetValuesYaml(v string) {
	x.xxx_hidden_ValuesYaml = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 0, 3)
}

func (x *Application_Chart_Metadata) SetReadmeMd(v string) {
	x.xxx_hidden_ReadmeMd = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 1, 3)
}

func (x *Application_Chart_Metadata) SetCustomization(v *Customization) {
	x.xxx_hidden_Customization = v
}

func (x *Application_Chart_Metadata) HasValuesYaml() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 0)
}

func (x *Application_Chart_Metadata) HasReadmeMd() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 1)
}

func (x *Application_Chart_Metadata) HasCustomization() bool {
	if x == nil {
		return false
	}
	return x.xxx_hidden_Customization != nil
}

func (x *Application_Chart_Metadata) ClearValuesYaml() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 0)
	x.xxx_hidden_ValuesYaml = nil
}

func (x *Application_Chart_Metadata) ClearReadmeMd() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 1)
	x.xxx_hidden_ReadmeMd = nil
}

func (x *Application_Chart_Metadata) ClearCustomization() {
	x.xxx_hidden_Customization = nil
}

type Application_Chart_Metadata_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	ValuesYaml    *string
	ReadmeMd      *string
	Customization *Customization
}

func (b0 Application_Chart_Metadata_builder) Build() *Application_Chart_Metadata {
	m0 := &Application_Chart_Metadata{}
	b, x := &b0, m0
	_, _ = b, x
	if b.ValuesYaml != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 0, 3)
		x.xxx_hidden_ValuesYaml = b.ValuesYaml
	}
	if b.ReadmeMd != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 1, 3)
		x.xxx_hidden_ReadmeMd = b.ReadmeMd
	}
	x.xxx_hidden_Customization = b.Customization
	return m0
}

type Application_Chart_Maintainer struct {
	state                  protoimpl.MessageState `protogen:"opaque.v1"`
	xxx_hidden_Name        *string                `protobuf:"bytes,1,opt,name=name"`
	xxx_hidden_Email       *string                `protobuf:"bytes,2,opt,name=email"`
	xxx_hidden_Url         *string                `protobuf:"bytes,3,opt,name=url"`
	XXX_raceDetectHookData protoimpl.RaceDetectHookData
	XXX_presence           [1]uint32
	unknownFields          protoimpl.UnknownFields
	sizeCache              protoimpl.SizeCache
}

func (x *Application_Chart_Maintainer) Reset() {
	*x = Application_Chart_Maintainer{}
	mi := &file_api_nexus_v1_nexus_proto_msgTypes[127]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Application_Chart_Maintainer) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Application_Chart_Maintainer) ProtoMessage() {}

func (x *Application_Chart_Maintainer) ProtoReflect() protoreflect.Message {
	mi := &file_api_nexus_v1_nexus_proto_msgTypes[127]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *Application_Chart_Maintainer) GetName() string {
	if x != nil {
		if x.xxx_hidden_Name != nil {
			return *x.xxx_hidden_Name
		}
		return ""
	}
	return ""
}

func (x *Application_Chart_Maintainer) GetEmail() string {
	if x != nil {
		if x.xxx_hidden_Email != nil {
			return *x.xxx_hidden_Email
		}
		return ""
	}
	return ""
}

func (x *Application_Chart_Maintainer) GetUrl() string {
	if x != nil {
		if x.xxx_hidden_Url != nil {
			return *x.xxx_hidden_Url
		}
		return ""
	}
	return ""
}

func (x *Application_Chart_Maintainer) SetName(v string) {
	x.xxx_hidden_Name = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 0, 3)
}

func (x *Application_Chart_Maintainer) SetEmail(v string) {
	x.xxx_hidden_Email = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 1, 3)
}

func (x *Application_Chart_Maintainer) SetUrl(v string) {
	x.xxx_hidden_Url = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 2, 3)
}

func (x *Application_Chart_Maintainer) HasName() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 0)
}

func (x *Application_Chart_Maintainer) HasEmail() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 1)
}

func (x *Application_Chart_Maintainer) HasUrl() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 2)
}

func (x *Application_Chart_Maintainer) ClearName() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 0)
	x.xxx_hidden_Name = nil
}

func (x *Application_Chart_Maintainer) ClearEmail() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 1)
	x.xxx_hidden_Email = nil
}

func (x *Application_Chart_Maintainer) ClearUrl() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 2)
	x.xxx_hidden_Url = nil
}

type Application_Chart_Maintainer_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	Name  *string
	Email *string
	Url   *string
}

func (b0 Application_Chart_Maintainer_builder) Build() *Application_Chart_Maintainer {
	m0 := &Application_Chart_Maintainer{}
	b, x := &b0, m0
	_, _ = b, x
	if b.Name != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 0, 3)
		x.xxx_hidden_Name = b.Name
	}
	if b.Email != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 1, 3)
		x.xxx_hidden_Email = b.Email
	}
	if b.Url != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 2, 3)
		x.xxx_hidden_Url = b.Url
	}
	return m0
}

type Application_Chart_Dependency struct {
	state                  protoimpl.MessageState `protogen:"opaque.v1"`
	xxx_hidden_Name        *string                `protobuf:"bytes,1,opt,name=name"`
	xxx_hidden_Version     *string                `protobuf:"bytes,2,opt,name=version"`
	xxx_hidden_Condition   *string                `protobuf:"bytes,3,opt,name=condition"`
	XXX_raceDetectHookData protoimpl.RaceDetectHookData
	XXX_presence           [1]uint32
	unknownFields          protoimpl.UnknownFields
	sizeCache              protoimpl.SizeCache
}

func (x *Application_Chart_Dependency) Reset() {
	*x = Application_Chart_Dependency{}
	mi := &file_api_nexus_v1_nexus_proto_msgTypes[128]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Application_Chart_Dependency) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Application_Chart_Dependency) ProtoMessage() {}

func (x *Application_Chart_Dependency) ProtoReflect() protoreflect.Message {
	mi := &file_api_nexus_v1_nexus_proto_msgTypes[128]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *Application_Chart_Dependency) GetName() string {
	if x != nil {
		if x.xxx_hidden_Name != nil {
			return *x.xxx_hidden_Name
		}
		return ""
	}
	return ""
}

func (x *Application_Chart_Dependency) GetVersion() string {
	if x != nil {
		if x.xxx_hidden_Version != nil {
			return *x.xxx_hidden_Version
		}
		return ""
	}
	return ""
}

func (x *Application_Chart_Dependency) GetCondition() string {
	if x != nil {
		if x.xxx_hidden_Condition != nil {
			return *x.xxx_hidden_Condition
		}
		return ""
	}
	return ""
}

func (x *Application_Chart_Dependency) SetName(v string) {
	x.xxx_hidden_Name = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 0, 3)
}

func (x *Application_Chart_Dependency) SetVersion(v string) {
	x.xxx_hidden_Version = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 1, 3)
}

func (x *Application_Chart_Dependency) SetCondition(v string) {
	x.xxx_hidden_Condition = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 2, 3)
}

func (x *Application_Chart_Dependency) HasName() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 0)
}

func (x *Application_Chart_Dependency) HasVersion() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 1)
}

func (x *Application_Chart_Dependency) HasCondition() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 2)
}

func (x *Application_Chart_Dependency) ClearName() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 0)
	x.xxx_hidden_Name = nil
}

func (x *Application_Chart_Dependency) ClearVersion() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 1)
	x.xxx_hidden_Version = nil
}

func (x *Application_Chart_Dependency) ClearCondition() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 2)
	x.xxx_hidden_Condition = nil
}

type Application_Chart_Dependency_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	Name      *string
	Version   *string
	Condition *string
}

func (b0 Application_Chart_Dependency_builder) Build() *Application_Chart_Dependency {
	m0 := &Application_Chart_Dependency{}
	b, x := &b0, m0
	_, _ = b, x
	if b.Name != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 0, 3)
		x.xxx_hidden_Name = b.Name
	}
	if b.Version != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 1, 3)
		x.xxx_hidden_Version = b.Version
	}
	if b.Condition != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 2, 3)
		x.xxx_hidden_Condition = b.Condition
	}
	return m0
}

type Application_Chart_Version struct {
	state                         protoimpl.MessageState `protogen:"opaque.v1"`
	xxx_hidden_ChartVersion       *string                `protobuf:"bytes,1,opt,name=chart_version,json=chartVersion"`
	xxx_hidden_ChartRef           *string                `protobuf:"bytes,2,opt,name=chart_ref,json=chartRef"`
	xxx_hidden_ApplicationVersion *string                `protobuf:"bytes,3,opt,name=application_version,json=applicationVersion"`
	XXX_raceDetectHookData        protoimpl.RaceDetectHookData
	XXX_presence                  [1]uint32
	unknownFields                 protoimpl.UnknownFields
	sizeCache                     protoimpl.SizeCache
}

func (x *Application_Chart_Version) Reset() {
	*x = Application_Chart_Version{}
	mi := &file_api_nexus_v1_nexus_proto_msgTypes[129]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Application_Chart_Version) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Application_Chart_Version) ProtoMessage() {}

func (x *Application_Chart_Version) ProtoReflect() protoreflect.Message {
	mi := &file_api_nexus_v1_nexus_proto_msgTypes[129]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *Application_Chart_Version) GetChartVersion() string {
	if x != nil {
		if x.xxx_hidden_ChartVersion != nil {
			return *x.xxx_hidden_ChartVersion
		}
		return ""
	}
	return ""
}

func (x *Application_Chart_Version) GetChartRef() string {
	if x != nil {
		if x.xxx_hidden_ChartRef != nil {
			return *x.xxx_hidden_ChartRef
		}
		return ""
	}
	return ""
}

func (x *Application_Chart_Version) GetApplicationVersion() string {
	if x != nil {
		if x.xxx_hidden_ApplicationVersion != nil {
			return *x.xxx_hidden_ApplicationVersion
		}
		return ""
	}
	return ""
}

func (x *Application_Chart_Version) SetChartVersion(v string) {
	x.xxx_hidden_ChartVersion = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 0, 3)
}

func (x *Application_Chart_Version) SetChartRef(v string) {
	x.xxx_hidden_ChartRef = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 1, 3)
}

func (x *Application_Chart_Version) SetApplicationVersion(v string) {
	x.xxx_hidden_ApplicationVersion = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 2, 3)
}

func (x *Application_Chart_Version) HasChartVersion() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 0)
}

func (x *Application_Chart_Version) HasChartRef() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 1)
}

func (x *Application_Chart_Version) HasApplicationVersion() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 2)
}

func (x *Application_Chart_Version) ClearChartVersion() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 0)
	x.xxx_hidden_ChartVersion = nil
}

func (x *Application_Chart_Version) ClearChartRef() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 1)
	x.xxx_hidden_ChartRef = nil
}

func (x *Application_Chart_Version) ClearApplicationVersion() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 2)
	x.xxx_hidden_ApplicationVersion = nil
}

type Application_Chart_Version_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	ChartVersion       *string
	ChartRef           *string
	ApplicationVersion *string
}

func (b0 Application_Chart_Version_builder) Build() *Application_Chart_Version {
	m0 := &Application_Chart_Version{}
	b, x := &b0, m0
	_, _ = b, x
	if b.ChartVersion != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 0, 3)
		x.xxx_hidden_ChartVersion = b.ChartVersion
	}
	if b.ChartRef != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 1, 3)
		x.xxx_hidden_ChartRef = b.ChartRef
	}
	if b.ApplicationVersion != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 2, 3)
		x.xxx_hidden_ApplicationVersion = b.ApplicationVersion
	}
	return m0
}

type Application_Service_Port struct {
	state                  protoimpl.MessageState `protogen:"opaque.v1"`
	xxx_hidden_Port        int32                  `protobuf:"varint,1,opt,name=port"`
	xxx_hidden_NodePort    int32                  `protobuf:"varint,2,opt,name=node_port,json=nodePort"`
	xxx_hidden_Protocol    *string                `protobuf:"bytes,3,opt,name=protocol"`
	xxx_hidden_TargetPort  *string                `protobuf:"bytes,11,opt,name=target_port,json=targetPort"`
	XXX_raceDetectHookData protoimpl.RaceDetectHookData
	XXX_presence           [1]uint32
	unknownFields          protoimpl.UnknownFields
	sizeCache              protoimpl.SizeCache
}

func (x *Application_Service_Port) Reset() {
	*x = Application_Service_Port{}
	mi := &file_api_nexus_v1_nexus_proto_msgTypes[130]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Application_Service_Port) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Application_Service_Port) ProtoMessage() {}

func (x *Application_Service_Port) ProtoReflect() protoreflect.Message {
	mi := &file_api_nexus_v1_nexus_proto_msgTypes[130]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *Application_Service_Port) GetPort() int32 {
	if x != nil {
		return x.xxx_hidden_Port
	}
	return 0
}

func (x *Application_Service_Port) GetNodePort() int32 {
	if x != nil {
		return x.xxx_hidden_NodePort
	}
	return 0
}

func (x *Application_Service_Port) GetProtocol() string {
	if x != nil {
		if x.xxx_hidden_Protocol != nil {
			return *x.xxx_hidden_Protocol
		}
		return ""
	}
	return ""
}

func (x *Application_Service_Port) GetTargetPort() string {
	if x != nil {
		if x.xxx_hidden_TargetPort != nil {
			return *x.xxx_hidden_TargetPort
		}
		return ""
	}
	return ""
}

func (x *Application_Service_Port) SetPort(v int32) {
	x.xxx_hidden_Port = v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 0, 4)
}

func (x *Application_Service_Port) SetNodePort(v int32) {
	x.xxx_hidden_NodePort = v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 1, 4)
}

func (x *Application_Service_Port) SetProtocol(v string) {
	x.xxx_hidden_Protocol = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 2, 4)
}

func (x *Application_Service_Port) SetTargetPort(v string) {
	x.xxx_hidden_TargetPort = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 3, 4)
}

func (x *Application_Service_Port) HasPort() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 0)
}

func (x *Application_Service_Port) HasNodePort() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 1)
}

func (x *Application_Service_Port) HasProtocol() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 2)
}

func (x *Application_Service_Port) HasTargetPort() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 3)
}

func (x *Application_Service_Port) ClearPort() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 0)
	x.xxx_hidden_Port = 0
}

func (x *Application_Service_Port) ClearNodePort() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 1)
	x.xxx_hidden_NodePort = 0
}

func (x *Application_Service_Port) ClearProtocol() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 2)
	x.xxx_hidden_Protocol = nil
}

func (x *Application_Service_Port) ClearTargetPort() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 3)
	x.xxx_hidden_TargetPort = nil
}

type Application_Service_Port_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	Port       *int32
	NodePort   *int32
	Protocol   *string
	TargetPort *string
}

func (b0 Application_Service_Port_builder) Build() *Application_Service_Port {
	m0 := &Application_Service_Port{}
	b, x := &b0, m0
	_, _ = b, x
	if b.Port != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 0, 4)
		x.xxx_hidden_Port = *b.Port
	}
	if b.NodePort != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 1, 4)
		x.xxx_hidden_NodePort = *b.NodePort
	}
	if b.Protocol != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 2, 4)
		x.xxx_hidden_Protocol = b.Protocol
	}
	if b.TargetPort != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 3, 4)
		x.xxx_hidden_TargetPort = b.TargetPort
	}
	return m0
}

var File_api_nexus_v1_nexus_proto protoreflect.FileDescriptor

var file_api_nexus_v1_nexus_proto_rawDesc = string([]byte{
	0x0a, 0x18, 0x61, 0x70, 0x69, 0x2f, 0x6e, 0x65, 0x78, 0x75, 0x73, 0x2f, 0x76, 0x31, 0x2f, 0x6e,
	0x65, 0x78, 0x75, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x10, 0x6f, 0x70, 0x65, 0x6e,
	0x68, 0x64, 0x63, 0x2e, 0x6e, 0x65, 0x78, 0x75, 0x73, 0x2e, 0x76, 0x31, 0x1a, 0x1b, 0x67, 0x6f,
	0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x65, 0x6d,
	0x70, 0x74, 0x79, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1f, 0x67, 0x6f, 0x6f, 0x67, 0x6c,
	0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x74, 0x69, 0x6d, 0x65, 0x73,
	0x74, 0x61, 0x6d, 0x70, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1c, 0x67, 0x6f, 0x6f, 0x67,
	0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x73, 0x74, 0x72, 0x75,
	0x63, 0x74, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0xd1, 0x06, 0x0a, 0x0d, 0x43, 0x6f, 0x6e,
	0x66, 0x69, 0x67, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x48, 0x0a, 0x0a, 0x6e, 0x74,
	0x70, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x29,
	0x2e, 0x6f, 0x70, 0x65, 0x6e, 0x68, 0x64, 0x63, 0x2e, 0x6e, 0x65, 0x78, 0x75, 0x73, 0x2e, 0x76,
	0x31, 0x2e, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e,
	0x4e, 0x54, 0x50, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x52, 0x09, 0x6e, 0x74, 0x70, 0x53, 0x65,
	0x72, 0x76, 0x65, 0x72, 0x12, 0x64, 0x0a, 0x14, 0x70, 0x61, 0x63, 0x6b, 0x61, 0x67, 0x65, 0x5f,
	0x72, 0x65, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x6f, 0x72, 0x69, 0x65, 0x73, 0x18, 0x02, 0x20, 0x03,
	0x28, 0x0b, 0x32, 0x31, 0x2e, 0x6f, 0x70, 0x65, 0x6e, 0x68, 0x64, 0x63, 0x2e, 0x6e, 0x65, 0x78,
	0x75, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x75, 0x72, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x2e, 0x50, 0x61, 0x63, 0x6b, 0x61, 0x67, 0x65, 0x52, 0x65, 0x70, 0x6f, 0x73,
	0x69, 0x74, 0x6f, 0x72, 0x79, 0x52, 0x13, 0x70, 0x61, 0x63, 0x6b, 0x61, 0x67, 0x65, 0x52, 0x65,
	0x70, 0x6f, 0x73, 0x69, 0x74, 0x6f, 0x72, 0x69, 0x65, 0x73, 0x12, 0x4a, 0x0a, 0x0b, 0x62, 0x6f,
	0x6f, 0x74, 0x5f, 0x69, 0x6d, 0x61, 0x67, 0x65, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32,
	0x29, 0x2e, 0x6f, 0x70, 0x65, 0x6e, 0x68, 0x64, 0x63, 0x2e, 0x6e, 0x65, 0x78, 0x75, 0x73, 0x2e,
	0x76, 0x31, 0x2e, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x2e, 0x42, 0x6f, 0x6f, 0x74, 0x49, 0x6d, 0x61, 0x67, 0x65, 0x52, 0x0a, 0x62, 0x6f, 0x6f, 0x74,
	0x49, 0x6d, 0x61, 0x67, 0x65, 0x73, 0x1a, 0x29, 0x0a, 0x09, 0x4e, 0x54, 0x50, 0x53, 0x65, 0x72,
	0x76, 0x65, 0x72, 0x12, 0x1c, 0x0a, 0x09, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x65, 0x73,
	0x18, 0x01, 0x20, 0x03, 0x28, 0x09, 0x52, 0x09, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x65,
	0x73, 0x1a, 0x63, 0x0a, 0x11, 0x50, 0x61, 0x63, 0x6b, 0x61, 0x67, 0x65, 0x52, 0x65, 0x70, 0x6f,
	0x73, 0x69, 0x74, 0x6f, 0x72, 0x79, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x02, 0x69, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x75, 0x72,
	0x6c, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x75, 0x72, 0x6c, 0x12, 0x18, 0x0a, 0x07,
	0x65, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x08, 0x52, 0x07, 0x65,
	0x6e, 0x61, 0x62, 0x6c, 0x65, 0x64, 0x1a, 0x73, 0x0a, 0x12, 0x42, 0x6f, 0x6f, 0x74, 0x49, 0x6d,
	0x61, 0x67, 0x65, 0x53, 0x65, 0x6c, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x23, 0x0a, 0x0d,
	0x64, 0x69, 0x73, 0x74, 0x72, 0x6f, 0x5f, 0x73, 0x65, 0x72, 0x69, 0x65, 0x73, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0c, 0x64, 0x69, 0x73, 0x74, 0x72, 0x6f, 0x53, 0x65, 0x72, 0x69, 0x65,
	0x73, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x24, 0x0a, 0x0d, 0x61, 0x72, 0x63, 0x68, 0x69, 0x74, 0x65,
	0x63, 0x74, 0x75, 0x72, 0x65, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x09, 0x52, 0x0d, 0x61, 0x72,
	0x63, 0x68, 0x69, 0x74, 0x65, 0x63, 0x74, 0x75, 0x72, 0x65, 0x73, 0x1a, 0xbe, 0x02, 0x0a, 0x09,
	0x42, 0x6f, 0x6f, 0x74, 0x49, 0x6d, 0x61, 0x67, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x6f, 0x75,
	0x72, 0x63, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x73, 0x6f, 0x75, 0x72, 0x63,
	0x65, 0x12, 0x23, 0x0a, 0x0d, 0x64, 0x69, 0x73, 0x74, 0x72, 0x6f, 0x5f, 0x73, 0x65, 0x72, 0x69,
	0x65, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x64, 0x69, 0x73, 0x74, 0x72, 0x6f,
	0x53, 0x65, 0x72, 0x69, 0x65, 0x73, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x7c, 0x0a, 0x17, 0x61, 0x72,
	0x63, 0x68, 0x69, 0x74, 0x65, 0x63, 0x74, 0x75, 0x72, 0x65, 0x5f, 0x73, 0x74, 0x61, 0x74, 0x75,
	0x73, 0x5f, 0x6d, 0x61, 0x70, 0x18, 0x05, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x44, 0x2e, 0x6f, 0x70,
	0x65, 0x6e, 0x68, 0x64, 0x63, 0x2e, 0x6e, 0x65, 0x78, 0x75, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x43,
	0x6f, 0x6e, 0x66, 0x69, 0x67, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x42, 0x6f, 0x6f,
	0x74, 0x49, 0x6d, 0x61, 0x67, 0x65, 0x2e, 0x41, 0x72, 0x63, 0x68, 0x69, 0x74, 0x65, 0x63, 0x74,
	0x75, 0x72, 0x65, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x4d, 0x61, 0x70, 0x45, 0x6e, 0x74, 0x72,
	0x79, 0x52, 0x15, 0x61, 0x72, 0x63, 0x68, 0x69, 0x74, 0x65, 0x63, 0x74, 0x75, 0x72, 0x65, 0x53,
	0x74, 0x61, 0x74, 0x75, 0x73, 0x4d, 0x61, 0x70, 0x12, 0x18, 0x0a, 0x07, 0x64, 0x65, 0x66, 0x61,
	0x75, 0x6c, 0x74, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x08, 0x52, 0x07, 0x64, 0x65, 0x66, 0x61, 0x75,
	0x6c, 0x74, 0x1a, 0x48, 0x0a, 0x1a, 0x41, 0x72, 0x63, 0x68, 0x69, 0x74, 0x65, 0x63, 0x74, 0x75,
	0x72, 0x65, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x4d, 0x61, 0x70, 0x45, 0x6e, 0x74, 0x72, 0x79,
	0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b,
	0x65, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x22, 0xc6, 0x0a, 0x0a,
	0x07, 0x4e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x12, 0x38, 0x0a, 0x06, 0x66, 0x61, 0x62, 0x72,
	0x69, 0x63, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x20, 0x2e, 0x6f, 0x70, 0x65, 0x6e, 0x68,
	0x64, 0x63, 0x2e, 0x6e, 0x65, 0x78, 0x75, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x4e, 0x65, 0x74, 0x77,
	0x6f, 0x72, 0x6b, 0x2e, 0x46, 0x61, 0x62, 0x72, 0x69, 0x63, 0x52, 0x06, 0x66, 0x61, 0x62, 0x72,
	0x69, 0x63, 0x12, 0x32, 0x0a, 0x04, 0x76, 0x6c, 0x61, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x1e, 0x2e, 0x6f, 0x70, 0x65, 0x6e, 0x68, 0x64, 0x63, 0x2e, 0x6e, 0x65, 0x78, 0x75, 0x73,
	0x2e, 0x76, 0x31, 0x2e, 0x4e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x2e, 0x56, 0x4c, 0x41, 0x4e,
	0x52, 0x04, 0x76, 0x6c, 0x61, 0x6e, 0x12, 0x38, 0x0a, 0x06, 0x73, 0x75, 0x62, 0x6e, 0x65, 0x74,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x20, 0x2e, 0x6f, 0x70, 0x65, 0x6e, 0x68, 0x64, 0x63,
	0x2e, 0x6e, 0x65, 0x78, 0x75, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x4e, 0x65, 0x74, 0x77, 0x6f, 0x72,
	0x6b, 0x2e, 0x53, 0x75, 0x62, 0x6e, 0x65, 0x74, 0x52, 0x06, 0x73, 0x75, 0x62, 0x6e, 0x65, 0x74,
	0x1a, 0x9b, 0x01, 0x0a, 0x09, 0x49, 0x50, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x12, 0x12,
	0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x74, 0x79,
	0x70, 0x65, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x70, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02,
	0x69, 0x70, 0x12, 0x12, 0x0a, 0x04, 0x75, 0x73, 0x65, 0x72, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x04, 0x75, 0x73, 0x65, 0x72, 0x12, 0x1d, 0x0a, 0x0a, 0x6d, 0x61, 0x63, 0x68, 0x69, 0x6e,
	0x65, 0x5f, 0x69, 0x64, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x6d, 0x61, 0x63, 0x68,
	0x69, 0x6e, 0x65, 0x49, 0x64, 0x12, 0x1b, 0x0a, 0x09, 0x6e, 0x6f, 0x64, 0x65, 0x5f, 0x74, 0x79,
	0x70, 0x65, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x6e, 0x6f, 0x64, 0x65, 0x54, 0x79,
	0x70, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x68, 0x6f, 0x73, 0x74, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x0d,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x68, 0x6f, 0x73, 0x74, 0x6e, 0x61, 0x6d, 0x65, 0x1a, 0x79,
	0x0a, 0x07, 0x49, 0x50, 0x52, 0x61, 0x6e, 0x67, 0x65, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x69, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x79, 0x70,
	0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x12, 0x19, 0x0a,
	0x08, 0x73, 0x74, 0x61, 0x72, 0x74, 0x5f, 0x69, 0x70, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x07, 0x73, 0x74, 0x61, 0x72, 0x74, 0x49, 0x70, 0x12, 0x15, 0x0a, 0x06, 0x65, 0x6e, 0x64, 0x5f,
	0x69, 0x70, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x65, 0x6e, 0x64, 0x49, 0x70, 0x12,
	0x18, 0x0a, 0x07, 0x63, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x07, 0x63, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x1a, 0x92, 0x01, 0x0a, 0x0a, 0x53, 0x74,
	0x61, 0x74, 0x69, 0x73, 0x74, 0x69, 0x63, 0x73, 0x12, 0x1c, 0x0a, 0x09, 0x61, 0x76, 0x61, 0x69,
	0x6c, 0x61, 0x62, 0x6c, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x61, 0x76, 0x61,
	0x69, 0x6c, 0x61, 0x62, 0x6c, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x12, 0x23, 0x0a, 0x0d,
	0x75, 0x73, 0x61, 0x67, 0x65, 0x5f, 0x70, 0x65, 0x72, 0x63, 0x65, 0x6e, 0x74, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0c, 0x75, 0x73, 0x61, 0x67, 0x65, 0x50, 0x65, 0x72, 0x63, 0x65, 0x6e,
	0x74, 0x12, 0x2b, 0x0a, 0x11, 0x61, 0x76, 0x61, 0x69, 0x6c, 0x61, 0x62, 0x6c, 0x65, 0x5f, 0x70,
	0x65, 0x72, 0x63, 0x65, 0x6e, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x10, 0x61, 0x76,
	0x61, 0x69, 0x6c, 0x61, 0x62, 0x6c, 0x65, 0x50, 0x65, 0x72, 0x63, 0x65, 0x6e, 0x74, 0x1a, 0x2c,
	0x0a, 0x06, 0x46, 0x61, 0x62, 0x72, 0x69, 0x63, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x69, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x1a, 0x89, 0x01, 0x0a,
	0x04, 0x56, 0x4c, 0x41, 0x4e, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x02, 0x69, 0x64, 0x12, 0x10, 0x0a, 0x03, 0x76, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x03, 0x76, 0x69, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x6d,
	0x74, 0x75, 0x18, 0x04, 0x20, 0x01, 0x28, 0x03, 0x52, 0x03, 0x6d, 0x74, 0x75, 0x12, 0x20, 0x0a,
	0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x05, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x12,
	0x17, 0x0a, 0x07, 0x64, 0x68, 0x63, 0x70, 0x5f, 0x6f, 0x6e, 0x18, 0x06, 0x20, 0x01, 0x28, 0x08,
	0x52, 0x06, 0x64, 0x68, 0x63, 0x70, 0x4f, 0x6e, 0x1a, 0xaa, 0x04, 0x0a, 0x06, 0x53, 0x75, 0x62,
	0x6e, 0x65, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x02, 0x69, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x63, 0x69, 0x64, 0x72, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x63, 0x69, 0x64, 0x72, 0x12, 0x1d, 0x0a, 0x0a, 0x67,
	0x61, 0x74, 0x65, 0x77, 0x61, 0x79, 0x5f, 0x69, 0x70, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x09, 0x67, 0x61, 0x74, 0x65, 0x77, 0x61, 0x79, 0x49, 0x70, 0x12, 0x1f, 0x0a, 0x0b, 0x64, 0x6e,
	0x73, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x73, 0x18, 0x05, 0x20, 0x03, 0x28, 0x09, 0x52,
	0x0a, 0x64, 0x6e, 0x73, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x73, 0x12, 0x20, 0x0a, 0x0b, 0x64,
	0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x2d, 0x0a,
	0x12, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x64, 0x5f, 0x61, 0x6c, 0x6c, 0x6f, 0x63, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x18, 0x07, 0x20, 0x01, 0x28, 0x08, 0x52, 0x11, 0x6d, 0x61, 0x6e, 0x61, 0x67,
	0x65, 0x64, 0x41, 0x6c, 0x6c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x29, 0x0a, 0x10,
	0x61, 0x63, 0x74, 0x69, 0x76, 0x65, 0x5f, 0x64, 0x69, 0x73, 0x63, 0x6f, 0x76, 0x65, 0x72, 0x79,
	0x18, 0x08, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0f, 0x61, 0x63, 0x74, 0x69, 0x76, 0x65, 0x44, 0x69,
	0x73, 0x63, 0x6f, 0x76, 0x65, 0x72, 0x79, 0x12, 0x2c, 0x0a, 0x12, 0x61, 0x6c, 0x6c, 0x6f, 0x77,
	0x5f, 0x70, 0x72, 0x6f, 0x78, 0x79, 0x5f, 0x61, 0x63, 0x63, 0x65, 0x73, 0x73, 0x18, 0x09, 0x20,
	0x01, 0x28, 0x08, 0x52, 0x10, 0x61, 0x6c, 0x6c, 0x6f, 0x77, 0x50, 0x72, 0x6f, 0x78, 0x79, 0x41,
	0x63, 0x63, 0x65, 0x73, 0x73, 0x12, 0x30, 0x0a, 0x14, 0x61, 0x6c, 0x6c, 0x6f, 0x77, 0x5f, 0x64,
	0x6e, 0x73, 0x5f, 0x72, 0x65, 0x73, 0x6f, 0x6c, 0x75, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x0a, 0x20,
	0x01, 0x28, 0x08, 0x52, 0x12, 0x61, 0x6c, 0x6c, 0x6f, 0x77, 0x44, 0x6e, 0x73, 0x52, 0x65, 0x73,
	0x6f, 0x6c, 0x75, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x46, 0x0a, 0x0c, 0x69, 0x70, 0x5f, 0x61, 0x64,
	0x64, 0x72, 0x65, 0x73, 0x73, 0x65, 0x73, 0x18, 0x0b, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x23, 0x2e,
	0x6f, 0x70, 0x65, 0x6e, 0x68, 0x64, 0x63, 0x2e, 0x6e, 0x65, 0x78, 0x75, 0x73, 0x2e, 0x76, 0x31,
	0x2e, 0x4e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x2e, 0x49, 0x50, 0x41, 0x64, 0x64, 0x72, 0x65,
	0x73, 0x73, 0x52, 0x0b, 0x69, 0x70, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x65, 0x73, 0x12,
	0x3e, 0x0a, 0x09, 0x69, 0x70, 0x5f, 0x72, 0x61, 0x6e, 0x67, 0x65, 0x73, 0x18, 0x0c, 0x20, 0x03,
	0x28, 0x0b, 0x32, 0x21, 0x2e, 0x6f, 0x70, 0x65, 0x6e, 0x68, 0x64, 0x63, 0x2e, 0x6e, 0x65, 0x78,
	0x75, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x4e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x2e, 0x49, 0x50,
	0x52, 0x61, 0x6e, 0x67, 0x65, 0x52, 0x08, 0x69, 0x70, 0x52, 0x61, 0x6e, 0x67, 0x65, 0x73, 0x12,
	0x44, 0x0a, 0x0a, 0x73, 0x74, 0x61, 0x74, 0x69, 0x73, 0x74, 0x69, 0x63, 0x73, 0x18, 0x0d, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x24, 0x2e, 0x6f, 0x70, 0x65, 0x6e, 0x68, 0x64, 0x63, 0x2e, 0x6e, 0x65,
	0x78, 0x75, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x4e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x2e, 0x53,
	0x74, 0x61, 0x74, 0x69, 0x73, 0x74, 0x69, 0x63, 0x73, 0x52, 0x0a, 0x73, 0x74, 0x61, 0x74, 0x69,
	0x73, 0x74, 0x69, 0x63, 0x73, 0x22, 0x85, 0x13, 0x0a, 0x07, 0x4d, 0x61, 0x63, 0x68, 0x69, 0x6e,
	0x65, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69,
	0x64, 0x12, 0x23, 0x0a, 0x0d, 0x68, 0x61, 0x72, 0x64, 0x77, 0x61, 0x72, 0x65, 0x5f, 0x75, 0x75,
	0x69, 0x64, 0x18, 0x65, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x68, 0x61, 0x72, 0x64, 0x77, 0x61,
	0x72, 0x65, 0x55, 0x75, 0x69, 0x64, 0x12, 0x1a, 0x0a, 0x08, 0x68, 0x6f, 0x73, 0x74, 0x6e, 0x61,
	0x6d, 0x65, 0x18, 0x66, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x68, 0x6f, 0x73, 0x74, 0x6e, 0x61,
	0x6d, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x66, 0x71, 0x64, 0x6e, 0x18, 0x67, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x04, 0x66, 0x71, 0x64, 0x6e, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x61, 0x67, 0x73, 0x18, 0x68,
	0x20, 0x03, 0x28, 0x09, 0x52, 0x04, 0x74, 0x61, 0x67, 0x73, 0x12, 0x20, 0x0a, 0x0b, 0x64, 0x65,
	0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x69, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x17, 0x0a, 0x06,
	0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0xc9, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x73,
	0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x26, 0x0a, 0x0e, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x5f,
	0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0xca, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d,
	0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x20, 0x0a,
	0x0b, 0x70, 0x6f, 0x77, 0x65, 0x72, 0x5f, 0x73, 0x74, 0x61, 0x74, 0x65, 0x18, 0xad, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0a, 0x70, 0x6f, 0x77, 0x65, 0x72, 0x53, 0x74, 0x61, 0x74, 0x65, 0x12,
	0x1e, 0x0a, 0x0a, 0x70, 0x6f, 0x77, 0x65, 0x72, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0xae, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x70, 0x6f, 0x77, 0x65, 0x72, 0x54, 0x79, 0x70, 0x65, 0x12,
	0x19, 0x0a, 0x07, 0x6f, 0x73, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x18, 0x91, 0x03, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x07, 0x6f, 0x73, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x12, 0x24, 0x0a, 0x0d, 0x64, 0x69,
	0x73, 0x74, 0x72, 0x6f, 0x5f, 0x73, 0x65, 0x72, 0x69, 0x65, 0x73, 0x18, 0x92, 0x03, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0c, 0x64, 0x69, 0x73, 0x74, 0x72, 0x6f, 0x53, 0x65, 0x72, 0x69, 0x65, 0x73,
	0x12, 0x1e, 0x0a, 0x0a, 0x68, 0x77, 0x65, 0x5f, 0x6b, 0x65, 0x72, 0x6e, 0x65, 0x6c, 0x18, 0x93,
	0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x68, 0x77, 0x65, 0x4b, 0x65, 0x72, 0x6e, 0x65, 0x6c,
	0x12, 0x23, 0x0a, 0x0c, 0x61, 0x72, 0x63, 0x68, 0x69, 0x74, 0x65, 0x63, 0x74, 0x75, 0x72, 0x65,
	0x18, 0x94, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x61, 0x72, 0x63, 0x68, 0x69, 0x74, 0x65,
	0x63, 0x74, 0x75, 0x72, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x63, 0x70, 0x75, 0x5f, 0x73, 0x70, 0x65,
	0x65, 0x64, 0x18, 0x95, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x63, 0x70, 0x75, 0x53, 0x70,
	0x65, 0x65, 0x64, 0x12, 0x1c, 0x0a, 0x09, 0x63, 0x70, 0x75, 0x5f, 0x63, 0x6f, 0x75, 0x6e, 0x74,
	0x18, 0x96, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x63, 0x70, 0x75, 0x43, 0x6f, 0x75, 0x6e,
	0x74, 0x12, 0x1c, 0x0a, 0x09, 0x6d, 0x65, 0x6d, 0x6f, 0x72, 0x79, 0x5f, 0x6d, 0x62, 0x18, 0x97,
	0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x6d, 0x65, 0x6d, 0x6f, 0x72, 0x79, 0x4d, 0x62, 0x12,
	0x1e, 0x0a, 0x0a, 0x73, 0x74, 0x6f, 0x72, 0x61, 0x67, 0x65, 0x5f, 0x6d, 0x62, 0x18, 0x98, 0x03,
	0x20, 0x01, 0x28, 0x01, 0x52, 0x09, 0x73, 0x74, 0x6f, 0x72, 0x61, 0x67, 0x65, 0x4d, 0x62, 0x12,
	0x22, 0x0a, 0x0c, 0x69, 0x70, 0x5f, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x65, 0x73, 0x18,
	0x99, 0x03, 0x20, 0x03, 0x28, 0x09, 0x52, 0x0b, 0x69, 0x70, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73,
	0x73, 0x65, 0x73, 0x12, 0x66, 0x0a, 0x14, 0x77, 0x6f, 0x72, 0x6b, 0x6c, 0x6f, 0x61, 0x64, 0x5f,
	0x61, 0x6e, 0x6e, 0x6f, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0xf5, 0x03, 0x20, 0x03,
	0x28, 0x0b, 0x32, 0x32, 0x2e, 0x6f, 0x70, 0x65, 0x6e, 0x68, 0x64, 0x63, 0x2e, 0x6e, 0x65, 0x78,
	0x75, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x4d, 0x61, 0x63, 0x68, 0x69, 0x6e, 0x65, 0x2e, 0x57, 0x6f,
	0x72, 0x6b, 0x6c, 0x6f, 0x61, 0x64, 0x41, 0x6e, 0x6e, 0x6f, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x13, 0x77, 0x6f, 0x72, 0x6b, 0x6c, 0x6f, 0x61, 0x64,
	0x41, 0x6e, 0x6e, 0x6f, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x12, 0x66, 0x0a, 0x14, 0x68,
	0x61, 0x72, 0x64, 0x77, 0x61, 0x72, 0x65, 0x5f, 0x69, 0x6e, 0x66, 0x6f, 0x72, 0x6d, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x18, 0xd9, 0x04, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x32, 0x2e, 0x6f, 0x70, 0x65,
	0x6e, 0x68, 0x64, 0x63, 0x2e, 0x6e, 0x65, 0x78, 0x75, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x4d, 0x61,
	0x63, 0x68, 0x69, 0x6e, 0x65, 0x2e, 0x48, 0x61, 0x72, 0x64, 0x77, 0x61, 0x72, 0x65, 0x49, 0x6e,
	0x66, 0x6f, 0x72, 0x6d, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x13,
	0x68, 0x61, 0x72, 0x64, 0x77, 0x61, 0x72, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x72, 0x6d, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x12, 0x29, 0x0a, 0x10, 0x62, 0x69, 0x6f, 0x73, 0x5f, 0x62, 0x6f, 0x6f, 0x74,
	0x5f, 0x6d, 0x65, 0x74, 0x68, 0x6f, 0x64, 0x18, 0xda, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0e,
	0x62, 0x69, 0x6f, 0x73, 0x42, 0x6f, 0x6f, 0x74, 0x4d, 0x65, 0x74, 0x68, 0x6f, 0x64, 0x12, 0x42,
	0x0a, 0x0a, 0x6e, 0x75, 0x6d, 0x61, 0x5f, 0x6e, 0x6f, 0x64, 0x65, 0x73, 0x18, 0xbd, 0x05, 0x20,
	0x03, 0x28, 0x0b, 0x32, 0x22, 0x2e, 0x6f, 0x70, 0x65, 0x6e, 0x68, 0x64, 0x63, 0x2e, 0x6e, 0x65,
	0x78, 0x75, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x4d, 0x61, 0x63, 0x68, 0x69, 0x6e, 0x65, 0x2e, 0x4e,
	0x55, 0x4d, 0x41, 0x4e, 0x6f, 0x64, 0x65, 0x52, 0x09, 0x6e, 0x75, 0x6d, 0x61, 0x4e, 0x6f, 0x64,
	0x65, 0x73, 0x12, 0x4b, 0x0a, 0x0d, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x5f, 0x64, 0x65, 0x76, 0x69,
	0x63, 0x65, 0x73, 0x18, 0xa1, 0x06, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x25, 0x2e, 0x6f, 0x70, 0x65,
	0x6e, 0x68, 0x64, 0x63, 0x2e, 0x6e, 0x65, 0x78, 0x75, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x4d, 0x61,
	0x63, 0x68, 0x69, 0x6e, 0x65, 0x2e, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x44, 0x65, 0x76, 0x69, 0x63,
	0x65, 0x52, 0x0c, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x44, 0x65, 0x76, 0x69, 0x63, 0x65, 0x73, 0x12,
	0x5a, 0x0a, 0x12, 0x6e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x5f, 0x69, 0x6e, 0x74, 0x65, 0x72,
	0x66, 0x61, 0x63, 0x65, 0x73, 0x18, 0xa2, 0x06, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x2a, 0x2e, 0x6f,
	0x70, 0x65, 0x6e, 0x68, 0x64, 0x63, 0x2e, 0x6e, 0x65, 0x78, 0x75, 0x73, 0x2e, 0x76, 0x31, 0x2e,
	0x4d, 0x61, 0x63, 0x68, 0x69, 0x6e, 0x65, 0x2e, 0x4e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x49,
	0x6e, 0x74, 0x65, 0x72, 0x66, 0x61, 0x63, 0x65, 0x52, 0x11, 0x6e, 0x65, 0x74, 0x77, 0x6f, 0x72,
	0x6b, 0x49, 0x6e, 0x74, 0x65, 0x72, 0x66, 0x61, 0x63, 0x65, 0x73, 0x1a, 0x76, 0x0a, 0x09, 0x50,
	0x6c, 0x61, 0x63, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x12, 0x12, 0x0a, 0x03, 0x6c, 0x78, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x08, 0x48, 0x00, 0x52, 0x03, 0x6c, 0x78, 0x64, 0x12, 0x12, 0x0a, 0x03,
	0x6b, 0x76, 0x6d, 0x18, 0x02, 0x20, 0x01, 0x28, 0x08, 0x48, 0x00, 0x52, 0x03, 0x6b, 0x76, 0x6d,
	0x12, 0x1a, 0x0a, 0x07, 0x6d, 0x61, 0x63, 0x68, 0x69, 0x6e, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x08, 0x48, 0x00, 0x52, 0x07, 0x6d, 0x61, 0x63, 0x68, 0x69, 0x6e, 0x65, 0x12, 0x1d, 0x0a, 0x0a,
	0x6d, 0x61, 0x63, 0x68, 0x69, 0x6e, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x09, 0x6d, 0x61, 0x63, 0x68, 0x69, 0x6e, 0x65, 0x49, 0x64, 0x42, 0x06, 0x0a, 0x04, 0x74,
	0x79, 0x70, 0x65, 0x1a, 0x7e, 0x0a, 0x0a, 0x43, 0x6f, 0x6e, 0x73, 0x74, 0x72, 0x61, 0x69, 0x6e,
	0x74, 0x12, 0x22, 0x0a, 0x0c, 0x61, 0x72, 0x63, 0x68, 0x69, 0x74, 0x65, 0x63, 0x74, 0x75, 0x72,
	0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x61, 0x72, 0x63, 0x68, 0x69, 0x74, 0x65,
	0x63, 0x74, 0x75, 0x72, 0x65, 0x12, 0x1b, 0x0a, 0x09, 0x63, 0x70, 0x75, 0x5f, 0x63, 0x6f, 0x72,
	0x65, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x04, 0x52, 0x08, 0x63, 0x70, 0x75, 0x43, 0x6f, 0x72,
	0x65, 0x73, 0x12, 0x1b, 0x0a, 0x09, 0x6d, 0x65, 0x6d, 0x6f, 0x72, 0x79, 0x5f, 0x6d, 0x62, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x04, 0x52, 0x08, 0x6d, 0x65, 0x6d, 0x6f, 0x72, 0x79, 0x4d, 0x62, 0x12,
	0x12, 0x0a, 0x04, 0x74, 0x61, 0x67, 0x73, 0x18, 0x0b, 0x20, 0x03, 0x28, 0x09, 0x52, 0x04, 0x74,
	0x61, 0x67, 0x73, 0x1a, 0x91, 0x01, 0x0a, 0x06, 0x46, 0x61, 0x63, 0x74, 0x6f, 0x72, 0x12, 0x41,
	0x0a, 0x09, 0x70, 0x6c, 0x61, 0x63, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x23, 0x2e, 0x6f, 0x70, 0x65, 0x6e, 0x68, 0x64, 0x63, 0x2e, 0x6e, 0x65, 0x78, 0x75,
	0x73, 0x2e, 0x76, 0x31, 0x2e, 0x4d, 0x61, 0x63, 0x68, 0x69, 0x6e, 0x65, 0x2e, 0x50, 0x6c, 0x61,
	0x63, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x52, 0x09, 0x70, 0x6c, 0x61, 0x63, 0x65, 0x6d, 0x65, 0x6e,
	0x74, 0x12, 0x44, 0x0a, 0x0a, 0x63, 0x6f, 0x6e, 0x73, 0x74, 0x72, 0x61, 0x69, 0x6e, 0x74, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x24, 0x2e, 0x6f, 0x70, 0x65, 0x6e, 0x68, 0x64, 0x63, 0x2e,
	0x6e, 0x65, 0x78, 0x75, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x4d, 0x61, 0x63, 0x68, 0x69, 0x6e, 0x65,
	0x2e, 0x43, 0x6f, 0x6e, 0x73, 0x74, 0x72, 0x61, 0x69, 0x6e, 0x74, 0x52, 0x0a, 0x63, 0x6f, 0x6e,
	0x73, 0x74, 0x72, 0x61, 0x69, 0x6e, 0x74, 0x1a, 0x5a, 0x0a, 0x08, 0x4e, 0x55, 0x4d, 0x41, 0x4e,
	0x6f, 0x64, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x69, 0x6e, 0x64, 0x65, 0x78, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x05, 0x69, 0x6e, 0x64, 0x65, 0x78, 0x12, 0x1b, 0x0a, 0x09, 0x63, 0x70, 0x75,
	0x5f, 0x63, 0x6f, 0x72, 0x65, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x63, 0x70,
	0x75, 0x43, 0x6f, 0x72, 0x65, 0x73, 0x12, 0x1b, 0x0a, 0x09, 0x6d, 0x65, 0x6d, 0x6f, 0x72, 0x79,
	0x5f, 0x6d, 0x62, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x6d, 0x65, 0x6d, 0x6f, 0x72,
	0x79, 0x4d, 0x62, 0x1a, 0xf9, 0x01, 0x0a, 0x0b, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x44, 0x65, 0x76,
	0x69, 0x63, 0x65, 0x12, 0x1b, 0x0a, 0x09, 0x62, 0x6f, 0x6f, 0x74, 0x5f, 0x64, 0x69, 0x73, 0x6b,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x08, 0x62, 0x6f, 0x6f, 0x74, 0x44, 0x69, 0x73, 0x6b,
	0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04,
	0x6e, 0x61, 0x6d, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x65, 0x72, 0x69, 0x61, 0x6c, 0x18, 0x0c,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x73, 0x65, 0x72, 0x69, 0x61, 0x6c, 0x12, 0x14, 0x0a, 0x05,
	0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x18, 0x15, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x6d, 0x6f, 0x64,
	0x65, 0x6c, 0x12, 0x29, 0x0a, 0x10, 0x66, 0x69, 0x72, 0x6d, 0x77, 0x61, 0x72, 0x65, 0x5f, 0x76,
	0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x16, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0f, 0x66, 0x69,
	0x72, 0x6d, 0x77, 0x61, 0x72, 0x65, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x1d, 0x0a,
	0x0a, 0x73, 0x74, 0x6f, 0x72, 0x61, 0x67, 0x65, 0x5f, 0x6d, 0x62, 0x18, 0x1f, 0x20, 0x01, 0x28,
	0x01, 0x52, 0x09, 0x73, 0x74, 0x6f, 0x72, 0x61, 0x67, 0x65, 0x4d, 0x62, 0x12, 0x12, 0x0a, 0x04,
	0x74, 0x79, 0x70, 0x65, 0x18, 0x29, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65,
	0x12, 0x12, 0x0a, 0x04, 0x74, 0x61, 0x67, 0x73, 0x18, 0x33, 0x20, 0x03, 0x28, 0x09, 0x52, 0x04,
	0x74, 0x61, 0x67, 0x73, 0x12, 0x19, 0x0a, 0x08, 0x75, 0x73, 0x65, 0x64, 0x5f, 0x66, 0x6f, 0x72,
	0x18, 0x3d, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x75, 0x73, 0x65, 0x64, 0x46, 0x6f, 0x72, 0x1a,
	0xdb, 0x03, 0x0a, 0x10, 0x4e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x49, 0x6e, 0x74, 0x65, 0x72,
	0x66, 0x61, 0x63, 0x65, 0x12, 0x25, 0x0a, 0x0e, 0x62, 0x6f, 0x6f, 0x74, 0x5f, 0x69, 0x6e, 0x74,
	0x65, 0x72, 0x66, 0x61, 0x63, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0d, 0x62, 0x6f,
	0x6f, 0x74, 0x49, 0x6e, 0x74, 0x65, 0x72, 0x66, 0x61, 0x63, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x6e,
	0x61, 0x6d, 0x65, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12,
	0x1f, 0x0a, 0x0b, 0x6d, 0x61, 0x63, 0x5f, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x18, 0x0c,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x6d, 0x61, 0x63, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73,
	0x12, 0x25, 0x0a, 0x0e, 0x6c, 0x69, 0x6e, 0x6b, 0x5f, 0x63, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74,
	0x65, 0x64, 0x18, 0x15, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0d, 0x6c, 0x69, 0x6e, 0x6b, 0x43, 0x6f,
	0x6e, 0x6e, 0x65, 0x63, 0x74, 0x65, 0x64, 0x12, 0x1d, 0x0a, 0x0a, 0x6c, 0x69, 0x6e, 0x6b, 0x5f,
	0x73, 0x70, 0x65, 0x65, 0x64, 0x18, 0x16, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x6c, 0x69, 0x6e,
	0x6b, 0x53, 0x70, 0x65, 0x65, 0x64, 0x12, 0x27, 0x0a, 0x0f, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x66,
	0x61, 0x63, 0x65, 0x5f, 0x73, 0x70, 0x65, 0x65, 0x64, 0x18, 0x17, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x0e, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x66, 0x61, 0x63, 0x65, 0x53, 0x70, 0x65, 0x65, 0x64, 0x12,
	0x12, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x1f, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x74,
	0x79, 0x70, 0x65, 0x12, 0x1f, 0x0a, 0x0b, 0x66, 0x61, 0x62, 0x72, 0x69, 0x63, 0x5f, 0x6e, 0x61,
	0x6d, 0x65, 0x18, 0x29, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x66, 0x61, 0x62, 0x72, 0x69, 0x63,
	0x4e, 0x61, 0x6d, 0x65, 0x12, 0x1b, 0x0a, 0x09, 0x66, 0x61, 0x62, 0x72, 0x69, 0x63, 0x5f, 0x69,
	0x64, 0x18, 0x2a, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x66, 0x61, 0x62, 0x72, 0x69, 0x63, 0x49,
	0x64, 0x12, 0x1b, 0x0a, 0x09, 0x76, 0x6c, 0x61, 0x6e, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x2b,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x76, 0x6c, 0x61, 0x6e, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x17,
	0x0a, 0x07, 0x76, 0x6c, 0x61, 0x6e, 0x5f, 0x69, 0x64, 0x18, 0x2c, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x06, 0x76, 0x6c, 0x61, 0x6e, 0x49, 0x64, 0x12, 0x1f, 0x0a, 0x0b, 0x73, 0x75, 0x62, 0x6e, 0x65,
	0x74, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x33, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x73, 0x75,
	0x62, 0x6e, 0x65, 0x74, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x1b, 0x0a, 0x09, 0x73, 0x75, 0x62, 0x6e,
	0x65, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x34, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x73, 0x75, 0x62,
	0x6e, 0x65, 0x74, 0x49, 0x64, 0x12, 0x1d, 0x0a, 0x0a, 0x69, 0x70, 0x5f, 0x61, 0x64, 0x64, 0x72,
	0x65, 0x73, 0x73, 0x18, 0x3d, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x69, 0x70, 0x41, 0x64, 0x64,
	0x72, 0x65, 0x73, 0x73, 0x12, 0x17, 0x0a, 0x07, 0x64, 0x68, 0x63, 0x70, 0x5f, 0x6f, 0x6e, 0x18,
	0x47, 0x20, 0x01, 0x28, 0x08, 0x52, 0x06, 0x64, 0x68, 0x63, 0x70, 0x4f, 0x6e, 0x1a, 0x46, 0x0a,
	0x18, 0x57, 0x6f, 0x72, 0x6b, 0x6c, 0x6f, 0x61, 0x64, 0x41, 0x6e, 0x6e, 0x6f, 0x74, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x76,
	0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75,
	0x65, 0x3a, 0x02, 0x38, 0x01, 0x1a, 0x46, 0x0a, 0x18, 0x48, 0x61, 0x72, 0x64, 0x77, 0x61, 0x72,
	0x65, 0x49, 0x6e, 0x66, 0x6f, 0x72, 0x6d, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x45, 0x6e, 0x74, 0x72,
	0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03,
	0x6b, 0x65, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x22, 0xbc, 0x02,
	0x0a, 0x05, 0x53, 0x63, 0x6f, 0x70, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x75, 0x75, 0x69, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x75, 0x75, 0x69, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x6e,
	0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12,
	0x12, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x74,
	0x79, 0x70, 0x65, 0x12, 0x23, 0x0a, 0x0d, 0x70, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x5f,
	0x74, 0x79, 0x70, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x70, 0x72, 0x6f, 0x76,
	0x69, 0x64, 0x65, 0x72, 0x54, 0x79, 0x70, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x6c, 0x69, 0x66, 0x65,
	0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6c, 0x69, 0x66, 0x65, 0x12, 0x16, 0x0a, 0x06,
	0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x73, 0x74,
	0x61, 0x74, 0x75, 0x73, 0x12, 0x23, 0x0a, 0x0d, 0x61, 0x67, 0x65, 0x6e, 0x74, 0x5f, 0x76, 0x65,
	0x72, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x61, 0x67, 0x65,
	0x6e, 0x74, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x1e, 0x0a, 0x0a, 0x63, 0x6f, 0x6e,
	0x74, 0x72, 0x6f, 0x6c, 0x6c, 0x65, 0x72, 0x18, 0x08, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0a, 0x63,
	0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x6c, 0x65, 0x72, 0x12, 0x23, 0x0a, 0x0d, 0x6d, 0x61, 0x63,
	0x68, 0x69, 0x6e, 0x65, 0x5f, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x15, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x0c, 0x6d, 0x61, 0x63, 0x68, 0x69, 0x6e, 0x65, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x1d,
	0x0a, 0x0a, 0x63, 0x6f, 0x72, 0x65, 0x5f, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x16, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x09, 0x63, 0x6f, 0x72, 0x65, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x1d, 0x0a,
	0x0a, 0x75, 0x6e, 0x69, 0x74, 0x5f, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x17, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x09, 0x75, 0x6e, 0x69, 0x74, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x22, 0xd6, 0x0e, 0x0a,
	0x08, 0x46, 0x61, 0x63, 0x69, 0x6c, 0x69, 0x74, 0x79, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d,
	0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x39, 0x0a,
	0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x21, 0x2e,
	0x6f, 0x70, 0x65, 0x6e, 0x68, 0x64, 0x63, 0x2e, 0x6e, 0x65, 0x78, 0x75, 0x73, 0x2e, 0x76, 0x31,
	0x2e, 0x46, 0x61, 0x63, 0x69, 0x6c, 0x69, 0x74, 0x79, 0x2e, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73,
	0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x1d, 0x0a, 0x0a, 0x63, 0x68, 0x61, 0x72,
	0x6d, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x63, 0x68,
	0x61, 0x72, 0x6d, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x76, 0x65, 0x72, 0x73, 0x69,
	0x6f, 0x6e, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f,
	0x6e, 0x12, 0x1a, 0x0a, 0x08, 0x72, 0x65, 0x76, 0x69, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x0d, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x08, 0x72, 0x65, 0x76, 0x69, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x45, 0x0a,
	0x08, 0x6d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x18, 0x15, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x29, 0x2e, 0x6f, 0x70, 0x65, 0x6e, 0x68, 0x64, 0x63, 0x2e, 0x6e, 0x65, 0x78, 0x75, 0x73, 0x2e,
	0x76, 0x31, 0x2e, 0x46, 0x61, 0x63, 0x69, 0x6c, 0x69, 0x74, 0x79, 0x2e, 0x43, 0x68, 0x61, 0x72,
	0x6d, 0x2e, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x52, 0x08, 0x6d, 0x65, 0x74, 0x61,
	0x64, 0x61, 0x74, 0x61, 0x12, 0x35, 0x0a, 0x05, 0x75, 0x6e, 0x69, 0x74, 0x73, 0x18, 0x1f, 0x20,
	0x03, 0x28, 0x0b, 0x32, 0x1f, 0x2e, 0x6f, 0x70, 0x65, 0x6e, 0x68, 0x64, 0x63, 0x2e, 0x6e, 0x65,
	0x78, 0x75, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x46, 0x61, 0x63, 0x69, 0x6c, 0x69, 0x74, 0x79, 0x2e,
	0x55, 0x6e, 0x69, 0x74, 0x52, 0x05, 0x75, 0x6e, 0x69, 0x74, 0x73, 0x1a, 0x69, 0x0a, 0x04, 0x49,
	0x6e, 0x66, 0x6f, 0x12, 0x1d, 0x0a, 0x0a, 0x73, 0x63, 0x6f, 0x70, 0x65, 0x5f, 0x75, 0x75, 0x69,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x73, 0x63, 0x6f, 0x70, 0x65, 0x55, 0x75,
	0x69, 0x64, 0x12, 0x1d, 0x0a, 0x0a, 0x73, 0x63, 0x6f, 0x70, 0x65, 0x5f, 0x6e, 0x61, 0x6d, 0x65,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x73, 0x63, 0x6f, 0x70, 0x65, 0x4e, 0x61, 0x6d,
	0x65, 0x12, 0x23, 0x0a, 0x0d, 0x66, 0x61, 0x63, 0x69, 0x6c, 0x69, 0x74, 0x79, 0x5f, 0x6e, 0x61,
	0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x66, 0x61, 0x63, 0x69, 0x6c, 0x69,
	0x74, 0x79, 0x4e, 0x61, 0x6d, 0x65, 0x1a, 0xee, 0x06, 0x0a, 0x05, 0x43, 0x68, 0x61, 0x72, 0x6d,
	0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64,
	0x12, 0x12, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04,
	0x74, 0x79, 0x70, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x76, 0x65, 0x72, 0x69,
	0x66, 0x69, 0x65, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x08, 0x52, 0x08, 0x76, 0x65, 0x72, 0x69,
	0x66, 0x69, 0x65, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x18, 0x0b, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x73, 0x75,
	0x6d, 0x6d, 0x61, 0x72, 0x79, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x73, 0x75, 0x6d,
	0x6d, 0x61, 0x72, 0x79, 0x12, 0x12, 0x0a, 0x04, 0x69, 0x63, 0x6f, 0x6e, 0x18, 0x0d, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x04, 0x69, 0x63, 0x6f, 0x6e, 0x12, 0x20, 0x0a, 0x0b, 0x64, 0x65, 0x73, 0x63,
	0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x64,
	0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x1e, 0x0a, 0x0a, 0x63, 0x61,
	0x74, 0x65, 0x67, 0x6f, 0x72, 0x69, 0x65, 0x73, 0x18, 0x0f, 0x20, 0x03, 0x28, 0x09, 0x52, 0x0a,
	0x63, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x69, 0x65, 0x73, 0x12, 0x23, 0x0a, 0x0d, 0x64, 0x65,
	0x70, 0x6c, 0x6f, 0x79, 0x61, 0x62, 0x6c, 0x65, 0x5f, 0x6f, 0x6e, 0x18, 0x10, 0x20, 0x03, 0x28,
	0x09, 0x52, 0x0c, 0x64, 0x65, 0x70, 0x6c, 0x6f, 0x79, 0x61, 0x62, 0x6c, 0x65, 0x4f, 0x6e, 0x12,
	0x1c, 0x0a, 0x09, 0x70, 0x75, 0x62, 0x6c, 0x69, 0x73, 0x68, 0x65, 0x72, 0x18, 0x11, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x09, 0x70, 0x75, 0x62, 0x6c, 0x69, 0x73, 0x68, 0x65, 0x72, 0x12, 0x18, 0x0a,
	0x07, 0x6c, 0x69, 0x63, 0x65, 0x6e, 0x73, 0x65, 0x18, 0x12, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07,
	0x6c, 0x69, 0x63, 0x65, 0x6e, 0x73, 0x65, 0x12, 0x1b, 0x0a, 0x09, 0x73, 0x74, 0x6f, 0x72, 0x65,
	0x5f, 0x75, 0x72, 0x6c, 0x18, 0x15, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x73, 0x74, 0x6f, 0x72,
	0x65, 0x55, 0x72, 0x6c, 0x12, 0x18, 0x0a, 0x07, 0x77, 0x65, 0x62, 0x73, 0x69, 0x74, 0x65, 0x18,
	0x16, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x77, 0x65, 0x62, 0x73, 0x69, 0x74, 0x65, 0x12, 0x54,
	0x0a, 0x10, 0x64, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x5f, 0x61, 0x72, 0x74, 0x69, 0x66, 0x61,
	0x63, 0x74, 0x18, 0x1f, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x29, 0x2e, 0x6f, 0x70, 0x65, 0x6e, 0x68,
	0x64, 0x63, 0x2e, 0x6e, 0x65, 0x78, 0x75, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x46, 0x61, 0x63, 0x69,
	0x6c, 0x69, 0x74, 0x79, 0x2e, 0x43, 0x68, 0x61, 0x72, 0x6d, 0x2e, 0x41, 0x72, 0x74, 0x69, 0x66,
	0x61, 0x63, 0x74, 0x52, 0x0f, 0x64, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x41, 0x72, 0x74, 0x69,
	0x66, 0x61, 0x63, 0x74, 0x1a, 0x72, 0x0a, 0x08, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61,
	0x12, 0x1f, 0x0a, 0x0b, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x5f, 0x79, 0x61, 0x6d, 0x6c, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x59, 0x61, 0x6d,
	0x6c, 0x12, 0x45, 0x0a, 0x0d, 0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x69, 0x7a, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1f, 0x2e, 0x6f, 0x70, 0x65, 0x6e, 0x68,
	0x64, 0x63, 0x2e, 0x6e, 0x65, 0x78, 0x75, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x75, 0x73, 0x74,
	0x6f, 0x6d, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x0d, 0x63, 0x75, 0x73, 0x74, 0x6f,
	0x6d, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x1a, 0x58, 0x0a, 0x04, 0x42, 0x61, 0x73, 0x65,
	0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04,
	0x6e, 0x61, 0x6d, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x63, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x63, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x12, 0x22,
	0x0a, 0x0c, 0x61, 0x72, 0x63, 0x68, 0x69, 0x74, 0x65, 0x63, 0x74, 0x75, 0x72, 0x65, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x61, 0x72, 0x63, 0x68, 0x69, 0x74, 0x65, 0x63, 0x74, 0x75,
	0x72, 0x65, 0x1a, 0xd2, 0x01, 0x0a, 0x08, 0x41, 0x72, 0x74, 0x69, 0x66, 0x61, 0x63, 0x74, 0x12,
	0x18, 0x0a, 0x07, 0x63, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x07, 0x63, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x12, 0x1a, 0x0a, 0x08, 0x72, 0x65, 0x76,
	0x69, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x72, 0x65, 0x76,
	0x69, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x18, 0x0a, 0x07, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e,
	0x18, 0x0b, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x12,
	0x3b, 0x0a, 0x05, 0x62, 0x61, 0x73, 0x65, 0x73, 0x18, 0x0c, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x25,
	0x2e, 0x6f, 0x70, 0x65, 0x6e, 0x68, 0x64, 0x63, 0x2e, 0x6e, 0x65, 0x78, 0x75, 0x73, 0x2e, 0x76,
	0x31, 0x2e, 0x46, 0x61, 0x63, 0x69, 0x6c, 0x69, 0x74, 0x79, 0x2e, 0x43, 0x68, 0x61, 0x72, 0x6d,
	0x2e, 0x42, 0x61, 0x73, 0x65, 0x52, 0x05, 0x62, 0x61, 0x73, 0x65, 0x73, 0x12, 0x39, 0x0a, 0x0a,
	0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x61, 0x74, 0x18, 0x15, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62,
	0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x09, 0x63, 0x72,
	0x65, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x1a, 0x3e, 0x0a, 0x06, 0x41, 0x63, 0x74, 0x69, 0x6f,
	0x6e, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x20, 0x0a, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70,
	0x74, 0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x64, 0x65, 0x73, 0x63,
	0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x1a, 0x73, 0x0a, 0x06, 0x53, 0x74, 0x61, 0x74, 0x75,
	0x73, 0x12, 0x14, 0x0a, 0x05, 0x73, 0x74, 0x61, 0x74, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x05, 0x73, 0x74, 0x61, 0x74, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x64, 0x65, 0x74, 0x61, 0x69,
	0x6c, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x64, 0x65, 0x74, 0x61, 0x69, 0x6c,
	0x73, 0x12, 0x39, 0x0a, 0x0a, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x61, 0x74, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d,
	0x70, 0x52, 0x09, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x1a, 0x96, 0x03, 0x0a,
	0x04, 0x55, 0x6e, 0x69, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x44, 0x0a, 0x0c, 0x61, 0x67, 0x65,
	0x6e, 0x74, 0x5f, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x21, 0x2e, 0x6f, 0x70, 0x65, 0x6e, 0x68, 0x64, 0x63, 0x2e, 0x6e, 0x65, 0x78, 0x75, 0x73, 0x2e,
	0x76, 0x31, 0x2e, 0x46, 0x61, 0x63, 0x69, 0x6c, 0x69, 0x74, 0x79, 0x2e, 0x53, 0x74, 0x61, 0x74,
	0x75, 0x73, 0x52, 0x0b, 0x61, 0x67, 0x65, 0x6e, 0x74, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12,
	0x4a, 0x0a, 0x0f, 0x77, 0x6f, 0x72, 0x6b, 0x6c, 0x6f, 0x61, 0x64, 0x5f, 0x73, 0x74, 0x61, 0x74,
	0x75, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x21, 0x2e, 0x6f, 0x70, 0x65, 0x6e, 0x68,
	0x64, 0x63, 0x2e, 0x6e, 0x65, 0x78, 0x75, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x46, 0x61, 0x63, 0x69,
	0x6c, 0x69, 0x74, 0x79, 0x2e, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x0e, 0x77, 0x6f, 0x72,
	0x6b, 0x6c, 0x6f, 0x61, 0x64, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x16, 0x0a, 0x06, 0x6c,
	0x65, 0x61, 0x64, 0x65, 0x72, 0x18, 0x04, 0x20, 0x01, 0x28, 0x08, 0x52, 0x06, 0x6c, 0x65, 0x61,
	0x64, 0x65, 0x72, 0x12, 0x1d, 0x0a, 0x0a, 0x6d, 0x61, 0x63, 0x68, 0x69, 0x6e, 0x65, 0x5f, 0x69,
	0x64, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x6d, 0x61, 0x63, 0x68, 0x69, 0x6e, 0x65,
	0x49, 0x64, 0x12, 0x1d, 0x0a, 0x0a, 0x69, 0x70, 0x5f, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73,
	0x18, 0x0c, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x69, 0x70, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73,
	0x73, 0x12, 0x14, 0x0a, 0x05, 0x70, 0x6f, 0x72, 0x74, 0x73, 0x18, 0x0d, 0x20, 0x03, 0x28, 0x09,
	0x52, 0x05, 0x70, 0x6f, 0x72, 0x74, 0x73, 0x12, 0x1d, 0x0a, 0x0a, 0x63, 0x68, 0x61, 0x72, 0x6d,
	0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x15, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x63, 0x68, 0x61,
	0x72, 0x6d, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f,
	0x6e, 0x18, 0x16, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e,
	0x12, 0x43, 0x0a, 0x0c, 0x73, 0x75, 0x62, 0x6f, 0x72, 0x64, 0x69, 0x6e, 0x61, 0x74, 0x65, 0x73,
	0x18, 0x1f, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1f, 0x2e, 0x6f, 0x70, 0x65, 0x6e, 0x68, 0x64, 0x63,
	0x2e, 0x6e, 0x65, 0x78, 0x75, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x46, 0x61, 0x63, 0x69, 0x6c, 0x69,
	0x74, 0x79, 0x2e, 0x55, 0x6e, 0x69, 0x74, 0x52, 0x0c, 0x73, 0x75, 0x62, 0x6f, 0x72, 0x64, 0x69,
	0x6e, 0x61, 0x74, 0x65, 0x73, 0x22, 0x92, 0x18, 0x0a, 0x0b, 0x41, 0x70, 0x70, 0x6c, 0x69, 0x63,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d,
	0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x1c, 0x0a,
	0x09, 0x6e, 0x61, 0x6d, 0x65, 0x73, 0x70, 0x61, 0x63, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x09, 0x6e, 0x61, 0x6d, 0x65, 0x73, 0x70, 0x61, 0x63, 0x65, 0x12, 0x41, 0x0a, 0x06, 0x6c,
	0x61, 0x62, 0x65, 0x6c, 0x73, 0x18, 0x04, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x29, 0x2e, 0x6f, 0x70,
	0x65, 0x6e, 0x68, 0x64, 0x63, 0x2e, 0x6e, 0x65, 0x78, 0x75, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x41,
	0x70, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x4c, 0x61, 0x62, 0x65, 0x6c,
	0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x06, 0x6c, 0x61, 0x62, 0x65, 0x6c, 0x73, 0x12, 0x1a,
	0x0a, 0x08, 0x72, 0x65, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x73, 0x18, 0x05, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x08, 0x72, 0x65, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x73, 0x12, 0x1c, 0x0a, 0x09, 0x68, 0x65,
	0x61, 0x6c, 0x74, 0x68, 0x69, 0x65, 0x73, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x05, 0x52, 0x09, 0x68,
	0x65, 0x61, 0x6c, 0x74, 0x68, 0x69, 0x65, 0x73, 0x12, 0x48, 0x0a, 0x08, 0x6d, 0x65, 0x74, 0x61,
	0x64, 0x61, 0x74, 0x61, 0x18, 0x15, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2c, 0x2e, 0x6f, 0x70, 0x65,
	0x6e, 0x68, 0x64, 0x63, 0x2e, 0x6e, 0x65, 0x78, 0x75, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x41, 0x70,
	0x70, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x43, 0x68, 0x61, 0x72, 0x74, 0x2e,
	0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x52, 0x08, 0x6d, 0x65, 0x74, 0x61, 0x64, 0x61,
	0x74, 0x61, 0x12, 0x47, 0x0a, 0x0a, 0x63, 0x6f, 0x6e, 0x74, 0x61, 0x69, 0x6e, 0x65, 0x72, 0x73,
	0x18, 0x1f, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x27, 0x2e, 0x6f, 0x70, 0x65, 0x6e, 0x68, 0x64, 0x63,
	0x2e, 0x6e, 0x65, 0x78, 0x75, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x41, 0x70, 0x70, 0x6c, 0x69, 0x63,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x43, 0x6f, 0x6e, 0x74, 0x61, 0x69, 0x6e, 0x65, 0x72, 0x52,
	0x0a, 0x63, 0x6f, 0x6e, 0x74, 0x61, 0x69, 0x6e, 0x65, 0x72, 0x73, 0x12, 0x41, 0x0a, 0x08, 0x73,
	0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x18, 0x65, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x25, 0x2e,
	0x6f, 0x70, 0x65, 0x6e, 0x68, 0x64, 0x63, 0x2e, 0x6e, 0x65, 0x78, 0x75, 0x73, 0x2e, 0x76, 0x31,
	0x2e, 0x41, 0x70, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x53, 0x65, 0x72,
	0x76, 0x69, 0x63, 0x65, 0x52, 0x08, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x12, 0x35,
	0x0a, 0x04, 0x70, 0x6f, 0x64, 0x73, 0x18, 0x66, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x21, 0x2e, 0x6f,
	0x70, 0x65, 0x6e, 0x68, 0x64, 0x63, 0x2e, 0x6e, 0x65, 0x78, 0x75, 0x73, 0x2e, 0x76, 0x31, 0x2e,
	0x41, 0x70, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x50, 0x6f, 0x64, 0x52,
	0x04, 0x70, 0x6f, 0x64, 0x73, 0x12, 0x6d, 0x0a, 0x18, 0x70, 0x65, 0x72, 0x73, 0x69, 0x73, 0x74,
	0x65, 0x6e, 0x74, 0x5f, 0x76, 0x6f, 0x6c, 0x75, 0x6d, 0x65, 0x5f, 0x63, 0x6c, 0x61, 0x69, 0x6d,
	0x73, 0x18, 0x67, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x33, 0x2e, 0x6f, 0x70, 0x65, 0x6e, 0x68, 0x64,
	0x63, 0x2e, 0x6e, 0x65, 0x78, 0x75, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x41, 0x70, 0x70, 0x6c, 0x69,
	0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x50, 0x65, 0x72, 0x73, 0x69, 0x73, 0x74, 0x65, 0x6e,
	0x74, 0x56, 0x6f, 0x6c, 0x75, 0x6d, 0x65, 0x43, 0x6c, 0x61, 0x69, 0x6d, 0x52, 0x16, 0x70, 0x65,
	0x72, 0x73, 0x69, 0x73, 0x74, 0x65, 0x6e, 0x74, 0x56, 0x6f, 0x6c, 0x75, 0x6d, 0x65, 0x43, 0x6c,
	0x61, 0x69, 0x6d, 0x73, 0x12, 0x3a, 0x0a, 0x0a, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x5f,
	0x61, 0x74, 0x18, 0xc9, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67,
	0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65,
	0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x09, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74,
	0x1a, 0xa8, 0x07, 0x0a, 0x05, 0x43, 0x68, 0x61, 0x72, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61,
	0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x12,
	0x0a, 0x04, 0x69, 0x63, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x69, 0x63,
	0x6f, 0x6e, 0x12, 0x20, 0x0a, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f,
	0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70,
	0x74, 0x69, 0x6f, 0x6e, 0x12, 0x1e, 0x0a, 0x0a, 0x64, 0x65, 0x70, 0x72, 0x65, 0x63, 0x61, 0x74,
	0x65, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0a, 0x64, 0x65, 0x70, 0x72, 0x65, 0x63,
	0x61, 0x74, 0x65, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x61, 0x67, 0x73, 0x18, 0x05, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x04, 0x74, 0x61, 0x67, 0x73, 0x12, 0x1a, 0x0a, 0x08, 0x6b, 0x65, 0x79, 0x77,
	0x6f, 0x72, 0x64, 0x73, 0x18, 0x06, 0x20, 0x03, 0x28, 0x09, 0x52, 0x08, 0x6b, 0x65, 0x79, 0x77,
	0x6f, 0x72, 0x64, 0x73, 0x12, 0x18, 0x0a, 0x07, 0x6c, 0x69, 0x63, 0x65, 0x6e, 0x73, 0x65, 0x18,
	0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6c, 0x69, 0x63, 0x65, 0x6e, 0x73, 0x65, 0x12, 0x1a,
	0x0a, 0x08, 0x76, 0x65, 0x72, 0x69, 0x66, 0x69, 0x65, 0x64, 0x18, 0x08, 0x20, 0x01, 0x28, 0x08,
	0x52, 0x08, 0x76, 0x65, 0x72, 0x69, 0x66, 0x69, 0x65, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x68, 0x6f,
	0x6d, 0x65, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x68, 0x6f, 0x6d, 0x65, 0x12, 0x18,
	0x0a, 0x07, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x73, 0x18, 0x0c, 0x20, 0x03, 0x28, 0x09, 0x52,
	0x07, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x73, 0x12, 0x50, 0x0a, 0x0b, 0x6d, 0x61, 0x69, 0x6e,
	0x74, 0x61, 0x69, 0x6e, 0x65, 0x72, 0x73, 0x18, 0x15, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x2e, 0x2e,
	0x6f, 0x70, 0x65, 0x6e, 0x68, 0x64, 0x63, 0x2e, 0x6e, 0x65, 0x78, 0x75, 0x73, 0x2e, 0x76, 0x31,
	0x2e, 0x41, 0x70, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x43, 0x68, 0x61,
	0x72, 0x74, 0x2e, 0x4d, 0x61, 0x69, 0x6e, 0x74, 0x61, 0x69, 0x6e, 0x65, 0x72, 0x52, 0x0b, 0x6d,
	0x61, 0x69, 0x6e, 0x74, 0x61, 0x69, 0x6e, 0x65, 0x72, 0x73, 0x12, 0x52, 0x0a, 0x0c, 0x64, 0x65,
	0x70, 0x65, 0x6e, 0x64, 0x65, 0x6e, 0x63, 0x69, 0x65, 0x73, 0x18, 0x1f, 0x20, 0x03, 0x28, 0x0b,
	0x32, 0x2e, 0x2e, 0x6f, 0x70, 0x65, 0x6e, 0x68, 0x64, 0x63, 0x2e, 0x6e, 0x65, 0x78, 0x75, 0x73,
	0x2e, 0x76, 0x31, 0x2e, 0x41, 0x70, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e,
	0x43, 0x68, 0x61, 0x72, 0x74, 0x2e, 0x44, 0x65, 0x70, 0x65, 0x6e, 0x64, 0x65, 0x6e, 0x63, 0x79,
	0x52, 0x0c, 0x64, 0x65, 0x70, 0x65, 0x6e, 0x64, 0x65, 0x6e, 0x63, 0x69, 0x65, 0x73, 0x12, 0x47,
	0x0a, 0x08, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0x29, 0x20, 0x03, 0x28, 0x0b,
	0x32, 0x2b, 0x2e, 0x6f, 0x70, 0x65, 0x6e, 0x68, 0x64, 0x63, 0x2e, 0x6e, 0x65, 0x78, 0x75, 0x73,
	0x2e, 0x76, 0x31, 0x2e, 0x41, 0x70, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e,
	0x43, 0x68, 0x61, 0x72, 0x74, 0x2e, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x52, 0x08, 0x76,
	0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x73, 0x1a, 0x8f, 0x01, 0x0a, 0x08, 0x4d, 0x65, 0x74, 0x61,
	0x64, 0x61, 0x74, 0x61, 0x12, 0x1f, 0x0a, 0x0b, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x73, 0x5f, 0x79,
	0x61, 0x6d, 0x6c, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x76, 0x61, 0x6c, 0x75, 0x65,
	0x73, 0x59, 0x61, 0x6d, 0x6c, 0x12, 0x1b, 0x0a, 0x09, 0x72, 0x65, 0x61, 0x64, 0x6d, 0x65, 0x5f,
	0x6d, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x72, 0x65, 0x61, 0x64, 0x6d, 0x65,
	0x4d, 0x64, 0x12, 0x45, 0x0a, 0x0d, 0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x69, 0x7a, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1f, 0x2e, 0x6f, 0x70, 0x65, 0x6e,
	0x68, 0x64, 0x63, 0x2e, 0x6e, 0x65, 0x78, 0x75, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x75, 0x73,
	0x74, 0x6f, 0x6d, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x0d, 0x63, 0x75, 0x73, 0x74,
	0x6f, 0x6d, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x1a, 0x48, 0x0a, 0x0a, 0x4d, 0x61, 0x69,
	0x6e, 0x74, 0x61, 0x69, 0x6e, 0x65, 0x72, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x65,
	0x6d, 0x61, 0x69, 0x6c, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x65, 0x6d, 0x61, 0x69,
	0x6c, 0x12, 0x10, 0x0a, 0x03, 0x75, 0x72, 0x6c, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03,
	0x75, 0x72, 0x6c, 0x1a, 0x58, 0x0a, 0x0a, 0x44, 0x65, 0x70, 0x65, 0x6e, 0x64, 0x65, 0x6e, 0x63,
	0x79, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x12,
	0x1c, 0x0a, 0x09, 0x63, 0x6f, 0x6e, 0x64, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x09, 0x63, 0x6f, 0x6e, 0x64, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x1a, 0x7c, 0x0a,
	0x07, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x23, 0x0a, 0x0d, 0x63, 0x68, 0x61, 0x72,
	0x74, 0x5f, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0c, 0x63, 0x68, 0x61, 0x72, 0x74, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x1b, 0x0a,
	0x09, 0x63, 0x68, 0x61, 0x72, 0x74, 0x5f, 0x72, 0x65, 0x66, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x08, 0x63, 0x68, 0x61, 0x72, 0x74, 0x52, 0x65, 0x66, 0x12, 0x2f, 0x0a, 0x13, 0x61, 0x70,
	0x70, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f,
	0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x12, 0x61, 0x70, 0x70, 0x6c, 0x69, 0x63, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x1a, 0xa0, 0x02, 0x0a, 0x07,
	0x52, 0x65, 0x6c, 0x65, 0x61, 0x73, 0x65, 0x12, 0x1d, 0x0a, 0x0a, 0x73, 0x63, 0x6f, 0x70, 0x65,
	0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x73, 0x63, 0x6f,
	0x70, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x1d, 0x0a, 0x0a, 0x73, 0x63, 0x6f, 0x70, 0x65, 0x5f,
	0x75, 0x75, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x73, 0x63, 0x6f, 0x70,
	0x65, 0x55, 0x75, 0x69, 0x64, 0x12, 0x23, 0x0a, 0x0d, 0x66, 0x61, 0x63, 0x69, 0x6c, 0x69, 0x74,
	0x79, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x66, 0x61,
	0x63, 0x69, 0x6c, 0x69, 0x74, 0x79, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x6e, 0x61,
	0x6d, 0x65, 0x73, 0x70, 0x61, 0x63, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x6e,
	0x61, 0x6d, 0x65, 0x73, 0x70, 0x61, 0x63, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65,
	0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x1a, 0x0a, 0x08,
	0x72, 0x65, 0x76, 0x69, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x06, 0x20, 0x01, 0x28, 0x05, 0x52, 0x08,
	0x72, 0x65, 0x76, 0x69, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x1d, 0x0a, 0x0a, 0x63, 0x68, 0x61, 0x72,
	0x74, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x63, 0x68,
	0x61, 0x72, 0x74, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x45, 0x0a, 0x07, 0x76, 0x65, 0x72, 0x73, 0x69,
	0x6f, 0x6e, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2b, 0x2e, 0x6f, 0x70, 0x65, 0x6e, 0x68,
	0x64, 0x63, 0x2e, 0x6e, 0x65, 0x78, 0x75, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x41, 0x70, 0x70, 0x6c,
	0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x43, 0x68, 0x61, 0x72, 0x74, 0x2e, 0x56, 0x65,
	0x72, 0x73, 0x69, 0x6f, 0x6e, 0x52, 0x07, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x1a, 0xe9,
	0x01, 0x0a, 0x09, 0x43, 0x6f, 0x6e, 0x64, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x12, 0x0a, 0x04,
	0x74, 0x79, 0x70, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65,
	0x12, 0x16, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x16, 0x0a, 0x06, 0x72, 0x65, 0x61, 0x73,
	0x6f, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x72, 0x65, 0x61, 0x73, 0x6f, 0x6e,
	0x12, 0x18, 0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x38, 0x0a, 0x09, 0x70, 0x72,
	0x6f, 0x62, 0x65, 0x64, 0x5f, 0x61, 0x74, 0x18, 0xc9, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a,
	0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66,
	0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x08, 0x70, 0x72, 0x6f, 0x62,
	0x65, 0x64, 0x41, 0x74, 0x12, 0x44, 0x0a, 0x0f, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x69, 0x74, 0x69,
	0x6f, 0x6e, 0x65, 0x64, 0x5f, 0x61, 0x74, 0x18, 0xca, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a,
	0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66,
	0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x0e, 0x74, 0x72, 0x61, 0x6e,
	0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x65, 0x64, 0x41, 0x74, 0x1a, 0x56, 0x0a, 0x09, 0x43, 0x6f,
	0x6e, 0x74, 0x61, 0x69, 0x6e, 0x65, 0x72, 0x12, 0x1d, 0x0a, 0x0a, 0x69, 0x6d, 0x61, 0x67, 0x65,
	0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x69, 0x6d, 0x61,
	0x67, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x2a, 0x0a, 0x11, 0x69, 0x6d, 0x61, 0x67, 0x65, 0x5f,
	0x70, 0x75, 0x6c, 0x6c, 0x5f, 0x70, 0x6f, 0x6c, 0x69, 0x63, 0x79, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0f, 0x69, 0x6d, 0x61, 0x67, 0x65, 0x50, 0x75, 0x6c, 0x6c, 0x50, 0x6f, 0x6c, 0x69,
	0x63, 0x79, 0x1a, 0xc4, 0x02, 0x0a, 0x07, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x12,
	0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61,
	0x6d, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x12, 0x1d, 0x0a, 0x0a, 0x63, 0x6c, 0x75, 0x73, 0x74, 0x65,
	0x72, 0x5f, 0x69, 0x70, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x63, 0x6c, 0x75, 0x73,
	0x74, 0x65, 0x72, 0x49, 0x70, 0x12, 0x40, 0x0a, 0x05, 0x70, 0x6f, 0x72, 0x74, 0x73, 0x18, 0x0b,
	0x20, 0x03, 0x28, 0x0b, 0x32, 0x2a, 0x2e, 0x6f, 0x70, 0x65, 0x6e, 0x68, 0x64, 0x63, 0x2e, 0x6e,
	0x65, 0x78, 0x75, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x41, 0x70, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x2e, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x50, 0x6f, 0x72, 0x74,
	0x52, 0x05, 0x70, 0x6f, 0x72, 0x74, 0x73, 0x12, 0x3a, 0x0a, 0x0a, 0x63, 0x72, 0x65, 0x61, 0x74,
	0x65, 0x64, 0x5f, 0x61, 0x74, 0x18, 0xc9, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67,
	0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54,
	0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x09, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65,
	0x64, 0x41, 0x74, 0x1a, 0x74, 0x0a, 0x04, 0x50, 0x6f, 0x72, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x70,
	0x6f, 0x72, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x70, 0x6f, 0x72, 0x74, 0x12,
	0x1b, 0x0a, 0x09, 0x6e, 0x6f, 0x64, 0x65, 0x5f, 0x70, 0x6f, 0x72, 0x74, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x08, 0x6e, 0x6f, 0x64, 0x65, 0x50, 0x6f, 0x72, 0x74, 0x12, 0x1a, 0x0a, 0x08,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x12, 0x1f, 0x0a, 0x0b, 0x74, 0x61, 0x72, 0x67,
	0x65, 0x74, 0x5f, 0x70, 0x6f, 0x72, 0x74, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x74,
	0x61, 0x72, 0x67, 0x65, 0x74, 0x50, 0x6f, 0x72, 0x74, 0x1a, 0xed, 0x01, 0x0a, 0x03, 0x50, 0x6f,
	0x64, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x70, 0x68, 0x61, 0x73, 0x65, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x70, 0x68, 0x61, 0x73, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x72,
	0x65, 0x61, 0x64, 0x79, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x72, 0x65, 0x61, 0x64,
	0x79, 0x12, 0x1a, 0x0a, 0x08, 0x72, 0x65, 0x73, 0x74, 0x61, 0x72, 0x74, 0x73, 0x18, 0x04, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x08, 0x72, 0x65, 0x73, 0x74, 0x61, 0x72, 0x74, 0x73, 0x12, 0x4e, 0x0a,
	0x0e, 0x6c, 0x61, 0x73, 0x74, 0x5f, 0x63, 0x6f, 0x6e, 0x64, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x18,
	0x0b, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x27, 0x2e, 0x6f, 0x70, 0x65, 0x6e, 0x68, 0x64, 0x63, 0x2e,
	0x6e, 0x65, 0x78, 0x75, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x41, 0x70, 0x70, 0x6c, 0x69, 0x63, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x43, 0x6f, 0x6e, 0x64, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x0d,
	0x6c, 0x61, 0x73, 0x74, 0x43, 0x6f, 0x6e, 0x64, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x3a, 0x0a,
	0x0a, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x61, 0x74, 0x18, 0xc9, 0x01, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x09,
	0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x1a, 0x83, 0x02, 0x0a, 0x15, 0x50, 0x65,
	0x72, 0x73, 0x69, 0x73, 0x74, 0x65, 0x6e, 0x74, 0x56, 0x6f, 0x6c, 0x75, 0x6d, 0x65, 0x43, 0x6c,
	0x61, 0x69, 0x6d, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75,
	0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12,
	0x21, 0x0a, 0x0c, 0x61, 0x63, 0x63, 0x65, 0x73, 0x73, 0x5f, 0x6d, 0x6f, 0x64, 0x65, 0x73, 0x18,
	0x03, 0x20, 0x03, 0x28, 0x09, 0x52, 0x0b, 0x61, 0x63, 0x63, 0x65, 0x73, 0x73, 0x4d, 0x6f, 0x64,
	0x65, 0x73, 0x12, 0x1a, 0x0a, 0x08, 0x63, 0x61, 0x70, 0x61, 0x63, 0x69, 0x74, 0x79, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x63, 0x61, 0x70, 0x61, 0x63, 0x69, 0x74, 0x79, 0x12, 0x43,
	0x0a, 0x0d, 0x73, 0x74, 0x6f, 0x72, 0x61, 0x67, 0x65, 0x5f, 0x63, 0x6c, 0x61, 0x73, 0x73, 0x18,
	0x0b, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1e, 0x2e, 0x6f, 0x70, 0x65, 0x6e, 0x68, 0x64, 0x63, 0x2e,
	0x6e, 0x65, 0x78, 0x75, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x74, 0x6f, 0x72, 0x61, 0x67, 0x65,
	0x43, 0x6c, 0x61, 0x73, 0x73, 0x52, 0x0c, 0x73, 0x74, 0x6f, 0x72, 0x61, 0x67, 0x65, 0x43, 0x6c,
	0x61, 0x73, 0x73, 0x12, 0x3a, 0x0a, 0x0a, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x61,
	0x74, 0x18, 0xc9, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c,
	0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73,
	0x74, 0x61, 0x6d, 0x70, 0x52, 0x09, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x1a,
	0x39, 0x0a, 0x0b, 0x4c, 0x61, 0x62, 0x65, 0x6c, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10,
	0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79,
	0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x22, 0x82, 0x01, 0x0a, 0x0d, 0x43,
	0x75, 0x73, 0x74, 0x6f, 0x6d, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x12, 0x0a, 0x04,
	0x74, 0x79, 0x70, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65,
	0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04,
	0x6e, 0x61, 0x6d, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x76, 0x65, 0x72, 0x69, 0x73, 0x6f, 0x6e, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x76, 0x65, 0x72, 0x69, 0x73, 0x6f, 0x6e, 0x12, 0x2f,
	0x0a, 0x06, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x73, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x17,
	0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66,
	0x2e, 0x53, 0x74, 0x72, 0x75, 0x63, 0x74, 0x52, 0x06, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x73, 0x22,
	0x33, 0x0a, 0x03, 0x54, 0x61, 0x67, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x63, 0x6f,
	0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x63, 0x6f, 0x6d,
	0x6d, 0x65, 0x6e, 0x74, 0x22, 0xe6, 0x02, 0x0a, 0x0c, 0x53, 0x74, 0x6f, 0x72, 0x61, 0x67, 0x65,
	0x43, 0x6c, 0x61, 0x73, 0x73, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x20, 0x0a, 0x0b, 0x70, 0x72, 0x6f,
	0x76, 0x69, 0x73, 0x69, 0x6f, 0x6e, 0x65, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b,
	0x70, 0x72, 0x6f, 0x76, 0x69, 0x73, 0x69, 0x6f, 0x6e, 0x65, 0x72, 0x12, 0x25, 0x0a, 0x0e, 0x72,
	0x65, 0x63, 0x6c, 0x61, 0x69, 0x6d, 0x5f, 0x70, 0x6f, 0x6c, 0x69, 0x63, 0x79, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0d, 0x72, 0x65, 0x63, 0x6c, 0x61, 0x69, 0x6d, 0x50, 0x6f, 0x6c, 0x69,
	0x63, 0x79, 0x12, 0x2e, 0x0a, 0x13, 0x76, 0x6f, 0x6c, 0x75, 0x6d, 0x65, 0x5f, 0x62, 0x69, 0x6e,
	0x64, 0x69, 0x6e, 0x67, 0x5f, 0x6d, 0x6f, 0x64, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x11, 0x76, 0x6f, 0x6c, 0x75, 0x6d, 0x65, 0x42, 0x69, 0x6e, 0x64, 0x69, 0x6e, 0x67, 0x4d, 0x6f,
	0x64, 0x65, 0x12, 0x4e, 0x0a, 0x0a, 0x70, 0x61, 0x72, 0x61, 0x6d, 0x65, 0x74, 0x65, 0x72, 0x73,
	0x18, 0x05, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x2e, 0x2e, 0x6f, 0x70, 0x65, 0x6e, 0x68, 0x64, 0x63,
	0x2e, 0x6e, 0x65, 0x78, 0x75, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x74, 0x6f, 0x72, 0x61, 0x67,
	0x65, 0x43, 0x6c, 0x61, 0x73, 0x73, 0x2e, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x65, 0x74, 0x65, 0x72,
	0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x0a, 0x70, 0x61, 0x72, 0x61, 0x6d, 0x65, 0x74, 0x65,
	0x72, 0x73, 0x12, 0x3a, 0x0a, 0x0a, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x61, 0x74,
	0x18, 0xc9, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74,
	0x61, 0x6d, 0x70, 0x52, 0x09, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x1a, 0x3d,
	0x0a, 0x0f, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x65, 0x74, 0x65, 0x72, 0x73, 0x45, 0x6e, 0x74, 0x72,
	0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03,
	0x6b, 0x65, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x22, 0x95, 0x01,
	0x0a, 0x05, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x12, 0x12, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x32, 0x0a, 0x05, 0x6c,
	0x65, 0x76, 0x65, 0x6c, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x1c, 0x2e, 0x6f, 0x70, 0x65,
	0x6e, 0x68, 0x64, 0x63, 0x2e, 0x6e, 0x65, 0x78, 0x75, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x45, 0x72,
	0x72, 0x6f, 0x72, 0x4c, 0x65, 0x76, 0x65, 0x6c, 0x52, 0x05, 0x6c, 0x65, 0x76, 0x65, 0x6c, 0x12,
	0x18, 0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x64, 0x65, 0x74,
	0x61, 0x69, 0x6c, 0x73, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x64, 0x65, 0x74, 0x61,
	0x69, 0x6c, 0x73, 0x12, 0x10, 0x0a, 0x03, 0x75, 0x72, 0x6c, 0x18, 0x15, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x03, 0x75, 0x72, 0x6c, 0x22, 0x1a, 0x0a, 0x18, 0x56, 0x65, 0x72, 0x69, 0x66, 0x79, 0x45,
	0x6e, 0x76, 0x69, 0x72, 0x6f, 0x6e, 0x6d, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x22, 0x4c, 0x0a, 0x19, 0x56, 0x65, 0x72, 0x69, 0x66, 0x79, 0x45, 0x6e, 0x76, 0x69, 0x72,
	0x6f, 0x6e, 0x6d, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x2f,
	0x0a, 0x06, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x17,
	0x2e, 0x6f, 0x70, 0x65, 0x6e, 0x68, 0x64, 0x63, 0x2e, 0x6e, 0x65, 0x78, 0x75, 0x73, 0x2e, 0x76,
	0x31, 0x2e, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x52, 0x06, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x73, 0x22,
	0x32, 0x0a, 0x11, 0x4c, 0x69, 0x73, 0x74, 0x43, 0x65, 0x70, 0x68, 0x65, 0x73, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x12, 0x1d, 0x0a, 0x0a, 0x73, 0x63, 0x6f, 0x70, 0x65, 0x5f, 0x75, 0x75,
	0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x73, 0x63, 0x6f, 0x70, 0x65, 0x55,
	0x75, 0x69, 0x64, 0x22, 0x4d, 0x0a, 0x12, 0x4c, 0x69, 0x73, 0x74, 0x43, 0x65, 0x70, 0x68, 0x65,
	0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x37, 0x0a, 0x06, 0x63, 0x65, 0x70,
	0x68, 0x65, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1f, 0x2e, 0x6f, 0x70, 0x65, 0x6e,
	0x68, 0x64, 0x63, 0x2e, 0x6e, 0x65, 0x78, 0x75, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x46, 0x61, 0x63,
	0x69, 0x6c, 0x69, 0x74, 0x79, 0x2e, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x06, 0x63, 0x65, 0x70, 0x68,
	0x65, 0x73, 0x22, 0xb5, 0x01, 0x0a, 0x11, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x43, 0x65, 0x70,
	0x68, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1d, 0x0a, 0x0a, 0x73, 0x63, 0x6f, 0x70,
	0x65, 0x5f, 0x75, 0x75, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x73, 0x63,
	0x6f, 0x70, 0x65, 0x55, 0x75, 0x69, 0x64, 0x12, 0x1d, 0x0a, 0x0a, 0x6d, 0x61, 0x63, 0x68, 0x69,
	0x6e, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x6d, 0x61, 0x63,
	0x68, 0x69, 0x6e, 0x65, 0x49, 0x64, 0x12, 0x1f, 0x0a, 0x0b, 0x70, 0x72, 0x65, 0x66, 0x69, 0x78,
	0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x70, 0x72, 0x65,
	0x66, 0x69, 0x78, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x1f, 0x0a, 0x0b, 0x6f, 0x73, 0x64, 0x5f, 0x64,
	0x65, 0x76, 0x69, 0x63, 0x65, 0x73, 0x18, 0x0b, 0x20, 0x03, 0x28, 0x09, 0x52, 0x0a, 0x6f, 0x73,
	0x64, 0x44, 0x65, 0x76, 0x69, 0x63, 0x65, 0x73, 0x12, 0x20, 0x0a, 0x0b, 0x64, 0x65, 0x76, 0x65,
	0x6c, 0x6f, 0x70, 0x6d, 0x65, 0x6e, 0x74, 0x18, 0x15, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0b, 0x64,
	0x65, 0x76, 0x65, 0x6c, 0x6f, 0x70, 0x6d, 0x65, 0x6e, 0x74, 0x22, 0x92, 0x01, 0x0a, 0x13, 0x41,
	0x64, 0x64, 0x43, 0x65, 0x70, 0x68, 0x55, 0x6e, 0x69, 0x74, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x12, 0x1d, 0x0a, 0x0a, 0x73, 0x63, 0x6f, 0x70, 0x65, 0x5f, 0x75, 0x75, 0x69, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x73, 0x63, 0x6f, 0x70, 0x65, 0x55, 0x75, 0x69,
	0x64, 0x12, 0x23, 0x0a, 0x0d, 0x66, 0x61, 0x63, 0x69, 0x6c, 0x69, 0x74, 0x79, 0x5f, 0x6e, 0x61,
	0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x66, 0x61, 0x63, 0x69, 0x6c, 0x69,
	0x74, 0x79, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x6e, 0x75, 0x6d, 0x62, 0x65, 0x72,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x6e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x12, 0x1f,
	0x0a, 0x0b, 0x6d, 0x61, 0x63, 0x68, 0x69, 0x6e, 0x65, 0x5f, 0x69, 0x64, 0x73, 0x18, 0x04, 0x20,
	0x03, 0x28, 0x09, 0x52, 0x0a, 0x6d, 0x61, 0x63, 0x68, 0x69, 0x6e, 0x65, 0x49, 0x64, 0x73, 0x22,
	0x38, 0x0a, 0x17, 0x4c, 0x69, 0x73, 0x74, 0x4b, 0x75, 0x62, 0x65, 0x72, 0x6e, 0x65, 0x74, 0x65,
	0x73, 0x65, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1d, 0x0a, 0x0a, 0x73, 0x63,
	0x6f, 0x70, 0x65, 0x5f, 0x75, 0x75, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09,
	0x73, 0x63, 0x6f, 0x70, 0x65, 0x55, 0x75, 0x69, 0x64, 0x22, 0x5f, 0x0a, 0x18, 0x4c, 0x69, 0x73,
	0x74, 0x4b, 0x75, 0x62, 0x65, 0x72, 0x6e, 0x65, 0x74, 0x65, 0x73, 0x65, 0x73, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x43, 0x0a, 0x0c, 0x6b, 0x75, 0x62, 0x65, 0x72, 0x6e, 0x65,
	0x74, 0x65, 0x73, 0x65, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1f, 0x2e, 0x6f, 0x70,
	0x65, 0x6e, 0x68, 0x64, 0x63, 0x2e, 0x6e, 0x65, 0x78, 0x75, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x46,
	0x61, 0x63, 0x69, 0x6c, 0x69, 0x74, 0x79, 0x2e, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x0c, 0x6b, 0x75,
	0x62, 0x65, 0x72, 0x6e, 0x65, 0x74, 0x65, 0x73, 0x65, 0x73, 0x22, 0xc0, 0x01, 0x0a, 0x17, 0x43,
	0x72, 0x65, 0x61, 0x74, 0x65, 0x4b, 0x75, 0x62, 0x65, 0x72, 0x6e, 0x65, 0x74, 0x65, 0x73, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1d, 0x0a, 0x0a, 0x73, 0x63, 0x6f, 0x70, 0x65, 0x5f,
	0x75, 0x75, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x73, 0x63, 0x6f, 0x70,
	0x65, 0x55, 0x75, 0x69, 0x64, 0x12, 0x1d, 0x0a, 0x0a, 0x6d, 0x61, 0x63, 0x68, 0x69, 0x6e, 0x65,
	0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x6d, 0x61, 0x63, 0x68, 0x69,
	0x6e, 0x65, 0x49, 0x64, 0x12, 0x1f, 0x0a, 0x0b, 0x70, 0x72, 0x65, 0x66, 0x69, 0x78, 0x5f, 0x6e,
	0x61, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x70, 0x72, 0x65, 0x66, 0x69,
	0x78, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x1f, 0x0a, 0x0b, 0x76, 0x69, 0x72, 0x74, 0x75, 0x61, 0x6c,
	0x5f, 0x69, 0x70, 0x73, 0x18, 0x0b, 0x20, 0x03, 0x28, 0x09, 0x52, 0x0a, 0x76, 0x69, 0x72, 0x74,
	0x75, 0x61, 0x6c, 0x49, 0x70, 0x73, 0x12, 0x1f, 0x0a, 0x0b, 0x63, 0x61, 0x6c, 0x69, 0x63, 0x6f,
	0x5f, 0x63, 0x69, 0x64, 0x72, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x63, 0x61, 0x6c,
	0x69, 0x63, 0x6f, 0x43, 0x69, 0x64, 0x72, 0x4a, 0x04, 0x08, 0x0c, 0x10, 0x0d, 0x22, 0xae, 0x01,
	0x0a, 0x19, 0x41, 0x64, 0x64, 0x4b, 0x75, 0x62, 0x65, 0x72, 0x6e, 0x65, 0x74, 0x65, 0x73, 0x55,
	0x6e, 0x69, 0x74, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1d, 0x0a, 0x0a, 0x73,
	0x63, 0x6f, 0x70, 0x65, 0x5f, 0x75, 0x75, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x09, 0x73, 0x63, 0x6f, 0x70, 0x65, 0x55, 0x75, 0x69, 0x64, 0x12, 0x23, 0x0a, 0x0d, 0x66, 0x61,
	0x63, 0x69, 0x6c, 0x69, 0x74, 0x79, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0c, 0x66, 0x61, 0x63, 0x69, 0x6c, 0x69, 0x74, 0x79, 0x4e, 0x61, 0x6d, 0x65, 0x12,
	0x16, 0x0a, 0x06, 0x6e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x06, 0x6e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x12, 0x1f, 0x0a, 0x0b, 0x6d, 0x61, 0x63, 0x68, 0x69,
	0x6e, 0x65, 0x5f, 0x69, 0x64, 0x73, 0x18, 0x04, 0x20, 0x03, 0x28, 0x09, 0x52, 0x0a, 0x6d, 0x61,
	0x63, 0x68, 0x69, 0x6e, 0x65, 0x49, 0x64, 0x73, 0x12, 0x14, 0x0a, 0x05, 0x66, 0x6f, 0x72, 0x63,
	0x65, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x08, 0x52, 0x05, 0x66, 0x6f, 0x72, 0x63, 0x65, 0x22, 0x19,
	0x0a, 0x17, 0x47, 0x65, 0x74, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x75, 0x72, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x22, 0x36, 0x0a, 0x16, 0x55, 0x70, 0x64,
	0x61, 0x74, 0x65, 0x4e, 0x54, 0x50, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x12, 0x1c, 0x0a, 0x09, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x65, 0x73,
	0x18, 0x01, 0x20, 0x03, 0x28, 0x09, 0x52, 0x09, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x65,
	0x73, 0x22, 0x5f, 0x0a, 0x1e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x50, 0x61, 0x63, 0x6b, 0x61,
	0x67, 0x65, 0x52, 0x65, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x6f, 0x72, 0x79, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x02, 0x69, 0x64, 0x12, 0x10, 0x0a, 0x03, 0x75, 0x72, 0x6c, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x03, 0x75, 0x72, 0x6c, 0x12, 0x1b, 0x0a, 0x09, 0x73, 0x6b, 0x69, 0x70, 0x5f, 0x6a, 0x75,
	0x6a, 0x75, 0x18, 0x03, 0x20, 0x01, 0x28, 0x08, 0x52, 0x08, 0x73, 0x6b, 0x69, 0x70, 0x4a, 0x75,
	0x6a, 0x75, 0x22, 0x63, 0x0a, 0x16, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x42, 0x6f, 0x6f, 0x74,
	0x49, 0x6d, 0x61, 0x67, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x23, 0x0a, 0x0d,
	0x64, 0x69, 0x73, 0x74, 0x72, 0x6f, 0x5f, 0x73, 0x65, 0x72, 0x69, 0x65, 0x73, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0c, 0x64, 0x69, 0x73, 0x74, 0x72, 0x6f, 0x53, 0x65, 0x72, 0x69, 0x65,
	0x73, 0x12, 0x24, 0x0a, 0x0d, 0x61, 0x72, 0x63, 0x68, 0x69, 0x74, 0x65, 0x63, 0x74, 0x75, 0x72,
	0x65, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x09, 0x52, 0x0d, 0x61, 0x72, 0x63, 0x68, 0x69, 0x74,
	0x65, 0x63, 0x74, 0x75, 0x72, 0x65, 0x73, 0x22, 0x41, 0x0a, 0x1a, 0x53, 0x65, 0x74, 0x44, 0x65,
	0x66, 0x61, 0x75, 0x6c, 0x74, 0x42, 0x6f, 0x6f, 0x74, 0x49, 0x6d, 0x61, 0x67, 0x65, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x23, 0x0a, 0x0d, 0x64, 0x69, 0x73, 0x74, 0x72, 0x6f, 0x5f,
	0x73, 0x65, 0x72, 0x69, 0x65, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x64, 0x69,
	0x73, 0x74, 0x72, 0x6f, 0x53, 0x65, 0x72, 0x69, 0x65, 0x73, 0x22, 0x19, 0x0a, 0x17, 0x49, 0x6d,
	0x70, 0x6f, 0x72, 0x74, 0x42, 0x6f, 0x6f, 0x74, 0x49, 0x6d, 0x61, 0x67, 0x65, 0x73, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x22, 0x1e, 0x0a, 0x1c, 0x49, 0x73, 0x49, 0x6d, 0x70, 0x6f, 0x72,
	0x74, 0x69, 0x6e, 0x67, 0x42, 0x6f, 0x6f, 0x74, 0x49, 0x6d, 0x61, 0x67, 0x65, 0x73, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x22, 0x3d, 0x0a, 0x1d, 0x49, 0x73, 0x49, 0x6d, 0x70, 0x6f, 0x72,
	0x74, 0x69, 0x6e, 0x67, 0x42, 0x6f, 0x6f, 0x74, 0x49, 0x6d, 0x61, 0x67, 0x65, 0x73, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x69, 0x6d, 0x70, 0x6f, 0x72, 0x74,
	0x69, 0x6e, 0x67, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x09, 0x69, 0x6d, 0x70, 0x6f, 0x72,
	0x74, 0x69, 0x6e, 0x67, 0x22, 0x20, 0x0a, 0x1e, 0x4c, 0x69, 0x73, 0x74, 0x42, 0x6f, 0x6f, 0x74,
	0x49, 0x6d, 0x61, 0x67, 0x65, 0x53, 0x65, 0x6c, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x22, 0x89, 0x01, 0x0a, 0x1f, 0x4c, 0x69, 0x73, 0x74, 0x42,
	0x6f, 0x6f, 0x74, 0x49, 0x6d, 0x61, 0x67, 0x65, 0x53, 0x65, 0x6c, 0x65, 0x63, 0x74, 0x69, 0x6f,
	0x6e, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x66, 0x0a, 0x15, 0x62, 0x6f,
	0x6f, 0x74, 0x5f, 0x69, 0x6d, 0x61, 0x67, 0x65, 0x5f, 0x73, 0x65, 0x6c, 0x65, 0x63, 0x74, 0x69,
	0x6f, 0x6e, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x32, 0x2e, 0x6f, 0x70, 0x65, 0x6e,
	0x68, 0x64, 0x63, 0x2e, 0x6e, 0x65, 0x78, 0x75, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x6f, 0x6e,
	0x66, 0x69, 0x67, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x42, 0x6f, 0x6f, 0x74, 0x49,
	0x6d, 0x61, 0x67, 0x65, 0x53, 0x65, 0x6c, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x13, 0x62,
	0x6f, 0x6f, 0x74, 0x49, 0x6d, 0x61, 0x67, 0x65, 0x53, 0x65, 0x6c, 0x65, 0x63, 0x74, 0x69, 0x6f,
	0x6e, 0x73, 0x22, 0x15, 0x0a, 0x13, 0x4c, 0x69, 0x73, 0x74, 0x4e, 0x65, 0x74, 0x77, 0x6f, 0x72,
	0x6b, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x22, 0x4d, 0x0a, 0x14, 0x4c, 0x69, 0x73,
	0x74, 0x4e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x12, 0x35, 0x0a, 0x08, 0x6e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x73, 0x18, 0x01, 0x20,
	0x03, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x6f, 0x70, 0x65, 0x6e, 0x68, 0x64, 0x63, 0x2e, 0x6e, 0x65,
	0x78, 0x75, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x4e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x52, 0x08,
	0x6e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x73, 0x22, 0x83, 0x01, 0x0a, 0x14, 0x43, 0x72, 0x65,
	0x61, 0x74, 0x65, 0x4e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x12, 0x12, 0x0a, 0x04, 0x63, 0x69, 0x64, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x04, 0x63, 0x69, 0x64, 0x72, 0x12, 0x1d, 0x0a, 0x0a, 0x67, 0x61, 0x74, 0x65, 0x77, 0x61, 0x79,
	0x5f, 0x69, 0x70, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x67, 0x61, 0x74, 0x65, 0x77,
	0x61, 0x79, 0x49, 0x70, 0x12, 0x1f, 0x0a, 0x0b, 0x64, 0x6e, 0x73, 0x5f, 0x73, 0x65, 0x72, 0x76,
	0x65, 0x72, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x09, 0x52, 0x0a, 0x64, 0x6e, 0x73, 0x53, 0x65,
	0x72, 0x76, 0x65, 0x72, 0x73, 0x12, 0x17, 0x0a, 0x07, 0x64, 0x68, 0x63, 0x70, 0x5f, 0x6f, 0x6e,
	0x18, 0x0b, 0x20, 0x01, 0x28, 0x08, 0x52, 0x06, 0x64, 0x68, 0x63, 0x70, 0x4f, 0x6e, 0x22, 0x7f,
	0x0a, 0x14, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x49, 0x50, 0x52, 0x61, 0x6e, 0x67, 0x65, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1b, 0x0a, 0x09, 0x73, 0x75, 0x62, 0x6e, 0x65, 0x74,
	0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x73, 0x75, 0x62, 0x6e, 0x65,
	0x74, 0x49, 0x64, 0x12, 0x19, 0x0a, 0x08, 0x73, 0x74, 0x61, 0x72, 0x74, 0x5f, 0x69, 0x70, 0x18,
	0x0b, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x73, 0x74, 0x61, 0x72, 0x74, 0x49, 0x70, 0x12, 0x15,
	0x0a, 0x06, 0x65, 0x6e, 0x64, 0x5f, 0x69, 0x70, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05,
	0x65, 0x6e, 0x64, 0x49, 0x70, 0x12, 0x18, 0x0a, 0x07, 0x63, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74,
	0x18, 0x0d, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x63, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x22,
	0x26, 0x0a, 0x14, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x4e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x02, 0x69, 0x64, 0x22, 0x26, 0x0a, 0x14, 0x44, 0x65, 0x6c, 0x65, 0x74,
	0x65, 0x49, 0x50, 0x52, 0x61, 0x6e, 0x67, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12,
	0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x69, 0x64, 0x22,
	0x39, 0x0a, 0x13, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x46, 0x61, 0x62, 0x72, 0x69, 0x63, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x02, 0x69, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x0b,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x22, 0xa3, 0x01, 0x0a, 0x11, 0x55,
	0x70, 0x64, 0x61, 0x74, 0x65, 0x56, 0x4c, 0x41, 0x4e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x12, 0x1b, 0x0a, 0x09, 0x66, 0x61, 0x62, 0x72, 0x69, 0x63, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x08, 0x66, 0x61, 0x62, 0x72, 0x69, 0x63, 0x49, 0x64, 0x12, 0x10, 0x0a,
	0x03, 0x76, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x03, 0x76, 0x69, 0x64, 0x12,
	0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e,
	0x61, 0x6d, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x6d, 0x74, 0x75, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x03, 0x6d, 0x74, 0x75, 0x12, 0x20, 0x0a, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70,
	0x74, 0x69, 0x6f, 0x6e, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x64, 0x65, 0x73, 0x63,
	0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x17, 0x0a, 0x07, 0x64, 0x68, 0x63, 0x70, 0x5f,
	0x6f, 0x6e, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x08, 0x52, 0x06, 0x64, 0x68, 0x63, 0x70, 0x4f, 0x6e,
	0x22, 0xe1, 0x01, 0x0a, 0x13, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x53, 0x75, 0x62, 0x6e, 0x65,
	0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x69, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65,
	0x18, 0x0b, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x12, 0x0a, 0x04,
	0x63, 0x69, 0x64, 0x72, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x63, 0x69, 0x64, 0x72,
	0x12, 0x1d, 0x0a, 0x0a, 0x67, 0x61, 0x74, 0x65, 0x77, 0x61, 0x79, 0x5f, 0x69, 0x70, 0x18, 0x0d,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x67, 0x61, 0x74, 0x65, 0x77, 0x61, 0x79, 0x49, 0x70, 0x12,
	0x1f, 0x0a, 0x0b, 0x64, 0x6e, 0x73, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x73, 0x18, 0x0e,
	0x20, 0x03, 0x28, 0x09, 0x52, 0x0a, 0x64, 0x6e, 0x73, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x73,
	0x12, 0x20, 0x0a, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18,
	0x0f, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69,
	0x6f, 0x6e, 0x12, 0x30, 0x0a, 0x14, 0x61, 0x6c, 0x6c, 0x6f, 0x77, 0x5f, 0x64, 0x6e, 0x73, 0x5f,
	0x72, 0x65, 0x73, 0x6f, 0x6c, 0x75, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x10, 0x20, 0x01, 0x28, 0x08,
	0x52, 0x12, 0x61, 0x6c, 0x6c, 0x6f, 0x77, 0x44, 0x6e, 0x73, 0x52, 0x65, 0x73, 0x6f, 0x6c, 0x75,
	0x74, 0x69, 0x6f, 0x6e, 0x22, 0x72, 0x0a, 0x14, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x49, 0x50,
	0x52, 0x61, 0x6e, 0x67, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x0e, 0x0a, 0x02,
	0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x69, 0x64, 0x12, 0x19, 0x0a, 0x08,
	0x73, 0x74, 0x61, 0x72, 0x74, 0x5f, 0x69, 0x70, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07,
	0x73, 0x74, 0x61, 0x72, 0x74, 0x49, 0x70, 0x12, 0x15, 0x0a, 0x06, 0x65, 0x6e, 0x64, 0x5f, 0x69,
	0x70, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x65, 0x6e, 0x64, 0x49, 0x70, 0x12, 0x18,
	0x0a, 0x07, 0x63, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x07, 0x63, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x22, 0x34, 0x0a, 0x13, 0x4c, 0x69, 0x73, 0x74,
	0x4d, 0x61, 0x63, 0x68, 0x69, 0x6e, 0x65, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12,
	0x1d, 0x0a, 0x0a, 0x73, 0x63, 0x6f, 0x70, 0x65, 0x5f, 0x75, 0x75, 0x69, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x09, 0x73, 0x63, 0x6f, 0x70, 0x65, 0x55, 0x75, 0x69, 0x64, 0x22, 0x4d,
	0x0a, 0x14, 0x4c, 0x69, 0x73, 0x74, 0x4d, 0x61, 0x63, 0x68, 0x69, 0x6e, 0x65, 0x73, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x35, 0x0a, 0x08, 0x6d, 0x61, 0x63, 0x68, 0x69, 0x6e,
	0x65, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x6f, 0x70, 0x65, 0x6e, 0x68,
	0x64, 0x63, 0x2e, 0x6e, 0x65, 0x78, 0x75, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x4d, 0x61, 0x63, 0x68,
	0x69, 0x6e, 0x65, 0x52, 0x08, 0x6d, 0x61, 0x63, 0x68, 0x69, 0x6e, 0x65, 0x73, 0x22, 0x23, 0x0a,
	0x11, 0x47, 0x65, 0x74, 0x4d, 0x61, 0x63, 0x68, 0x69, 0x6e, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02,
	0x69, 0x64, 0x22, 0xec, 0x01, 0x0a, 0x14, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x4d, 0x61, 0x63,
	0x68, 0x69, 0x6e, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x1d, 0x0a, 0x0a, 0x65,
	0x6e, 0x61, 0x62, 0x6c, 0x65, 0x5f, 0x73, 0x73, 0x68, 0x18, 0x02, 0x20, 0x01, 0x28, 0x08, 0x52,
	0x09, 0x65, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x53, 0x73, 0x68, 0x12, 0x26, 0x0a, 0x0f, 0x73, 0x6b,
	0x69, 0x70, 0x5f, 0x62, 0x6d, 0x63, 0x5f, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x08, 0x52, 0x0d, 0x73, 0x6b, 0x69, 0x70, 0x42, 0x6d, 0x63, 0x43, 0x6f, 0x6e, 0x66,
	0x69, 0x67, 0x12, 0x27, 0x0a, 0x0f, 0x73, 0x6b, 0x69, 0x70, 0x5f, 0x6e, 0x65, 0x74, 0x77, 0x6f,
	0x72, 0x6b, 0x69, 0x6e, 0x67, 0x18, 0x04, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0e, 0x73, 0x6b, 0x69,
	0x70, 0x4e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x69, 0x6e, 0x67, 0x12, 0x21, 0x0a, 0x0c, 0x73,
	0x6b, 0x69, 0x70, 0x5f, 0x73, 0x74, 0x6f, 0x72, 0x61, 0x67, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28,
	0x08, 0x52, 0x0b, 0x73, 0x6b, 0x69, 0x70, 0x53, 0x74, 0x6f, 0x72, 0x61, 0x67, 0x65, 0x12, 0x1d,
	0x0a, 0x0a, 0x73, 0x63, 0x6f, 0x70, 0x65, 0x5f, 0x75, 0x75, 0x69, 0x64, 0x18, 0x0b, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x09, 0x73, 0x63, 0x6f, 0x70, 0x65, 0x55, 0x75, 0x69, 0x64, 0x12, 0x12, 0x0a,
	0x04, 0x74, 0x61, 0x67, 0x73, 0x18, 0x15, 0x20, 0x03, 0x28, 0x09, 0x52, 0x04, 0x74, 0x61, 0x67,
	0x73, 0x22, 0x3c, 0x0a, 0x14, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x4d, 0x61, 0x63, 0x68, 0x69,
	0x6e, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x66, 0x6f, 0x72,
	0x63, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x08, 0x52, 0x05, 0x66, 0x6f, 0x72, 0x63, 0x65, 0x22,
	0x41, 0x0a, 0x15, 0x50, 0x6f, 0x77, 0x65, 0x72, 0x4f, 0x6e, 0x4d, 0x61, 0x63, 0x68, 0x69, 0x6e,
	0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x18, 0x0a, 0x07, 0x63, 0x6f, 0x6d, 0x6d,
	0x65, 0x6e, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x63, 0x6f, 0x6d, 0x6d, 0x65,
	0x6e, 0x74, 0x22, 0x42, 0x0a, 0x16, 0x50, 0x6f, 0x77, 0x65, 0x72, 0x4f, 0x66, 0x66, 0x4d, 0x61,
	0x63, 0x68, 0x69, 0x6e, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x0e, 0x0a, 0x02,
	0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x18, 0x0a, 0x07,
	0x63, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x63,
	0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x22, 0x3b, 0x0a, 0x15, 0x41, 0x64, 0x64, 0x4d, 0x61, 0x63,
	0x68, 0x69, 0x6e, 0x65, 0x54, 0x61, 0x67, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12,
	0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12,
	0x12, 0x0a, 0x04, 0x74, 0x61, 0x67, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x09, 0x52, 0x04, 0x74,
	0x61, 0x67, 0x73, 0x22, 0x3e, 0x0a, 0x18, 0x52, 0x65, 0x6d, 0x6f, 0x76, 0x65, 0x4d, 0x61, 0x63,
	0x68, 0x69, 0x6e, 0x65, 0x54, 0x61, 0x67, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12,
	0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12,
	0x12, 0x0a, 0x04, 0x74, 0x61, 0x67, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x09, 0x52, 0x04, 0x74,
	0x61, 0x67, 0x73, 0x22, 0x13, 0x0a, 0x11, 0x4c, 0x69, 0x73, 0x74, 0x53, 0x63, 0x6f, 0x70, 0x65,
	0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x22, 0x45, 0x0a, 0x12, 0x4c, 0x69, 0x73, 0x74,
	0x53, 0x63, 0x6f, 0x70, 0x65, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x2f,
	0x0a, 0x06, 0x73, 0x63, 0x6f, 0x70, 0x65, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x17,
	0x2e, 0x6f, 0x70, 0x65, 0x6e, 0x68, 0x64, 0x63, 0x2e, 0x6e, 0x65, 0x78, 0x75, 0x73, 0x2e, 0x76,
	0x31, 0x2e, 0x53, 0x63, 0x6f, 0x70, 0x65, 0x52, 0x06, 0x73, 0x63, 0x6f, 0x70, 0x65, 0x73, 0x22,
	0x28, 0x0a, 0x12, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x53, 0x63, 0x6f, 0x70, 0x65, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x22, 0x36, 0x0a, 0x15, 0x4c, 0x69, 0x73,
	0x74, 0x46, 0x61, 0x63, 0x69, 0x6c, 0x69, 0x74, 0x69, 0x65, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x12, 0x1d, 0x0a, 0x0a, 0x73, 0x63, 0x6f, 0x70, 0x65, 0x5f, 0x75, 0x75, 0x69, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x73, 0x63, 0x6f, 0x70, 0x65, 0x55, 0x75, 0x69,
	0x64, 0x22, 0x54, 0x0a, 0x16, 0x4c, 0x69, 0x73, 0x74, 0x46, 0x61, 0x63, 0x69, 0x6c, 0x69, 0x74,
	0x69, 0x65, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x3a, 0x0a, 0x0a, 0x66,
	0x61, 0x63, 0x69, 0x6c, 0x69, 0x74, 0x69, 0x65, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32,
	0x1a, 0x2e, 0x6f, 0x70, 0x65, 0x6e, 0x68, 0x64, 0x63, 0x2e, 0x6e, 0x65, 0x78, 0x75, 0x73, 0x2e,
	0x76, 0x31, 0x2e, 0x46, 0x61, 0x63, 0x69, 0x6c, 0x69, 0x74, 0x79, 0x52, 0x0a, 0x66, 0x61, 0x63,
	0x69, 0x6c, 0x69, 0x74, 0x69, 0x65, 0x73, 0x22, 0x47, 0x0a, 0x12, 0x47, 0x65, 0x74, 0x46, 0x61,
	0x63, 0x69, 0x6c, 0x69, 0x74, 0x79, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1d, 0x0a,
	0x0a, 0x73, 0x63, 0x6f, 0x70, 0x65, 0x5f, 0x75, 0x75, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x09, 0x73, 0x63, 0x6f, 0x70, 0x65, 0x55, 0x75, 0x69, 0x64, 0x12, 0x12, 0x0a, 0x04,
	0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65,
	0x22, 0xf9, 0x02, 0x0a, 0x15, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x46, 0x61, 0x63, 0x69, 0x6c,
	0x69, 0x74, 0x79, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1d, 0x0a, 0x0a, 0x73, 0x63,
	0x6f, 0x70, 0x65, 0x5f, 0x75, 0x75, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09,
	0x73, 0x63, 0x6f, 0x70, 0x65, 0x55, 0x75, 0x69, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d,
	0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x1f, 0x0a,
	0x0b, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x5f, 0x79, 0x61, 0x6d, 0x6c, 0x18, 0x0b, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0a, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x59, 0x61, 0x6d, 0x6c, 0x12, 0x1d,
	0x0a, 0x0a, 0x63, 0x68, 0x61, 0x72, 0x6d, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x15, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x09, 0x63, 0x68, 0x61, 0x72, 0x6d, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x18, 0x0a,
	0x07, 0x63, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x18, 0x16, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07,
	0x63, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x12, 0x1a, 0x0a, 0x08, 0x72, 0x65, 0x76, 0x69, 0x73,
	0x69, 0x6f, 0x6e, 0x18, 0x17, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x72, 0x65, 0x76, 0x69, 0x73,
	0x69, 0x6f, 0x6e, 0x12, 0x16, 0x0a, 0x06, 0x6e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x18, 0x18, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x06, 0x6e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x12, 0x43, 0x0a, 0x0a, 0x70,
	0x6c, 0x61, 0x63, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x18, 0x1f, 0x20, 0x03, 0x28, 0x0b, 0x32,
	0x23, 0x2e, 0x6f, 0x70, 0x65, 0x6e, 0x68, 0x64, 0x63, 0x2e, 0x6e, 0x65, 0x78, 0x75, 0x73, 0x2e,
	0x76, 0x31, 0x2e, 0x4d, 0x61, 0x63, 0x68, 0x69, 0x6e, 0x65, 0x2e, 0x50, 0x6c, 0x61, 0x63, 0x65,
	0x6d, 0x65, 0x6e, 0x74, 0x52, 0x0a, 0x70, 0x6c, 0x61, 0x63, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x73,
	0x12, 0x44, 0x0a, 0x0a, 0x63, 0x6f, 0x6e, 0x73, 0x74, 0x72, 0x61, 0x69, 0x6e, 0x74, 0x18, 0x20,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x24, 0x2e, 0x6f, 0x70, 0x65, 0x6e, 0x68, 0x64, 0x63, 0x2e, 0x6e,
	0x65, 0x78, 0x75, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x4d, 0x61, 0x63, 0x68, 0x69, 0x6e, 0x65, 0x2e,
	0x43, 0x6f, 0x6e, 0x73, 0x74, 0x72, 0x61, 0x69, 0x6e, 0x74, 0x52, 0x0a, 0x63, 0x6f, 0x6e, 0x73,
	0x74, 0x72, 0x61, 0x69, 0x6e, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x72, 0x75, 0x73, 0x74, 0x18,
	0x29, 0x20, 0x01, 0x28, 0x08, 0x52, 0x05, 0x74, 0x72, 0x75, 0x73, 0x74, 0x22, 0x6b, 0x0a, 0x15,
	0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x46, 0x61, 0x63, 0x69, 0x6c, 0x69, 0x74, 0x79, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1d, 0x0a, 0x0a, 0x73, 0x63, 0x6f, 0x70, 0x65, 0x5f, 0x75,
	0x75, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x73, 0x63, 0x6f, 0x70, 0x65,
	0x55, 0x75, 0x69, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x1f, 0x0a, 0x0b, 0x63, 0x6f, 0x6e, 0x66,
	0x69, 0x67, 0x5f, 0x79, 0x61, 0x6d, 0x6c, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x63,
	0x6f, 0x6e, 0x66, 0x69, 0x67, 0x59, 0x61, 0x6d, 0x6c, 0x22, 0x89, 0x01, 0x0a, 0x15, 0x44, 0x65,
	0x6c, 0x65, 0x74, 0x65, 0x46, 0x61, 0x63, 0x69, 0x6c, 0x69, 0x74, 0x79, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x12, 0x1d, 0x0a, 0x0a, 0x73, 0x63, 0x6f, 0x70, 0x65, 0x5f, 0x75, 0x75, 0x69,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x73, 0x63, 0x6f, 0x70, 0x65, 0x55, 0x75,
	0x69, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x27, 0x0a, 0x0f, 0x64, 0x65, 0x73, 0x74, 0x72, 0x6f,
	0x79, 0x5f, 0x73, 0x74, 0x6f, 0x72, 0x61, 0x67, 0x65, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x08, 0x52,
	0x0e, 0x64, 0x65, 0x73, 0x74, 0x72, 0x6f, 0x79, 0x53, 0x74, 0x6f, 0x72, 0x61, 0x67, 0x65, 0x12,
	0x14, 0x0a, 0x05, 0x66, 0x6f, 0x72, 0x63, 0x65, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x08, 0x52, 0x05,
	0x66, 0x6f, 0x72, 0x63, 0x65, 0x22, 0x4a, 0x0a, 0x15, 0x45, 0x78, 0x70, 0x6f, 0x73, 0x65, 0x46,
	0x61, 0x63, 0x69, 0x6c, 0x69, 0x74, 0x79, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1d,
	0x0a, 0x0a, 0x73, 0x63, 0x6f, 0x70, 0x65, 0x5f, 0x75, 0x75, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x09, 0x73, 0x63, 0x6f, 0x70, 0x65, 0x55, 0x75, 0x69, 0x64, 0x12, 0x12, 0x0a,
	0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d,
	0x65, 0x22, 0xa9, 0x01, 0x0a, 0x17, 0x41, 0x64, 0x64, 0x46, 0x61, 0x63, 0x69, 0x6c, 0x69, 0x74,
	0x79, 0x55, 0x6e, 0x69, 0x74, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1d, 0x0a,
	0x0a, 0x73, 0x63, 0x6f, 0x70, 0x65, 0x5f, 0x75, 0x75, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x09, 0x73, 0x63, 0x6f, 0x70, 0x65, 0x55, 0x75, 0x69, 0x64, 0x12, 0x12, 0x0a, 0x04,
	0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65,
	0x12, 0x16, 0x0a, 0x06, 0x6e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x06, 0x6e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x12, 0x43, 0x0a, 0x0a, 0x70, 0x6c, 0x61, 0x63,
	0x65, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x18, 0x15, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x23, 0x2e, 0x6f,
	0x70, 0x65, 0x6e, 0x68, 0x64, 0x63, 0x2e, 0x6e, 0x65, 0x78, 0x75, 0x73, 0x2e, 0x76, 0x31, 0x2e,
	0x4d, 0x61, 0x63, 0x68, 0x69, 0x6e, 0x65, 0x2e, 0x50, 0x6c, 0x61, 0x63, 0x65, 0x6d, 0x65, 0x6e,
	0x74, 0x52, 0x0a, 0x70, 0x6c, 0x61, 0x63, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x22, 0x30, 0x0a,
	0x18, 0x41, 0x64, 0x64, 0x46, 0x61, 0x63, 0x69, 0x6c, 0x69, 0x74, 0x79, 0x55, 0x6e, 0x69, 0x74,
	0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x75, 0x6e, 0x69,
	0x74, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x09, 0x52, 0x05, 0x75, 0x6e, 0x69, 0x74, 0x73, 0x22,
	0x58, 0x0a, 0x12, 0x4c, 0x69, 0x73, 0x74, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1d, 0x0a, 0x0a, 0x73, 0x63, 0x6f, 0x70, 0x65, 0x5f, 0x75,
	0x75, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x73, 0x63, 0x6f, 0x70, 0x65,
	0x55, 0x75, 0x69, 0x64, 0x12, 0x23, 0x0a, 0x0d, 0x66, 0x61, 0x63, 0x69, 0x6c, 0x69, 0x74, 0x79,
	0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x66, 0x61, 0x63,
	0x69, 0x6c, 0x69, 0x74, 0x79, 0x4e, 0x61, 0x6d, 0x65, 0x22, 0x52, 0x0a, 0x13, 0x4c, 0x69, 0x73,
	0x74, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x12, 0x3b, 0x0a, 0x07, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28,
	0x0b, 0x32, 0x21, 0x2e, 0x6f, 0x70, 0x65, 0x6e, 0x68, 0x64, 0x63, 0x2e, 0x6e, 0x65, 0x78, 0x75,
	0x73, 0x2e, 0x76, 0x31, 0x2e, 0x46, 0x61, 0x63, 0x69, 0x6c, 0x69, 0x74, 0x79, 0x2e, 0x41, 0x63,
	0x74, 0x69, 0x6f, 0x6e, 0x52, 0x07, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x22, 0x11, 0x0a,
	0x0f, 0x44, 0x6f, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x22, 0x13, 0x0a, 0x11, 0x4c, 0x69, 0x73, 0x74, 0x43, 0x68, 0x61, 0x72, 0x6d, 0x73, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x22, 0x4e, 0x0a, 0x12, 0x4c, 0x69, 0x73, 0x74, 0x43, 0x68, 0x61,
	0x72, 0x6d, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x38, 0x0a, 0x06, 0x63,
	0x68, 0x61, 0x72, 0x6d, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x20, 0x2e, 0x6f, 0x70,
	0x65, 0x6e, 0x68, 0x64, 0x63, 0x2e, 0x6e, 0x65, 0x78, 0x75, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x46,
	0x61, 0x63, 0x69, 0x6c, 0x69, 0x74, 0x79, 0x2e, 0x43, 0x68, 0x61, 0x72, 0x6d, 0x52, 0x06, 0x63,
	0x68, 0x61, 0x72, 0x6d, 0x73, 0x22, 0x25, 0x0a, 0x0f, 0x47, 0x65, 0x74, 0x43, 0x68, 0x61, 0x72,
	0x6d, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x22, 0x2d, 0x0a, 0x17,
	0x47, 0x65, 0x74, 0x43, 0x68, 0x61, 0x72, 0x6d, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x22, 0x2f, 0x0a, 0x19, 0x4c,
	0x69, 0x73, 0x74, 0x43, 0x68, 0x61, 0x72, 0x6d, 0x41, 0x72, 0x74, 0x69, 0x66, 0x61, 0x63, 0x74,
	0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x22, 0x65, 0x0a, 0x1a,
	0x4c, 0x69, 0x73, 0x74, 0x43, 0x68, 0x61, 0x72, 0x6d, 0x41, 0x72, 0x74, 0x69, 0x66, 0x61, 0x63,
	0x74, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x47, 0x0a, 0x09, 0x61, 0x72,
	0x74, 0x69, 0x66, 0x61, 0x63, 0x74, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x29, 0x2e,
	0x6f, 0x70, 0x65, 0x6e, 0x68, 0x64, 0x63, 0x2e, 0x6e, 0x65, 0x78, 0x75, 0x73, 0x2e, 0x76, 0x31,
	0x2e, 0x46, 0x61, 0x63, 0x69, 0x6c, 0x69, 0x74, 0x79, 0x2e, 0x43, 0x68, 0x61, 0x72, 0x6d, 0x2e,
	0x41, 0x72, 0x74, 0x69, 0x66, 0x61, 0x63, 0x74, 0x52, 0x09, 0x61, 0x72, 0x74, 0x69, 0x66, 0x61,
	0x63, 0x74, 0x73, 0x22, 0x5d, 0x0a, 0x17, 0x4c, 0x69, 0x73, 0x74, 0x41, 0x70, 0x70, 0x6c, 0x69,
	0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1d,
	0x0a, 0x0a, 0x73, 0x63, 0x6f, 0x70, 0x65, 0x5f, 0x75, 0x75, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x09, 0x73, 0x63, 0x6f, 0x70, 0x65, 0x55, 0x75, 0x69, 0x64, 0x12, 0x23, 0x0a,
	0x0d, 0x66, 0x61, 0x63, 0x69, 0x6c, 0x69, 0x74, 0x79, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x66, 0x61, 0x63, 0x69, 0x6c, 0x69, 0x74, 0x79, 0x4e, 0x61,
	0x6d, 0x65, 0x22, 0x5d, 0x0a, 0x18, 0x4c, 0x69, 0x73, 0x74, 0x41, 0x70, 0x70, 0x6c, 0x69, 0x63,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x41,
	0x0a, 0x0c, 0x61, 0x70, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0x01,
	0x20, 0x03, 0x28, 0x0b, 0x32, 0x1d, 0x2e, 0x6f, 0x70, 0x65, 0x6e, 0x68, 0x64, 0x63, 0x2e, 0x6e,
	0x65, 0x78, 0x75, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x41, 0x70, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x52, 0x0c, 0x61, 0x70, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x73, 0x22, 0x8d, 0x01, 0x0a, 0x15, 0x47, 0x65, 0x74, 0x41, 0x70, 0x70, 0x6c, 0x69, 0x63, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1d, 0x0a, 0x0a, 0x73,
	0x63, 0x6f, 0x70, 0x65, 0x5f, 0x75, 0x75, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x09, 0x73, 0x63, 0x6f, 0x70, 0x65, 0x55, 0x75, 0x69, 0x64, 0x12, 0x23, 0x0a, 0x0d, 0x66, 0x61,
	0x63, 0x69, 0x6c, 0x69, 0x74, 0x79, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0c, 0x66, 0x61, 0x63, 0x69, 0x6c, 0x69, 0x74, 0x79, 0x4e, 0x61, 0x6d, 0x65, 0x12,
	0x1c, 0x0a, 0x09, 0x6e, 0x61, 0x6d, 0x65, 0x73, 0x70, 0x61, 0x63, 0x65, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x09, 0x6e, 0x61, 0x6d, 0x65, 0x73, 0x70, 0x61, 0x63, 0x65, 0x12, 0x12, 0x0a,
	0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d,
	0x65, 0x22, 0x15, 0x0a, 0x13, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x6c, 0x65, 0x61, 0x73, 0x65,
	0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x22, 0x59, 0x0a, 0x14, 0x4c, 0x69, 0x73, 0x74,
	0x52, 0x65, 0x6c, 0x65, 0x61, 0x73, 0x65, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x12, 0x41, 0x0a, 0x08, 0x72, 0x65, 0x6c, 0x65, 0x61, 0x73, 0x65, 0x73, 0x18, 0x01, 0x20, 0x03,
	0x28, 0x0b, 0x32, 0x25, 0x2e, 0x6f, 0x70, 0x65, 0x6e, 0x68, 0x64, 0x63, 0x2e, 0x6e, 0x65, 0x78,
	0x75, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x41, 0x70, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x2e, 0x52, 0x65, 0x6c, 0x65, 0x61, 0x73, 0x65, 0x52, 0x08, 0x72, 0x65, 0x6c, 0x65, 0x61,
	0x73, 0x65, 0x73, 0x22, 0xe3, 0x01, 0x0a, 0x14, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x52, 0x65,
	0x6c, 0x65, 0x61, 0x73, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1d, 0x0a, 0x0a,
	0x73, 0x63, 0x6f, 0x70, 0x65, 0x5f, 0x75, 0x75, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x09, 0x73, 0x63, 0x6f, 0x70, 0x65, 0x55, 0x75, 0x69, 0x64, 0x12, 0x23, 0x0a, 0x0d, 0x66,
	0x61, 0x63, 0x69, 0x6c, 0x69, 0x74, 0x79, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0c, 0x66, 0x61, 0x63, 0x69, 0x6c, 0x69, 0x74, 0x79, 0x4e, 0x61, 0x6d, 0x65,
	0x12, 0x1c, 0x0a, 0x09, 0x6e, 0x61, 0x6d, 0x65, 0x73, 0x70, 0x61, 0x63, 0x65, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x09, 0x6e, 0x61, 0x6d, 0x65, 0x73, 0x70, 0x61, 0x63, 0x65, 0x12, 0x12,
	0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61,
	0x6d, 0x65, 0x12, 0x17, 0x0a, 0x07, 0x64, 0x72, 0x79, 0x5f, 0x72, 0x75, 0x6e, 0x18, 0x05, 0x20,
	0x01, 0x28, 0x08, 0x52, 0x06, 0x64, 0x72, 0x79, 0x52, 0x75, 0x6e, 0x12, 0x1b, 0x0a, 0x09, 0x63,
	0x68, 0x61, 0x72, 0x74, 0x5f, 0x72, 0x65, 0x66, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08,
	0x63, 0x68, 0x61, 0x72, 0x74, 0x52, 0x65, 0x66, 0x12, 0x1f, 0x0a, 0x0b, 0x76, 0x61, 0x6c, 0x75,
	0x65, 0x73, 0x5f, 0x79, 0x61, 0x6d, 0x6c, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x76,
	0x61, 0x6c, 0x75, 0x65, 0x73, 0x59, 0x61, 0x6d, 0x6c, 0x22, 0xe3, 0x01, 0x0a, 0x14, 0x55, 0x70,
	0x64, 0x61, 0x74, 0x65, 0x52, 0x65, 0x6c, 0x65, 0x61, 0x73, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x12, 0x1d, 0x0a, 0x0a, 0x73, 0x63, 0x6f, 0x70, 0x65, 0x5f, 0x75, 0x75, 0x69, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x73, 0x63, 0x6f, 0x70, 0x65, 0x55, 0x75, 0x69,
	0x64, 0x12, 0x23, 0x0a, 0x0d, 0x66, 0x61, 0x63, 0x69, 0x6c, 0x69, 0x74, 0x79, 0x5f, 0x6e, 0x61,
	0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x66, 0x61, 0x63, 0x69, 0x6c, 0x69,
	0x74, 0x79, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x6e, 0x61, 0x6d, 0x65, 0x73, 0x70,
	0x61, 0x63, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x6e, 0x61, 0x6d, 0x65, 0x73,
	0x70, 0x61, 0x63, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x17, 0x0a, 0x07, 0x64, 0x72, 0x79, 0x5f,
	0x72, 0x75, 0x6e, 0x18, 0x05, 0x20, 0x01, 0x28, 0x08, 0x52, 0x06, 0x64, 0x72, 0x79, 0x52, 0x75,
	0x6e, 0x12, 0x1b, 0x0a, 0x09, 0x63, 0x68, 0x61, 0x72, 0x74, 0x5f, 0x72, 0x65, 0x66, 0x18, 0x0b,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x63, 0x68, 0x61, 0x72, 0x74, 0x52, 0x65, 0x66, 0x12, 0x1f,
	0x0a, 0x0b, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x73, 0x5f, 0x79, 0x61, 0x6d, 0x6c, 0x18, 0x0c, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0a, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x73, 0x59, 0x61, 0x6d, 0x6c, 0x22,
	0xa5, 0x01, 0x0a, 0x14, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x52, 0x65, 0x6c, 0x65, 0x61, 0x73,
	0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1d, 0x0a, 0x0a, 0x73, 0x63, 0x6f, 0x70,
	0x65, 0x5f, 0x75, 0x75, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x73, 0x63,
	0x6f, 0x70, 0x65, 0x55, 0x75, 0x69, 0x64, 0x12, 0x23, 0x0a, 0x0d, 0x66, 0x61, 0x63, 0x69, 0x6c,
	0x69, 0x74, 0x79, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c,
	0x66, 0x61, 0x63, 0x69, 0x6c, 0x69, 0x74, 0x79, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x1c, 0x0a, 0x09,
	0x6e, 0x61, 0x6d, 0x65, 0x73, 0x70, 0x61, 0x63, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x09, 0x6e, 0x61, 0x6d, 0x65, 0x73, 0x70, 0x61, 0x63, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61,
	0x6d, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x17,
	0x0a, 0x07, 0x64, 0x72, 0x79, 0x5f, 0x72, 0x75, 0x6e, 0x18, 0x05, 0x20, 0x01, 0x28, 0x08, 0x52,
	0x06, 0x64, 0x72, 0x79, 0x52, 0x75, 0x6e, 0x22, 0xa7, 0x01, 0x0a, 0x16, 0x52, 0x6f, 0x6c, 0x6c,
	0x62, 0x61, 0x63, 0x6b, 0x52, 0x65, 0x6c, 0x65, 0x61, 0x73, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x12, 0x1d, 0x0a, 0x0a, 0x73, 0x63, 0x6f, 0x70, 0x65, 0x5f, 0x75, 0x75, 0x69, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x73, 0x63, 0x6f, 0x70, 0x65, 0x55, 0x75, 0x69,
	0x64, 0x12, 0x23, 0x0a, 0x0d, 0x66, 0x61, 0x63, 0x69, 0x6c, 0x69, 0x74, 0x79, 0x5f, 0x6e, 0x61,
	0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x66, 0x61, 0x63, 0x69, 0x6c, 0x69,
	0x74, 0x79, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x6e, 0x61, 0x6d, 0x65, 0x73, 0x70,
	0x61, 0x63, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x6e, 0x61, 0x6d, 0x65, 0x73,
	0x70, 0x61, 0x63, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x17, 0x0a, 0x07, 0x64, 0x72, 0x79, 0x5f,
	0x72, 0x75, 0x6e, 0x18, 0x05, 0x20, 0x01, 0x28, 0x08, 0x52, 0x06, 0x64, 0x72, 0x79, 0x52, 0x75,
	0x6e, 0x22, 0x13, 0x0a, 0x11, 0x4c, 0x69, 0x73, 0x74, 0x43, 0x68, 0x61, 0x72, 0x74, 0x73, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x22, 0x51, 0x0a, 0x12, 0x4c, 0x69, 0x73, 0x74, 0x43, 0x68,
	0x61, 0x72, 0x74, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x3b, 0x0a, 0x06,
	0x63, 0x68, 0x61, 0x72, 0x74, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x23, 0x2e, 0x6f,
	0x70, 0x65, 0x6e, 0x68, 0x64, 0x63, 0x2e, 0x6e, 0x65, 0x78, 0x75, 0x73, 0x2e, 0x76, 0x31, 0x2e,
	0x41, 0x70, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x43, 0x68, 0x61, 0x72,
	0x74, 0x52, 0x06, 0x63, 0x68, 0x61, 0x72, 0x74, 0x73, 0x22, 0x25, 0x0a, 0x0f, 0x47, 0x65, 0x74,
	0x43, 0x68, 0x61, 0x72, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x12, 0x0a, 0x04,
	0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65,
	0x22, 0x36, 0x0a, 0x17, 0x47, 0x65, 0x74, 0x43, 0x68, 0x61, 0x72, 0x74, 0x4d, 0x65, 0x74, 0x61,
	0x64, 0x61, 0x74, 0x61, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1b, 0x0a, 0x09, 0x63,
	0x68, 0x61, 0x72, 0x74, 0x5f, 0x72, 0x65, 0x66, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08,
	0x63, 0x68, 0x61, 0x72, 0x74, 0x52, 0x65, 0x66, 0x22, 0x11, 0x0a, 0x0f, 0x4c, 0x69, 0x73, 0x74,
	0x54, 0x61, 0x67, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x22, 0x3d, 0x0a, 0x10, 0x4c,
	0x69, 0x73, 0x74, 0x54, 0x61, 0x67, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12,
	0x29, 0x0a, 0x04, 0x74, 0x61, 0x67, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x15, 0x2e,
	0x6f, 0x70, 0x65, 0x6e, 0x68, 0x64, 0x63, 0x2e, 0x6e, 0x65, 0x78, 0x75, 0x73, 0x2e, 0x76, 0x31,
	0x2e, 0x54, 0x61, 0x67, 0x52, 0x04, 0x74, 0x61, 0x67, 0x73, 0x22, 0x23, 0x0a, 0x0d, 0x47, 0x65,
	0x74, 0x54, 0x61, 0x67, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x6e,
	0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x22,
	0x40, 0x0a, 0x10, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x54, 0x61, 0x67, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x63, 0x6f, 0x6d, 0x6d, 0x65,
	0x6e, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x63, 0x6f, 0x6d, 0x6d, 0x65, 0x6e,
	0x74, 0x22, 0x26, 0x0a, 0x10, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x54, 0x61, 0x67, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x22, 0x5f, 0x0a, 0x19, 0x4c, 0x69, 0x73,
	0x74, 0x53, 0x74, 0x6f, 0x72, 0x61, 0x67, 0x65, 0x43, 0x6c, 0x61, 0x73, 0x73, 0x65, 0x73, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1d, 0x0a, 0x0a, 0x73, 0x63, 0x6f, 0x70, 0x65, 0x5f,
	0x75, 0x75, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x73, 0x63, 0x6f, 0x70,
	0x65, 0x55, 0x75, 0x69, 0x64, 0x12, 0x23, 0x0a, 0x0d, 0x66, 0x61, 0x63, 0x69, 0x6c, 0x69, 0x74,
	0x79, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x66, 0x61,
	0x63, 0x69, 0x6c, 0x69, 0x74, 0x79, 0x4e, 0x61, 0x6d, 0x65, 0x22, 0x65, 0x0a, 0x1a, 0x4c, 0x69,
	0x73, 0x74, 0x53, 0x74, 0x6f, 0x72, 0x61, 0x67, 0x65, 0x43, 0x6c, 0x61, 0x73, 0x73, 0x65, 0x73,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x47, 0x0a, 0x0f, 0x73, 0x74, 0x6f, 0x72,
	0x61, 0x67, 0x65, 0x5f, 0x63, 0x6c, 0x61, 0x73, 0x73, 0x65, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28,
	0x0b, 0x32, 0x1e, 0x2e, 0x6f, 0x70, 0x65, 0x6e, 0x68, 0x64, 0x63, 0x2e, 0x6e, 0x65, 0x78, 0x75,
	0x73, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x74, 0x6f, 0x72, 0x61, 0x67, 0x65, 0x43, 0x6c, 0x61, 0x73,
	0x73, 0x52, 0x0e, 0x73, 0x74, 0x6f, 0x72, 0x61, 0x67, 0x65, 0x43, 0x6c, 0x61, 0x73, 0x73, 0x65,
	0x73, 0x22, 0xa9, 0x01, 0x0a, 0x19, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x53, 0x74, 0x6f, 0x72,
	0x61, 0x67, 0x65, 0x43, 0x6c, 0x61, 0x73, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12,
	0x3f, 0x0a, 0x0a, 0x6b, 0x75, 0x62, 0x65, 0x72, 0x6e, 0x65, 0x74, 0x65, 0x73, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x1f, 0x2e, 0x6f, 0x70, 0x65, 0x6e, 0x68, 0x64, 0x63, 0x2e, 0x6e, 0x65,
	0x78, 0x75, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x46, 0x61, 0x63, 0x69, 0x6c, 0x69, 0x74, 0x79, 0x2e,
	0x49, 0x6e, 0x66, 0x6f, 0x52, 0x0a, 0x6b, 0x75, 0x62, 0x65, 0x72, 0x6e, 0x65, 0x74, 0x65, 0x73,
	0x12, 0x33, 0x0a, 0x04, 0x63, 0x65, 0x70, 0x68, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1f,
	0x2e, 0x6f, 0x70, 0x65, 0x6e, 0x68, 0x64, 0x63, 0x2e, 0x6e, 0x65, 0x78, 0x75, 0x73, 0x2e, 0x76,
	0x31, 0x2e, 0x46, 0x61, 0x63, 0x69, 0x6c, 0x69, 0x74, 0x79, 0x2e, 0x49, 0x6e, 0x66, 0x6f, 0x52,
	0x04, 0x63, 0x65, 0x70, 0x68, 0x12, 0x16, 0x0a, 0x06, 0x70, 0x72, 0x65, 0x66, 0x69, 0x78, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x70, 0x72, 0x65, 0x66, 0x69, 0x78, 0x2a, 0x7a, 0x0a,
	0x0a, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x4c, 0x65, 0x76, 0x65, 0x6c, 0x12, 0x13, 0x0a, 0x0f, 0x45,
	0x52, 0x52, 0x4f, 0x52, 0x4c, 0x45, 0x56, 0x45, 0x4c, 0x5f, 0x49, 0x4e, 0x46, 0x4f, 0x10, 0x00,
	0x12, 0x12, 0x0a, 0x0e, 0x45, 0x52, 0x52, 0x4f, 0x52, 0x4c, 0x45, 0x56, 0x45, 0x4c, 0x5f, 0x4c,
	0x4f, 0x57, 0x10, 0x01, 0x12, 0x15, 0x0a, 0x11, 0x45, 0x52, 0x52, 0x4f, 0x52, 0x4c, 0x45, 0x56,
	0x45, 0x4c, 0x5f, 0x4d, 0x45, 0x44, 0x49, 0x55, 0x4d, 0x10, 0x02, 0x12, 0x13, 0x0a, 0x0f, 0x45,
	0x52, 0x52, 0x4f, 0x52, 0x4c, 0x45, 0x56, 0x45, 0x4c, 0x5f, 0x48, 0x49, 0x47, 0x48, 0x10, 0x03,
	0x12, 0x17, 0x0a, 0x13, 0x45, 0x52, 0x52, 0x4f, 0x52, 0x4c, 0x45, 0x56, 0x45, 0x4c, 0x5f, 0x43,
	0x52, 0x49, 0x54, 0x49, 0x43, 0x41, 0x4c, 0x10, 0x04, 0x32, 0x95, 0x2d, 0x0a, 0x05, 0x4e, 0x65,
	0x78, 0x75, 0x73, 0x12, 0x6c, 0x0a, 0x11, 0x56, 0x65, 0x72, 0x69, 0x66, 0x79, 0x45, 0x6e, 0x76,
	0x69, 0x72, 0x6f, 0x6e, 0x6d, 0x65, 0x6e, 0x74, 0x12, 0x2a, 0x2e, 0x6f, 0x70, 0x65, 0x6e, 0x68,
	0x64, 0x63, 0x2e, 0x6e, 0x65, 0x78, 0x75, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x56, 0x65, 0x72, 0x69,
	0x66, 0x79, 0x45, 0x6e, 0x76, 0x69, 0x72, 0x6f, 0x6e, 0x6d, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x1a, 0x2b, 0x2e, 0x6f, 0x70, 0x65, 0x6e, 0x68, 0x64, 0x63, 0x2e, 0x6e,
	0x65, 0x78, 0x75, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x56, 0x65, 0x72, 0x69, 0x66, 0x79, 0x45, 0x6e,
	0x76, 0x69, 0x72, 0x6f, 0x6e, 0x6d, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x12, 0x57, 0x0a, 0x0a, 0x4c, 0x69, 0x73, 0x74, 0x43, 0x65, 0x70, 0x68, 0x65, 0x73, 0x12,
	0x23, 0x2e, 0x6f, 0x70, 0x65, 0x6e, 0x68, 0x64, 0x63, 0x2e, 0x6e, 0x65, 0x78, 0x75, 0x73, 0x2e,
	0x76, 0x31, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x43, 0x65, 0x70, 0x68, 0x65, 0x73, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x1a, 0x24, 0x2e, 0x6f, 0x70, 0x65, 0x6e, 0x68, 0x64, 0x63, 0x2e, 0x6e,
	0x65, 0x78, 0x75, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x43, 0x65, 0x70, 0x68,
	0x65, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x52, 0x0a, 0x0a, 0x43, 0x72,
	0x65, 0x61, 0x74, 0x65, 0x43, 0x65, 0x70, 0x68, 0x12, 0x23, 0x2e, 0x6f, 0x70, 0x65, 0x6e, 0x68,
	0x64, 0x63, 0x2e, 0x6e, 0x65, 0x78, 0x75, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x72, 0x65, 0x61,
	0x74, 0x65, 0x43, 0x65, 0x70, 0x68, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1f, 0x2e,
	0x6f, 0x70, 0x65, 0x6e, 0x68, 0x64, 0x63, 0x2e, 0x6e, 0x65, 0x78, 0x75, 0x73, 0x2e, 0x76, 0x31,
	0x2e, 0x46, 0x61, 0x63, 0x69, 0x6c, 0x69, 0x74, 0x79, 0x2e, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x4d,
	0x0a, 0x0c, 0x41, 0x64, 0x64, 0x43, 0x65, 0x70, 0x68, 0x55, 0x6e, 0x69, 0x74, 0x73, 0x12, 0x25,
	0x2e, 0x6f, 0x70, 0x65, 0x6e, 0x68, 0x64, 0x63, 0x2e, 0x6e, 0x65, 0x78, 0x75, 0x73, 0x2e, 0x76,
	0x31, 0x2e, 0x41, 0x64, 0x64, 0x43, 0x65, 0x70, 0x68, 0x55, 0x6e, 0x69, 0x74, 0x73, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x12, 0x69, 0x0a,
	0x10, 0x4c, 0x69, 0x73, 0x74, 0x4b, 0x75, 0x62, 0x65, 0x72, 0x6e, 0x65, 0x74, 0x65, 0x73, 0x65,
	0x73, 0x12, 0x29, 0x2e, 0x6f, 0x70, 0x65, 0x6e, 0x68, 0x64, 0x63, 0x2e, 0x6e, 0x65, 0x78, 0x75,
	0x73, 0x2e, 0x76, 0x31, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x4b, 0x75, 0x62, 0x65, 0x72, 0x6e, 0x65,
	0x74, 0x65, 0x73, 0x65, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x2a, 0x2e, 0x6f,
	0x70, 0x65, 0x6e, 0x68, 0x64, 0x63, 0x2e, 0x6e, 0x65, 0x78, 0x75, 0x73, 0x2e, 0x76, 0x31, 0x2e,
	0x4c, 0x69, 0x73, 0x74, 0x4b, 0x75, 0x62, 0x65, 0x72, 0x6e, 0x65, 0x74, 0x65, 0x73, 0x65, 0x73,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x5e, 0x0a, 0x10, 0x43, 0x72, 0x65, 0x61,
	0x74, 0x65, 0x4b, 0x75, 0x62, 0x65, 0x72, 0x6e, 0x65, 0x74, 0x65, 0x73, 0x12, 0x29, 0x2e, 0x6f,
	0x70, 0x65, 0x6e, 0x68, 0x64, 0x63, 0x2e, 0x6e, 0x65, 0x78, 0x75, 0x73, 0x2e, 0x76, 0x31, 0x2e,
	0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x4b, 0x75, 0x62, 0x65, 0x72, 0x6e, 0x65, 0x74, 0x65, 0x73,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1f, 0x2e, 0x6f, 0x70, 0x65, 0x6e, 0x68, 0x64,
	0x63, 0x2e, 0x6e, 0x65, 0x78, 0x75, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x46, 0x61, 0x63, 0x69, 0x6c,
	0x69, 0x74, 0x79, 0x2e, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x59, 0x0a, 0x12, 0x41, 0x64, 0x64, 0x4b,
	0x75, 0x62, 0x65, 0x72, 0x6e, 0x65, 0x74, 0x65, 0x73, 0x55, 0x6e, 0x69, 0x74, 0x73, 0x12, 0x2b,
	0x2e, 0x6f, 0x70, 0x65, 0x6e, 0x68, 0x64, 0x63, 0x2e, 0x6e, 0x65, 0x78, 0x75, 0x73, 0x2e, 0x76,
	0x31, 0x2e, 0x41, 0x64, 0x64, 0x4b, 0x75, 0x62, 0x65, 0x72, 0x6e, 0x65, 0x74, 0x65, 0x73, 0x55,
	0x6e, 0x69, 0x74, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x16, 0x2e, 0x67, 0x6f,
	0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d,
	0x70, 0x74, 0x79, 0x12, 0x5e, 0x0a, 0x10, 0x47, 0x65, 0x74, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67,
	0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x29, 0x2e, 0x6f, 0x70, 0x65, 0x6e, 0x68, 0x64,
	0x63, 0x2e, 0x6e, 0x65, 0x78, 0x75, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x43, 0x6f,
	0x6e, 0x66, 0x69, 0x67, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x1a, 0x1f, 0x2e, 0x6f, 0x70, 0x65, 0x6e, 0x68, 0x64, 0x63, 0x2e, 0x6e, 0x65, 0x78,
	0x75, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x75, 0x72, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x12, 0x66, 0x0a, 0x0f, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x4e, 0x54, 0x50,
	0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x12, 0x28, 0x2e, 0x6f, 0x70, 0x65, 0x6e, 0x68, 0x64, 0x63,
	0x2e, 0x6e, 0x65, 0x78, 0x75, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65,
	0x4e, 0x54, 0x50, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x1a, 0x29, 0x2e, 0x6f, 0x70, 0x65, 0x6e, 0x68, 0x64, 0x63, 0x2e, 0x6e, 0x65, 0x78, 0x75, 0x73,
	0x2e, 0x76, 0x31, 0x2e, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x2e, 0x4e, 0x54, 0x50, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x12, 0x7e, 0x0a, 0x17, 0x55,
	0x70, 0x64, 0x61, 0x74, 0x65, 0x50, 0x61, 0x63, 0x6b, 0x61, 0x67, 0x65, 0x52, 0x65, 0x70, 0x6f,
	0x73, 0x69, 0x74, 0x6f, 0x72, 0x79, 0x12, 0x30, 0x2e, 0x6f, 0x70, 0x65, 0x6e, 0x68, 0x64, 0x63,
	0x2e, 0x6e, 0x65, 0x78, 0x75, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65,
	0x50, 0x61, 0x63, 0x6b, 0x61, 0x67, 0x65, 0x52, 0x65, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x6f, 0x72,
	0x79, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x31, 0x2e, 0x6f, 0x70, 0x65, 0x6e, 0x68,
	0x64, 0x63, 0x2e, 0x6e, 0x65, 0x78, 0x75, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x6f, 0x6e, 0x66,
	0x69, 0x67, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x50, 0x61, 0x63, 0x6b, 0x61, 0x67,
	0x65, 0x52, 0x65, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x6f, 0x72, 0x79, 0x12, 0x66, 0x0a, 0x0f, 0x43,
	0x72, 0x65, 0x61, 0x74, 0x65, 0x42, 0x6f, 0x6f, 0x74, 0x49, 0x6d, 0x61, 0x67, 0x65, 0x12, 0x28,
	0x2e, 0x6f, 0x70, 0x65, 0x6e, 0x68, 0x64, 0x63, 0x2e, 0x6e, 0x65, 0x78, 0x75, 0x73, 0x2e, 0x76,
	0x31, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x42, 0x6f, 0x6f, 0x74, 0x49, 0x6d, 0x61, 0x67,
	0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x29, 0x2e, 0x6f, 0x70, 0x65, 0x6e, 0x68,
	0x64, 0x63, 0x2e, 0x6e, 0x65, 0x78, 0x75, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x6f, 0x6e, 0x66,
	0x69, 0x67, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x42, 0x6f, 0x6f, 0x74, 0x49, 0x6d,
	0x61, 0x67, 0x65, 0x12, 0x5b, 0x0a, 0x13, 0x53, 0x65, 0x74, 0x44, 0x65, 0x66, 0x61, 0x75, 0x6c,
	0x74, 0x42, 0x6f, 0x6f, 0x74, 0x49, 0x6d, 0x61, 0x67, 0x65, 0x12, 0x2c, 0x2e, 0x6f, 0x70, 0x65,
	0x6e, 0x68, 0x64, 0x63, 0x2e, 0x6e, 0x65, 0x78, 0x75, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x65,
	0x74, 0x44, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x42, 0x6f, 0x6f, 0x74, 0x49, 0x6d, 0x61, 0x67,
	0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c,
	0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79,
	0x12, 0x55, 0x0a, 0x10, 0x49, 0x6d, 0x70, 0x6f, 0x72, 0x74, 0x42, 0x6f, 0x6f, 0x74, 0x49, 0x6d,
	0x61, 0x67, 0x65, 0x73, 0x12, 0x29, 0x2e, 0x6f, 0x70, 0x65, 0x6e, 0x68, 0x64, 0x63, 0x2e, 0x6e,
	0x65, 0x78, 0x75, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x49, 0x6d, 0x70, 0x6f, 0x72, 0x74, 0x42, 0x6f,
	0x6f, 0x74, 0x49, 0x6d, 0x61, 0x67, 0x65, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a,
	0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75,
	0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x12, 0x78, 0x0a, 0x15, 0x49, 0x73, 0x49, 0x6d, 0x70,
	0x6f, 0x72, 0x74, 0x69, 0x6e, 0x67, 0x42, 0x6f, 0x6f, 0x74, 0x49, 0x6d, 0x61, 0x67, 0x65, 0x73,
	0x12, 0x2e, 0x2e, 0x6f, 0x70, 0x65, 0x6e, 0x68, 0x64, 0x63, 0x2e, 0x6e, 0x65, 0x78, 0x75, 0x73,
	0x2e, 0x76, 0x31, 0x2e, 0x49, 0x73, 0x49, 0x6d, 0x70, 0x6f, 0x72, 0x74, 0x69, 0x6e, 0x67, 0x42,
	0x6f, 0x6f, 0x74, 0x49, 0x6d, 0x61, 0x67, 0x65, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x1a, 0x2f, 0x2e, 0x6f, 0x70, 0x65, 0x6e, 0x68, 0x64, 0x63, 0x2e, 0x6e, 0x65, 0x78, 0x75, 0x73,
	0x2e, 0x76, 0x31, 0x2e, 0x49, 0x73, 0x49, 0x6d, 0x70, 0x6f, 0x72, 0x74, 0x69, 0x6e, 0x67, 0x42,
	0x6f, 0x6f, 0x74, 0x49, 0x6d, 0x61, 0x67, 0x65, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x12, 0x7e, 0x0a, 0x17, 0x4c, 0x69, 0x73, 0x74, 0x42, 0x6f, 0x6f, 0x74, 0x49, 0x6d, 0x61,
	0x67, 0x65, 0x53, 0x65, 0x6c, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x12, 0x30, 0x2e, 0x6f,
	0x70, 0x65, 0x6e, 0x68, 0x64, 0x63, 0x2e, 0x6e, 0x65, 0x78, 0x75, 0x73, 0x2e, 0x76, 0x31, 0x2e,
	0x4c, 0x69, 0x73, 0x74, 0x42, 0x6f, 0x6f, 0x74, 0x49, 0x6d, 0x61, 0x67, 0x65, 0x53, 0x65, 0x6c,
	0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x31,
	0x2e, 0x6f, 0x70, 0x65, 0x6e, 0x68, 0x64, 0x63, 0x2e, 0x6e, 0x65, 0x78, 0x75, 0x73, 0x2e, 0x76,
	0x31, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x42, 0x6f, 0x6f, 0x74, 0x49, 0x6d, 0x61, 0x67, 0x65, 0x53,
	0x65, 0x6c, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x12, 0x5d, 0x0a, 0x0c, 0x4c, 0x69, 0x73, 0x74, 0x4e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b,
	0x73, 0x12, 0x25, 0x2e, 0x6f, 0x70, 0x65, 0x6e, 0x68, 0x64, 0x63, 0x2e, 0x6e, 0x65, 0x78, 0x75,
	0x73, 0x2e, 0x76, 0x31, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x4e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b,
	0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x26, 0x2e, 0x6f, 0x70, 0x65, 0x6e, 0x68,
	0x64, 0x63, 0x2e, 0x6e, 0x65, 0x78, 0x75, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x4c, 0x69, 0x73, 0x74,
	0x4e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x12, 0x52, 0x0a, 0x0d, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x4e, 0x65, 0x74, 0x77, 0x6f, 0x72,
	0x6b, 0x12, 0x26, 0x2e, 0x6f, 0x70, 0x65, 0x6e, 0x68, 0x64, 0x63, 0x2e, 0x6e, 0x65, 0x78, 0x75,
	0x73, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x4e, 0x65, 0x74, 0x77, 0x6f,
	0x72, 0x6b, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x19, 0x2e, 0x6f, 0x70, 0x65, 0x6e,
	0x68, 0x64, 0x63, 0x2e, 0x6e, 0x65, 0x78, 0x75, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x4e, 0x65, 0x74,
	0x77, 0x6f, 0x72, 0x6b, 0x12, 0x5a, 0x0a, 0x0d, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x49, 0x50,
	0x52, 0x61, 0x6e, 0x67, 0x65, 0x12, 0x26, 0x2e, 0x6f, 0x70, 0x65, 0x6e, 0x68, 0x64, 0x63, 0x2e,
	0x6e, 0x65, 0x78, 0x75, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x49,
	0x50, 0x52, 0x61, 0x6e, 0x67, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x21, 0x2e,
	0x6f, 0x70, 0x65, 0x6e, 0x68, 0x64, 0x63, 0x2e, 0x6e, 0x65, 0x78, 0x75, 0x73, 0x2e, 0x76, 0x31,
	0x2e, 0x4e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x2e, 0x49, 0x50, 0x52, 0x61, 0x6e, 0x67, 0x65,
	0x12, 0x4f, 0x0a, 0x0d, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x4e, 0x65, 0x74, 0x77, 0x6f, 0x72,
	0x6b, 0x12, 0x26, 0x2e, 0x6f, 0x70, 0x65, 0x6e, 0x68, 0x64, 0x63, 0x2e, 0x6e, 0x65, 0x78, 0x75,
	0x73, 0x2e, 0x76, 0x31, 0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x4e, 0x65, 0x74, 0x77, 0x6f,
	0x72, 0x6b, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67,
	0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74,
	0x79, 0x12, 0x4f, 0x0a, 0x0d, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x49, 0x50, 0x52, 0x61, 0x6e,
	0x67, 0x65, 0x12, 0x26, 0x2e, 0x6f, 0x70, 0x65, 0x6e, 0x68, 0x64, 0x63, 0x2e, 0x6e, 0x65, 0x78,
	0x75, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x49, 0x50, 0x52, 0x61,
	0x6e, 0x67, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x16, 0x2e, 0x67, 0x6f, 0x6f,
	0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70,
	0x74, 0x79, 0x12, 0x57, 0x0a, 0x0c, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x46, 0x61, 0x62, 0x72,
	0x69, 0x63, 0x12, 0x25, 0x2e, 0x6f, 0x70, 0x65, 0x6e, 0x68, 0x64, 0x63, 0x2e, 0x6e, 0x65, 0x78,
	0x75, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x46, 0x61, 0x62, 0x72,
	0x69, 0x63, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x20, 0x2e, 0x6f, 0x70, 0x65, 0x6e,
	0x68, 0x64, 0x63, 0x2e, 0x6e, 0x65, 0x78, 0x75, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x4e, 0x65, 0x74,
	0x77, 0x6f, 0x72, 0x6b, 0x2e, 0x46, 0x61, 0x62, 0x72, 0x69, 0x63, 0x12, 0x51, 0x0a, 0x0a, 0x55,
	0x70, 0x64, 0x61, 0x74, 0x65, 0x56, 0x4c, 0x41, 0x4e, 0x12, 0x23, 0x2e, 0x6f, 0x70, 0x65, 0x6e,
	0x68, 0x64, 0x63, 0x2e, 0x6e, 0x65, 0x78, 0x75, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x55, 0x70, 0x64,
	0x61, 0x74, 0x65, 0x56, 0x4c, 0x41, 0x4e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1e,
	0x2e, 0x6f, 0x70, 0x65, 0x6e, 0x68, 0x64, 0x63, 0x2e, 0x6e, 0x65, 0x78, 0x75, 0x73, 0x2e, 0x76,
	0x31, 0x2e, 0x4e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x2e, 0x56, 0x4c, 0x41, 0x4e, 0x12, 0x57,
	0x0a, 0x0c, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x53, 0x75, 0x62, 0x6e, 0x65, 0x74, 0x12, 0x25,
	0x2e, 0x6f, 0x70, 0x65, 0x6e, 0x68, 0x64, 0x63, 0x2e, 0x6e, 0x65, 0x78, 0x75, 0x73, 0x2e, 0x76,
	0x31, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x53, 0x75, 0x62, 0x6e, 0x65, 0x74, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x20, 0x2e, 0x6f, 0x70, 0x65, 0x6e, 0x68, 0x64, 0x63, 0x2e,
	0x6e, 0x65, 0x78, 0x75, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x4e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b,
	0x2e, 0x53, 0x75, 0x62, 0x6e, 0x65, 0x74, 0x12, 0x5a, 0x0a, 0x0d, 0x55, 0x70, 0x64, 0x61, 0x74,
	0x65, 0x49, 0x50, 0x52, 0x61, 0x6e, 0x67, 0x65, 0x12, 0x26, 0x2e, 0x6f, 0x70, 0x65, 0x6e, 0x68,
	0x64, 0x63, 0x2e, 0x6e, 0x65, 0x78, 0x75, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x55, 0x70, 0x64, 0x61,
	0x74, 0x65, 0x49, 0x50, 0x52, 0x61, 0x6e, 0x67, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x1a, 0x21, 0x2e, 0x6f, 0x70, 0x65, 0x6e, 0x68, 0x64, 0x63, 0x2e, 0x6e, 0x65, 0x78, 0x75, 0x73,
	0x2e, 0x76, 0x31, 0x2e, 0x4e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x2e, 0x49, 0x50, 0x52, 0x61,
	0x6e, 0x67, 0x65, 0x12, 0x5d, 0x0a, 0x0c, 0x4c, 0x69, 0x73, 0x74, 0x4d, 0x61, 0x63, 0x68, 0x69,
	0x6e, 0x65, 0x73, 0x12, 0x25, 0x2e, 0x6f, 0x70, 0x65, 0x6e, 0x68, 0x64, 0x63, 0x2e, 0x6e, 0x65,
	0x78, 0x75, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x4d, 0x61, 0x63, 0x68, 0x69,
	0x6e, 0x65, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x26, 0x2e, 0x6f, 0x70, 0x65,
	0x6e, 0x68, 0x64, 0x63, 0x2e, 0x6e, 0x65, 0x78, 0x75, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x4c, 0x69,
	0x73, 0x74, 0x4d, 0x61, 0x63, 0x68, 0x69, 0x6e, 0x65, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x12, 0x4c, 0x0a, 0x0a, 0x47, 0x65, 0x74, 0x4d, 0x61, 0x63, 0x68, 0x69, 0x6e, 0x65,
	0x12, 0x23, 0x2e, 0x6f, 0x70, 0x65, 0x6e, 0x68, 0x64, 0x63, 0x2e, 0x6e, 0x65, 0x78, 0x75, 0x73,
	0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x4d, 0x61, 0x63, 0x68, 0x69, 0x6e, 0x65, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x19, 0x2e, 0x6f, 0x70, 0x65, 0x6e, 0x68, 0x64, 0x63, 0x2e,
	0x6e, 0x65, 0x78, 0x75, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x4d, 0x61, 0x63, 0x68, 0x69, 0x6e, 0x65,
	0x12, 0x52, 0x0a, 0x0d, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x4d, 0x61, 0x63, 0x68, 0x69, 0x6e,
	0x65, 0x12, 0x26, 0x2e, 0x6f, 0x70, 0x65, 0x6e, 0x68, 0x64, 0x63, 0x2e, 0x6e, 0x65, 0x78, 0x75,
	0x73, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x4d, 0x61, 0x63, 0x68, 0x69,
	0x6e, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x19, 0x2e, 0x6f, 0x70, 0x65, 0x6e,
	0x68, 0x64, 0x63, 0x2e, 0x6e, 0x65, 0x78, 0x75, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x4d, 0x61, 0x63,
	0x68, 0x69, 0x6e, 0x65, 0x12, 0x4f, 0x0a, 0x0d, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x4d, 0x61,
	0x63, 0x68, 0x69, 0x6e, 0x65, 0x12, 0x26, 0x2e, 0x6f, 0x70, 0x65, 0x6e, 0x68, 0x64, 0x63, 0x2e,
	0x6e, 0x65, 0x78, 0x75, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x4d,
	0x61, 0x63, 0x68, 0x69, 0x6e, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x16, 0x2e,
	0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e,
	0x45, 0x6d, 0x70, 0x74, 0x79, 0x12, 0x54, 0x0a, 0x0e, 0x50, 0x6f, 0x77, 0x65, 0x72, 0x4f, 0x6e,
	0x4d, 0x61, 0x63, 0x68, 0x69, 0x6e, 0x65, 0x12, 0x27, 0x2e, 0x6f, 0x70, 0x65, 0x6e, 0x68, 0x64,
	0x63, 0x2e, 0x6e, 0x65, 0x78, 0x75, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x50, 0x6f, 0x77, 0x65, 0x72,
	0x4f, 0x6e, 0x4d, 0x61, 0x63, 0x68, 0x69, 0x6e, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x1a, 0x19, 0x2e, 0x6f, 0x70, 0x65, 0x6e, 0x68, 0x64, 0x63, 0x2e, 0x6e, 0x65, 0x78, 0x75, 0x73,
	0x2e, 0x76, 0x31, 0x2e, 0x4d, 0x61, 0x63, 0x68, 0x69, 0x6e, 0x65, 0x12, 0x56, 0x0a, 0x0f, 0x50,
	0x6f, 0x77, 0x65, 0x72, 0x4f, 0x66, 0x66, 0x4d, 0x61, 0x63, 0x68, 0x69, 0x6e, 0x65, 0x12, 0x28,
	0x2e, 0x6f, 0x70, 0x65, 0x6e, 0x68, 0x64, 0x63, 0x2e, 0x6e, 0x65, 0x78, 0x75, 0x73, 0x2e, 0x76,
	0x31, 0x2e, 0x50, 0x6f, 0x77, 0x65, 0x72, 0x4f, 0x66, 0x66, 0x4d, 0x61, 0x63, 0x68, 0x69, 0x6e,
	0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x19, 0x2e, 0x6f, 0x70, 0x65, 0x6e, 0x68,
	0x64, 0x63, 0x2e, 0x6e, 0x65, 0x78, 0x75, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x4d, 0x61, 0x63, 0x68,
	0x69, 0x6e, 0x65, 0x12, 0x51, 0x0a, 0x0e, 0x41, 0x64, 0x64, 0x4d, 0x61, 0x63, 0x68, 0x69, 0x6e,
	0x65, 0x54, 0x61, 0x67, 0x73, 0x12, 0x27, 0x2e, 0x6f, 0x70, 0x65, 0x6e, 0x68, 0x64, 0x63, 0x2e,
	0x6e, 0x65, 0x78, 0x75, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x41, 0x64, 0x64, 0x4d, 0x61, 0x63, 0x68,
	0x69, 0x6e, 0x65, 0x54, 0x61, 0x67, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x16,
	0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66,
	0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x12, 0x57, 0x0a, 0x11, 0x52, 0x65, 0x6d, 0x6f, 0x76, 0x65,
	0x4d, 0x61, 0x63, 0x68, 0x69, 0x6e, 0x65, 0x54, 0x61, 0x67, 0x73, 0x12, 0x2a, 0x2e, 0x6f, 0x70,
	0x65, 0x6e, 0x68, 0x64, 0x63, 0x2e, 0x6e, 0x65, 0x78, 0x75, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x52,
	0x65, 0x6d, 0x6f, 0x76, 0x65, 0x4d, 0x61, 0x63, 0x68, 0x69, 0x6e, 0x65, 0x54, 0x61, 0x67, 0x73,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x12,
	0x57, 0x0a, 0x0a, 0x4c, 0x69, 0x73, 0x74, 0x53, 0x63, 0x6f, 0x70, 0x65, 0x73, 0x12, 0x23, 0x2e,
	0x6f, 0x70, 0x65, 0x6e, 0x68, 0x64, 0x63, 0x2e, 0x6e, 0x65, 0x78, 0x75, 0x73, 0x2e, 0x76, 0x31,
	0x2e, 0x4c, 0x69, 0x73, 0x74, 0x53, 0x63, 0x6f, 0x70, 0x65, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x1a, 0x24, 0x2e, 0x6f, 0x70, 0x65, 0x6e, 0x68, 0x64, 0x63, 0x2e, 0x6e, 0x65, 0x78,
	0x75, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x53, 0x63, 0x6f, 0x70, 0x65, 0x73,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x4c, 0x0a, 0x0b, 0x43, 0x72, 0x65, 0x61,
	0x74, 0x65, 0x53, 0x63, 0x6f, 0x70, 0x65, 0x12, 0x24, 0x2e, 0x6f, 0x70, 0x65, 0x6e, 0x68, 0x64,
	0x63, 0x2e, 0x6e, 0x65, 0x78, 0x75, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74,
	0x65, 0x53, 0x63, 0x6f, 0x70, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x17, 0x2e,
	0x6f, 0x70, 0x65, 0x6e, 0x68, 0x64, 0x63, 0x2e, 0x6e, 0x65, 0x78, 0x75, 0x73, 0x2e, 0x76, 0x31,
	0x2e, 0x53, 0x63, 0x6f, 0x70, 0x65, 0x12, 0x63, 0x0a, 0x0e, 0x4c, 0x69, 0x73, 0x74, 0x46, 0x61,
	0x63, 0x69, 0x6c, 0x69, 0x74, 0x69, 0x65, 0x73, 0x12, 0x27, 0x2e, 0x6f, 0x70, 0x65, 0x6e, 0x68,
	0x64, 0x63, 0x2e, 0x6e, 0x65, 0x78, 0x75, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x4c, 0x69, 0x73, 0x74,
	0x46, 0x61, 0x63, 0x69, 0x6c, 0x69, 0x74, 0x69, 0x65, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x1a, 0x28, 0x2e, 0x6f, 0x70, 0x65, 0x6e, 0x68, 0x64, 0x63, 0x2e, 0x6e, 0x65, 0x78, 0x75,
	0x73, 0x2e, 0x76, 0x31, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x46, 0x61, 0x63, 0x69, 0x6c, 0x69, 0x74,
	0x69, 0x65, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x4f, 0x0a, 0x0b, 0x47,
	0x65, 0x74, 0x46, 0x61, 0x63, 0x69, 0x6c, 0x69, 0x74, 0x79, 0x12, 0x24, 0x2e, 0x6f, 0x70, 0x65,
	0x6e, 0x68, 0x64, 0x63, 0x2e, 0x6e, 0x65, 0x78, 0x75, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65,
	0x74, 0x46, 0x61, 0x63, 0x69, 0x6c, 0x69, 0x74, 0x79, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x1a, 0x1a, 0x2e, 0x6f, 0x70, 0x65, 0x6e, 0x68, 0x64, 0x63, 0x2e, 0x6e, 0x65, 0x78, 0x75, 0x73,
	0x2e, 0x76, 0x31, 0x2e, 0x46, 0x61, 0x63, 0x69, 0x6c, 0x69, 0x74, 0x79, 0x12, 0x55, 0x0a, 0x0e,
	0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x46, 0x61, 0x63, 0x69, 0x6c, 0x69, 0x74, 0x79, 0x12, 0x27,
	0x2e, 0x6f, 0x70, 0x65, 0x6e, 0x68, 0x64, 0x63, 0x2e, 0x6e, 0x65, 0x78, 0x75, 0x73, 0x2e, 0x76,
	0x31, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x46, 0x61, 0x63, 0x69, 0x6c, 0x69, 0x74, 0x79,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1a, 0x2e, 0x6f, 0x70, 0x65, 0x6e, 0x68, 0x64,
	0x63, 0x2e, 0x6e, 0x65, 0x78, 0x75, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x46, 0x61, 0x63, 0x69, 0x6c,
	0x69, 0x74, 0x79, 0x12, 0x55, 0x0a, 0x0e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x46, 0x61, 0x63,
	0x69, 0x6c, 0x69, 0x74, 0x79, 0x12, 0x27, 0x2e, 0x6f, 0x70, 0x65, 0x6e, 0x68, 0x64, 0x63, 0x2e,
	0x6e, 0x65, 0x78, 0x75, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x46,
	0x61, 0x63, 0x69, 0x6c, 0x69, 0x74, 0x79, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1a,
	0x2e, 0x6f, 0x70, 0x65, 0x6e, 0x68, 0x64, 0x63, 0x2e, 0x6e, 0x65, 0x78, 0x75, 0x73, 0x2e, 0x76,
	0x31, 0x2e, 0x46, 0x61, 0x63, 0x69, 0x6c, 0x69, 0x74, 0x79, 0x12, 0x51, 0x0a, 0x0e, 0x44, 0x65,
	0x6c, 0x65, 0x74, 0x65, 0x46, 0x61, 0x63, 0x69, 0x6c, 0x69, 0x74, 0x79, 0x12, 0x27, 0x2e, 0x6f,
	0x70, 0x65, 0x6e, 0x68, 0x64, 0x63, 0x2e, 0x6e, 0x65, 0x78, 0x75, 0x73, 0x2e, 0x76, 0x31, 0x2e,
	0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x46, 0x61, 0x63, 0x69, 0x6c, 0x69, 0x74, 0x79, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x12, 0x51, 0x0a,
	0x0e, 0x45, 0x78, 0x70, 0x6f, 0x73, 0x65, 0x46, 0x61, 0x63, 0x69, 0x6c, 0x69, 0x74, 0x79, 0x12,
	0x27, 0x2e, 0x6f, 0x70, 0x65, 0x6e, 0x68, 0x64, 0x63, 0x2e, 0x6e, 0x65, 0x78, 0x75, 0x73, 0x2e,
	0x76, 0x31, 0x2e, 0x45, 0x78, 0x70, 0x6f, 0x73, 0x65, 0x46, 0x61, 0x63, 0x69, 0x6c, 0x69, 0x74,
	0x79, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c,
	0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79,
	0x12, 0x69, 0x0a, 0x10, 0x41, 0x64, 0x64, 0x46, 0x61, 0x63, 0x69, 0x6c, 0x69, 0x74, 0x79, 0x55,
	0x6e, 0x69, 0x74, 0x73, 0x12, 0x29, 0x2e, 0x6f, 0x70, 0x65, 0x6e, 0x68, 0x64, 0x63, 0x2e, 0x6e,
	0x65, 0x78, 0x75, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x41, 0x64, 0x64, 0x46, 0x61, 0x63, 0x69, 0x6c,
	0x69, 0x74, 0x79, 0x55, 0x6e, 0x69, 0x74, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a,
	0x2a, 0x2e, 0x6f, 0x70, 0x65, 0x6e, 0x68, 0x64, 0x63, 0x2e, 0x6e, 0x65, 0x78, 0x75, 0x73, 0x2e,
	0x76, 0x31, 0x2e, 0x41, 0x64, 0x64, 0x46, 0x61, 0x63, 0x69, 0x6c, 0x69, 0x74, 0x79, 0x55, 0x6e,
	0x69, 0x74, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x5a, 0x0a, 0x0b, 0x4c,
	0x69, 0x73, 0x74, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x12, 0x24, 0x2e, 0x6f, 0x70, 0x65,
	0x6e, 0x68, 0x64, 0x63, 0x2e, 0x6e, 0x65, 0x78, 0x75, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x4c, 0x69,
	0x73, 0x74, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x1a, 0x25, 0x2e, 0x6f, 0x70, 0x65, 0x6e, 0x68, 0x64, 0x63, 0x2e, 0x6e, 0x65, 0x78, 0x75, 0x73,
	0x2e, 0x76, 0x31, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x45, 0x0a, 0x08, 0x44, 0x6f, 0x41, 0x63, 0x74,
	0x69, 0x6f, 0x6e, 0x12, 0x21, 0x2e, 0x6f, 0x70, 0x65, 0x6e, 0x68, 0x64, 0x63, 0x2e, 0x6e, 0x65,
	0x78, 0x75, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x44, 0x6f, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x12, 0x57,
	0x0a, 0x0a, 0x4c, 0x69, 0x73, 0x74, 0x43, 0x68, 0x61, 0x72, 0x6d, 0x73, 0x12, 0x23, 0x2e, 0x6f,
	0x70, 0x65, 0x6e, 0x68, 0x64, 0x63, 0x2e, 0x6e, 0x65, 0x78, 0x75, 0x73, 0x2e, 0x76, 0x31, 0x2e,
	0x4c, 0x69, 0x73, 0x74, 0x43, 0x68, 0x61, 0x72, 0x6d, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x1a, 0x24, 0x2e, 0x6f, 0x70, 0x65, 0x6e, 0x68, 0x64, 0x63, 0x2e, 0x6e, 0x65, 0x78, 0x75,
	0x73, 0x2e, 0x76, 0x31, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x43, 0x68, 0x61, 0x72, 0x6d, 0x73, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x4f, 0x0a, 0x08, 0x47, 0x65, 0x74, 0x43, 0x68,
	0x61, 0x72, 0x6d, 0x12, 0x21, 0x2e, 0x6f, 0x70, 0x65, 0x6e, 0x68, 0x64, 0x63, 0x2e, 0x6e, 0x65,
	0x78, 0x75, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x43, 0x68, 0x61, 0x72, 0x6d, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x20, 0x2e, 0x6f, 0x70, 0x65, 0x6e, 0x68, 0x64, 0x63,
	0x2e, 0x6e, 0x65, 0x78, 0x75, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x46, 0x61, 0x63, 0x69, 0x6c, 0x69,
	0x74, 0x79, 0x2e, 0x43, 0x68, 0x61, 0x72, 0x6d, 0x12, 0x68, 0x0a, 0x10, 0x47, 0x65, 0x74, 0x43,
	0x68, 0x61, 0x72, 0x6d, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x12, 0x29, 0x2e, 0x6f,
	0x70, 0x65, 0x6e, 0x68, 0x64, 0x63, 0x2e, 0x6e, 0x65, 0x78, 0x75, 0x73, 0x2e, 0x76, 0x31, 0x2e,
	0x47, 0x65, 0x74, 0x43, 0x68, 0x61, 0x72, 0x6d, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x29, 0x2e, 0x6f, 0x70, 0x65, 0x6e, 0x68, 0x64,
	0x63, 0x2e, 0x6e, 0x65, 0x78, 0x75, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x46, 0x61, 0x63, 0x69, 0x6c,
	0x69, 0x74, 0x79, 0x2e, 0x43, 0x68, 0x61, 0x72, 0x6d, 0x2e, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61,
	0x74, 0x61, 0x12, 0x6f, 0x0a, 0x12, 0x4c, 0x69, 0x73, 0x74, 0x43, 0x68, 0x61, 0x72, 0x6d, 0x41,
	0x72, 0x74, 0x69, 0x66, 0x61, 0x63, 0x74, 0x73, 0x12, 0x2b, 0x2e, 0x6f, 0x70, 0x65, 0x6e, 0x68,
	0x64, 0x63, 0x2e, 0x6e, 0x65, 0x78, 0x75, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x4c, 0x69, 0x73, 0x74,
	0x43, 0x68, 0x61, 0x72, 0x6d, 0x41, 0x72, 0x74, 0x69, 0x66, 0x61, 0x63, 0x74, 0x73, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x2c, 0x2e, 0x6f, 0x70, 0x65, 0x6e, 0x68, 0x64, 0x63, 0x2e,
	0x6e, 0x65, 0x78, 0x75, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x43, 0x68, 0x61,
	0x72, 0x6d, 0x41, 0x72, 0x74, 0x69, 0x66, 0x61, 0x63, 0x74, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x12, 0x69, 0x0a, 0x10, 0x4c, 0x69, 0x73, 0x74, 0x41, 0x70, 0x70, 0x6c, 0x69,
	0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x12, 0x29, 0x2e, 0x6f, 0x70, 0x65, 0x6e, 0x68, 0x64,
	0x63, 0x2e, 0x6e, 0x65, 0x78, 0x75, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x41,
	0x70, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x1a, 0x2a, 0x2e, 0x6f, 0x70, 0x65, 0x6e, 0x68, 0x64, 0x63, 0x2e, 0x6e, 0x65, 0x78,
	0x75, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x41, 0x70, 0x70, 0x6c, 0x69, 0x63,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x58,
	0x0a, 0x0e, 0x47, 0x65, 0x74, 0x41, 0x70, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x12, 0x27, 0x2e, 0x6f, 0x70, 0x65, 0x6e, 0x68, 0x64, 0x63, 0x2e, 0x6e, 0x65, 0x78, 0x75, 0x73,
	0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x41, 0x70, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1d, 0x2e, 0x6f, 0x70, 0x65, 0x6e,
	0x68, 0x64, 0x63, 0x2e, 0x6e, 0x65, 0x78, 0x75, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x41, 0x70, 0x70,
	0x6c, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x5d, 0x0a, 0x0c, 0x4c, 0x69, 0x73, 0x74,
	0x52, 0x65, 0x6c, 0x65, 0x61, 0x73, 0x65, 0x73, 0x12, 0x25, 0x2e, 0x6f, 0x70, 0x65, 0x6e, 0x68,
	0x64, 0x63, 0x2e, 0x6e, 0x65, 0x78, 0x75, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x4c, 0x69, 0x73, 0x74,
	0x52, 0x65, 0x6c, 0x65, 0x61, 0x73, 0x65, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a,
	0x26, 0x2e, 0x6f, 0x70, 0x65, 0x6e, 0x68, 0x64, 0x63, 0x2e, 0x6e, 0x65, 0x78, 0x75, 0x73, 0x2e,
	0x76, 0x31, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x6c, 0x65, 0x61, 0x73, 0x65, 0x73, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x5e, 0x0a, 0x0d, 0x43, 0x72, 0x65, 0x61, 0x74,
	0x65, 0x52, 0x65, 0x6c, 0x65, 0x61, 0x73, 0x65, 0x12, 0x26, 0x2e, 0x6f, 0x70, 0x65, 0x6e, 0x68,
	0x64, 0x63, 0x2e, 0x6e, 0x65, 0x78, 0x75, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x72, 0x65, 0x61,
	0x74, 0x65, 0x52, 0x65, 0x6c, 0x65, 0x61, 0x73, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x1a, 0x25, 0x2e, 0x6f, 0x70, 0x65, 0x6e, 0x68, 0x64, 0x63, 0x2e, 0x6e, 0x65, 0x78, 0x75, 0x73,
	0x2e, 0x76, 0x31, 0x2e, 0x41, 0x70, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e,
	0x52, 0x65, 0x6c, 0x65, 0x61, 0x73, 0x65, 0x12, 0x5e, 0x0a, 0x0d, 0x55, 0x70, 0x64, 0x61, 0x74,
	0x65, 0x52, 0x65, 0x6c, 0x65, 0x61, 0x73, 0x65, 0x12, 0x26, 0x2e, 0x6f, 0x70, 0x65, 0x6e, 0x68,
	0x64, 0x63, 0x2e, 0x6e, 0x65, 0x78, 0x75, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x55, 0x70, 0x64, 0x61,
	0x74, 0x65, 0x52, 0x65, 0x6c, 0x65, 0x61, 0x73, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x1a, 0x25, 0x2e, 0x6f, 0x70, 0x65, 0x6e, 0x68, 0x64, 0x63, 0x2e, 0x6e, 0x65, 0x78, 0x75, 0x73,
	0x2e, 0x76, 0x31, 0x2e, 0x41, 0x70, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e,
	0x52, 0x65, 0x6c, 0x65, 0x61, 0x73, 0x65, 0x12, 0x4f, 0x0a, 0x0d, 0x44, 0x65, 0x6c, 0x65, 0x74,
	0x65, 0x52, 0x65, 0x6c, 0x65, 0x61, 0x73, 0x65, 0x12, 0x26, 0x2e, 0x6f, 0x70, 0x65, 0x6e, 0x68,
	0x64, 0x63, 0x2e, 0x6e, 0x65, 0x78, 0x75, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x44, 0x65, 0x6c, 0x65,
	0x74, 0x65, 0x52, 0x65, 0x6c, 0x65, 0x61, 0x73, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x1a, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62,
	0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x12, 0x53, 0x0a, 0x0f, 0x52, 0x6f, 0x6c, 0x6c,
	0x62, 0x61, 0x63, 0x6b, 0x52, 0x65, 0x6c, 0x65, 0x61, 0x73, 0x65, 0x12, 0x28, 0x2e, 0x6f, 0x70,
	0x65, 0x6e, 0x68, 0x64, 0x63, 0x2e, 0x6e, 0x65, 0x78, 0x75, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x52,
	0x6f, 0x6c, 0x6c, 0x62, 0x61, 0x63, 0x6b, 0x52, 0x65, 0x6c, 0x65, 0x61, 0x73, 0x65, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x12, 0x57, 0x0a,
	0x0a, 0x4c, 0x69, 0x73, 0x74, 0x43, 0x68, 0x61, 0x72, 0x74, 0x73, 0x12, 0x23, 0x2e, 0x6f, 0x70,
	0x65, 0x6e, 0x68, 0x64, 0x63, 0x2e, 0x6e, 0x65, 0x78, 0x75, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x4c,
	0x69, 0x73, 0x74, 0x43, 0x68, 0x61, 0x72, 0x74, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x1a, 0x24, 0x2e, 0x6f, 0x70, 0x65, 0x6e, 0x68, 0x64, 0x63, 0x2e, 0x6e, 0x65, 0x78, 0x75, 0x73,
	0x2e, 0x76, 0x31, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x43, 0x68, 0x61, 0x72, 0x74, 0x73, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x52, 0x0a, 0x08, 0x47, 0x65, 0x74, 0x43, 0x68, 0x61,
	0x72, 0x74, 0x12, 0x21, 0x2e, 0x6f, 0x70, 0x65, 0x6e, 0x68, 0x64, 0x63, 0x2e, 0x6e, 0x65, 0x78,
	0x75, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x43, 0x68, 0x61, 0x72, 0x74, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x23, 0x2e, 0x6f, 0x70, 0x65, 0x6e, 0x68, 0x64, 0x63, 0x2e,
	0x6e, 0x65, 0x78, 0x75, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x41, 0x70, 0x70, 0x6c, 0x69, 0x63, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x43, 0x68, 0x61, 0x72, 0x74, 0x12, 0x6b, 0x0a, 0x10, 0x47, 0x65,
	0x74, 0x43, 0x68, 0x61, 0x72, 0x74, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x12, 0x29,
	0x2e, 0x6f, 0x70, 0x65, 0x6e, 0x68, 0x64, 0x63, 0x2e, 0x6e, 0x65, 0x78, 0x75, 0x73, 0x2e, 0x76,
	0x31, 0x2e, 0x47, 0x65, 0x74, 0x43, 0x68, 0x61, 0x72, 0x74, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61,
	0x74, 0x61, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x2c, 0x2e, 0x6f, 0x70, 0x65, 0x6e,
	0x68, 0x64, 0x63, 0x2e, 0x6e, 0x65, 0x78, 0x75, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x41, 0x70, 0x70,
	0x6c, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x43, 0x68, 0x61, 0x72, 0x74, 0x2e, 0x4d,
	0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x12, 0x51, 0x0a, 0x08, 0x4c, 0x69, 0x73, 0x74, 0x54,
	0x61, 0x67, 0x73, 0x12, 0x21, 0x2e, 0x6f, 0x70, 0x65, 0x6e, 0x68, 0x64, 0x63, 0x2e, 0x6e, 0x65,
	0x78, 0x75, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x54, 0x61, 0x67, 0x73, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x22, 0x2e, 0x6f, 0x70, 0x65, 0x6e, 0x68, 0x64, 0x63,
	0x2e, 0x6e, 0x65, 0x78, 0x75, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x54, 0x61,
	0x67, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x40, 0x0a, 0x06, 0x47, 0x65,
	0x74, 0x54, 0x61, 0x67, 0x12, 0x1f, 0x2e, 0x6f, 0x70, 0x65, 0x6e, 0x68, 0x64, 0x63, 0x2e, 0x6e,
	0x65, 0x78, 0x75, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x54, 0x61, 0x67, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x15, 0x2e, 0x6f, 0x70, 0x65, 0x6e, 0x68, 0x64, 0x63, 0x2e,
	0x6e, 0x65, 0x78, 0x75, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x54, 0x61, 0x67, 0x12, 0x46, 0x0a, 0x09,
	0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x54, 0x61, 0x67, 0x12, 0x22, 0x2e, 0x6f, 0x70, 0x65, 0x6e,
	0x68, 0x64, 0x63, 0x2e, 0x6e, 0x65, 0x78, 0x75, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x72, 0x65,
	0x61, 0x74, 0x65, 0x54, 0x61, 0x67, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x15, 0x2e,
	0x6f, 0x70, 0x65, 0x6e, 0x68, 0x64, 0x63, 0x2e, 0x6e, 0x65, 0x78, 0x75, 0x73, 0x2e, 0x76, 0x31,
	0x2e, 0x54, 0x61, 0x67, 0x12, 0x47, 0x0a, 0x09, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x54, 0x61,
	0x67, 0x12, 0x22, 0x2e, 0x6f, 0x70, 0x65, 0x6e, 0x68, 0x64, 0x63, 0x2e, 0x6e, 0x65, 0x78, 0x75,
	0x73, 0x2e, 0x76, 0x31, 0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x54, 0x61, 0x67, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x12, 0x6f, 0x0a,
	0x12, 0x4c, 0x69, 0x73, 0x74, 0x53, 0x74, 0x6f, 0x72, 0x61, 0x67, 0x65, 0x43, 0x6c, 0x61, 0x73,
	0x73, 0x65, 0x73, 0x12, 0x2b, 0x2e, 0x6f, 0x70, 0x65, 0x6e, 0x68, 0x64, 0x63, 0x2e, 0x6e, 0x65,
	0x78, 0x75, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x53, 0x74, 0x6f, 0x72, 0x61,
	0x67, 0x65, 0x43, 0x6c, 0x61, 0x73, 0x73, 0x65, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x1a, 0x2c, 0x2e, 0x6f, 0x70, 0x65, 0x6e, 0x68, 0x64, 0x63, 0x2e, 0x6e, 0x65, 0x78, 0x75, 0x73,
	0x2e, 0x76, 0x31, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x53, 0x74, 0x6f, 0x72, 0x61, 0x67, 0x65, 0x43,
	0x6c, 0x61, 0x73, 0x73, 0x65, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x61,
	0x0a, 0x12, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x53, 0x74, 0x6f, 0x72, 0x61, 0x67, 0x65, 0x43,
	0x6c, 0x61, 0x73, 0x73, 0x12, 0x2b, 0x2e, 0x6f, 0x70, 0x65, 0x6e, 0x68, 0x64, 0x63, 0x2e, 0x6e,
	0x65, 0x78, 0x75, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x53, 0x74,
	0x6f, 0x72, 0x61, 0x67, 0x65, 0x43, 0x6c, 0x61, 0x73, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x1a, 0x1e, 0x2e, 0x6f, 0x70, 0x65, 0x6e, 0x68, 0x64, 0x63, 0x2e, 0x6e, 0x65, 0x78, 0x75,
	0x73, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x74, 0x6f, 0x72, 0x61, 0x67, 0x65, 0x43, 0x6c, 0x61, 0x73,
	0x73, 0x42, 0x2c, 0x5a, 0x2a, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f,
	0x6f, 0x70, 0x65, 0x6e, 0x68, 0x64, 0x63, 0x2f, 0x6f, 0x70, 0x65, 0x6e, 0x68, 0x64, 0x63, 0x2f,
	0x61, 0x70, 0x69, 0x2f, 0x6e, 0x65, 0x78, 0x75, 0x73, 0x2f, 0x76, 0x31, 0x3b, 0x70, 0x62, 0x62,
	0x08, 0x65, 0x64, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x70, 0xe8, 0x07,
})

var file_api_nexus_v1_nexus_proto_enumTypes = make([]protoimpl.EnumInfo, 1)
var file_api_nexus_v1_nexus_proto_msgTypes = make([]protoimpl.MessageInfo, 132)
var file_api_nexus_v1_nexus_proto_goTypes = []any{
	(ErrorLevel)(0),                           // 0: openhdc.nexus.v1.ErrorLevel
	(*Configuration)(nil),                     // 1: openhdc.nexus.v1.Configuration
	(*Network)(nil),                           // 2: openhdc.nexus.v1.Network
	(*Machine)(nil),                           // 3: openhdc.nexus.v1.Machine
	(*Scope)(nil),                             // 4: openhdc.nexus.v1.Scope
	(*Facility)(nil),                          // 5: openhdc.nexus.v1.Facility
	(*Application)(nil),                       // 6: openhdc.nexus.v1.Application
	(*Customization)(nil),                     // 7: openhdc.nexus.v1.Customization
	(*Tag)(nil),                               // 8: openhdc.nexus.v1.Tag
	(*StorageClass)(nil),                      // 9: openhdc.nexus.v1.StorageClass
	(*Error)(nil),                             // 10: openhdc.nexus.v1.Error
	(*VerifyEnvironmentRequest)(nil),          // 11: openhdc.nexus.v1.VerifyEnvironmentRequest
	(*VerifyEnvironmentResponse)(nil),         // 12: openhdc.nexus.v1.VerifyEnvironmentResponse
	(*ListCephesRequest)(nil),                 // 13: openhdc.nexus.v1.ListCephesRequest
	(*ListCephesResponse)(nil),                // 14: openhdc.nexus.v1.ListCephesResponse
	(*CreateCephRequest)(nil),                 // 15: openhdc.nexus.v1.CreateCephRequest
	(*AddCephUnitsRequest)(nil),               // 16: openhdc.nexus.v1.AddCephUnitsRequest
	(*ListKubernetesesRequest)(nil),           // 17: openhdc.nexus.v1.ListKubernetesesRequest
	(*ListKubernetesesResponse)(nil),          // 18: openhdc.nexus.v1.ListKubernetesesResponse
	(*CreateKubernetesRequest)(nil),           // 19: openhdc.nexus.v1.CreateKubernetesRequest
	(*AddKubernetesUnitsRequest)(nil),         // 20: openhdc.nexus.v1.AddKubernetesUnitsRequest
	(*GetConfigurationRequest)(nil),           // 21: openhdc.nexus.v1.GetConfigurationRequest
	(*UpdateNTPServerRequest)(nil),            // 22: openhdc.nexus.v1.UpdateNTPServerRequest
	(*UpdatePackageRepositoryRequest)(nil),    // 23: openhdc.nexus.v1.UpdatePackageRepositoryRequest
	(*CreateBootImageRequest)(nil),            // 24: openhdc.nexus.v1.CreateBootImageRequest
	(*SetDefaultBootImageRequest)(nil),        // 25: openhdc.nexus.v1.SetDefaultBootImageRequest
	(*ImportBootImagesRequest)(nil),           // 26: openhdc.nexus.v1.ImportBootImagesRequest
	(*IsImportingBootImagesRequest)(nil),      // 27: openhdc.nexus.v1.IsImportingBootImagesRequest
	(*IsImportingBootImagesResponse)(nil),     // 28: openhdc.nexus.v1.IsImportingBootImagesResponse
	(*ListBootImageSelectionsRequest)(nil),    // 29: openhdc.nexus.v1.ListBootImageSelectionsRequest
	(*ListBootImageSelectionsResponse)(nil),   // 30: openhdc.nexus.v1.ListBootImageSelectionsResponse
	(*ListNetworksRequest)(nil),               // 31: openhdc.nexus.v1.ListNetworksRequest
	(*ListNetworksResponse)(nil),              // 32: openhdc.nexus.v1.ListNetworksResponse
	(*CreateNetworkRequest)(nil),              // 33: openhdc.nexus.v1.CreateNetworkRequest
	(*CreateIPRangeRequest)(nil),              // 34: openhdc.nexus.v1.CreateIPRangeRequest
	(*DeleteNetworkRequest)(nil),              // 35: openhdc.nexus.v1.DeleteNetworkRequest
	(*DeleteIPRangeRequest)(nil),              // 36: openhdc.nexus.v1.DeleteIPRangeRequest
	(*UpdateFabricRequest)(nil),               // 37: openhdc.nexus.v1.UpdateFabricRequest
	(*UpdateVLANRequest)(nil),                 // 38: openhdc.nexus.v1.UpdateVLANRequest
	(*UpdateSubnetRequest)(nil),               // 39: openhdc.nexus.v1.UpdateSubnetRequest
	(*UpdateIPRangeRequest)(nil),              // 40: openhdc.nexus.v1.UpdateIPRangeRequest
	(*ListMachinesRequest)(nil),               // 41: openhdc.nexus.v1.ListMachinesRequest
	(*ListMachinesResponse)(nil),              // 42: openhdc.nexus.v1.ListMachinesResponse
	(*GetMachineRequest)(nil),                 // 43: openhdc.nexus.v1.GetMachineRequest
	(*CreateMachineRequest)(nil),              // 44: openhdc.nexus.v1.CreateMachineRequest
	(*DeleteMachineRequest)(nil),              // 45: openhdc.nexus.v1.DeleteMachineRequest
	(*PowerOnMachineRequest)(nil),             // 46: openhdc.nexus.v1.PowerOnMachineRequest
	(*PowerOffMachineRequest)(nil),            // 47: openhdc.nexus.v1.PowerOffMachineRequest
	(*AddMachineTagsRequest)(nil),             // 48: openhdc.nexus.v1.AddMachineTagsRequest
	(*RemoveMachineTagsRequest)(nil),          // 49: openhdc.nexus.v1.RemoveMachineTagsRequest
	(*ListScopesRequest)(nil),                 // 50: openhdc.nexus.v1.ListScopesRequest
	(*ListScopesResponse)(nil),                // 51: openhdc.nexus.v1.ListScopesResponse
	(*CreateScopeRequest)(nil),                // 52: openhdc.nexus.v1.CreateScopeRequest
	(*ListFacilitiesRequest)(nil),             // 53: openhdc.nexus.v1.ListFacilitiesRequest
	(*ListFacilitiesResponse)(nil),            // 54: openhdc.nexus.v1.ListFacilitiesResponse
	(*GetFacilityRequest)(nil),                // 55: openhdc.nexus.v1.GetFacilityRequest
	(*CreateFacilityRequest)(nil),             // 56: openhdc.nexus.v1.CreateFacilityRequest
	(*UpdateFacilityRequest)(nil),             // 57: openhdc.nexus.v1.UpdateFacilityRequest
	(*DeleteFacilityRequest)(nil),             // 58: openhdc.nexus.v1.DeleteFacilityRequest
	(*ExposeFacilityRequest)(nil),             // 59: openhdc.nexus.v1.ExposeFacilityRequest
	(*AddFacilityUnitsRequest)(nil),           // 60: openhdc.nexus.v1.AddFacilityUnitsRequest
	(*AddFacilityUnitsResponse)(nil),          // 61: openhdc.nexus.v1.AddFacilityUnitsResponse
	(*ListActionsRequest)(nil),                // 62: openhdc.nexus.v1.ListActionsRequest
	(*ListActionsResponse)(nil),               // 63: openhdc.nexus.v1.ListActionsResponse
	(*DoActionRequest)(nil),                   // 64: openhdc.nexus.v1.DoActionRequest
	(*ListCharmsRequest)(nil),                 // 65: openhdc.nexus.v1.ListCharmsRequest
	(*ListCharmsResponse)(nil),                // 66: openhdc.nexus.v1.ListCharmsResponse
	(*GetCharmRequest)(nil),                   // 67: openhdc.nexus.v1.GetCharmRequest
	(*GetCharmMetadataRequest)(nil),           // 68: openhdc.nexus.v1.GetCharmMetadataRequest
	(*ListCharmArtifactsRequest)(nil),         // 69: openhdc.nexus.v1.ListCharmArtifactsRequest
	(*ListCharmArtifactsResponse)(nil),        // 70: openhdc.nexus.v1.ListCharmArtifactsResponse
	(*ListApplicationsRequest)(nil),           // 71: openhdc.nexus.v1.ListApplicationsRequest
	(*ListApplicationsResponse)(nil),          // 72: openhdc.nexus.v1.ListApplicationsResponse
	(*GetApplicationRequest)(nil),             // 73: openhdc.nexus.v1.GetApplicationRequest
	(*ListReleasesRequest)(nil),               // 74: openhdc.nexus.v1.ListReleasesRequest
	(*ListReleasesResponse)(nil),              // 75: openhdc.nexus.v1.ListReleasesResponse
	(*CreateReleaseRequest)(nil),              // 76: openhdc.nexus.v1.CreateReleaseRequest
	(*UpdateReleaseRequest)(nil),              // 77: openhdc.nexus.v1.UpdateReleaseRequest
	(*DeleteReleaseRequest)(nil),              // 78: openhdc.nexus.v1.DeleteReleaseRequest
	(*RollbackReleaseRequest)(nil),            // 79: openhdc.nexus.v1.RollbackReleaseRequest
	(*ListChartsRequest)(nil),                 // 80: openhdc.nexus.v1.ListChartsRequest
	(*ListChartsResponse)(nil),                // 81: openhdc.nexus.v1.ListChartsResponse
	(*GetChartRequest)(nil),                   // 82: openhdc.nexus.v1.GetChartRequest
	(*GetChartMetadataRequest)(nil),           // 83: openhdc.nexus.v1.GetChartMetadataRequest
	(*ListTagsRequest)(nil),                   // 84: openhdc.nexus.v1.ListTagsRequest
	(*ListTagsResponse)(nil),                  // 85: openhdc.nexus.v1.ListTagsResponse
	(*GetTagRequest)(nil),                     // 86: openhdc.nexus.v1.GetTagRequest
	(*CreateTagRequest)(nil),                  // 87: openhdc.nexus.v1.CreateTagRequest
	(*DeleteTagRequest)(nil),                  // 88: openhdc.nexus.v1.DeleteTagRequest
	(*ListStorageClassesRequest)(nil),         // 89: openhdc.nexus.v1.ListStorageClassesRequest
	(*ListStorageClassesResponse)(nil),        // 90: openhdc.nexus.v1.ListStorageClassesResponse
	(*CreateStorageClassRequest)(nil),         // 91: openhdc.nexus.v1.CreateStorageClassRequest
	(*Configuration_NTPServer)(nil),           // 92: openhdc.nexus.v1.Configuration.NTPServer
	(*Configuration_PackageRepository)(nil),   // 93: openhdc.nexus.v1.Configuration.PackageRepository
	(*Configuration_BootImageSelection)(nil),  // 94: openhdc.nexus.v1.Configuration.BootImageSelection
	(*Configuration_BootImage)(nil),           // 95: openhdc.nexus.v1.Configuration.BootImage
	nil,                                       // 96: openhdc.nexus.v1.Configuration.BootImage.ArchitectureStatusMapEntry
	(*Network_IPAddress)(nil),                 // 97: openhdc.nexus.v1.Network.IPAddress
	(*Network_IPRange)(nil),                   // 98: openhdc.nexus.v1.Network.IPRange
	(*Network_Statistics)(nil),                // 99: openhdc.nexus.v1.Network.Statistics
	(*Network_Fabric)(nil),                    // 100: openhdc.nexus.v1.Network.Fabric
	(*Network_VLAN)(nil),                      // 101: openhdc.nexus.v1.Network.VLAN
	(*Network_Subnet)(nil),                    // 102: openhdc.nexus.v1.Network.Subnet
	(*Machine_Placement)(nil),                 // 103: openhdc.nexus.v1.Machine.Placement
	(*Machine_Constraint)(nil),                // 104: openhdc.nexus.v1.Machine.Constraint
	(*Machine_Factor)(nil),                    // 105: openhdc.nexus.v1.Machine.Factor
	(*Machine_NUMANode)(nil),                  // 106: openhdc.nexus.v1.Machine.NUMANode
	(*Machine_BlockDevice)(nil),               // 107: openhdc.nexus.v1.Machine.BlockDevice
	(*Machine_NetworkInterface)(nil),          // 108: openhdc.nexus.v1.Machine.NetworkInterface
	nil,                                       // 109: openhdc.nexus.v1.Machine.WorkloadAnnotationsEntry
	nil,                                       // 110: openhdc.nexus.v1.Machine.HardwareInformationEntry
	(*Facility_Info)(nil),                     // 111: openhdc.nexus.v1.Facility.Info
	(*Facility_Charm)(nil),                    // 112: openhdc.nexus.v1.Facility.Charm
	(*Facility_Action)(nil),                   // 113: openhdc.nexus.v1.Facility.Action
	(*Facility_Status)(nil),                   // 114: openhdc.nexus.v1.Facility.Status
	(*Facility_Unit)(nil),                     // 115: openhdc.nexus.v1.Facility.Unit
	(*Facility_Charm_Metadata)(nil),           // 116: openhdc.nexus.v1.Facility.Charm.Metadata
	(*Facility_Charm_Base)(nil),               // 117: openhdc.nexus.v1.Facility.Charm.Base
	(*Facility_Charm_Artifact)(nil),           // 118: openhdc.nexus.v1.Facility.Charm.Artifact
	(*Application_Chart)(nil),                 // 119: openhdc.nexus.v1.Application.Chart
	(*Application_Release)(nil),               // 120: openhdc.nexus.v1.Application.Release
	(*Application_Condition)(nil),             // 121: openhdc.nexus.v1.Application.Condition
	(*Application_Container)(nil),             // 122: openhdc.nexus.v1.Application.Container
	(*Application_Service)(nil),               // 123: openhdc.nexus.v1.Application.Service
	(*Application_Pod)(nil),                   // 124: openhdc.nexus.v1.Application.Pod
	(*Application_PersistentVolumeClaim)(nil), // 125: openhdc.nexus.v1.Application.PersistentVolumeClaim
	nil,                                  // 126: openhdc.nexus.v1.Application.LabelsEntry
	(*Application_Chart_Metadata)(nil),   // 127: openhdc.nexus.v1.Application.Chart.Metadata
	(*Application_Chart_Maintainer)(nil), // 128: openhdc.nexus.v1.Application.Chart.Maintainer
	(*Application_Chart_Dependency)(nil), // 129: openhdc.nexus.v1.Application.Chart.Dependency
	(*Application_Chart_Version)(nil),    // 130: openhdc.nexus.v1.Application.Chart.Version
	(*Application_Service_Port)(nil),     // 131: openhdc.nexus.v1.Application.Service.Port
	nil,                                  // 132: openhdc.nexus.v1.StorageClass.ParametersEntry
	(*timestamppb.Timestamp)(nil),        // 133: google.protobuf.Timestamp
	(*structpb.Struct)(nil),              // 134: google.protobuf.Struct
	(*emptypb.Empty)(nil),                // 135: google.protobuf.Empty
}
var file_api_nexus_v1_nexus_proto_depIdxs = []int32{
	92,  // 0: openhdc.nexus.v1.Configuration.ntp_server:type_name -> openhdc.nexus.v1.Configuration.NTPServer
	93,  // 1: openhdc.nexus.v1.Configuration.package_repositories:type_name -> openhdc.nexus.v1.Configuration.PackageRepository
	95,  // 2: openhdc.nexus.v1.Configuration.boot_images:type_name -> openhdc.nexus.v1.Configuration.BootImage
	100, // 3: openhdc.nexus.v1.Network.fabric:type_name -> openhdc.nexus.v1.Network.Fabric
	101, // 4: openhdc.nexus.v1.Network.vlan:type_name -> openhdc.nexus.v1.Network.VLAN
	102, // 5: openhdc.nexus.v1.Network.subnet:type_name -> openhdc.nexus.v1.Network.Subnet
	109, // 6: openhdc.nexus.v1.Machine.workload_annotations:type_name -> openhdc.nexus.v1.Machine.WorkloadAnnotationsEntry
	110, // 7: openhdc.nexus.v1.Machine.hardware_information:type_name -> openhdc.nexus.v1.Machine.HardwareInformationEntry
	106, // 8: openhdc.nexus.v1.Machine.numa_nodes:type_name -> openhdc.nexus.v1.Machine.NUMANode
	107, // 9: openhdc.nexus.v1.Machine.block_devices:type_name -> openhdc.nexus.v1.Machine.BlockDevice
	108, // 10: openhdc.nexus.v1.Machine.network_interfaces:type_name -> openhdc.nexus.v1.Machine.NetworkInterface
	114, // 11: openhdc.nexus.v1.Facility.status:type_name -> openhdc.nexus.v1.Facility.Status
	116, // 12: openhdc.nexus.v1.Facility.metadata:type_name -> openhdc.nexus.v1.Facility.Charm.Metadata
	115, // 13: openhdc.nexus.v1.Facility.units:type_name -> openhdc.nexus.v1.Facility.Unit
	126, // 14: openhdc.nexus.v1.Application.labels:type_name -> openhdc.nexus.v1.Application.LabelsEntry
	127, // 15: openhdc.nexus.v1.Application.metadata:type_name -> openhdc.nexus.v1.Application.Chart.Metadata
	122, // 16: openhdc.nexus.v1.Application.containers:type_name -> openhdc.nexus.v1.Application.Container
	123, // 17: openhdc.nexus.v1.Application.services:type_name -> openhdc.nexus.v1.Application.Service
	124, // 18: openhdc.nexus.v1.Application.pods:type_name -> openhdc.nexus.v1.Application.Pod
	125, // 19: openhdc.nexus.v1.Application.persistent_volume_claims:type_name -> openhdc.nexus.v1.Application.PersistentVolumeClaim
	133, // 20: openhdc.nexus.v1.Application.created_at:type_name -> google.protobuf.Timestamp
	134, // 21: openhdc.nexus.v1.Customization.values:type_name -> google.protobuf.Struct
	132, // 22: openhdc.nexus.v1.StorageClass.parameters:type_name -> openhdc.nexus.v1.StorageClass.ParametersEntry
	133, // 23: openhdc.nexus.v1.StorageClass.created_at:type_name -> google.protobuf.Timestamp
	0,   // 24: openhdc.nexus.v1.Error.level:type_name -> openhdc.nexus.v1.ErrorLevel
	10,  // 25: openhdc.nexus.v1.VerifyEnvironmentResponse.errors:type_name -> openhdc.nexus.v1.Error
	111, // 26: openhdc.nexus.v1.ListCephesResponse.cephes:type_name -> openhdc.nexus.v1.Facility.Info
	111, // 27: openhdc.nexus.v1.ListKubernetesesResponse.kuberneteses:type_name -> openhdc.nexus.v1.Facility.Info
	94,  // 28: openhdc.nexus.v1.ListBootImageSelectionsResponse.boot_image_selections:type_name -> openhdc.nexus.v1.Configuration.BootImageSelection
	2,   // 29: openhdc.nexus.v1.ListNetworksResponse.networks:type_name -> openhdc.nexus.v1.Network
	3,   // 30: openhdc.nexus.v1.ListMachinesResponse.machines:type_name -> openhdc.nexus.v1.Machine
	4,   // 31: openhdc.nexus.v1.ListScopesResponse.scopes:type_name -> openhdc.nexus.v1.Scope
	5,   // 32: openhdc.nexus.v1.ListFacilitiesResponse.facilities:type_name -> openhdc.nexus.v1.Facility
	103, // 33: openhdc.nexus.v1.CreateFacilityRequest.placements:type_name -> openhdc.nexus.v1.Machine.Placement
	104, // 34: openhdc.nexus.v1.CreateFacilityRequest.constraint:type_name -> openhdc.nexus.v1.Machine.Constraint
	103, // 35: openhdc.nexus.v1.AddFacilityUnitsRequest.placements:type_name -> openhdc.nexus.v1.Machine.Placement
	113, // 36: openhdc.nexus.v1.ListActionsResponse.actions:type_name -> openhdc.nexus.v1.Facility.Action
	112, // 37: openhdc.nexus.v1.ListCharmsResponse.charms:type_name -> openhdc.nexus.v1.Facility.Charm
	118, // 38: openhdc.nexus.v1.ListCharmArtifactsResponse.artifacts:type_name -> openhdc.nexus.v1.Facility.Charm.Artifact
	6,   // 39: openhdc.nexus.v1.ListApplicationsResponse.applications:type_name -> openhdc.nexus.v1.Application
	120, // 40: openhdc.nexus.v1.ListReleasesResponse.releases:type_name -> openhdc.nexus.v1.Application.Release
	119, // 41: openhdc.nexus.v1.ListChartsResponse.charts:type_name -> openhdc.nexus.v1.Application.Chart
	8,   // 42: openhdc.nexus.v1.ListTagsResponse.tags:type_name -> openhdc.nexus.v1.Tag
	9,   // 43: openhdc.nexus.v1.ListStorageClassesResponse.storage_classes:type_name -> openhdc.nexus.v1.StorageClass
	111, // 44: openhdc.nexus.v1.CreateStorageClassRequest.kubernetes:type_name -> openhdc.nexus.v1.Facility.Info
	111, // 45: openhdc.nexus.v1.CreateStorageClassRequest.ceph:type_name -> openhdc.nexus.v1.Facility.Info
	96,  // 46: openhdc.nexus.v1.Configuration.BootImage.architecture_status_map:type_name -> openhdc.nexus.v1.Configuration.BootImage.ArchitectureStatusMapEntry
	97,  // 47: openhdc.nexus.v1.Network.Subnet.ip_addresses:type_name -> openhdc.nexus.v1.Network.IPAddress
	98,  // 48: openhdc.nexus.v1.Network.Subnet.ip_ranges:type_name -> openhdc.nexus.v1.Network.IPRange
	99,  // 49: openhdc.nexus.v1.Network.Subnet.statistics:type_name -> openhdc.nexus.v1.Network.Statistics
	103, // 50: openhdc.nexus.v1.Machine.Factor.placement:type_name -> openhdc.nexus.v1.Machine.Placement
	104, // 51: openhdc.nexus.v1.Machine.Factor.constraint:type_name -> openhdc.nexus.v1.Machine.Constraint
	118, // 52: openhdc.nexus.v1.Facility.Charm.default_artifact:type_name -> openhdc.nexus.v1.Facility.Charm.Artifact
	133, // 53: openhdc.nexus.v1.Facility.Status.created_at:type_name -> google.protobuf.Timestamp
	114, // 54: openhdc.nexus.v1.Facility.Unit.agent_status:type_name -> openhdc.nexus.v1.Facility.Status
	114, // 55: openhdc.nexus.v1.Facility.Unit.workload_status:type_name -> openhdc.nexus.v1.Facility.Status
	115, // 56: openhdc.nexus.v1.Facility.Unit.subordinates:type_name -> openhdc.nexus.v1.Facility.Unit
	7,   // 57: openhdc.nexus.v1.Facility.Charm.Metadata.customization:type_name -> openhdc.nexus.v1.Customization
	117, // 58: openhdc.nexus.v1.Facility.Charm.Artifact.bases:type_name -> openhdc.nexus.v1.Facility.Charm.Base
	133, // 59: openhdc.nexus.v1.Facility.Charm.Artifact.created_at:type_name -> google.protobuf.Timestamp
	128, // 60: openhdc.nexus.v1.Application.Chart.maintainers:type_name -> openhdc.nexus.v1.Application.Chart.Maintainer
	129, // 61: openhdc.nexus.v1.Application.Chart.dependencies:type_name -> openhdc.nexus.v1.Application.Chart.Dependency
	130, // 62: openhdc.nexus.v1.Application.Chart.versions:type_name -> openhdc.nexus.v1.Application.Chart.Version
	130, // 63: openhdc.nexus.v1.Application.Release.version:type_name -> openhdc.nexus.v1.Application.Chart.Version
	133, // 64: openhdc.nexus.v1.Application.Condition.probed_at:type_name -> google.protobuf.Timestamp
	133, // 65: openhdc.nexus.v1.Application.Condition.transitioned_at:type_name -> google.protobuf.Timestamp
	131, // 66: openhdc.nexus.v1.Application.Service.ports:type_name -> openhdc.nexus.v1.Application.Service.Port
	133, // 67: openhdc.nexus.v1.Application.Service.created_at:type_name -> google.protobuf.Timestamp
	121, // 68: openhdc.nexus.v1.Application.Pod.last_condition:type_name -> openhdc.nexus.v1.Application.Condition
	133, // 69: openhdc.nexus.v1.Application.Pod.created_at:type_name -> google.protobuf.Timestamp
	9,   // 70: openhdc.nexus.v1.Application.PersistentVolumeClaim.storage_class:type_name -> openhdc.nexus.v1.StorageClass
	133, // 71: openhdc.nexus.v1.Application.PersistentVolumeClaim.created_at:type_name -> google.protobuf.Timestamp
	7,   // 72: openhdc.nexus.v1.Application.Chart.Metadata.customization:type_name -> openhdc.nexus.v1.Customization
	11,  // 73: openhdc.nexus.v1.Nexus.VerifyEnvironment:input_type -> openhdc.nexus.v1.VerifyEnvironmentRequest
	13,  // 74: openhdc.nexus.v1.Nexus.ListCephes:input_type -> openhdc.nexus.v1.ListCephesRequest
	15,  // 75: openhdc.nexus.v1.Nexus.CreateCeph:input_type -> openhdc.nexus.v1.CreateCephRequest
	16,  // 76: openhdc.nexus.v1.Nexus.AddCephUnits:input_type -> openhdc.nexus.v1.AddCephUnitsRequest
	17,  // 77: openhdc.nexus.v1.Nexus.ListKuberneteses:input_type -> openhdc.nexus.v1.ListKubernetesesRequest
	19,  // 78: openhdc.nexus.v1.Nexus.CreateKubernetes:input_type -> openhdc.nexus.v1.CreateKubernetesRequest
	20,  // 79: openhdc.nexus.v1.Nexus.AddKubernetesUnits:input_type -> openhdc.nexus.v1.AddKubernetesUnitsRequest
	21,  // 80: openhdc.nexus.v1.Nexus.GetConfiguration:input_type -> openhdc.nexus.v1.GetConfigurationRequest
	22,  // 81: openhdc.nexus.v1.Nexus.UpdateNTPServer:input_type -> openhdc.nexus.v1.UpdateNTPServerRequest
	23,  // 82: openhdc.nexus.v1.Nexus.UpdatePackageRepository:input_type -> openhdc.nexus.v1.UpdatePackageRepositoryRequest
	24,  // 83: openhdc.nexus.v1.Nexus.CreateBootImage:input_type -> openhdc.nexus.v1.CreateBootImageRequest
	25,  // 84: openhdc.nexus.v1.Nexus.SetDefaultBootImage:input_type -> openhdc.nexus.v1.SetDefaultBootImageRequest
	26,  // 85: openhdc.nexus.v1.Nexus.ImportBootImages:input_type -> openhdc.nexus.v1.ImportBootImagesRequest
	27,  // 86: openhdc.nexus.v1.Nexus.IsImportingBootImages:input_type -> openhdc.nexus.v1.IsImportingBootImagesRequest
	29,  // 87: openhdc.nexus.v1.Nexus.ListBootImageSelections:input_type -> openhdc.nexus.v1.ListBootImageSelectionsRequest
	31,  // 88: openhdc.nexus.v1.Nexus.ListNetworks:input_type -> openhdc.nexus.v1.ListNetworksRequest
	33,  // 89: openhdc.nexus.v1.Nexus.CreateNetwork:input_type -> openhdc.nexus.v1.CreateNetworkRequest
	34,  // 90: openhdc.nexus.v1.Nexus.CreateIPRange:input_type -> openhdc.nexus.v1.CreateIPRangeRequest
	35,  // 91: openhdc.nexus.v1.Nexus.DeleteNetwork:input_type -> openhdc.nexus.v1.DeleteNetworkRequest
	36,  // 92: openhdc.nexus.v1.Nexus.DeleteIPRange:input_type -> openhdc.nexus.v1.DeleteIPRangeRequest
	37,  // 93: openhdc.nexus.v1.Nexus.UpdateFabric:input_type -> openhdc.nexus.v1.UpdateFabricRequest
	38,  // 94: openhdc.nexus.v1.Nexus.UpdateVLAN:input_type -> openhdc.nexus.v1.UpdateVLANRequest
	39,  // 95: openhdc.nexus.v1.Nexus.UpdateSubnet:input_type -> openhdc.nexus.v1.UpdateSubnetRequest
	40,  // 96: openhdc.nexus.v1.Nexus.UpdateIPRange:input_type -> openhdc.nexus.v1.UpdateIPRangeRequest
	41,  // 97: openhdc.nexus.v1.Nexus.ListMachines:input_type -> openhdc.nexus.v1.ListMachinesRequest
	43,  // 98: openhdc.nexus.v1.Nexus.GetMachine:input_type -> openhdc.nexus.v1.GetMachineRequest
	44,  // 99: openhdc.nexus.v1.Nexus.CreateMachine:input_type -> openhdc.nexus.v1.CreateMachineRequest
	45,  // 100: openhdc.nexus.v1.Nexus.DeleteMachine:input_type -> openhdc.nexus.v1.DeleteMachineRequest
	46,  // 101: openhdc.nexus.v1.Nexus.PowerOnMachine:input_type -> openhdc.nexus.v1.PowerOnMachineRequest
	47,  // 102: openhdc.nexus.v1.Nexus.PowerOffMachine:input_type -> openhdc.nexus.v1.PowerOffMachineRequest
	48,  // 103: openhdc.nexus.v1.Nexus.AddMachineTags:input_type -> openhdc.nexus.v1.AddMachineTagsRequest
	49,  // 104: openhdc.nexus.v1.Nexus.RemoveMachineTags:input_type -> openhdc.nexus.v1.RemoveMachineTagsRequest
	50,  // 105: openhdc.nexus.v1.Nexus.ListScopes:input_type -> openhdc.nexus.v1.ListScopesRequest
	52,  // 106: openhdc.nexus.v1.Nexus.CreateScope:input_type -> openhdc.nexus.v1.CreateScopeRequest
	53,  // 107: openhdc.nexus.v1.Nexus.ListFacilities:input_type -> openhdc.nexus.v1.ListFacilitiesRequest
	55,  // 108: openhdc.nexus.v1.Nexus.GetFacility:input_type -> openhdc.nexus.v1.GetFacilityRequest
	56,  // 109: openhdc.nexus.v1.Nexus.CreateFacility:input_type -> openhdc.nexus.v1.CreateFacilityRequest
	57,  // 110: openhdc.nexus.v1.Nexus.UpdateFacility:input_type -> openhdc.nexus.v1.UpdateFacilityRequest
	58,  // 111: openhdc.nexus.v1.Nexus.DeleteFacility:input_type -> openhdc.nexus.v1.DeleteFacilityRequest
	59,  // 112: openhdc.nexus.v1.Nexus.ExposeFacility:input_type -> openhdc.nexus.v1.ExposeFacilityRequest
	60,  // 113: openhdc.nexus.v1.Nexus.AddFacilityUnits:input_type -> openhdc.nexus.v1.AddFacilityUnitsRequest
	62,  // 114: openhdc.nexus.v1.Nexus.ListActions:input_type -> openhdc.nexus.v1.ListActionsRequest
	64,  // 115: openhdc.nexus.v1.Nexus.DoAction:input_type -> openhdc.nexus.v1.DoActionRequest
	65,  // 116: openhdc.nexus.v1.Nexus.ListCharms:input_type -> openhdc.nexus.v1.ListCharmsRequest
	67,  // 117: openhdc.nexus.v1.Nexus.GetCharm:input_type -> openhdc.nexus.v1.GetCharmRequest
	68,  // 118: openhdc.nexus.v1.Nexus.GetCharmMetadata:input_type -> openhdc.nexus.v1.GetCharmMetadataRequest
	69,  // 119: openhdc.nexus.v1.Nexus.ListCharmArtifacts:input_type -> openhdc.nexus.v1.ListCharmArtifactsRequest
	71,  // 120: openhdc.nexus.v1.Nexus.ListApplications:input_type -> openhdc.nexus.v1.ListApplicationsRequest
	73,  // 121: openhdc.nexus.v1.Nexus.GetApplication:input_type -> openhdc.nexus.v1.GetApplicationRequest
	74,  // 122: openhdc.nexus.v1.Nexus.ListReleases:input_type -> openhdc.nexus.v1.ListReleasesRequest
	76,  // 123: openhdc.nexus.v1.Nexus.CreateRelease:input_type -> openhdc.nexus.v1.CreateReleaseRequest
	77,  // 124: openhdc.nexus.v1.Nexus.UpdateRelease:input_type -> openhdc.nexus.v1.UpdateReleaseRequest
	78,  // 125: openhdc.nexus.v1.Nexus.DeleteRelease:input_type -> openhdc.nexus.v1.DeleteReleaseRequest
	79,  // 126: openhdc.nexus.v1.Nexus.RollbackRelease:input_type -> openhdc.nexus.v1.RollbackReleaseRequest
	80,  // 127: openhdc.nexus.v1.Nexus.ListCharts:input_type -> openhdc.nexus.v1.ListChartsRequest
	82,  // 128: openhdc.nexus.v1.Nexus.GetChart:input_type -> openhdc.nexus.v1.GetChartRequest
	83,  // 129: openhdc.nexus.v1.Nexus.GetChartMetadata:input_type -> openhdc.nexus.v1.GetChartMetadataRequest
	84,  // 130: openhdc.nexus.v1.Nexus.ListTags:input_type -> openhdc.nexus.v1.ListTagsRequest
	86,  // 131: openhdc.nexus.v1.Nexus.GetTag:input_type -> openhdc.nexus.v1.GetTagRequest
	87,  // 132: openhdc.nexus.v1.Nexus.CreateTag:input_type -> openhdc.nexus.v1.CreateTagRequest
	88,  // 133: openhdc.nexus.v1.Nexus.DeleteTag:input_type -> openhdc.nexus.v1.DeleteTagRequest
	89,  // 134: openhdc.nexus.v1.Nexus.ListStorageClasses:input_type -> openhdc.nexus.v1.ListStorageClassesRequest
	91,  // 135: openhdc.nexus.v1.Nexus.CreateStorageClass:input_type -> openhdc.nexus.v1.CreateStorageClassRequest
	12,  // 136: openhdc.nexus.v1.Nexus.VerifyEnvironment:output_type -> openhdc.nexus.v1.VerifyEnvironmentResponse
	14,  // 137: openhdc.nexus.v1.Nexus.ListCephes:output_type -> openhdc.nexus.v1.ListCephesResponse
	111, // 138: openhdc.nexus.v1.Nexus.CreateCeph:output_type -> openhdc.nexus.v1.Facility.Info
	135, // 139: openhdc.nexus.v1.Nexus.AddCephUnits:output_type -> google.protobuf.Empty
	18,  // 140: openhdc.nexus.v1.Nexus.ListKuberneteses:output_type -> openhdc.nexus.v1.ListKubernetesesResponse
	111, // 141: openhdc.nexus.v1.Nexus.CreateKubernetes:output_type -> openhdc.nexus.v1.Facility.Info
	135, // 142: openhdc.nexus.v1.Nexus.AddKubernetesUnits:output_type -> google.protobuf.Empty
	1,   // 143: openhdc.nexus.v1.Nexus.GetConfiguration:output_type -> openhdc.nexus.v1.Configuration
	92,  // 144: openhdc.nexus.v1.Nexus.UpdateNTPServer:output_type -> openhdc.nexus.v1.Configuration.NTPServer
	93,  // 145: openhdc.nexus.v1.Nexus.UpdatePackageRepository:output_type -> openhdc.nexus.v1.Configuration.PackageRepository
	95,  // 146: openhdc.nexus.v1.Nexus.CreateBootImage:output_type -> openhdc.nexus.v1.Configuration.BootImage
	135, // 147: openhdc.nexus.v1.Nexus.SetDefaultBootImage:output_type -> google.protobuf.Empty
	135, // 148: openhdc.nexus.v1.Nexus.ImportBootImages:output_type -> google.protobuf.Empty
	28,  // 149: openhdc.nexus.v1.Nexus.IsImportingBootImages:output_type -> openhdc.nexus.v1.IsImportingBootImagesResponse
	30,  // 150: openhdc.nexus.v1.Nexus.ListBootImageSelections:output_type -> openhdc.nexus.v1.ListBootImageSelectionsResponse
	32,  // 151: openhdc.nexus.v1.Nexus.ListNetworks:output_type -> openhdc.nexus.v1.ListNetworksResponse
	2,   // 152: openhdc.nexus.v1.Nexus.CreateNetwork:output_type -> openhdc.nexus.v1.Network
	98,  // 153: openhdc.nexus.v1.Nexus.CreateIPRange:output_type -> openhdc.nexus.v1.Network.IPRange
	135, // 154: openhdc.nexus.v1.Nexus.DeleteNetwork:output_type -> google.protobuf.Empty
	135, // 155: openhdc.nexus.v1.Nexus.DeleteIPRange:output_type -> google.protobuf.Empty
	100, // 156: openhdc.nexus.v1.Nexus.UpdateFabric:output_type -> openhdc.nexus.v1.Network.Fabric
	101, // 157: openhdc.nexus.v1.Nexus.UpdateVLAN:output_type -> openhdc.nexus.v1.Network.VLAN
	102, // 158: openhdc.nexus.v1.Nexus.UpdateSubnet:output_type -> openhdc.nexus.v1.Network.Subnet
	98,  // 159: openhdc.nexus.v1.Nexus.UpdateIPRange:output_type -> openhdc.nexus.v1.Network.IPRange
	42,  // 160: openhdc.nexus.v1.Nexus.ListMachines:output_type -> openhdc.nexus.v1.ListMachinesResponse
	3,   // 161: openhdc.nexus.v1.Nexus.GetMachine:output_type -> openhdc.nexus.v1.Machine
	3,   // 162: openhdc.nexus.v1.Nexus.CreateMachine:output_type -> openhdc.nexus.v1.Machine
	135, // 163: openhdc.nexus.v1.Nexus.DeleteMachine:output_type -> google.protobuf.Empty
	3,   // 164: openhdc.nexus.v1.Nexus.PowerOnMachine:output_type -> openhdc.nexus.v1.Machine
	3,   // 165: openhdc.nexus.v1.Nexus.PowerOffMachine:output_type -> openhdc.nexus.v1.Machine
	135, // 166: openhdc.nexus.v1.Nexus.AddMachineTags:output_type -> google.protobuf.Empty
	135, // 167: openhdc.nexus.v1.Nexus.RemoveMachineTags:output_type -> google.protobuf.Empty
	51,  // 168: openhdc.nexus.v1.Nexus.ListScopes:output_type -> openhdc.nexus.v1.ListScopesResponse
	4,   // 169: openhdc.nexus.v1.Nexus.CreateScope:output_type -> openhdc.nexus.v1.Scope
	54,  // 170: openhdc.nexus.v1.Nexus.ListFacilities:output_type -> openhdc.nexus.v1.ListFacilitiesResponse
	5,   // 171: openhdc.nexus.v1.Nexus.GetFacility:output_type -> openhdc.nexus.v1.Facility
	5,   // 172: openhdc.nexus.v1.Nexus.CreateFacility:output_type -> openhdc.nexus.v1.Facility
	5,   // 173: openhdc.nexus.v1.Nexus.UpdateFacility:output_type -> openhdc.nexus.v1.Facility
	135, // 174: openhdc.nexus.v1.Nexus.DeleteFacility:output_type -> google.protobuf.Empty
	135, // 175: openhdc.nexus.v1.Nexus.ExposeFacility:output_type -> google.protobuf.Empty
	61,  // 176: openhdc.nexus.v1.Nexus.AddFacilityUnits:output_type -> openhdc.nexus.v1.AddFacilityUnitsResponse
	63,  // 177: openhdc.nexus.v1.Nexus.ListActions:output_type -> openhdc.nexus.v1.ListActionsResponse
	135, // 178: openhdc.nexus.v1.Nexus.DoAction:output_type -> google.protobuf.Empty
	66,  // 179: openhdc.nexus.v1.Nexus.ListCharms:output_type -> openhdc.nexus.v1.ListCharmsResponse
	112, // 180: openhdc.nexus.v1.Nexus.GetCharm:output_type -> openhdc.nexus.v1.Facility.Charm
	116, // 181: openhdc.nexus.v1.Nexus.GetCharmMetadata:output_type -> openhdc.nexus.v1.Facility.Charm.Metadata
	70,  // 182: openhdc.nexus.v1.Nexus.ListCharmArtifacts:output_type -> openhdc.nexus.v1.ListCharmArtifactsResponse
	72,  // 183: openhdc.nexus.v1.Nexus.ListApplications:output_type -> openhdc.nexus.v1.ListApplicationsResponse
	6,   // 184: openhdc.nexus.v1.Nexus.GetApplication:output_type -> openhdc.nexus.v1.Application
	75,  // 185: openhdc.nexus.v1.Nexus.ListReleases:output_type -> openhdc.nexus.v1.ListReleasesResponse
	120, // 186: openhdc.nexus.v1.Nexus.CreateRelease:output_type -> openhdc.nexus.v1.Application.Release
	120, // 187: openhdc.nexus.v1.Nexus.UpdateRelease:output_type -> openhdc.nexus.v1.Application.Release
	135, // 188: openhdc.nexus.v1.Nexus.DeleteRelease:output_type -> google.protobuf.Empty
	135, // 189: openhdc.nexus.v1.Nexus.RollbackRelease:output_type -> google.protobuf.Empty
	81,  // 190: openhdc.nexus.v1.Nexus.ListCharts:output_type -> openhdc.nexus.v1.ListChartsResponse
	119, // 191: openhdc.nexus.v1.Nexus.GetChart:output_type -> openhdc.nexus.v1.Application.Chart
	127, // 192: openhdc.nexus.v1.Nexus.GetChartMetadata:output_type -> openhdc.nexus.v1.Application.Chart.Metadata
	85,  // 193: openhdc.nexus.v1.Nexus.ListTags:output_type -> openhdc.nexus.v1.ListTagsResponse
	8,   // 194: openhdc.nexus.v1.Nexus.GetTag:output_type -> openhdc.nexus.v1.Tag
	8,   // 195: openhdc.nexus.v1.Nexus.CreateTag:output_type -> openhdc.nexus.v1.Tag
	135, // 196: openhdc.nexus.v1.Nexus.DeleteTag:output_type -> google.protobuf.Empty
	90,  // 197: openhdc.nexus.v1.Nexus.ListStorageClasses:output_type -> openhdc.nexus.v1.ListStorageClassesResponse
	9,   // 198: openhdc.nexus.v1.Nexus.CreateStorageClass:output_type -> openhdc.nexus.v1.StorageClass
	136, // [136:199] is the sub-list for method output_type
	73,  // [73:136] is the sub-list for method input_type
	73,  // [73:73] is the sub-list for extension type_name
	73,  // [73:73] is the sub-list for extension extendee
	0,   // [0:73] is the sub-list for field type_name
}

func init() { file_api_nexus_v1_nexus_proto_init() }
func file_api_nexus_v1_nexus_proto_init() {
	if File_api_nexus_v1_nexus_proto != nil {
		return
	}
	file_api_nexus_v1_nexus_proto_msgTypes[102].OneofWrappers = []any{
		(*machine_Placement_Lxd)(nil),
		(*machine_Placement_Kvm)(nil),
		(*machine_Placement_Machine)(nil),
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_api_nexus_v1_nexus_proto_rawDesc), len(file_api_nexus_v1_nexus_proto_rawDesc)),
			NumEnums:      1,
			NumMessages:   132,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_api_nexus_v1_nexus_proto_goTypes,
		DependencyIndexes: file_api_nexus_v1_nexus_proto_depIdxs,
		EnumInfos:         file_api_nexus_v1_nexus_proto_enumTypes,
		MessageInfos:      file_api_nexus_v1_nexus_proto_msgTypes,
	}.Build()
	File_api_nexus_v1_nexus_proto = out.File
	file_api_nexus_v1_nexus_proto_goTypes = nil
	file_api_nexus_v1_nexus_proto_depIdxs = nil
}
