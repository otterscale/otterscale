// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.5
// 	protoc        v6.30.1
// source: api/nexus/v1/nexus.proto

package pb

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	emptypb "google.golang.org/protobuf/types/known/emptypb"
	_ "google.golang.org/protobuf/types/known/timestamppb"
	reflect "reflect"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type Configuration struct {
	state                          protoimpl.MessageState              `protogen:"opaque.v1"`
	xxx_hidden_NtpServer           *Configuration_NTPServer            `protobuf:"bytes,1,opt,name=ntp_server,json=ntpServer"`
	xxx_hidden_PackageRepositories *[]*Configuration_PackageRepository `protobuf:"bytes,2,rep,name=package_repositories,json=packageRepositories"`
	xxx_hidden_BootResources       *[]*Configuration_BootResource      `protobuf:"bytes,3,rep,name=boot_resources,json=bootResources"`
	unknownFields                  protoimpl.UnknownFields
	sizeCache                      protoimpl.SizeCache
}

func (x *Configuration) Reset() {
	*x = Configuration{}
	mi := &file_api_nexus_v1_nexus_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Configuration) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Configuration) ProtoMessage() {}

func (x *Configuration) ProtoReflect() protoreflect.Message {
	mi := &file_api_nexus_v1_nexus_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *Configuration) GetNtpServer() *Configuration_NTPServer {
	if x != nil {
		return x.xxx_hidden_NtpServer
	}
	return nil
}

func (x *Configuration) GetPackageRepositories() []*Configuration_PackageRepository {
	if x != nil {
		if x.xxx_hidden_PackageRepositories != nil {
			return *x.xxx_hidden_PackageRepositories
		}
	}
	return nil
}

func (x *Configuration) GetBootResources() []*Configuration_BootResource {
	if x != nil {
		if x.xxx_hidden_BootResources != nil {
			return *x.xxx_hidden_BootResources
		}
	}
	return nil
}

func (x *Configuration) SetNtpServer(v *Configuration_NTPServer) {
	x.xxx_hidden_NtpServer = v
}

func (x *Configuration) SetPackageRepositories(v []*Configuration_PackageRepository) {
	x.xxx_hidden_PackageRepositories = &v
}

func (x *Configuration) SetBootResources(v []*Configuration_BootResource) {
	x.xxx_hidden_BootResources = &v
}

func (x *Configuration) HasNtpServer() bool {
	if x == nil {
		return false
	}
	return x.xxx_hidden_NtpServer != nil
}

func (x *Configuration) ClearNtpServer() {
	x.xxx_hidden_NtpServer = nil
}

type Configuration_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	NtpServer           *Configuration_NTPServer
	PackageRepositories []*Configuration_PackageRepository
	BootResources       []*Configuration_BootResource
}

func (b0 Configuration_builder) Build() *Configuration {
	m0 := &Configuration{}
	b, x := &b0, m0
	_, _ = b, x
	x.xxx_hidden_NtpServer = b.NtpServer
	x.xxx_hidden_PackageRepositories = &b.PackageRepositories
	x.xxx_hidden_BootResources = &b.BootResources
	return m0
}

type Network struct {
	state             protoimpl.MessageState `protogen:"opaque.v1"`
	xxx_hidden_Fabric *Network_Fabric        `protobuf:"bytes,1,opt,name=fabric"`
	xxx_hidden_Vlan   *Network_VLAN          `protobuf:"bytes,2,opt,name=vlan"`
	xxx_hidden_Subnet *Network_Subnet        `protobuf:"bytes,3,opt,name=subnet"`
	unknownFields     protoimpl.UnknownFields
	sizeCache         protoimpl.SizeCache
}

func (x *Network) Reset() {
	*x = Network{}
	mi := &file_api_nexus_v1_nexus_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Network) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Network) ProtoMessage() {}

func (x *Network) ProtoReflect() protoreflect.Message {
	mi := &file_api_nexus_v1_nexus_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *Network) GetFabric() *Network_Fabric {
	if x != nil {
		return x.xxx_hidden_Fabric
	}
	return nil
}

func (x *Network) GetVlan() *Network_VLAN {
	if x != nil {
		return x.xxx_hidden_Vlan
	}
	return nil
}

func (x *Network) GetSubnet() *Network_Subnet {
	if x != nil {
		return x.xxx_hidden_Subnet
	}
	return nil
}

func (x *Network) SetFabric(v *Network_Fabric) {
	x.xxx_hidden_Fabric = v
}

func (x *Network) SetVlan(v *Network_VLAN) {
	x.xxx_hidden_Vlan = v
}

func (x *Network) SetSubnet(v *Network_Subnet) {
	x.xxx_hidden_Subnet = v
}

func (x *Network) HasFabric() bool {
	if x == nil {
		return false
	}
	return x.xxx_hidden_Fabric != nil
}

func (x *Network) HasVlan() bool {
	if x == nil {
		return false
	}
	return x.xxx_hidden_Vlan != nil
}

func (x *Network) HasSubnet() bool {
	if x == nil {
		return false
	}
	return x.xxx_hidden_Subnet != nil
}

func (x *Network) ClearFabric() {
	x.xxx_hidden_Fabric = nil
}

func (x *Network) ClearVlan() {
	x.xxx_hidden_Vlan = nil
}

func (x *Network) ClearSubnet() {
	x.xxx_hidden_Subnet = nil
}

type Network_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	Fabric *Network_Fabric
	Vlan   *Network_VLAN
	Subnet *Network_Subnet
}

func (b0 Network_builder) Build() *Network {
	m0 := &Network{}
	b, x := &b0, m0
	_, _ = b, x
	x.xxx_hidden_Fabric = b.Fabric
	x.xxx_hidden_Vlan = b.Vlan
	x.xxx_hidden_Subnet = b.Subnet
	return m0
}

type Machine struct {
	state                          protoimpl.MessageState       `protogen:"opaque.v1"`
	xxx_hidden_Id                  *string                      `protobuf:"bytes,1,opt,name=id"`
	xxx_hidden_HardwareUuid        *string                      `protobuf:"bytes,101,opt,name=hardware_uuid,json=hardwareUuid"`
	xxx_hidden_Hostname            *string                      `protobuf:"bytes,102,opt,name=hostname"`
	xxx_hidden_Fqdn                *string                      `protobuf:"bytes,103,opt,name=fqdn"`
	xxx_hidden_Tags                []string                     `protobuf:"bytes,104,rep,name=tags"`
	xxx_hidden_Description         *string                      `protobuf:"bytes,105,opt,name=description"`
	xxx_hidden_Status              *string                      `protobuf:"bytes,201,opt,name=status"`
	xxx_hidden_PowerState          *string                      `protobuf:"bytes,301,opt,name=power_state,json=powerState"`
	xxx_hidden_PowerType           *string                      `protobuf:"bytes,302,opt,name=power_type,json=powerType"`
	xxx_hidden_Osystem             *string                      `protobuf:"bytes,401,opt,name=osystem"`
	xxx_hidden_DistroSeries        *string                      `protobuf:"bytes,402,opt,name=distro_series,json=distroSeries"`
	xxx_hidden_HweKernel           *string                      `protobuf:"bytes,403,opt,name=hwe_kernel,json=hweKernel"`
	xxx_hidden_Architecture        *string                      `protobuf:"bytes,404,opt,name=architecture"`
	xxx_hidden_CpuSpeed            int64                        `protobuf:"varint,405,opt,name=cpu_speed,json=cpuSpeed"`
	xxx_hidden_CpuCount            int64                        `protobuf:"varint,406,opt,name=cpu_count,json=cpuCount"`
	xxx_hidden_MemoryMb            int64                        `protobuf:"varint,407,opt,name=memory_mb,json=memoryMb"`
	xxx_hidden_StorageMb           float64                      `protobuf:"fixed64,408,opt,name=storage_mb,json=storageMb"`
	xxx_hidden_IpAddresses         []string                     `protobuf:"bytes,409,rep,name=ip_addresses,json=ipAddresses"`
	xxx_hidden_WorkloadAnnotations map[string]string            `protobuf:"bytes,501,rep,name=workload_annotations,json=workloadAnnotations" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	xxx_hidden_HardwareInformation map[string]string            `protobuf:"bytes,601,rep,name=hardware_information,json=hardwareInformation" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	xxx_hidden_BiosBootMethod      *string                      `protobuf:"bytes,602,opt,name=bios_boot_method,json=biosBootMethod"`
	xxx_hidden_NumaNodes           *[]*Machine_NUMANode         `protobuf:"bytes,701,rep,name=numa_nodes,json=numaNodes"`
	xxx_hidden_BlockDevices        *[]*Machine_BlockDevice      `protobuf:"bytes,801,rep,name=block_devices,json=blockDevices"`
	xxx_hidden_NetworkInterfaces   *[]*Machine_NetworkInterface `protobuf:"bytes,802,rep,name=network_interfaces,json=networkInterfaces"`
	XXX_raceDetectHookData         protoimpl.RaceDetectHookData
	XXX_presence                   [1]uint32
	unknownFields                  protoimpl.UnknownFields
	sizeCache                      protoimpl.SizeCache
}

func (x *Machine) Reset() {
	*x = Machine{}
	mi := &file_api_nexus_v1_nexus_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Machine) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Machine) ProtoMessage() {}

func (x *Machine) ProtoReflect() protoreflect.Message {
	mi := &file_api_nexus_v1_nexus_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *Machine) GetId() string {
	if x != nil {
		if x.xxx_hidden_Id != nil {
			return *x.xxx_hidden_Id
		}
		return ""
	}
	return ""
}

func (x *Machine) GetHardwareUuid() string {
	if x != nil {
		if x.xxx_hidden_HardwareUuid != nil {
			return *x.xxx_hidden_HardwareUuid
		}
		return ""
	}
	return ""
}

func (x *Machine) GetHostname() string {
	if x != nil {
		if x.xxx_hidden_Hostname != nil {
			return *x.xxx_hidden_Hostname
		}
		return ""
	}
	return ""
}

func (x *Machine) GetFqdn() string {
	if x != nil {
		if x.xxx_hidden_Fqdn != nil {
			return *x.xxx_hidden_Fqdn
		}
		return ""
	}
	return ""
}

func (x *Machine) GetTags() []string {
	if x != nil {
		return x.xxx_hidden_Tags
	}
	return nil
}

func (x *Machine) GetDescription() string {
	if x != nil {
		if x.xxx_hidden_Description != nil {
			return *x.xxx_hidden_Description
		}
		return ""
	}
	return ""
}

func (x *Machine) GetStatus() string {
	if x != nil {
		if x.xxx_hidden_Status != nil {
			return *x.xxx_hidden_Status
		}
		return ""
	}
	return ""
}

func (x *Machine) GetPowerState() string {
	if x != nil {
		if x.xxx_hidden_PowerState != nil {
			return *x.xxx_hidden_PowerState
		}
		return ""
	}
	return ""
}

func (x *Machine) GetPowerType() string {
	if x != nil {
		if x.xxx_hidden_PowerType != nil {
			return *x.xxx_hidden_PowerType
		}
		return ""
	}
	return ""
}

func (x *Machine) GetOsystem() string {
	if x != nil {
		if x.xxx_hidden_Osystem != nil {
			return *x.xxx_hidden_Osystem
		}
		return ""
	}
	return ""
}

func (x *Machine) GetDistroSeries() string {
	if x != nil {
		if x.xxx_hidden_DistroSeries != nil {
			return *x.xxx_hidden_DistroSeries
		}
		return ""
	}
	return ""
}

func (x *Machine) GetHweKernel() string {
	if x != nil {
		if x.xxx_hidden_HweKernel != nil {
			return *x.xxx_hidden_HweKernel
		}
		return ""
	}
	return ""
}

func (x *Machine) GetArchitecture() string {
	if x != nil {
		if x.xxx_hidden_Architecture != nil {
			return *x.xxx_hidden_Architecture
		}
		return ""
	}
	return ""
}

func (x *Machine) GetCpuSpeed() int64 {
	if x != nil {
		return x.xxx_hidden_CpuSpeed
	}
	return 0
}

func (x *Machine) GetCpuCount() int64 {
	if x != nil {
		return x.xxx_hidden_CpuCount
	}
	return 0
}

func (x *Machine) GetMemoryMb() int64 {
	if x != nil {
		return x.xxx_hidden_MemoryMb
	}
	return 0
}

func (x *Machine) GetStorageMb() float64 {
	if x != nil {
		return x.xxx_hidden_StorageMb
	}
	return 0
}

func (x *Machine) GetIpAddresses() []string {
	if x != nil {
		return x.xxx_hidden_IpAddresses
	}
	return nil
}

func (x *Machine) GetWorkloadAnnotations() map[string]string {
	if x != nil {
		return x.xxx_hidden_WorkloadAnnotations
	}
	return nil
}

func (x *Machine) GetHardwareInformation() map[string]string {
	if x != nil {
		return x.xxx_hidden_HardwareInformation
	}
	return nil
}

func (x *Machine) GetBiosBootMethod() string {
	if x != nil {
		if x.xxx_hidden_BiosBootMethod != nil {
			return *x.xxx_hidden_BiosBootMethod
		}
		return ""
	}
	return ""
}

func (x *Machine) GetNumaNodes() []*Machine_NUMANode {
	if x != nil {
		if x.xxx_hidden_NumaNodes != nil {
			return *x.xxx_hidden_NumaNodes
		}
	}
	return nil
}

func (x *Machine) GetBlockDevices() []*Machine_BlockDevice {
	if x != nil {
		if x.xxx_hidden_BlockDevices != nil {
			return *x.xxx_hidden_BlockDevices
		}
	}
	return nil
}

func (x *Machine) GetNetworkInterfaces() []*Machine_NetworkInterface {
	if x != nil {
		if x.xxx_hidden_NetworkInterfaces != nil {
			return *x.xxx_hidden_NetworkInterfaces
		}
	}
	return nil
}

func (x *Machine) SetId(v string) {
	x.xxx_hidden_Id = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 0, 24)
}

func (x *Machine) SetHardwareUuid(v string) {
	x.xxx_hidden_HardwareUuid = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 1, 24)
}

func (x *Machine) SetHostname(v string) {
	x.xxx_hidden_Hostname = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 2, 24)
}

func (x *Machine) SetFqdn(v string) {
	x.xxx_hidden_Fqdn = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 3, 24)
}

func (x *Machine) SetTags(v []string) {
	x.xxx_hidden_Tags = v
}

func (x *Machine) SetDescription(v string) {
	x.xxx_hidden_Description = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 5, 24)
}

func (x *Machine) SetStatus(v string) {
	x.xxx_hidden_Status = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 6, 24)
}

func (x *Machine) SetPowerState(v string) {
	x.xxx_hidden_PowerState = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 7, 24)
}

func (x *Machine) SetPowerType(v string) {
	x.xxx_hidden_PowerType = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 8, 24)
}

func (x *Machine) SetOsystem(v string) {
	x.xxx_hidden_Osystem = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 9, 24)
}

func (x *Machine) SetDistroSeries(v string) {
	x.xxx_hidden_DistroSeries = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 10, 24)
}

func (x *Machine) SetHweKernel(v string) {
	x.xxx_hidden_HweKernel = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 11, 24)
}

func (x *Machine) SetArchitecture(v string) {
	x.xxx_hidden_Architecture = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 12, 24)
}

func (x *Machine) SetCpuSpeed(v int64) {
	x.xxx_hidden_CpuSpeed = v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 13, 24)
}

func (x *Machine) SetCpuCount(v int64) {
	x.xxx_hidden_CpuCount = v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 14, 24)
}

func (x *Machine) SetMemoryMb(v int64) {
	x.xxx_hidden_MemoryMb = v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 15, 24)
}

func (x *Machine) SetStorageMb(v float64) {
	x.xxx_hidden_StorageMb = v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 16, 24)
}

func (x *Machine) SetIpAddresses(v []string) {
	x.xxx_hidden_IpAddresses = v
}

func (x *Machine) SetWorkloadAnnotations(v map[string]string) {
	x.xxx_hidden_WorkloadAnnotations = v
}

func (x *Machine) SetHardwareInformation(v map[string]string) {
	x.xxx_hidden_HardwareInformation = v
}

func (x *Machine) SetBiosBootMethod(v string) {
	x.xxx_hidden_BiosBootMethod = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 20, 24)
}

func (x *Machine) SetNumaNodes(v []*Machine_NUMANode) {
	x.xxx_hidden_NumaNodes = &v
}

func (x *Machine) SetBlockDevices(v []*Machine_BlockDevice) {
	x.xxx_hidden_BlockDevices = &v
}

func (x *Machine) SetNetworkInterfaces(v []*Machine_NetworkInterface) {
	x.xxx_hidden_NetworkInterfaces = &v
}

func (x *Machine) HasId() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 0)
}

func (x *Machine) HasHardwareUuid() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 1)
}

func (x *Machine) HasHostname() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 2)
}

func (x *Machine) HasFqdn() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 3)
}

func (x *Machine) HasDescription() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 5)
}

func (x *Machine) HasStatus() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 6)
}

func (x *Machine) HasPowerState() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 7)
}

func (x *Machine) HasPowerType() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 8)
}

func (x *Machine) HasOsystem() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 9)
}

func (x *Machine) HasDistroSeries() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 10)
}

func (x *Machine) HasHweKernel() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 11)
}

func (x *Machine) HasArchitecture() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 12)
}

func (x *Machine) HasCpuSpeed() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 13)
}

func (x *Machine) HasCpuCount() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 14)
}

func (x *Machine) HasMemoryMb() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 15)
}

func (x *Machine) HasStorageMb() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 16)
}

func (x *Machine) HasBiosBootMethod() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 20)
}

func (x *Machine) ClearId() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 0)
	x.xxx_hidden_Id = nil
}

func (x *Machine) ClearHardwareUuid() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 1)
	x.xxx_hidden_HardwareUuid = nil
}

func (x *Machine) ClearHostname() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 2)
	x.xxx_hidden_Hostname = nil
}

func (x *Machine) ClearFqdn() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 3)
	x.xxx_hidden_Fqdn = nil
}

func (x *Machine) ClearDescription() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 5)
	x.xxx_hidden_Description = nil
}

func (x *Machine) ClearStatus() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 6)
	x.xxx_hidden_Status = nil
}

func (x *Machine) ClearPowerState() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 7)
	x.xxx_hidden_PowerState = nil
}

func (x *Machine) ClearPowerType() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 8)
	x.xxx_hidden_PowerType = nil
}

func (x *Machine) ClearOsystem() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 9)
	x.xxx_hidden_Osystem = nil
}

func (x *Machine) ClearDistroSeries() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 10)
	x.xxx_hidden_DistroSeries = nil
}

func (x *Machine) ClearHweKernel() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 11)
	x.xxx_hidden_HweKernel = nil
}

func (x *Machine) ClearArchitecture() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 12)
	x.xxx_hidden_Architecture = nil
}

func (x *Machine) ClearCpuSpeed() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 13)
	x.xxx_hidden_CpuSpeed = 0
}

func (x *Machine) ClearCpuCount() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 14)
	x.xxx_hidden_CpuCount = 0
}

func (x *Machine) ClearMemoryMb() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 15)
	x.xxx_hidden_MemoryMb = 0
}

func (x *Machine) ClearStorageMb() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 16)
	x.xxx_hidden_StorageMb = 0
}

func (x *Machine) ClearBiosBootMethod() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 20)
	x.xxx_hidden_BiosBootMethod = nil
}

type Machine_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	Id                  *string
	HardwareUuid        *string
	Hostname            *string
	Fqdn                *string
	Tags                []string
	Description         *string
	Status              *string
	PowerState          *string
	PowerType           *string
	Osystem             *string
	DistroSeries        *string
	HweKernel           *string
	Architecture        *string
	CpuSpeed            *int64
	CpuCount            *int64
	MemoryMb            *int64
	StorageMb           *float64
	IpAddresses         []string
	WorkloadAnnotations map[string]string
	HardwareInformation map[string]string
	BiosBootMethod      *string
	NumaNodes           []*Machine_NUMANode
	BlockDevices        []*Machine_BlockDevice
	NetworkInterfaces   []*Machine_NetworkInterface
}

func (b0 Machine_builder) Build() *Machine {
	m0 := &Machine{}
	b, x := &b0, m0
	_, _ = b, x
	if b.Id != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 0, 24)
		x.xxx_hidden_Id = b.Id
	}
	if b.HardwareUuid != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 1, 24)
		x.xxx_hidden_HardwareUuid = b.HardwareUuid
	}
	if b.Hostname != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 2, 24)
		x.xxx_hidden_Hostname = b.Hostname
	}
	if b.Fqdn != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 3, 24)
		x.xxx_hidden_Fqdn = b.Fqdn
	}
	x.xxx_hidden_Tags = b.Tags
	if b.Description != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 5, 24)
		x.xxx_hidden_Description = b.Description
	}
	if b.Status != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 6, 24)
		x.xxx_hidden_Status = b.Status
	}
	if b.PowerState != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 7, 24)
		x.xxx_hidden_PowerState = b.PowerState
	}
	if b.PowerType != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 8, 24)
		x.xxx_hidden_PowerType = b.PowerType
	}
	if b.Osystem != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 9, 24)
		x.xxx_hidden_Osystem = b.Osystem
	}
	if b.DistroSeries != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 10, 24)
		x.xxx_hidden_DistroSeries = b.DistroSeries
	}
	if b.HweKernel != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 11, 24)
		x.xxx_hidden_HweKernel = b.HweKernel
	}
	if b.Architecture != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 12, 24)
		x.xxx_hidden_Architecture = b.Architecture
	}
	if b.CpuSpeed != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 13, 24)
		x.xxx_hidden_CpuSpeed = *b.CpuSpeed
	}
	if b.CpuCount != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 14, 24)
		x.xxx_hidden_CpuCount = *b.CpuCount
	}
	if b.MemoryMb != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 15, 24)
		x.xxx_hidden_MemoryMb = *b.MemoryMb
	}
	if b.StorageMb != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 16, 24)
		x.xxx_hidden_StorageMb = *b.StorageMb
	}
	x.xxx_hidden_IpAddresses = b.IpAddresses
	x.xxx_hidden_WorkloadAnnotations = b.WorkloadAnnotations
	x.xxx_hidden_HardwareInformation = b.HardwareInformation
	if b.BiosBootMethod != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 20, 24)
		x.xxx_hidden_BiosBootMethod = b.BiosBootMethod
	}
	x.xxx_hidden_NumaNodes = &b.NumaNodes
	x.xxx_hidden_BlockDevices = &b.BlockDevices
	x.xxx_hidden_NetworkInterfaces = &b.NetworkInterfaces
	return m0
}

type Scope struct {
	state                   protoimpl.MessageState `protogen:"opaque.v1"`
	xxx_hidden_Uuid         *string                `protobuf:"bytes,1,opt,name=uuid"`
	xxx_hidden_Name         *string                `protobuf:"bytes,2,opt,name=name"`
	xxx_hidden_Type         *string                `protobuf:"bytes,3,opt,name=type"`
	xxx_hidden_ProviderType *string                `protobuf:"bytes,4,opt,name=provider_type,json=providerType"`
	xxx_hidden_Life         *string                `protobuf:"bytes,5,opt,name=life"`
	xxx_hidden_Status       *string                `protobuf:"bytes,6,opt,name=status"`
	xxx_hidden_AgentVersion *string                `protobuf:"bytes,7,opt,name=agent_version,json=agentVersion"`
	xxx_hidden_IsController bool                   `protobuf:"varint,8,opt,name=is_controller,json=isController"`
	xxx_hidden_MachineCount int64                  `protobuf:"varint,21,opt,name=machine_count,json=machineCount"`
	xxx_hidden_CoreCount    int64                  `protobuf:"varint,22,opt,name=core_count,json=coreCount"`
	xxx_hidden_UnitCount    int64                  `protobuf:"varint,23,opt,name=unit_count,json=unitCount"`
	XXX_raceDetectHookData  protoimpl.RaceDetectHookData
	XXX_presence            [1]uint32
	unknownFields           protoimpl.UnknownFields
	sizeCache               protoimpl.SizeCache
}

func (x *Scope) Reset() {
	*x = Scope{}
	mi := &file_api_nexus_v1_nexus_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Scope) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Scope) ProtoMessage() {}

func (x *Scope) ProtoReflect() protoreflect.Message {
	mi := &file_api_nexus_v1_nexus_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *Scope) GetUuid() string {
	if x != nil {
		if x.xxx_hidden_Uuid != nil {
			return *x.xxx_hidden_Uuid
		}
		return ""
	}
	return ""
}

func (x *Scope) GetName() string {
	if x != nil {
		if x.xxx_hidden_Name != nil {
			return *x.xxx_hidden_Name
		}
		return ""
	}
	return ""
}

func (x *Scope) GetType() string {
	if x != nil {
		if x.xxx_hidden_Type != nil {
			return *x.xxx_hidden_Type
		}
		return ""
	}
	return ""
}

func (x *Scope) GetProviderType() string {
	if x != nil {
		if x.xxx_hidden_ProviderType != nil {
			return *x.xxx_hidden_ProviderType
		}
		return ""
	}
	return ""
}

func (x *Scope) GetLife() string {
	if x != nil {
		if x.xxx_hidden_Life != nil {
			return *x.xxx_hidden_Life
		}
		return ""
	}
	return ""
}

func (x *Scope) GetStatus() string {
	if x != nil {
		if x.xxx_hidden_Status != nil {
			return *x.xxx_hidden_Status
		}
		return ""
	}
	return ""
}

func (x *Scope) GetAgentVersion() string {
	if x != nil {
		if x.xxx_hidden_AgentVersion != nil {
			return *x.xxx_hidden_AgentVersion
		}
		return ""
	}
	return ""
}

func (x *Scope) GetIsController() bool {
	if x != nil {
		return x.xxx_hidden_IsController
	}
	return false
}

func (x *Scope) GetMachineCount() int64 {
	if x != nil {
		return x.xxx_hidden_MachineCount
	}
	return 0
}

func (x *Scope) GetCoreCount() int64 {
	if x != nil {
		return x.xxx_hidden_CoreCount
	}
	return 0
}

func (x *Scope) GetUnitCount() int64 {
	if x != nil {
		return x.xxx_hidden_UnitCount
	}
	return 0
}

func (x *Scope) SetUuid(v string) {
	x.xxx_hidden_Uuid = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 0, 11)
}

func (x *Scope) SetName(v string) {
	x.xxx_hidden_Name = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 1, 11)
}

func (x *Scope) SetType(v string) {
	x.xxx_hidden_Type = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 2, 11)
}

func (x *Scope) SetProviderType(v string) {
	x.xxx_hidden_ProviderType = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 3, 11)
}

func (x *Scope) SetLife(v string) {
	x.xxx_hidden_Life = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 4, 11)
}

func (x *Scope) SetStatus(v string) {
	x.xxx_hidden_Status = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 5, 11)
}

func (x *Scope) SetAgentVersion(v string) {
	x.xxx_hidden_AgentVersion = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 6, 11)
}

func (x *Scope) SetIsController(v bool) {
	x.xxx_hidden_IsController = v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 7, 11)
}

func (x *Scope) SetMachineCount(v int64) {
	x.xxx_hidden_MachineCount = v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 8, 11)
}

func (x *Scope) SetCoreCount(v int64) {
	x.xxx_hidden_CoreCount = v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 9, 11)
}

func (x *Scope) SetUnitCount(v int64) {
	x.xxx_hidden_UnitCount = v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 10, 11)
}

func (x *Scope) HasUuid() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 0)
}

func (x *Scope) HasName() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 1)
}

func (x *Scope) HasType() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 2)
}

func (x *Scope) HasProviderType() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 3)
}

func (x *Scope) HasLife() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 4)
}

func (x *Scope) HasStatus() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 5)
}

func (x *Scope) HasAgentVersion() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 6)
}

func (x *Scope) HasIsController() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 7)
}

func (x *Scope) HasMachineCount() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 8)
}

func (x *Scope) HasCoreCount() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 9)
}

func (x *Scope) HasUnitCount() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 10)
}

func (x *Scope) ClearUuid() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 0)
	x.xxx_hidden_Uuid = nil
}

func (x *Scope) ClearName() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 1)
	x.xxx_hidden_Name = nil
}

func (x *Scope) ClearType() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 2)
	x.xxx_hidden_Type = nil
}

func (x *Scope) ClearProviderType() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 3)
	x.xxx_hidden_ProviderType = nil
}

func (x *Scope) ClearLife() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 4)
	x.xxx_hidden_Life = nil
}

func (x *Scope) ClearStatus() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 5)
	x.xxx_hidden_Status = nil
}

func (x *Scope) ClearAgentVersion() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 6)
	x.xxx_hidden_AgentVersion = nil
}

func (x *Scope) ClearIsController() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 7)
	x.xxx_hidden_IsController = false
}

func (x *Scope) ClearMachineCount() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 8)
	x.xxx_hidden_MachineCount = 0
}

func (x *Scope) ClearCoreCount() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 9)
	x.xxx_hidden_CoreCount = 0
}

func (x *Scope) ClearUnitCount() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 10)
	x.xxx_hidden_UnitCount = 0
}

type Scope_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	Uuid         *string
	Name         *string
	Type         *string
	ProviderType *string
	Life         *string
	Status       *string
	AgentVersion *string
	IsController *bool
	MachineCount *int64
	CoreCount    *int64
	UnitCount    *int64
}

func (b0 Scope_builder) Build() *Scope {
	m0 := &Scope{}
	b, x := &b0, m0
	_, _ = b, x
	if b.Uuid != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 0, 11)
		x.xxx_hidden_Uuid = b.Uuid
	}
	if b.Name != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 1, 11)
		x.xxx_hidden_Name = b.Name
	}
	if b.Type != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 2, 11)
		x.xxx_hidden_Type = b.Type
	}
	if b.ProviderType != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 3, 11)
		x.xxx_hidden_ProviderType = b.ProviderType
	}
	if b.Life != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 4, 11)
		x.xxx_hidden_Life = b.Life
	}
	if b.Status != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 5, 11)
		x.xxx_hidden_Status = b.Status
	}
	if b.AgentVersion != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 6, 11)
		x.xxx_hidden_AgentVersion = b.AgentVersion
	}
	if b.IsController != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 7, 11)
		x.xxx_hidden_IsController = *b.IsController
	}
	if b.MachineCount != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 8, 11)
		x.xxx_hidden_MachineCount = *b.MachineCount
	}
	if b.CoreCount != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 9, 11)
		x.xxx_hidden_CoreCount = *b.CoreCount
	}
	if b.UnitCount != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 10, 11)
		x.xxx_hidden_UnitCount = *b.UnitCount
	}
	return m0
}

type Facility struct {
	state         protoimpl.MessageState `protogen:"opaque.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Facility) Reset() {
	*x = Facility{}
	mi := &file_api_nexus_v1_nexus_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Facility) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Facility) ProtoMessage() {}

func (x *Facility) ProtoReflect() protoreflect.Message {
	mi := &file_api_nexus_v1_nexus_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

type Facility_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

}

func (b0 Facility_builder) Build() *Facility {
	m0 := &Facility{}
	b, x := &b0, m0
	_, _ = b, x
	return m0
}

type Application struct {
	state         protoimpl.MessageState `protogen:"opaque.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Application) Reset() {
	*x = Application{}
	mi := &file_api_nexus_v1_nexus_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Application) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Application) ProtoMessage() {}

func (x *Application) ProtoReflect() protoreflect.Message {
	mi := &file_api_nexus_v1_nexus_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

type Application_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

}

func (b0 Application_builder) Build() *Application {
	m0 := &Application{}
	b, x := &b0, m0
	_, _ = b, x
	return m0
}

type GetConfigurationRequest struct {
	state         protoimpl.MessageState `protogen:"opaque.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetConfigurationRequest) Reset() {
	*x = GetConfigurationRequest{}
	mi := &file_api_nexus_v1_nexus_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetConfigurationRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetConfigurationRequest) ProtoMessage() {}

func (x *GetConfigurationRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_nexus_v1_nexus_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

type GetConfigurationRequest_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

}

func (b0 GetConfigurationRequest_builder) Build() *GetConfigurationRequest {
	m0 := &GetConfigurationRequest{}
	b, x := &b0, m0
	_, _ = b, x
	return m0
}

type UpdateNTPServerRequest struct {
	state                protoimpl.MessageState `protogen:"opaque.v1"`
	xxx_hidden_Addresses []string               `protobuf:"bytes,1,rep,name=addresses"`
	unknownFields        protoimpl.UnknownFields
	sizeCache            protoimpl.SizeCache
}

func (x *UpdateNTPServerRequest) Reset() {
	*x = UpdateNTPServerRequest{}
	mi := &file_api_nexus_v1_nexus_proto_msgTypes[7]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UpdateNTPServerRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateNTPServerRequest) ProtoMessage() {}

func (x *UpdateNTPServerRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_nexus_v1_nexus_proto_msgTypes[7]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *UpdateNTPServerRequest) GetAddresses() []string {
	if x != nil {
		return x.xxx_hidden_Addresses
	}
	return nil
}

func (x *UpdateNTPServerRequest) SetAddresses(v []string) {
	x.xxx_hidden_Addresses = v
}

type UpdateNTPServerRequest_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	Addresses []string
}

func (b0 UpdateNTPServerRequest_builder) Build() *UpdateNTPServerRequest {
	m0 := &UpdateNTPServerRequest{}
	b, x := &b0, m0
	_, _ = b, x
	x.xxx_hidden_Addresses = b.Addresses
	return m0
}

type UpdatePackageRepositoryRequest struct {
	state                  protoimpl.MessageState `protogen:"opaque.v1"`
	xxx_hidden_Id          int64                  `protobuf:"varint,1,opt,name=id"`
	xxx_hidden_Url         *string                `protobuf:"bytes,2,opt,name=url"`
	xxx_hidden_SkipJuju    bool                   `protobuf:"varint,3,opt,name=skip_juju,json=skipJuju"`
	XXX_raceDetectHookData protoimpl.RaceDetectHookData
	XXX_presence           [1]uint32
	unknownFields          protoimpl.UnknownFields
	sizeCache              protoimpl.SizeCache
}

func (x *UpdatePackageRepositoryRequest) Reset() {
	*x = UpdatePackageRepositoryRequest{}
	mi := &file_api_nexus_v1_nexus_proto_msgTypes[8]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UpdatePackageRepositoryRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdatePackageRepositoryRequest) ProtoMessage() {}

func (x *UpdatePackageRepositoryRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_nexus_v1_nexus_proto_msgTypes[8]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *UpdatePackageRepositoryRequest) GetId() int64 {
	if x != nil {
		return x.xxx_hidden_Id
	}
	return 0
}

func (x *UpdatePackageRepositoryRequest) GetUrl() string {
	if x != nil {
		if x.xxx_hidden_Url != nil {
			return *x.xxx_hidden_Url
		}
		return ""
	}
	return ""
}

func (x *UpdatePackageRepositoryRequest) GetSkipJuju() bool {
	if x != nil {
		return x.xxx_hidden_SkipJuju
	}
	return false
}

func (x *UpdatePackageRepositoryRequest) SetId(v int64) {
	x.xxx_hidden_Id = v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 0, 3)
}

func (x *UpdatePackageRepositoryRequest) SetUrl(v string) {
	x.xxx_hidden_Url = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 1, 3)
}

func (x *UpdatePackageRepositoryRequest) SetSkipJuju(v bool) {
	x.xxx_hidden_SkipJuju = v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 2, 3)
}

func (x *UpdatePackageRepositoryRequest) HasId() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 0)
}

func (x *UpdatePackageRepositoryRequest) HasUrl() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 1)
}

func (x *UpdatePackageRepositoryRequest) HasSkipJuju() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 2)
}

func (x *UpdatePackageRepositoryRequest) ClearId() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 0)
	x.xxx_hidden_Id = 0
}

func (x *UpdatePackageRepositoryRequest) ClearUrl() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 1)
	x.xxx_hidden_Url = nil
}

func (x *UpdatePackageRepositoryRequest) ClearSkipJuju() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 2)
	x.xxx_hidden_SkipJuju = false
}

type UpdatePackageRepositoryRequest_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	Id       *int64
	Url      *string
	SkipJuju *bool
}

func (b0 UpdatePackageRepositoryRequest_builder) Build() *UpdatePackageRepositoryRequest {
	m0 := &UpdatePackageRepositoryRequest{}
	b, x := &b0, m0
	_, _ = b, x
	if b.Id != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 0, 3)
		x.xxx_hidden_Id = *b.Id
	}
	if b.Url != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 1, 3)
		x.xxx_hidden_Url = b.Url
	}
	if b.SkipJuju != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 2, 3)
		x.xxx_hidden_SkipJuju = *b.SkipJuju
	}
	return m0
}

type UpdateDefaultBootResourceRequest struct {
	state                   protoimpl.MessageState `protogen:"opaque.v1"`
	xxx_hidden_DistroSeries *string                `protobuf:"bytes,1,opt,name=distro_series,json=distroSeries"`
	XXX_raceDetectHookData  protoimpl.RaceDetectHookData
	XXX_presence            [1]uint32
	unknownFields           protoimpl.UnknownFields
	sizeCache               protoimpl.SizeCache
}

func (x *UpdateDefaultBootResourceRequest) Reset() {
	*x = UpdateDefaultBootResourceRequest{}
	mi := &file_api_nexus_v1_nexus_proto_msgTypes[9]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UpdateDefaultBootResourceRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateDefaultBootResourceRequest) ProtoMessage() {}

func (x *UpdateDefaultBootResourceRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_nexus_v1_nexus_proto_msgTypes[9]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *UpdateDefaultBootResourceRequest) GetDistroSeries() string {
	if x != nil {
		if x.xxx_hidden_DistroSeries != nil {
			return *x.xxx_hidden_DistroSeries
		}
		return ""
	}
	return ""
}

func (x *UpdateDefaultBootResourceRequest) SetDistroSeries(v string) {
	x.xxx_hidden_DistroSeries = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 0, 1)
}

func (x *UpdateDefaultBootResourceRequest) HasDistroSeries() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 0)
}

func (x *UpdateDefaultBootResourceRequest) ClearDistroSeries() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 0)
	x.xxx_hidden_DistroSeries = nil
}

type UpdateDefaultBootResourceRequest_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	DistroSeries *string
}

func (b0 UpdateDefaultBootResourceRequest_builder) Build() *UpdateDefaultBootResourceRequest {
	m0 := &UpdateDefaultBootResourceRequest{}
	b, x := &b0, m0
	_, _ = b, x
	if b.DistroSeries != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 0, 1)
		x.xxx_hidden_DistroSeries = b.DistroSeries
	}
	return m0
}

type SyncBootResourcesRequest struct {
	state         protoimpl.MessageState `protogen:"opaque.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *SyncBootResourcesRequest) Reset() {
	*x = SyncBootResourcesRequest{}
	mi := &file_api_nexus_v1_nexus_proto_msgTypes[10]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SyncBootResourcesRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SyncBootResourcesRequest) ProtoMessage() {}

func (x *SyncBootResourcesRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_nexus_v1_nexus_proto_msgTypes[10]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

type SyncBootResourcesRequest_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

}

func (b0 SyncBootResourcesRequest_builder) Build() *SyncBootResourcesRequest {
	m0 := &SyncBootResourcesRequest{}
	b, x := &b0, m0
	_, _ = b, x
	return m0
}

type ListNetworksRequest struct {
	state         protoimpl.MessageState `protogen:"opaque.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ListNetworksRequest) Reset() {
	*x = ListNetworksRequest{}
	mi := &file_api_nexus_v1_nexus_proto_msgTypes[11]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListNetworksRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListNetworksRequest) ProtoMessage() {}

func (x *ListNetworksRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_nexus_v1_nexus_proto_msgTypes[11]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

type ListNetworksRequest_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

}

func (b0 ListNetworksRequest_builder) Build() *ListNetworksRequest {
	m0 := &ListNetworksRequest{}
	b, x := &b0, m0
	_, _ = b, x
	return m0
}

type ListNetworksResponse struct {
	state               protoimpl.MessageState `protogen:"opaque.v1"`
	xxx_hidden_Networks *[]*Network            `protobuf:"bytes,1,rep,name=networks"`
	unknownFields       protoimpl.UnknownFields
	sizeCache           protoimpl.SizeCache
}

func (x *ListNetworksResponse) Reset() {
	*x = ListNetworksResponse{}
	mi := &file_api_nexus_v1_nexus_proto_msgTypes[12]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListNetworksResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListNetworksResponse) ProtoMessage() {}

func (x *ListNetworksResponse) ProtoReflect() protoreflect.Message {
	mi := &file_api_nexus_v1_nexus_proto_msgTypes[12]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *ListNetworksResponse) GetNetworks() []*Network {
	if x != nil {
		if x.xxx_hidden_Networks != nil {
			return *x.xxx_hidden_Networks
		}
	}
	return nil
}

func (x *ListNetworksResponse) SetNetworks(v []*Network) {
	x.xxx_hidden_Networks = &v
}

type ListNetworksResponse_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	Networks []*Network
}

func (b0 ListNetworksResponse_builder) Build() *ListNetworksResponse {
	m0 := &ListNetworksResponse{}
	b, x := &b0, m0
	_, _ = b, x
	x.xxx_hidden_Networks = &b.Networks
	return m0
}

type CreateNetworkRequest struct {
	state                  protoimpl.MessageState `protogen:"opaque.v1"`
	xxx_hidden_Cidr        *string                `protobuf:"bytes,1,opt,name=cidr"`
	xxx_hidden_GatewayIp   *string                `protobuf:"bytes,2,opt,name=gateway_ip,json=gatewayIp"`
	xxx_hidden_DnsServers  []string               `protobuf:"bytes,3,rep,name=dns_servers,json=dnsServers"`
	xxx_hidden_DhcpOn      bool                   `protobuf:"varint,11,opt,name=dhcp_on,json=dhcpOn"`
	XXX_raceDetectHookData protoimpl.RaceDetectHookData
	XXX_presence           [1]uint32
	unknownFields          protoimpl.UnknownFields
	sizeCache              protoimpl.SizeCache
}

func (x *CreateNetworkRequest) Reset() {
	*x = CreateNetworkRequest{}
	mi := &file_api_nexus_v1_nexus_proto_msgTypes[13]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CreateNetworkRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateNetworkRequest) ProtoMessage() {}

func (x *CreateNetworkRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_nexus_v1_nexus_proto_msgTypes[13]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *CreateNetworkRequest) GetCidr() string {
	if x != nil {
		if x.xxx_hidden_Cidr != nil {
			return *x.xxx_hidden_Cidr
		}
		return ""
	}
	return ""
}

func (x *CreateNetworkRequest) GetGatewayIp() string {
	if x != nil {
		if x.xxx_hidden_GatewayIp != nil {
			return *x.xxx_hidden_GatewayIp
		}
		return ""
	}
	return ""
}

func (x *CreateNetworkRequest) GetDnsServers() []string {
	if x != nil {
		return x.xxx_hidden_DnsServers
	}
	return nil
}

func (x *CreateNetworkRequest) GetDhcpOn() bool {
	if x != nil {
		return x.xxx_hidden_DhcpOn
	}
	return false
}

func (x *CreateNetworkRequest) SetCidr(v string) {
	x.xxx_hidden_Cidr = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 0, 4)
}

func (x *CreateNetworkRequest) SetGatewayIp(v string) {
	x.xxx_hidden_GatewayIp = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 1, 4)
}

func (x *CreateNetworkRequest) SetDnsServers(v []string) {
	x.xxx_hidden_DnsServers = v
}

func (x *CreateNetworkRequest) SetDhcpOn(v bool) {
	x.xxx_hidden_DhcpOn = v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 3, 4)
}

func (x *CreateNetworkRequest) HasCidr() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 0)
}

func (x *CreateNetworkRequest) HasGatewayIp() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 1)
}

func (x *CreateNetworkRequest) HasDhcpOn() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 3)
}

func (x *CreateNetworkRequest) ClearCidr() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 0)
	x.xxx_hidden_Cidr = nil
}

func (x *CreateNetworkRequest) ClearGatewayIp() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 1)
	x.xxx_hidden_GatewayIp = nil
}

func (x *CreateNetworkRequest) ClearDhcpOn() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 3)
	x.xxx_hidden_DhcpOn = false
}

type CreateNetworkRequest_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	Cidr       *string
	GatewayIp  *string
	DnsServers []string
	DhcpOn     *bool
}

func (b0 CreateNetworkRequest_builder) Build() *CreateNetworkRequest {
	m0 := &CreateNetworkRequest{}
	b, x := &b0, m0
	_, _ = b, x
	if b.Cidr != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 0, 4)
		x.xxx_hidden_Cidr = b.Cidr
	}
	if b.GatewayIp != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 1, 4)
		x.xxx_hidden_GatewayIp = b.GatewayIp
	}
	x.xxx_hidden_DnsServers = b.DnsServers
	if b.DhcpOn != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 3, 4)
		x.xxx_hidden_DhcpOn = *b.DhcpOn
	}
	return m0
}

type CreateIPRangeRequest struct {
	state                  protoimpl.MessageState `protogen:"opaque.v1"`
	xxx_hidden_SubnetId    int64                  `protobuf:"varint,1,opt,name=subnet_id,json=subnetId"`
	xxx_hidden_StartIp     *string                `protobuf:"bytes,11,opt,name=start_ip,json=startIp"`
	xxx_hidden_EndIp       *string                `protobuf:"bytes,12,opt,name=end_ip,json=endIp"`
	xxx_hidden_Comment     *string                `protobuf:"bytes,13,opt,name=comment"`
	XXX_raceDetectHookData protoimpl.RaceDetectHookData
	XXX_presence           [1]uint32
	unknownFields          protoimpl.UnknownFields
	sizeCache              protoimpl.SizeCache
}

func (x *CreateIPRangeRequest) Reset() {
	*x = CreateIPRangeRequest{}
	mi := &file_api_nexus_v1_nexus_proto_msgTypes[14]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CreateIPRangeRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateIPRangeRequest) ProtoMessage() {}

func (x *CreateIPRangeRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_nexus_v1_nexus_proto_msgTypes[14]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *CreateIPRangeRequest) GetSubnetId() int64 {
	if x != nil {
		return x.xxx_hidden_SubnetId
	}
	return 0
}

func (x *CreateIPRangeRequest) GetStartIp() string {
	if x != nil {
		if x.xxx_hidden_StartIp != nil {
			return *x.xxx_hidden_StartIp
		}
		return ""
	}
	return ""
}

func (x *CreateIPRangeRequest) GetEndIp() string {
	if x != nil {
		if x.xxx_hidden_EndIp != nil {
			return *x.xxx_hidden_EndIp
		}
		return ""
	}
	return ""
}

func (x *CreateIPRangeRequest) GetComment() string {
	if x != nil {
		if x.xxx_hidden_Comment != nil {
			return *x.xxx_hidden_Comment
		}
		return ""
	}
	return ""
}

func (x *CreateIPRangeRequest) SetSubnetId(v int64) {
	x.xxx_hidden_SubnetId = v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 0, 4)
}

func (x *CreateIPRangeRequest) SetStartIp(v string) {
	x.xxx_hidden_StartIp = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 1, 4)
}

func (x *CreateIPRangeRequest) SetEndIp(v string) {
	x.xxx_hidden_EndIp = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 2, 4)
}

func (x *CreateIPRangeRequest) SetComment(v string) {
	x.xxx_hidden_Comment = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 3, 4)
}

func (x *CreateIPRangeRequest) HasSubnetId() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 0)
}

func (x *CreateIPRangeRequest) HasStartIp() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 1)
}

func (x *CreateIPRangeRequest) HasEndIp() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 2)
}

func (x *CreateIPRangeRequest) HasComment() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 3)
}

func (x *CreateIPRangeRequest) ClearSubnetId() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 0)
	x.xxx_hidden_SubnetId = 0
}

func (x *CreateIPRangeRequest) ClearStartIp() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 1)
	x.xxx_hidden_StartIp = nil
}

func (x *CreateIPRangeRequest) ClearEndIp() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 2)
	x.xxx_hidden_EndIp = nil
}

func (x *CreateIPRangeRequest) ClearComment() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 3)
	x.xxx_hidden_Comment = nil
}

type CreateIPRangeRequest_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	SubnetId *int64
	StartIp  *string
	EndIp    *string
	Comment  *string
}

func (b0 CreateIPRangeRequest_builder) Build() *CreateIPRangeRequest {
	m0 := &CreateIPRangeRequest{}
	b, x := &b0, m0
	_, _ = b, x
	if b.SubnetId != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 0, 4)
		x.xxx_hidden_SubnetId = *b.SubnetId
	}
	if b.StartIp != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 1, 4)
		x.xxx_hidden_StartIp = b.StartIp
	}
	if b.EndIp != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 2, 4)
		x.xxx_hidden_EndIp = b.EndIp
	}
	if b.Comment != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 3, 4)
		x.xxx_hidden_Comment = b.Comment
	}
	return m0
}

type DeleteNetworkRequest struct {
	state                  protoimpl.MessageState `protogen:"opaque.v1"`
	xxx_hidden_Id          int64                  `protobuf:"varint,1,opt,name=id"`
	XXX_raceDetectHookData protoimpl.RaceDetectHookData
	XXX_presence           [1]uint32
	unknownFields          protoimpl.UnknownFields
	sizeCache              protoimpl.SizeCache
}

func (x *DeleteNetworkRequest) Reset() {
	*x = DeleteNetworkRequest{}
	mi := &file_api_nexus_v1_nexus_proto_msgTypes[15]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DeleteNetworkRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteNetworkRequest) ProtoMessage() {}

func (x *DeleteNetworkRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_nexus_v1_nexus_proto_msgTypes[15]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *DeleteNetworkRequest) GetId() int64 {
	if x != nil {
		return x.xxx_hidden_Id
	}
	return 0
}

func (x *DeleteNetworkRequest) SetId(v int64) {
	x.xxx_hidden_Id = v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 0, 1)
}

func (x *DeleteNetworkRequest) HasId() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 0)
}

func (x *DeleteNetworkRequest) ClearId() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 0)
	x.xxx_hidden_Id = 0
}

type DeleteNetworkRequest_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	Id *int64
}

func (b0 DeleteNetworkRequest_builder) Build() *DeleteNetworkRequest {
	m0 := &DeleteNetworkRequest{}
	b, x := &b0, m0
	_, _ = b, x
	if b.Id != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 0, 1)
		x.xxx_hidden_Id = *b.Id
	}
	return m0
}

type DeleteIPRangeRequest struct {
	state                  protoimpl.MessageState `protogen:"opaque.v1"`
	xxx_hidden_Id          int64                  `protobuf:"varint,1,opt,name=id"`
	XXX_raceDetectHookData protoimpl.RaceDetectHookData
	XXX_presence           [1]uint32
	unknownFields          protoimpl.UnknownFields
	sizeCache              protoimpl.SizeCache
}

func (x *DeleteIPRangeRequest) Reset() {
	*x = DeleteIPRangeRequest{}
	mi := &file_api_nexus_v1_nexus_proto_msgTypes[16]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DeleteIPRangeRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteIPRangeRequest) ProtoMessage() {}

func (x *DeleteIPRangeRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_nexus_v1_nexus_proto_msgTypes[16]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *DeleteIPRangeRequest) GetId() int64 {
	if x != nil {
		return x.xxx_hidden_Id
	}
	return 0
}

func (x *DeleteIPRangeRequest) SetId(v int64) {
	x.xxx_hidden_Id = v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 0, 1)
}

func (x *DeleteIPRangeRequest) HasId() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 0)
}

func (x *DeleteIPRangeRequest) ClearId() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 0)
	x.xxx_hidden_Id = 0
}

type DeleteIPRangeRequest_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	Id *int64
}

func (b0 DeleteIPRangeRequest_builder) Build() *DeleteIPRangeRequest {
	m0 := &DeleteIPRangeRequest{}
	b, x := &b0, m0
	_, _ = b, x
	if b.Id != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 0, 1)
		x.xxx_hidden_Id = *b.Id
	}
	return m0
}

type UpdateFabricRequest struct {
	state                  protoimpl.MessageState `protogen:"opaque.v1"`
	xxx_hidden_Id          int64                  `protobuf:"varint,1,opt,name=id"`
	xxx_hidden_Name        *string                `protobuf:"bytes,11,opt,name=name"`
	XXX_raceDetectHookData protoimpl.RaceDetectHookData
	XXX_presence           [1]uint32
	unknownFields          protoimpl.UnknownFields
	sizeCache              protoimpl.SizeCache
}

func (x *UpdateFabricRequest) Reset() {
	*x = UpdateFabricRequest{}
	mi := &file_api_nexus_v1_nexus_proto_msgTypes[17]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UpdateFabricRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateFabricRequest) ProtoMessage() {}

func (x *UpdateFabricRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_nexus_v1_nexus_proto_msgTypes[17]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *UpdateFabricRequest) GetId() int64 {
	if x != nil {
		return x.xxx_hidden_Id
	}
	return 0
}

func (x *UpdateFabricRequest) GetName() string {
	if x != nil {
		if x.xxx_hidden_Name != nil {
			return *x.xxx_hidden_Name
		}
		return ""
	}
	return ""
}

func (x *UpdateFabricRequest) SetId(v int64) {
	x.xxx_hidden_Id = v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 0, 2)
}

func (x *UpdateFabricRequest) SetName(v string) {
	x.xxx_hidden_Name = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 1, 2)
}

func (x *UpdateFabricRequest) HasId() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 0)
}

func (x *UpdateFabricRequest) HasName() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 1)
}

func (x *UpdateFabricRequest) ClearId() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 0)
	x.xxx_hidden_Id = 0
}

func (x *UpdateFabricRequest) ClearName() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 1)
	x.xxx_hidden_Name = nil
}

type UpdateFabricRequest_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	Id   *int64
	Name *string
}

func (b0 UpdateFabricRequest_builder) Build() *UpdateFabricRequest {
	m0 := &UpdateFabricRequest{}
	b, x := &b0, m0
	_, _ = b, x
	if b.Id != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 0, 2)
		x.xxx_hidden_Id = *b.Id
	}
	if b.Name != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 1, 2)
		x.xxx_hidden_Name = b.Name
	}
	return m0
}

type UpdateVLANRequest struct {
	state                  protoimpl.MessageState `protogen:"opaque.v1"`
	xxx_hidden_FabricId    int64                  `protobuf:"varint,1,opt,name=fabric_id,json=fabricId"`
	xxx_hidden_Vid         int64                  `protobuf:"varint,2,opt,name=vid"`
	xxx_hidden_Name        *string                `protobuf:"bytes,11,opt,name=name"`
	xxx_hidden_Mtu         int64                  `protobuf:"varint,12,opt,name=mtu"`
	xxx_hidden_Description *string                `protobuf:"bytes,13,opt,name=description"`
	xxx_hidden_DhcpOn      bool                   `protobuf:"varint,14,opt,name=dhcp_on,json=dhcpOn"`
	XXX_raceDetectHookData protoimpl.RaceDetectHookData
	XXX_presence           [1]uint32
	unknownFields          protoimpl.UnknownFields
	sizeCache              protoimpl.SizeCache
}

func (x *UpdateVLANRequest) Reset() {
	*x = UpdateVLANRequest{}
	mi := &file_api_nexus_v1_nexus_proto_msgTypes[18]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UpdateVLANRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateVLANRequest) ProtoMessage() {}

func (x *UpdateVLANRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_nexus_v1_nexus_proto_msgTypes[18]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *UpdateVLANRequest) GetFabricId() int64 {
	if x != nil {
		return x.xxx_hidden_FabricId
	}
	return 0
}

func (x *UpdateVLANRequest) GetVid() int64 {
	if x != nil {
		return x.xxx_hidden_Vid
	}
	return 0
}

func (x *UpdateVLANRequest) GetName() string {
	if x != nil {
		if x.xxx_hidden_Name != nil {
			return *x.xxx_hidden_Name
		}
		return ""
	}
	return ""
}

func (x *UpdateVLANRequest) GetMtu() int64 {
	if x != nil {
		return x.xxx_hidden_Mtu
	}
	return 0
}

func (x *UpdateVLANRequest) GetDescription() string {
	if x != nil {
		if x.xxx_hidden_Description != nil {
			return *x.xxx_hidden_Description
		}
		return ""
	}
	return ""
}

func (x *UpdateVLANRequest) GetDhcpOn() bool {
	if x != nil {
		return x.xxx_hidden_DhcpOn
	}
	return false
}

func (x *UpdateVLANRequest) SetFabricId(v int64) {
	x.xxx_hidden_FabricId = v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 0, 6)
}

func (x *UpdateVLANRequest) SetVid(v int64) {
	x.xxx_hidden_Vid = v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 1, 6)
}

func (x *UpdateVLANRequest) SetName(v string) {
	x.xxx_hidden_Name = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 2, 6)
}

func (x *UpdateVLANRequest) SetMtu(v int64) {
	x.xxx_hidden_Mtu = v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 3, 6)
}

func (x *UpdateVLANRequest) SetDescription(v string) {
	x.xxx_hidden_Description = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 4, 6)
}

func (x *UpdateVLANRequest) SetDhcpOn(v bool) {
	x.xxx_hidden_DhcpOn = v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 5, 6)
}

func (x *UpdateVLANRequest) HasFabricId() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 0)
}

func (x *UpdateVLANRequest) HasVid() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 1)
}

func (x *UpdateVLANRequest) HasName() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 2)
}

func (x *UpdateVLANRequest) HasMtu() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 3)
}

func (x *UpdateVLANRequest) HasDescription() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 4)
}

func (x *UpdateVLANRequest) HasDhcpOn() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 5)
}

func (x *UpdateVLANRequest) ClearFabricId() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 0)
	x.xxx_hidden_FabricId = 0
}

func (x *UpdateVLANRequest) ClearVid() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 1)
	x.xxx_hidden_Vid = 0
}

func (x *UpdateVLANRequest) ClearName() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 2)
	x.xxx_hidden_Name = nil
}

func (x *UpdateVLANRequest) ClearMtu() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 3)
	x.xxx_hidden_Mtu = 0
}

func (x *UpdateVLANRequest) ClearDescription() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 4)
	x.xxx_hidden_Description = nil
}

func (x *UpdateVLANRequest) ClearDhcpOn() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 5)
	x.xxx_hidden_DhcpOn = false
}

type UpdateVLANRequest_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	FabricId    *int64
	Vid         *int64
	Name        *string
	Mtu         *int64
	Description *string
	DhcpOn      *bool
}

func (b0 UpdateVLANRequest_builder) Build() *UpdateVLANRequest {
	m0 := &UpdateVLANRequest{}
	b, x := &b0, m0
	_, _ = b, x
	if b.FabricId != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 0, 6)
		x.xxx_hidden_FabricId = *b.FabricId
	}
	if b.Vid != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 1, 6)
		x.xxx_hidden_Vid = *b.Vid
	}
	if b.Name != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 2, 6)
		x.xxx_hidden_Name = b.Name
	}
	if b.Mtu != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 3, 6)
		x.xxx_hidden_Mtu = *b.Mtu
	}
	if b.Description != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 4, 6)
		x.xxx_hidden_Description = b.Description
	}
	if b.DhcpOn != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 5, 6)
		x.xxx_hidden_DhcpOn = *b.DhcpOn
	}
	return m0
}

type UpdateSubnetRequest struct {
	state                         protoimpl.MessageState `protogen:"opaque.v1"`
	xxx_hidden_Id                 int64                  `protobuf:"varint,1,opt,name=id"`
	xxx_hidden_Name               *string                `protobuf:"bytes,11,opt,name=name"`
	xxx_hidden_Cidr               *string                `protobuf:"bytes,12,opt,name=cidr"`
	xxx_hidden_GatewayIp          *string                `protobuf:"bytes,13,opt,name=gateway_ip,json=gatewayIp"`
	xxx_hidden_DnsServers         []string               `protobuf:"bytes,14,rep,name=dns_servers,json=dnsServers"`
	xxx_hidden_Description        *string                `protobuf:"bytes,15,opt,name=description"`
	xxx_hidden_AllowDnsResolution bool                   `protobuf:"varint,16,opt,name=allow_dns_resolution,json=allowDnsResolution"`
	XXX_raceDetectHookData        protoimpl.RaceDetectHookData
	XXX_presence                  [1]uint32
	unknownFields                 protoimpl.UnknownFields
	sizeCache                     protoimpl.SizeCache
}

func (x *UpdateSubnetRequest) Reset() {
	*x = UpdateSubnetRequest{}
	mi := &file_api_nexus_v1_nexus_proto_msgTypes[19]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UpdateSubnetRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateSubnetRequest) ProtoMessage() {}

func (x *UpdateSubnetRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_nexus_v1_nexus_proto_msgTypes[19]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *UpdateSubnetRequest) GetId() int64 {
	if x != nil {
		return x.xxx_hidden_Id
	}
	return 0
}

func (x *UpdateSubnetRequest) GetName() string {
	if x != nil {
		if x.xxx_hidden_Name != nil {
			return *x.xxx_hidden_Name
		}
		return ""
	}
	return ""
}

func (x *UpdateSubnetRequest) GetCidr() string {
	if x != nil {
		if x.xxx_hidden_Cidr != nil {
			return *x.xxx_hidden_Cidr
		}
		return ""
	}
	return ""
}

func (x *UpdateSubnetRequest) GetGatewayIp() string {
	if x != nil {
		if x.xxx_hidden_GatewayIp != nil {
			return *x.xxx_hidden_GatewayIp
		}
		return ""
	}
	return ""
}

func (x *UpdateSubnetRequest) GetDnsServers() []string {
	if x != nil {
		return x.xxx_hidden_DnsServers
	}
	return nil
}

func (x *UpdateSubnetRequest) GetDescription() string {
	if x != nil {
		if x.xxx_hidden_Description != nil {
			return *x.xxx_hidden_Description
		}
		return ""
	}
	return ""
}

func (x *UpdateSubnetRequest) GetAllowDnsResolution() bool {
	if x != nil {
		return x.xxx_hidden_AllowDnsResolution
	}
	return false
}

func (x *UpdateSubnetRequest) SetId(v int64) {
	x.xxx_hidden_Id = v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 0, 7)
}

func (x *UpdateSubnetRequest) SetName(v string) {
	x.xxx_hidden_Name = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 1, 7)
}

func (x *UpdateSubnetRequest) SetCidr(v string) {
	x.xxx_hidden_Cidr = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 2, 7)
}

func (x *UpdateSubnetRequest) SetGatewayIp(v string) {
	x.xxx_hidden_GatewayIp = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 3, 7)
}

func (x *UpdateSubnetRequest) SetDnsServers(v []string) {
	x.xxx_hidden_DnsServers = v
}

func (x *UpdateSubnetRequest) SetDescription(v string) {
	x.xxx_hidden_Description = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 5, 7)
}

func (x *UpdateSubnetRequest) SetAllowDnsResolution(v bool) {
	x.xxx_hidden_AllowDnsResolution = v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 6, 7)
}

func (x *UpdateSubnetRequest) HasId() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 0)
}

func (x *UpdateSubnetRequest) HasName() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 1)
}

func (x *UpdateSubnetRequest) HasCidr() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 2)
}

func (x *UpdateSubnetRequest) HasGatewayIp() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 3)
}

func (x *UpdateSubnetRequest) HasDescription() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 5)
}

func (x *UpdateSubnetRequest) HasAllowDnsResolution() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 6)
}

func (x *UpdateSubnetRequest) ClearId() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 0)
	x.xxx_hidden_Id = 0
}

func (x *UpdateSubnetRequest) ClearName() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 1)
	x.xxx_hidden_Name = nil
}

func (x *UpdateSubnetRequest) ClearCidr() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 2)
	x.xxx_hidden_Cidr = nil
}

func (x *UpdateSubnetRequest) ClearGatewayIp() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 3)
	x.xxx_hidden_GatewayIp = nil
}

func (x *UpdateSubnetRequest) ClearDescription() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 5)
	x.xxx_hidden_Description = nil
}

func (x *UpdateSubnetRequest) ClearAllowDnsResolution() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 6)
	x.xxx_hidden_AllowDnsResolution = false
}

type UpdateSubnetRequest_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	Id                 *int64
	Name               *string
	Cidr               *string
	GatewayIp          *string
	DnsServers         []string
	Description        *string
	AllowDnsResolution *bool
}

func (b0 UpdateSubnetRequest_builder) Build() *UpdateSubnetRequest {
	m0 := &UpdateSubnetRequest{}
	b, x := &b0, m0
	_, _ = b, x
	if b.Id != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 0, 7)
		x.xxx_hidden_Id = *b.Id
	}
	if b.Name != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 1, 7)
		x.xxx_hidden_Name = b.Name
	}
	if b.Cidr != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 2, 7)
		x.xxx_hidden_Cidr = b.Cidr
	}
	if b.GatewayIp != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 3, 7)
		x.xxx_hidden_GatewayIp = b.GatewayIp
	}
	x.xxx_hidden_DnsServers = b.DnsServers
	if b.Description != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 5, 7)
		x.xxx_hidden_Description = b.Description
	}
	if b.AllowDnsResolution != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 6, 7)
		x.xxx_hidden_AllowDnsResolution = *b.AllowDnsResolution
	}
	return m0
}

type UpdateIPRangeRequest struct {
	state                  protoimpl.MessageState `protogen:"opaque.v1"`
	xxx_hidden_Id          int64                  `protobuf:"varint,1,opt,name=id"`
	xxx_hidden_StartIp     *string                `protobuf:"bytes,11,opt,name=start_ip,json=startIp"`
	xxx_hidden_EndIp       *string                `protobuf:"bytes,12,opt,name=end_ip,json=endIp"`
	xxx_hidden_Comment     *string                `protobuf:"bytes,13,opt,name=comment"`
	XXX_raceDetectHookData protoimpl.RaceDetectHookData
	XXX_presence           [1]uint32
	unknownFields          protoimpl.UnknownFields
	sizeCache              protoimpl.SizeCache
}

func (x *UpdateIPRangeRequest) Reset() {
	*x = UpdateIPRangeRequest{}
	mi := &file_api_nexus_v1_nexus_proto_msgTypes[20]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UpdateIPRangeRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateIPRangeRequest) ProtoMessage() {}

func (x *UpdateIPRangeRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_nexus_v1_nexus_proto_msgTypes[20]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *UpdateIPRangeRequest) GetId() int64 {
	if x != nil {
		return x.xxx_hidden_Id
	}
	return 0
}

func (x *UpdateIPRangeRequest) GetStartIp() string {
	if x != nil {
		if x.xxx_hidden_StartIp != nil {
			return *x.xxx_hidden_StartIp
		}
		return ""
	}
	return ""
}

func (x *UpdateIPRangeRequest) GetEndIp() string {
	if x != nil {
		if x.xxx_hidden_EndIp != nil {
			return *x.xxx_hidden_EndIp
		}
		return ""
	}
	return ""
}

func (x *UpdateIPRangeRequest) GetComment() string {
	if x != nil {
		if x.xxx_hidden_Comment != nil {
			return *x.xxx_hidden_Comment
		}
		return ""
	}
	return ""
}

func (x *UpdateIPRangeRequest) SetId(v int64) {
	x.xxx_hidden_Id = v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 0, 4)
}

func (x *UpdateIPRangeRequest) SetStartIp(v string) {
	x.xxx_hidden_StartIp = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 1, 4)
}

func (x *UpdateIPRangeRequest) SetEndIp(v string) {
	x.xxx_hidden_EndIp = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 2, 4)
}

func (x *UpdateIPRangeRequest) SetComment(v string) {
	x.xxx_hidden_Comment = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 3, 4)
}

func (x *UpdateIPRangeRequest) HasId() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 0)
}

func (x *UpdateIPRangeRequest) HasStartIp() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 1)
}

func (x *UpdateIPRangeRequest) HasEndIp() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 2)
}

func (x *UpdateIPRangeRequest) HasComment() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 3)
}

func (x *UpdateIPRangeRequest) ClearId() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 0)
	x.xxx_hidden_Id = 0
}

func (x *UpdateIPRangeRequest) ClearStartIp() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 1)
	x.xxx_hidden_StartIp = nil
}

func (x *UpdateIPRangeRequest) ClearEndIp() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 2)
	x.xxx_hidden_EndIp = nil
}

func (x *UpdateIPRangeRequest) ClearComment() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 3)
	x.xxx_hidden_Comment = nil
}

type UpdateIPRangeRequest_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	Id      *int64
	StartIp *string
	EndIp   *string
	Comment *string
}

func (b0 UpdateIPRangeRequest_builder) Build() *UpdateIPRangeRequest {
	m0 := &UpdateIPRangeRequest{}
	b, x := &b0, m0
	_, _ = b, x
	if b.Id != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 0, 4)
		x.xxx_hidden_Id = *b.Id
	}
	if b.StartIp != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 1, 4)
		x.xxx_hidden_StartIp = b.StartIp
	}
	if b.EndIp != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 2, 4)
		x.xxx_hidden_EndIp = b.EndIp
	}
	if b.Comment != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 3, 4)
		x.xxx_hidden_Comment = b.Comment
	}
	return m0
}

type ListMachinesRequest struct {
	state         protoimpl.MessageState `protogen:"opaque.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ListMachinesRequest) Reset() {
	*x = ListMachinesRequest{}
	mi := &file_api_nexus_v1_nexus_proto_msgTypes[21]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListMachinesRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListMachinesRequest) ProtoMessage() {}

func (x *ListMachinesRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_nexus_v1_nexus_proto_msgTypes[21]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

type ListMachinesRequest_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

}

func (b0 ListMachinesRequest_builder) Build() *ListMachinesRequest {
	m0 := &ListMachinesRequest{}
	b, x := &b0, m0
	_, _ = b, x
	return m0
}

type ListMachinesResponse struct {
	state               protoimpl.MessageState `protogen:"opaque.v1"`
	xxx_hidden_Machines *[]*Machine            `protobuf:"bytes,1,rep,name=machines"`
	unknownFields       protoimpl.UnknownFields
	sizeCache           protoimpl.SizeCache
}

func (x *ListMachinesResponse) Reset() {
	*x = ListMachinesResponse{}
	mi := &file_api_nexus_v1_nexus_proto_msgTypes[22]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListMachinesResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListMachinesResponse) ProtoMessage() {}

func (x *ListMachinesResponse) ProtoReflect() protoreflect.Message {
	mi := &file_api_nexus_v1_nexus_proto_msgTypes[22]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *ListMachinesResponse) GetMachines() []*Machine {
	if x != nil {
		if x.xxx_hidden_Machines != nil {
			return *x.xxx_hidden_Machines
		}
	}
	return nil
}

func (x *ListMachinesResponse) SetMachines(v []*Machine) {
	x.xxx_hidden_Machines = &v
}

type ListMachinesResponse_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	Machines []*Machine
}

func (b0 ListMachinesResponse_builder) Build() *ListMachinesResponse {
	m0 := &ListMachinesResponse{}
	b, x := &b0, m0
	_, _ = b, x
	x.xxx_hidden_Machines = &b.Machines
	return m0
}

type GetMachineRequest struct {
	state                  protoimpl.MessageState `protogen:"opaque.v1"`
	xxx_hidden_Id          *string                `protobuf:"bytes,1,opt,name=id"`
	XXX_raceDetectHookData protoimpl.RaceDetectHookData
	XXX_presence           [1]uint32
	unknownFields          protoimpl.UnknownFields
	sizeCache              protoimpl.SizeCache
}

func (x *GetMachineRequest) Reset() {
	*x = GetMachineRequest{}
	mi := &file_api_nexus_v1_nexus_proto_msgTypes[23]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetMachineRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetMachineRequest) ProtoMessage() {}

func (x *GetMachineRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_nexus_v1_nexus_proto_msgTypes[23]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *GetMachineRequest) GetId() string {
	if x != nil {
		if x.xxx_hidden_Id != nil {
			return *x.xxx_hidden_Id
		}
		return ""
	}
	return ""
}

func (x *GetMachineRequest) SetId(v string) {
	x.xxx_hidden_Id = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 0, 1)
}

func (x *GetMachineRequest) HasId() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 0)
}

func (x *GetMachineRequest) ClearId() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 0)
	x.xxx_hidden_Id = nil
}

type GetMachineRequest_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	Id *string
}

func (b0 GetMachineRequest_builder) Build() *GetMachineRequest {
	m0 := &GetMachineRequest{}
	b, x := &b0, m0
	_, _ = b, x
	if b.Id != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 0, 1)
		x.xxx_hidden_Id = b.Id
	}
	return m0
}

type CommissionMachineRequest struct {
	state                     protoimpl.MessageState `protogen:"opaque.v1"`
	xxx_hidden_Id             *string                `protobuf:"bytes,1,opt,name=id"`
	xxx_hidden_EnableSsh      bool                   `protobuf:"varint,2,opt,name=enable_ssh,json=enableSsh"`
	xxx_hidden_SkipBmcConfig  bool                   `protobuf:"varint,3,opt,name=skip_bmc_config,json=skipBmcConfig"`
	xxx_hidden_SkipNetworking bool                   `protobuf:"varint,4,opt,name=skip_networking,json=skipNetworking"`
	xxx_hidden_SkipStorage    bool                   `protobuf:"varint,5,opt,name=skip_storage,json=skipStorage"`
	XXX_raceDetectHookData    protoimpl.RaceDetectHookData
	XXX_presence              [1]uint32
	unknownFields             protoimpl.UnknownFields
	sizeCache                 protoimpl.SizeCache
}

func (x *CommissionMachineRequest) Reset() {
	*x = CommissionMachineRequest{}
	mi := &file_api_nexus_v1_nexus_proto_msgTypes[24]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CommissionMachineRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CommissionMachineRequest) ProtoMessage() {}

func (x *CommissionMachineRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_nexus_v1_nexus_proto_msgTypes[24]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *CommissionMachineRequest) GetId() string {
	if x != nil {
		if x.xxx_hidden_Id != nil {
			return *x.xxx_hidden_Id
		}
		return ""
	}
	return ""
}

func (x *CommissionMachineRequest) GetEnableSsh() bool {
	if x != nil {
		return x.xxx_hidden_EnableSsh
	}
	return false
}

func (x *CommissionMachineRequest) GetSkipBmcConfig() bool {
	if x != nil {
		return x.xxx_hidden_SkipBmcConfig
	}
	return false
}

func (x *CommissionMachineRequest) GetSkipNetworking() bool {
	if x != nil {
		return x.xxx_hidden_SkipNetworking
	}
	return false
}

func (x *CommissionMachineRequest) GetSkipStorage() bool {
	if x != nil {
		return x.xxx_hidden_SkipStorage
	}
	return false
}

func (x *CommissionMachineRequest) SetId(v string) {
	x.xxx_hidden_Id = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 0, 5)
}

func (x *CommissionMachineRequest) SetEnableSsh(v bool) {
	x.xxx_hidden_EnableSsh = v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 1, 5)
}

func (x *CommissionMachineRequest) SetSkipBmcConfig(v bool) {
	x.xxx_hidden_SkipBmcConfig = v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 2, 5)
}

func (x *CommissionMachineRequest) SetSkipNetworking(v bool) {
	x.xxx_hidden_SkipNetworking = v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 3, 5)
}

func (x *CommissionMachineRequest) SetSkipStorage(v bool) {
	x.xxx_hidden_SkipStorage = v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 4, 5)
}

func (x *CommissionMachineRequest) HasId() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 0)
}

func (x *CommissionMachineRequest) HasEnableSsh() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 1)
}

func (x *CommissionMachineRequest) HasSkipBmcConfig() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 2)
}

func (x *CommissionMachineRequest) HasSkipNetworking() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 3)
}

func (x *CommissionMachineRequest) HasSkipStorage() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 4)
}

func (x *CommissionMachineRequest) ClearId() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 0)
	x.xxx_hidden_Id = nil
}

func (x *CommissionMachineRequest) ClearEnableSsh() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 1)
	x.xxx_hidden_EnableSsh = false
}

func (x *CommissionMachineRequest) ClearSkipBmcConfig() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 2)
	x.xxx_hidden_SkipBmcConfig = false
}

func (x *CommissionMachineRequest) ClearSkipNetworking() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 3)
	x.xxx_hidden_SkipNetworking = false
}

func (x *CommissionMachineRequest) ClearSkipStorage() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 4)
	x.xxx_hidden_SkipStorage = false
}

type CommissionMachineRequest_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	Id             *string
	EnableSsh      *bool
	SkipBmcConfig  *bool
	SkipNetworking *bool
	SkipStorage    *bool
}

func (b0 CommissionMachineRequest_builder) Build() *CommissionMachineRequest {
	m0 := &CommissionMachineRequest{}
	b, x := &b0, m0
	_, _ = b, x
	if b.Id != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 0, 5)
		x.xxx_hidden_Id = b.Id
	}
	if b.EnableSsh != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 1, 5)
		x.xxx_hidden_EnableSsh = *b.EnableSsh
	}
	if b.SkipBmcConfig != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 2, 5)
		x.xxx_hidden_SkipBmcConfig = *b.SkipBmcConfig
	}
	if b.SkipNetworking != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 3, 5)
		x.xxx_hidden_SkipNetworking = *b.SkipNetworking
	}
	if b.SkipStorage != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 4, 5)
		x.xxx_hidden_SkipStorage = *b.SkipStorage
	}
	return m0
}

type PowerOnMachineRequest struct {
	state                  protoimpl.MessageState `protogen:"opaque.v1"`
	xxx_hidden_Id          *string                `protobuf:"bytes,1,opt,name=id"`
	xxx_hidden_Comment     *string                `protobuf:"bytes,2,opt,name=comment"`
	XXX_raceDetectHookData protoimpl.RaceDetectHookData
	XXX_presence           [1]uint32
	unknownFields          protoimpl.UnknownFields
	sizeCache              protoimpl.SizeCache
}

func (x *PowerOnMachineRequest) Reset() {
	*x = PowerOnMachineRequest{}
	mi := &file_api_nexus_v1_nexus_proto_msgTypes[25]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *PowerOnMachineRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PowerOnMachineRequest) ProtoMessage() {}

func (x *PowerOnMachineRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_nexus_v1_nexus_proto_msgTypes[25]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *PowerOnMachineRequest) GetId() string {
	if x != nil {
		if x.xxx_hidden_Id != nil {
			return *x.xxx_hidden_Id
		}
		return ""
	}
	return ""
}

func (x *PowerOnMachineRequest) GetComment() string {
	if x != nil {
		if x.xxx_hidden_Comment != nil {
			return *x.xxx_hidden_Comment
		}
		return ""
	}
	return ""
}

func (x *PowerOnMachineRequest) SetId(v string) {
	x.xxx_hidden_Id = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 0, 2)
}

func (x *PowerOnMachineRequest) SetComment(v string) {
	x.xxx_hidden_Comment = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 1, 2)
}

func (x *PowerOnMachineRequest) HasId() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 0)
}

func (x *PowerOnMachineRequest) HasComment() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 1)
}

func (x *PowerOnMachineRequest) ClearId() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 0)
	x.xxx_hidden_Id = nil
}

func (x *PowerOnMachineRequest) ClearComment() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 1)
	x.xxx_hidden_Comment = nil
}

type PowerOnMachineRequest_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	Id      *string
	Comment *string
}

func (b0 PowerOnMachineRequest_builder) Build() *PowerOnMachineRequest {
	m0 := &PowerOnMachineRequest{}
	b, x := &b0, m0
	_, _ = b, x
	if b.Id != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 0, 2)
		x.xxx_hidden_Id = b.Id
	}
	if b.Comment != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 1, 2)
		x.xxx_hidden_Comment = b.Comment
	}
	return m0
}

type PowerOffMachineRequest struct {
	state                  protoimpl.MessageState `protogen:"opaque.v1"`
	xxx_hidden_Id          *string                `protobuf:"bytes,1,opt,name=id"`
	xxx_hidden_Comment     *string                `protobuf:"bytes,2,opt,name=comment"`
	XXX_raceDetectHookData protoimpl.RaceDetectHookData
	XXX_presence           [1]uint32
	unknownFields          protoimpl.UnknownFields
	sizeCache              protoimpl.SizeCache
}

func (x *PowerOffMachineRequest) Reset() {
	*x = PowerOffMachineRequest{}
	mi := &file_api_nexus_v1_nexus_proto_msgTypes[26]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *PowerOffMachineRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PowerOffMachineRequest) ProtoMessage() {}

func (x *PowerOffMachineRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_nexus_v1_nexus_proto_msgTypes[26]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *PowerOffMachineRequest) GetId() string {
	if x != nil {
		if x.xxx_hidden_Id != nil {
			return *x.xxx_hidden_Id
		}
		return ""
	}
	return ""
}

func (x *PowerOffMachineRequest) GetComment() string {
	if x != nil {
		if x.xxx_hidden_Comment != nil {
			return *x.xxx_hidden_Comment
		}
		return ""
	}
	return ""
}

func (x *PowerOffMachineRequest) SetId(v string) {
	x.xxx_hidden_Id = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 0, 2)
}

func (x *PowerOffMachineRequest) SetComment(v string) {
	x.xxx_hidden_Comment = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 1, 2)
}

func (x *PowerOffMachineRequest) HasId() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 0)
}

func (x *PowerOffMachineRequest) HasComment() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 1)
}

func (x *PowerOffMachineRequest) ClearId() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 0)
	x.xxx_hidden_Id = nil
}

func (x *PowerOffMachineRequest) ClearComment() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 1)
	x.xxx_hidden_Comment = nil
}

type PowerOffMachineRequest_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	Id      *string
	Comment *string
}

func (b0 PowerOffMachineRequest_builder) Build() *PowerOffMachineRequest {
	m0 := &PowerOffMachineRequest{}
	b, x := &b0, m0
	_, _ = b, x
	if b.Id != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 0, 2)
		x.xxx_hidden_Id = b.Id
	}
	if b.Comment != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 1, 2)
		x.xxx_hidden_Comment = b.Comment
	}
	return m0
}

type AddMachinesRequest struct {
	state                  protoimpl.MessageState `protogen:"opaque.v1"`
	xxx_hidden_ScopeUuid   *string                `protobuf:"bytes,1,opt,name=scope_uuid,json=scopeUuid"`
	xxx_hidden_Factors     *[]*Machine_Factor     `protobuf:"bytes,2,rep,name=factors"`
	XXX_raceDetectHookData protoimpl.RaceDetectHookData
	XXX_presence           [1]uint32
	unknownFields          protoimpl.UnknownFields
	sizeCache              protoimpl.SizeCache
}

func (x *AddMachinesRequest) Reset() {
	*x = AddMachinesRequest{}
	mi := &file_api_nexus_v1_nexus_proto_msgTypes[27]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *AddMachinesRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddMachinesRequest) ProtoMessage() {}

func (x *AddMachinesRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_nexus_v1_nexus_proto_msgTypes[27]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *AddMachinesRequest) GetScopeUuid() string {
	if x != nil {
		if x.xxx_hidden_ScopeUuid != nil {
			return *x.xxx_hidden_ScopeUuid
		}
		return ""
	}
	return ""
}

func (x *AddMachinesRequest) GetFactors() []*Machine_Factor {
	if x != nil {
		if x.xxx_hidden_Factors != nil {
			return *x.xxx_hidden_Factors
		}
	}
	return nil
}

func (x *AddMachinesRequest) SetScopeUuid(v string) {
	x.xxx_hidden_ScopeUuid = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 0, 2)
}

func (x *AddMachinesRequest) SetFactors(v []*Machine_Factor) {
	x.xxx_hidden_Factors = &v
}

func (x *AddMachinesRequest) HasScopeUuid() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 0)
}

func (x *AddMachinesRequest) ClearScopeUuid() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 0)
	x.xxx_hidden_ScopeUuid = nil
}

type AddMachinesRequest_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	ScopeUuid *string
	Factors   []*Machine_Factor
}

func (b0 AddMachinesRequest_builder) Build() *AddMachinesRequest {
	m0 := &AddMachinesRequest{}
	b, x := &b0, m0
	_, _ = b, x
	if b.ScopeUuid != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 0, 2)
		x.xxx_hidden_ScopeUuid = b.ScopeUuid
	}
	x.xxx_hidden_Factors = &b.Factors
	return m0
}

type AddMachinesResponse struct {
	state               protoimpl.MessageState `protogen:"opaque.v1"`
	xxx_hidden_Machines []string               `protobuf:"bytes,1,rep,name=machines"`
	unknownFields       protoimpl.UnknownFields
	sizeCache           protoimpl.SizeCache
}

func (x *AddMachinesResponse) Reset() {
	*x = AddMachinesResponse{}
	mi := &file_api_nexus_v1_nexus_proto_msgTypes[28]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *AddMachinesResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddMachinesResponse) ProtoMessage() {}

func (x *AddMachinesResponse) ProtoReflect() protoreflect.Message {
	mi := &file_api_nexus_v1_nexus_proto_msgTypes[28]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *AddMachinesResponse) GetMachines() []string {
	if x != nil {
		return x.xxx_hidden_Machines
	}
	return nil
}

func (x *AddMachinesResponse) SetMachines(v []string) {
	x.xxx_hidden_Machines = v
}

type AddMachinesResponse_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	Machines []string
}

func (b0 AddMachinesResponse_builder) Build() *AddMachinesResponse {
	m0 := &AddMachinesResponse{}
	b, x := &b0, m0
	_, _ = b, x
	x.xxx_hidden_Machines = b.Machines
	return m0
}

type ListScopesRequest struct {
	state         protoimpl.MessageState `protogen:"opaque.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ListScopesRequest) Reset() {
	*x = ListScopesRequest{}
	mi := &file_api_nexus_v1_nexus_proto_msgTypes[29]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListScopesRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListScopesRequest) ProtoMessage() {}

func (x *ListScopesRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_nexus_v1_nexus_proto_msgTypes[29]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

type ListScopesRequest_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

}

func (b0 ListScopesRequest_builder) Build() *ListScopesRequest {
	m0 := &ListScopesRequest{}
	b, x := &b0, m0
	_, _ = b, x
	return m0
}

type ListScopesResponse struct {
	state             protoimpl.MessageState `protogen:"opaque.v1"`
	xxx_hidden_Scopes *[]*Scope              `protobuf:"bytes,1,rep,name=scopes"`
	unknownFields     protoimpl.UnknownFields
	sizeCache         protoimpl.SizeCache
}

func (x *ListScopesResponse) Reset() {
	*x = ListScopesResponse{}
	mi := &file_api_nexus_v1_nexus_proto_msgTypes[30]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListScopesResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListScopesResponse) ProtoMessage() {}

func (x *ListScopesResponse) ProtoReflect() protoreflect.Message {
	mi := &file_api_nexus_v1_nexus_proto_msgTypes[30]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *ListScopesResponse) GetScopes() []*Scope {
	if x != nil {
		if x.xxx_hidden_Scopes != nil {
			return *x.xxx_hidden_Scopes
		}
	}
	return nil
}

func (x *ListScopesResponse) SetScopes(v []*Scope) {
	x.xxx_hidden_Scopes = &v
}

type ListScopesResponse_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	Scopes []*Scope
}

func (b0 ListScopesResponse_builder) Build() *ListScopesResponse {
	m0 := &ListScopesResponse{}
	b, x := &b0, m0
	_, _ = b, x
	x.xxx_hidden_Scopes = &b.Scopes
	return m0
}

type CreateScopeRequest struct {
	state                  protoimpl.MessageState `protogen:"opaque.v1"`
	xxx_hidden_Name        *string                `protobuf:"bytes,1,opt,name=name"`
	XXX_raceDetectHookData protoimpl.RaceDetectHookData
	XXX_presence           [1]uint32
	unknownFields          protoimpl.UnknownFields
	sizeCache              protoimpl.SizeCache
}

func (x *CreateScopeRequest) Reset() {
	*x = CreateScopeRequest{}
	mi := &file_api_nexus_v1_nexus_proto_msgTypes[31]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CreateScopeRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateScopeRequest) ProtoMessage() {}

func (x *CreateScopeRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_nexus_v1_nexus_proto_msgTypes[31]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *CreateScopeRequest) GetName() string {
	if x != nil {
		if x.xxx_hidden_Name != nil {
			return *x.xxx_hidden_Name
		}
		return ""
	}
	return ""
}

func (x *CreateScopeRequest) SetName(v string) {
	x.xxx_hidden_Name = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 0, 1)
}

func (x *CreateScopeRequest) HasName() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 0)
}

func (x *CreateScopeRequest) ClearName() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 0)
	x.xxx_hidden_Name = nil
}

type CreateScopeRequest_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	Name *string
}

func (b0 CreateScopeRequest_builder) Build() *CreateScopeRequest {
	m0 := &CreateScopeRequest{}
	b, x := &b0, m0
	_, _ = b, x
	if b.Name != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 0, 1)
		x.xxx_hidden_Name = b.Name
	}
	return m0
}

type ListFacilitiesRequest struct {
	state         protoimpl.MessageState `protogen:"opaque.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ListFacilitiesRequest) Reset() {
	*x = ListFacilitiesRequest{}
	mi := &file_api_nexus_v1_nexus_proto_msgTypes[32]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListFacilitiesRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListFacilitiesRequest) ProtoMessage() {}

func (x *ListFacilitiesRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_nexus_v1_nexus_proto_msgTypes[32]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

type ListFacilitiesRequest_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

}

func (b0 ListFacilitiesRequest_builder) Build() *ListFacilitiesRequest {
	m0 := &ListFacilitiesRequest{}
	b, x := &b0, m0
	_, _ = b, x
	return m0
}

type ListFacilitiesResponse struct {
	state                 protoimpl.MessageState `protogen:"opaque.v1"`
	xxx_hidden_Facilities *[]*Facility           `protobuf:"bytes,1,rep,name=facilities"`
	unknownFields         protoimpl.UnknownFields
	sizeCache             protoimpl.SizeCache
}

func (x *ListFacilitiesResponse) Reset() {
	*x = ListFacilitiesResponse{}
	mi := &file_api_nexus_v1_nexus_proto_msgTypes[33]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListFacilitiesResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListFacilitiesResponse) ProtoMessage() {}

func (x *ListFacilitiesResponse) ProtoReflect() protoreflect.Message {
	mi := &file_api_nexus_v1_nexus_proto_msgTypes[33]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *ListFacilitiesResponse) GetFacilities() []*Facility {
	if x != nil {
		if x.xxx_hidden_Facilities != nil {
			return *x.xxx_hidden_Facilities
		}
	}
	return nil
}

func (x *ListFacilitiesResponse) SetFacilities(v []*Facility) {
	x.xxx_hidden_Facilities = &v
}

type ListFacilitiesResponse_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	Facilities []*Facility
}

func (b0 ListFacilitiesResponse_builder) Build() *ListFacilitiesResponse {
	m0 := &ListFacilitiesResponse{}
	b, x := &b0, m0
	_, _ = b, x
	x.xxx_hidden_Facilities = &b.Facilities
	return m0
}

type GetFacilityRequest struct {
	state         protoimpl.MessageState `protogen:"opaque.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetFacilityRequest) Reset() {
	*x = GetFacilityRequest{}
	mi := &file_api_nexus_v1_nexus_proto_msgTypes[34]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetFacilityRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetFacilityRequest) ProtoMessage() {}

func (x *GetFacilityRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_nexus_v1_nexus_proto_msgTypes[34]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

type GetFacilityRequest_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

}

func (b0 GetFacilityRequest_builder) Build() *GetFacilityRequest {
	m0 := &GetFacilityRequest{}
	b, x := &b0, m0
	_, _ = b, x
	return m0
}

type CreateFacilityRequest struct {
	state         protoimpl.MessageState `protogen:"opaque.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CreateFacilityRequest) Reset() {
	*x = CreateFacilityRequest{}
	mi := &file_api_nexus_v1_nexus_proto_msgTypes[35]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CreateFacilityRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateFacilityRequest) ProtoMessage() {}

func (x *CreateFacilityRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_nexus_v1_nexus_proto_msgTypes[35]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

type CreateFacilityRequest_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

}

func (b0 CreateFacilityRequest_builder) Build() *CreateFacilityRequest {
	m0 := &CreateFacilityRequest{}
	b, x := &b0, m0
	_, _ = b, x
	return m0
}

type UpdateFacilityRequest struct {
	state         protoimpl.MessageState `protogen:"opaque.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *UpdateFacilityRequest) Reset() {
	*x = UpdateFacilityRequest{}
	mi := &file_api_nexus_v1_nexus_proto_msgTypes[36]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UpdateFacilityRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateFacilityRequest) ProtoMessage() {}

func (x *UpdateFacilityRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_nexus_v1_nexus_proto_msgTypes[36]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

type UpdateFacilityRequest_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

}

func (b0 UpdateFacilityRequest_builder) Build() *UpdateFacilityRequest {
	m0 := &UpdateFacilityRequest{}
	b, x := &b0, m0
	_, _ = b, x
	return m0
}

type DeleteFacilityRequest struct {
	state         protoimpl.MessageState `protogen:"opaque.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DeleteFacilityRequest) Reset() {
	*x = DeleteFacilityRequest{}
	mi := &file_api_nexus_v1_nexus_proto_msgTypes[37]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DeleteFacilityRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteFacilityRequest) ProtoMessage() {}

func (x *DeleteFacilityRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_nexus_v1_nexus_proto_msgTypes[37]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

type DeleteFacilityRequest_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

}

func (b0 DeleteFacilityRequest_builder) Build() *DeleteFacilityRequest {
	m0 := &DeleteFacilityRequest{}
	b, x := &b0, m0
	_, _ = b, x
	return m0
}

type ExposeFacilityRequest struct {
	state         protoimpl.MessageState `protogen:"opaque.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ExposeFacilityRequest) Reset() {
	*x = ExposeFacilityRequest{}
	mi := &file_api_nexus_v1_nexus_proto_msgTypes[38]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ExposeFacilityRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ExposeFacilityRequest) ProtoMessage() {}

func (x *ExposeFacilityRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_nexus_v1_nexus_proto_msgTypes[38]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

type ExposeFacilityRequest_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

}

func (b0 ExposeFacilityRequest_builder) Build() *ExposeFacilityRequest {
	m0 := &ExposeFacilityRequest{}
	b, x := &b0, m0
	_, _ = b, x
	return m0
}

type AddFacilityUnitsRequest struct {
	state         protoimpl.MessageState `protogen:"opaque.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *AddFacilityUnitsRequest) Reset() {
	*x = AddFacilityUnitsRequest{}
	mi := &file_api_nexus_v1_nexus_proto_msgTypes[39]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *AddFacilityUnitsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddFacilityUnitsRequest) ProtoMessage() {}

func (x *AddFacilityUnitsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_nexus_v1_nexus_proto_msgTypes[39]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

type AddFacilityUnitsRequest_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

}

func (b0 AddFacilityUnitsRequest_builder) Build() *AddFacilityUnitsRequest {
	m0 := &AddFacilityUnitsRequest{}
	b, x := &b0, m0
	_, _ = b, x
	return m0
}

type ListActionsRequest struct {
	state         protoimpl.MessageState `protogen:"opaque.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ListActionsRequest) Reset() {
	*x = ListActionsRequest{}
	mi := &file_api_nexus_v1_nexus_proto_msgTypes[40]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListActionsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListActionsRequest) ProtoMessage() {}

func (x *ListActionsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_nexus_v1_nexus_proto_msgTypes[40]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

type ListActionsRequest_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

}

func (b0 ListActionsRequest_builder) Build() *ListActionsRequest {
	m0 := &ListActionsRequest{}
	b, x := &b0, m0
	_, _ = b, x
	return m0
}

type ListActionsResponse struct {
	state              protoimpl.MessageState `protogen:"opaque.v1"`
	xxx_hidden_Actions *[]*Facility_Action    `protobuf:"bytes,1,rep,name=actions"`
	unknownFields      protoimpl.UnknownFields
	sizeCache          protoimpl.SizeCache
}

func (x *ListActionsResponse) Reset() {
	*x = ListActionsResponse{}
	mi := &file_api_nexus_v1_nexus_proto_msgTypes[41]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListActionsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListActionsResponse) ProtoMessage() {}

func (x *ListActionsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_api_nexus_v1_nexus_proto_msgTypes[41]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *ListActionsResponse) GetActions() []*Facility_Action {
	if x != nil {
		if x.xxx_hidden_Actions != nil {
			return *x.xxx_hidden_Actions
		}
	}
	return nil
}

func (x *ListActionsResponse) SetActions(v []*Facility_Action) {
	x.xxx_hidden_Actions = &v
}

type ListActionsResponse_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	Actions []*Facility_Action
}

func (b0 ListActionsResponse_builder) Build() *ListActionsResponse {
	m0 := &ListActionsResponse{}
	b, x := &b0, m0
	_, _ = b, x
	x.xxx_hidden_Actions = &b.Actions
	return m0
}

type RunActionRequest struct {
	state         protoimpl.MessageState `protogen:"opaque.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RunActionRequest) Reset() {
	*x = RunActionRequest{}
	mi := &file_api_nexus_v1_nexus_proto_msgTypes[42]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RunActionRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RunActionRequest) ProtoMessage() {}

func (x *RunActionRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_nexus_v1_nexus_proto_msgTypes[42]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

type RunActionRequest_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

}

func (b0 RunActionRequest_builder) Build() *RunActionRequest {
	m0 := &RunActionRequest{}
	b, x := &b0, m0
	_, _ = b, x
	return m0
}

type ListApplicationsRequest struct {
	state         protoimpl.MessageState `protogen:"opaque.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ListApplicationsRequest) Reset() {
	*x = ListApplicationsRequest{}
	mi := &file_api_nexus_v1_nexus_proto_msgTypes[43]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListApplicationsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListApplicationsRequest) ProtoMessage() {}

func (x *ListApplicationsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_nexus_v1_nexus_proto_msgTypes[43]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

type ListApplicationsRequest_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

}

func (b0 ListApplicationsRequest_builder) Build() *ListApplicationsRequest {
	m0 := &ListApplicationsRequest{}
	b, x := &b0, m0
	_, _ = b, x
	return m0
}

type ListApplicationsResponse struct {
	state                   protoimpl.MessageState `protogen:"opaque.v1"`
	xxx_hidden_Applications *[]*Application        `protobuf:"bytes,1,rep,name=applications"`
	unknownFields           protoimpl.UnknownFields
	sizeCache               protoimpl.SizeCache
}

func (x *ListApplicationsResponse) Reset() {
	*x = ListApplicationsResponse{}
	mi := &file_api_nexus_v1_nexus_proto_msgTypes[44]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListApplicationsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListApplicationsResponse) ProtoMessage() {}

func (x *ListApplicationsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_api_nexus_v1_nexus_proto_msgTypes[44]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *ListApplicationsResponse) GetApplications() []*Application {
	if x != nil {
		if x.xxx_hidden_Applications != nil {
			return *x.xxx_hidden_Applications
		}
	}
	return nil
}

func (x *ListApplicationsResponse) SetApplications(v []*Application) {
	x.xxx_hidden_Applications = &v
}

type ListApplicationsResponse_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	Applications []*Application
}

func (b0 ListApplicationsResponse_builder) Build() *ListApplicationsResponse {
	m0 := &ListApplicationsResponse{}
	b, x := &b0, m0
	_, _ = b, x
	x.xxx_hidden_Applications = &b.Applications
	return m0
}

type GetApplicationRequest struct {
	state         protoimpl.MessageState `protogen:"opaque.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetApplicationRequest) Reset() {
	*x = GetApplicationRequest{}
	mi := &file_api_nexus_v1_nexus_proto_msgTypes[45]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetApplicationRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetApplicationRequest) ProtoMessage() {}

func (x *GetApplicationRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_nexus_v1_nexus_proto_msgTypes[45]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

type GetApplicationRequest_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

}

func (b0 GetApplicationRequest_builder) Build() *GetApplicationRequest {
	m0 := &GetApplicationRequest{}
	b, x := &b0, m0
	_, _ = b, x
	return m0
}

type ListReleasesRequest struct {
	state         protoimpl.MessageState `protogen:"opaque.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ListReleasesRequest) Reset() {
	*x = ListReleasesRequest{}
	mi := &file_api_nexus_v1_nexus_proto_msgTypes[46]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListReleasesRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListReleasesRequest) ProtoMessage() {}

func (x *ListReleasesRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_nexus_v1_nexus_proto_msgTypes[46]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

type ListReleasesRequest_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

}

func (b0 ListReleasesRequest_builder) Build() *ListReleasesRequest {
	m0 := &ListReleasesRequest{}
	b, x := &b0, m0
	_, _ = b, x
	return m0
}

type ListReleasesResponse struct {
	state               protoimpl.MessageState  `protogen:"opaque.v1"`
	xxx_hidden_Releases *[]*Application_Release `protobuf:"bytes,1,rep,name=releases"`
	unknownFields       protoimpl.UnknownFields
	sizeCache           protoimpl.SizeCache
}

func (x *ListReleasesResponse) Reset() {
	*x = ListReleasesResponse{}
	mi := &file_api_nexus_v1_nexus_proto_msgTypes[47]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListReleasesResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListReleasesResponse) ProtoMessage() {}

func (x *ListReleasesResponse) ProtoReflect() protoreflect.Message {
	mi := &file_api_nexus_v1_nexus_proto_msgTypes[47]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *ListReleasesResponse) GetReleases() []*Application_Release {
	if x != nil {
		if x.xxx_hidden_Releases != nil {
			return *x.xxx_hidden_Releases
		}
	}
	return nil
}

func (x *ListReleasesResponse) SetReleases(v []*Application_Release) {
	x.xxx_hidden_Releases = &v
}

type ListReleasesResponse_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	Releases []*Application_Release
}

func (b0 ListReleasesResponse_builder) Build() *ListReleasesResponse {
	m0 := &ListReleasesResponse{}
	b, x := &b0, m0
	_, _ = b, x
	x.xxx_hidden_Releases = &b.Releases
	return m0
}

type CreateReleaseRequest struct {
	state         protoimpl.MessageState `protogen:"opaque.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CreateReleaseRequest) Reset() {
	*x = CreateReleaseRequest{}
	mi := &file_api_nexus_v1_nexus_proto_msgTypes[48]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CreateReleaseRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateReleaseRequest) ProtoMessage() {}

func (x *CreateReleaseRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_nexus_v1_nexus_proto_msgTypes[48]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

type CreateReleaseRequest_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

}

func (b0 CreateReleaseRequest_builder) Build() *CreateReleaseRequest {
	m0 := &CreateReleaseRequest{}
	b, x := &b0, m0
	_, _ = b, x
	return m0
}

type UpdateReleaseRequest struct {
	state         protoimpl.MessageState `protogen:"opaque.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *UpdateReleaseRequest) Reset() {
	*x = UpdateReleaseRequest{}
	mi := &file_api_nexus_v1_nexus_proto_msgTypes[49]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UpdateReleaseRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateReleaseRequest) ProtoMessage() {}

func (x *UpdateReleaseRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_nexus_v1_nexus_proto_msgTypes[49]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

type UpdateReleaseRequest_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

}

func (b0 UpdateReleaseRequest_builder) Build() *UpdateReleaseRequest {
	m0 := &UpdateReleaseRequest{}
	b, x := &b0, m0
	_, _ = b, x
	return m0
}

type DeleteReleaseRequest struct {
	state         protoimpl.MessageState `protogen:"opaque.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DeleteReleaseRequest) Reset() {
	*x = DeleteReleaseRequest{}
	mi := &file_api_nexus_v1_nexus_proto_msgTypes[50]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DeleteReleaseRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteReleaseRequest) ProtoMessage() {}

func (x *DeleteReleaseRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_nexus_v1_nexus_proto_msgTypes[50]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

type DeleteReleaseRequest_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

}

func (b0 DeleteReleaseRequest_builder) Build() *DeleteReleaseRequest {
	m0 := &DeleteReleaseRequest{}
	b, x := &b0, m0
	_, _ = b, x
	return m0
}

type RollbackReleaseRequest struct {
	state         protoimpl.MessageState `protogen:"opaque.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RollbackReleaseRequest) Reset() {
	*x = RollbackReleaseRequest{}
	mi := &file_api_nexus_v1_nexus_proto_msgTypes[51]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RollbackReleaseRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RollbackReleaseRequest) ProtoMessage() {}

func (x *RollbackReleaseRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_nexus_v1_nexus_proto_msgTypes[51]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

type RollbackReleaseRequest_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

}

func (b0 RollbackReleaseRequest_builder) Build() *RollbackReleaseRequest {
	m0 := &RollbackReleaseRequest{}
	b, x := &b0, m0
	_, _ = b, x
	return m0
}

type ListChartsRequest struct {
	state         protoimpl.MessageState `protogen:"opaque.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ListChartsRequest) Reset() {
	*x = ListChartsRequest{}
	mi := &file_api_nexus_v1_nexus_proto_msgTypes[52]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListChartsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListChartsRequest) ProtoMessage() {}

func (x *ListChartsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_nexus_v1_nexus_proto_msgTypes[52]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

type ListChartsRequest_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

}

func (b0 ListChartsRequest_builder) Build() *ListChartsRequest {
	m0 := &ListChartsRequest{}
	b, x := &b0, m0
	_, _ = b, x
	return m0
}

type ListChartsResponse struct {
	state             protoimpl.MessageState        `protogen:"opaque.v1"`
	xxx_hidden_Charts *[]*Application_Release_Chart `protobuf:"bytes,1,rep,name=charts"`
	unknownFields     protoimpl.UnknownFields
	sizeCache         protoimpl.SizeCache
}

func (x *ListChartsResponse) Reset() {
	*x = ListChartsResponse{}
	mi := &file_api_nexus_v1_nexus_proto_msgTypes[53]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListChartsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListChartsResponse) ProtoMessage() {}

func (x *ListChartsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_api_nexus_v1_nexus_proto_msgTypes[53]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *ListChartsResponse) GetCharts() []*Application_Release_Chart {
	if x != nil {
		if x.xxx_hidden_Charts != nil {
			return *x.xxx_hidden_Charts
		}
	}
	return nil
}

func (x *ListChartsResponse) SetCharts(v []*Application_Release_Chart) {
	x.xxx_hidden_Charts = &v
}

type ListChartsResponse_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	Charts []*Application_Release_Chart
}

func (b0 ListChartsResponse_builder) Build() *ListChartsResponse {
	m0 := &ListChartsResponse{}
	b, x := &b0, m0
	_, _ = b, x
	x.xxx_hidden_Charts = &b.Charts
	return m0
}

type GetChartRequest struct {
	state         protoimpl.MessageState `protogen:"opaque.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetChartRequest) Reset() {
	*x = GetChartRequest{}
	mi := &file_api_nexus_v1_nexus_proto_msgTypes[54]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetChartRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetChartRequest) ProtoMessage() {}

func (x *GetChartRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_nexus_v1_nexus_proto_msgTypes[54]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

type GetChartRequest_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

}

func (b0 GetChartRequest_builder) Build() *GetChartRequest {
	m0 := &GetChartRequest{}
	b, x := &b0, m0
	_, _ = b, x
	return m0
}

type GetChartMetadataRequest struct {
	state         protoimpl.MessageState `protogen:"opaque.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetChartMetadataRequest) Reset() {
	*x = GetChartMetadataRequest{}
	mi := &file_api_nexus_v1_nexus_proto_msgTypes[55]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetChartMetadataRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetChartMetadataRequest) ProtoMessage() {}

func (x *GetChartMetadataRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_nexus_v1_nexus_proto_msgTypes[55]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

type GetChartMetadataRequest_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

}

func (b0 GetChartMetadataRequest_builder) Build() *GetChartMetadataRequest {
	m0 := &GetChartMetadataRequest{}
	b, x := &b0, m0
	_, _ = b, x
	return m0
}

type Configuration_NTPServer struct {
	state                protoimpl.MessageState `protogen:"opaque.v1"`
	xxx_hidden_Addresses []string               `protobuf:"bytes,1,rep,name=addresses"`
	unknownFields        protoimpl.UnknownFields
	sizeCache            protoimpl.SizeCache
}

func (x *Configuration_NTPServer) Reset() {
	*x = Configuration_NTPServer{}
	mi := &file_api_nexus_v1_nexus_proto_msgTypes[56]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Configuration_NTPServer) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Configuration_NTPServer) ProtoMessage() {}

func (x *Configuration_NTPServer) ProtoReflect() protoreflect.Message {
	mi := &file_api_nexus_v1_nexus_proto_msgTypes[56]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *Configuration_NTPServer) GetAddresses() []string {
	if x != nil {
		return x.xxx_hidden_Addresses
	}
	return nil
}

func (x *Configuration_NTPServer) SetAddresses(v []string) {
	x.xxx_hidden_Addresses = v
}

type Configuration_NTPServer_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	Addresses []string
}

func (b0 Configuration_NTPServer_builder) Build() *Configuration_NTPServer {
	m0 := &Configuration_NTPServer{}
	b, x := &b0, m0
	_, _ = b, x
	x.xxx_hidden_Addresses = b.Addresses
	return m0
}

type Configuration_PackageRepository struct {
	state                  protoimpl.MessageState `protogen:"opaque.v1"`
	xxx_hidden_Id          int64                  `protobuf:"varint,1,opt,name=id"`
	xxx_hidden_Name        *string                `protobuf:"bytes,2,opt,name=name"`
	xxx_hidden_Url         *string                `protobuf:"bytes,3,opt,name=url"`
	xxx_hidden_Enabled     bool                   `protobuf:"varint,4,opt,name=enabled"`
	XXX_raceDetectHookData protoimpl.RaceDetectHookData
	XXX_presence           [1]uint32
	unknownFields          protoimpl.UnknownFields
	sizeCache              protoimpl.SizeCache
}

func (x *Configuration_PackageRepository) Reset() {
	*x = Configuration_PackageRepository{}
	mi := &file_api_nexus_v1_nexus_proto_msgTypes[57]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Configuration_PackageRepository) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Configuration_PackageRepository) ProtoMessage() {}

func (x *Configuration_PackageRepository) ProtoReflect() protoreflect.Message {
	mi := &file_api_nexus_v1_nexus_proto_msgTypes[57]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *Configuration_PackageRepository) GetId() int64 {
	if x != nil {
		return x.xxx_hidden_Id
	}
	return 0
}

func (x *Configuration_PackageRepository) GetName() string {
	if x != nil {
		if x.xxx_hidden_Name != nil {
			return *x.xxx_hidden_Name
		}
		return ""
	}
	return ""
}

func (x *Configuration_PackageRepository) GetUrl() string {
	if x != nil {
		if x.xxx_hidden_Url != nil {
			return *x.xxx_hidden_Url
		}
		return ""
	}
	return ""
}

func (x *Configuration_PackageRepository) GetEnabled() bool {
	if x != nil {
		return x.xxx_hidden_Enabled
	}
	return false
}

func (x *Configuration_PackageRepository) SetId(v int64) {
	x.xxx_hidden_Id = v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 0, 4)
}

func (x *Configuration_PackageRepository) SetName(v string) {
	x.xxx_hidden_Name = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 1, 4)
}

func (x *Configuration_PackageRepository) SetUrl(v string) {
	x.xxx_hidden_Url = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 2, 4)
}

func (x *Configuration_PackageRepository) SetEnabled(v bool) {
	x.xxx_hidden_Enabled = v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 3, 4)
}

func (x *Configuration_PackageRepository) HasId() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 0)
}

func (x *Configuration_PackageRepository) HasName() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 1)
}

func (x *Configuration_PackageRepository) HasUrl() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 2)
}

func (x *Configuration_PackageRepository) HasEnabled() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 3)
}

func (x *Configuration_PackageRepository) ClearId() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 0)
	x.xxx_hidden_Id = 0
}

func (x *Configuration_PackageRepository) ClearName() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 1)
	x.xxx_hidden_Name = nil
}

func (x *Configuration_PackageRepository) ClearUrl() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 2)
	x.xxx_hidden_Url = nil
}

func (x *Configuration_PackageRepository) ClearEnabled() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 3)
	x.xxx_hidden_Enabled = false
}

type Configuration_PackageRepository_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	Id      *int64
	Name    *string
	Url     *string
	Enabled *bool
}

func (b0 Configuration_PackageRepository_builder) Build() *Configuration_PackageRepository {
	m0 := &Configuration_PackageRepository{}
	b, x := &b0, m0
	_, _ = b, x
	if b.Id != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 0, 4)
		x.xxx_hidden_Id = *b.Id
	}
	if b.Name != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 1, 4)
		x.xxx_hidden_Name = b.Name
	}
	if b.Url != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 2, 4)
		x.xxx_hidden_Url = b.Url
	}
	if b.Enabled != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 3, 4)
		x.xxx_hidden_Enabled = *b.Enabled
	}
	return m0
}

type Configuration_BootResource struct {
	state                   protoimpl.MessageState `protogen:"opaque.v1"`
	xxx_hidden_Name         *string                `protobuf:"bytes,1,opt,name=name"`
	xxx_hidden_Architecture *string                `protobuf:"bytes,2,opt,name=architecture"`
	xxx_hidden_Status       *string                `protobuf:"bytes,3,opt,name=status"`
	xxx_hidden_Default      bool                   `protobuf:"varint,11,opt,name=default"`
	xxx_hidden_DistroSeries *string                `protobuf:"bytes,12,opt,name=distro_series,json=distroSeries"`
	XXX_raceDetectHookData  protoimpl.RaceDetectHookData
	XXX_presence            [1]uint32
	unknownFields           protoimpl.UnknownFields
	sizeCache               protoimpl.SizeCache
}

func (x *Configuration_BootResource) Reset() {
	*x = Configuration_BootResource{}
	mi := &file_api_nexus_v1_nexus_proto_msgTypes[58]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Configuration_BootResource) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Configuration_BootResource) ProtoMessage() {}

func (x *Configuration_BootResource) ProtoReflect() protoreflect.Message {
	mi := &file_api_nexus_v1_nexus_proto_msgTypes[58]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *Configuration_BootResource) GetName() string {
	if x != nil {
		if x.xxx_hidden_Name != nil {
			return *x.xxx_hidden_Name
		}
		return ""
	}
	return ""
}

func (x *Configuration_BootResource) GetArchitecture() string {
	if x != nil {
		if x.xxx_hidden_Architecture != nil {
			return *x.xxx_hidden_Architecture
		}
		return ""
	}
	return ""
}

func (x *Configuration_BootResource) GetStatus() string {
	if x != nil {
		if x.xxx_hidden_Status != nil {
			return *x.xxx_hidden_Status
		}
		return ""
	}
	return ""
}

func (x *Configuration_BootResource) GetDefault() bool {
	if x != nil {
		return x.xxx_hidden_Default
	}
	return false
}

func (x *Configuration_BootResource) GetDistroSeries() string {
	if x != nil {
		if x.xxx_hidden_DistroSeries != nil {
			return *x.xxx_hidden_DistroSeries
		}
		return ""
	}
	return ""
}

func (x *Configuration_BootResource) SetName(v string) {
	x.xxx_hidden_Name = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 0, 5)
}

func (x *Configuration_BootResource) SetArchitecture(v string) {
	x.xxx_hidden_Architecture = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 1, 5)
}

func (x *Configuration_BootResource) SetStatus(v string) {
	x.xxx_hidden_Status = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 2, 5)
}

func (x *Configuration_BootResource) SetDefault(v bool) {
	x.xxx_hidden_Default = v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 3, 5)
}

func (x *Configuration_BootResource) SetDistroSeries(v string) {
	x.xxx_hidden_DistroSeries = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 4, 5)
}

func (x *Configuration_BootResource) HasName() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 0)
}

func (x *Configuration_BootResource) HasArchitecture() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 1)
}

func (x *Configuration_BootResource) HasStatus() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 2)
}

func (x *Configuration_BootResource) HasDefault() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 3)
}

func (x *Configuration_BootResource) HasDistroSeries() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 4)
}

func (x *Configuration_BootResource) ClearName() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 0)
	x.xxx_hidden_Name = nil
}

func (x *Configuration_BootResource) ClearArchitecture() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 1)
	x.xxx_hidden_Architecture = nil
}

func (x *Configuration_BootResource) ClearStatus() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 2)
	x.xxx_hidden_Status = nil
}

func (x *Configuration_BootResource) ClearDefault() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 3)
	x.xxx_hidden_Default = false
}

func (x *Configuration_BootResource) ClearDistroSeries() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 4)
	x.xxx_hidden_DistroSeries = nil
}

type Configuration_BootResource_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	Name         *string
	Architecture *string
	Status       *string
	Default      *bool
	DistroSeries *string
}

func (b0 Configuration_BootResource_builder) Build() *Configuration_BootResource {
	m0 := &Configuration_BootResource{}
	b, x := &b0, m0
	_, _ = b, x
	if b.Name != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 0, 5)
		x.xxx_hidden_Name = b.Name
	}
	if b.Architecture != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 1, 5)
		x.xxx_hidden_Architecture = b.Architecture
	}
	if b.Status != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 2, 5)
		x.xxx_hidden_Status = b.Status
	}
	if b.Default != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 3, 5)
		x.xxx_hidden_Default = *b.Default
	}
	if b.DistroSeries != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 4, 5)
		x.xxx_hidden_DistroSeries = b.DistroSeries
	}
	return m0
}

type Network_IPAddress struct {
	state                  protoimpl.MessageState `protogen:"opaque.v1"`
	xxx_hidden_Type        *string                `protobuf:"bytes,1,opt,name=type"`
	xxx_hidden_Ip          *string                `protobuf:"bytes,2,opt,name=ip"`
	xxx_hidden_User        *string                `protobuf:"bytes,3,opt,name=user"`
	xxx_hidden_MachineId   *string                `protobuf:"bytes,11,opt,name=machine_id,json=machineId"`
	xxx_hidden_NodeType    *string                `protobuf:"bytes,12,opt,name=node_type,json=nodeType"`
	xxx_hidden_Hostname    *string                `protobuf:"bytes,13,opt,name=hostname"`
	XXX_raceDetectHookData protoimpl.RaceDetectHookData
	XXX_presence           [1]uint32
	unknownFields          protoimpl.UnknownFields
	sizeCache              protoimpl.SizeCache
}

func (x *Network_IPAddress) Reset() {
	*x = Network_IPAddress{}
	mi := &file_api_nexus_v1_nexus_proto_msgTypes[59]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Network_IPAddress) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Network_IPAddress) ProtoMessage() {}

func (x *Network_IPAddress) ProtoReflect() protoreflect.Message {
	mi := &file_api_nexus_v1_nexus_proto_msgTypes[59]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *Network_IPAddress) GetType() string {
	if x != nil {
		if x.xxx_hidden_Type != nil {
			return *x.xxx_hidden_Type
		}
		return ""
	}
	return ""
}

func (x *Network_IPAddress) GetIp() string {
	if x != nil {
		if x.xxx_hidden_Ip != nil {
			return *x.xxx_hidden_Ip
		}
		return ""
	}
	return ""
}

func (x *Network_IPAddress) GetUser() string {
	if x != nil {
		if x.xxx_hidden_User != nil {
			return *x.xxx_hidden_User
		}
		return ""
	}
	return ""
}

func (x *Network_IPAddress) GetMachineId() string {
	if x != nil {
		if x.xxx_hidden_MachineId != nil {
			return *x.xxx_hidden_MachineId
		}
		return ""
	}
	return ""
}

func (x *Network_IPAddress) GetNodeType() string {
	if x != nil {
		if x.xxx_hidden_NodeType != nil {
			return *x.xxx_hidden_NodeType
		}
		return ""
	}
	return ""
}

func (x *Network_IPAddress) GetHostname() string {
	if x != nil {
		if x.xxx_hidden_Hostname != nil {
			return *x.xxx_hidden_Hostname
		}
		return ""
	}
	return ""
}

func (x *Network_IPAddress) SetType(v string) {
	x.xxx_hidden_Type = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 0, 6)
}

func (x *Network_IPAddress) SetIp(v string) {
	x.xxx_hidden_Ip = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 1, 6)
}

func (x *Network_IPAddress) SetUser(v string) {
	x.xxx_hidden_User = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 2, 6)
}

func (x *Network_IPAddress) SetMachineId(v string) {
	x.xxx_hidden_MachineId = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 3, 6)
}

func (x *Network_IPAddress) SetNodeType(v string) {
	x.xxx_hidden_NodeType = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 4, 6)
}

func (x *Network_IPAddress) SetHostname(v string) {
	x.xxx_hidden_Hostname = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 5, 6)
}

func (x *Network_IPAddress) HasType() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 0)
}

func (x *Network_IPAddress) HasIp() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 1)
}

func (x *Network_IPAddress) HasUser() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 2)
}

func (x *Network_IPAddress) HasMachineId() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 3)
}

func (x *Network_IPAddress) HasNodeType() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 4)
}

func (x *Network_IPAddress) HasHostname() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 5)
}

func (x *Network_IPAddress) ClearType() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 0)
	x.xxx_hidden_Type = nil
}

func (x *Network_IPAddress) ClearIp() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 1)
	x.xxx_hidden_Ip = nil
}

func (x *Network_IPAddress) ClearUser() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 2)
	x.xxx_hidden_User = nil
}

func (x *Network_IPAddress) ClearMachineId() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 3)
	x.xxx_hidden_MachineId = nil
}

func (x *Network_IPAddress) ClearNodeType() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 4)
	x.xxx_hidden_NodeType = nil
}

func (x *Network_IPAddress) ClearHostname() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 5)
	x.xxx_hidden_Hostname = nil
}

type Network_IPAddress_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	Type      *string
	Ip        *string
	User      *string
	MachineId *string
	NodeType  *string
	Hostname  *string
}

func (b0 Network_IPAddress_builder) Build() *Network_IPAddress {
	m0 := &Network_IPAddress{}
	b, x := &b0, m0
	_, _ = b, x
	if b.Type != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 0, 6)
		x.xxx_hidden_Type = b.Type
	}
	if b.Ip != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 1, 6)
		x.xxx_hidden_Ip = b.Ip
	}
	if b.User != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 2, 6)
		x.xxx_hidden_User = b.User
	}
	if b.MachineId != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 3, 6)
		x.xxx_hidden_MachineId = b.MachineId
	}
	if b.NodeType != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 4, 6)
		x.xxx_hidden_NodeType = b.NodeType
	}
	if b.Hostname != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 5, 6)
		x.xxx_hidden_Hostname = b.Hostname
	}
	return m0
}

type Network_IPRange struct {
	state                  protoimpl.MessageState `protogen:"opaque.v1"`
	xxx_hidden_Id          int64                  `protobuf:"varint,1,opt,name=id"`
	xxx_hidden_Type        *string                `protobuf:"bytes,2,opt,name=type"`
	xxx_hidden_StartIp     *string                `protobuf:"bytes,3,opt,name=start_ip,json=startIp"`
	xxx_hidden_EndIp       *string                `protobuf:"bytes,4,opt,name=end_ip,json=endIp"`
	xxx_hidden_Comment     *string                `protobuf:"bytes,5,opt,name=comment"`
	XXX_raceDetectHookData protoimpl.RaceDetectHookData
	XXX_presence           [1]uint32
	unknownFields          protoimpl.UnknownFields
	sizeCache              protoimpl.SizeCache
}

func (x *Network_IPRange) Reset() {
	*x = Network_IPRange{}
	mi := &file_api_nexus_v1_nexus_proto_msgTypes[60]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Network_IPRange) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Network_IPRange) ProtoMessage() {}

func (x *Network_IPRange) ProtoReflect() protoreflect.Message {
	mi := &file_api_nexus_v1_nexus_proto_msgTypes[60]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *Network_IPRange) GetId() int64 {
	if x != nil {
		return x.xxx_hidden_Id
	}
	return 0
}

func (x *Network_IPRange) GetType() string {
	if x != nil {
		if x.xxx_hidden_Type != nil {
			return *x.xxx_hidden_Type
		}
		return ""
	}
	return ""
}

func (x *Network_IPRange) GetStartIp() string {
	if x != nil {
		if x.xxx_hidden_StartIp != nil {
			return *x.xxx_hidden_StartIp
		}
		return ""
	}
	return ""
}

func (x *Network_IPRange) GetEndIp() string {
	if x != nil {
		if x.xxx_hidden_EndIp != nil {
			return *x.xxx_hidden_EndIp
		}
		return ""
	}
	return ""
}

func (x *Network_IPRange) GetComment() string {
	if x != nil {
		if x.xxx_hidden_Comment != nil {
			return *x.xxx_hidden_Comment
		}
		return ""
	}
	return ""
}

func (x *Network_IPRange) SetId(v int64) {
	x.xxx_hidden_Id = v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 0, 5)
}

func (x *Network_IPRange) SetType(v string) {
	x.xxx_hidden_Type = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 1, 5)
}

func (x *Network_IPRange) SetStartIp(v string) {
	x.xxx_hidden_StartIp = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 2, 5)
}

func (x *Network_IPRange) SetEndIp(v string) {
	x.xxx_hidden_EndIp = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 3, 5)
}

func (x *Network_IPRange) SetComment(v string) {
	x.xxx_hidden_Comment = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 4, 5)
}

func (x *Network_IPRange) HasId() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 0)
}

func (x *Network_IPRange) HasType() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 1)
}

func (x *Network_IPRange) HasStartIp() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 2)
}

func (x *Network_IPRange) HasEndIp() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 3)
}

func (x *Network_IPRange) HasComment() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 4)
}

func (x *Network_IPRange) ClearId() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 0)
	x.xxx_hidden_Id = 0
}

func (x *Network_IPRange) ClearType() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 1)
	x.xxx_hidden_Type = nil
}

func (x *Network_IPRange) ClearStartIp() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 2)
	x.xxx_hidden_StartIp = nil
}

func (x *Network_IPRange) ClearEndIp() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 3)
	x.xxx_hidden_EndIp = nil
}

func (x *Network_IPRange) ClearComment() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 4)
	x.xxx_hidden_Comment = nil
}

type Network_IPRange_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	Id      *int64
	Type    *string
	StartIp *string
	EndIp   *string
	Comment *string
}

func (b0 Network_IPRange_builder) Build() *Network_IPRange {
	m0 := &Network_IPRange{}
	b, x := &b0, m0
	_, _ = b, x
	if b.Id != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 0, 5)
		x.xxx_hidden_Id = *b.Id
	}
	if b.Type != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 1, 5)
		x.xxx_hidden_Type = b.Type
	}
	if b.StartIp != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 2, 5)
		x.xxx_hidden_StartIp = b.StartIp
	}
	if b.EndIp != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 3, 5)
		x.xxx_hidden_EndIp = b.EndIp
	}
	if b.Comment != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 4, 5)
		x.xxx_hidden_Comment = b.Comment
	}
	return m0
}

type Network_Statistics struct {
	state                       protoimpl.MessageState `protogen:"opaque.v1"`
	xxx_hidden_Available        int64                  `protobuf:"varint,1,opt,name=available"`
	xxx_hidden_Total            int64                  `protobuf:"varint,2,opt,name=total"`
	xxx_hidden_UsagePercent     *string                `protobuf:"bytes,3,opt,name=usage_percent,json=usagePercent"`
	xxx_hidden_AvailablePercent *string                `protobuf:"bytes,4,opt,name=available_percent,json=availablePercent"`
	XXX_raceDetectHookData      protoimpl.RaceDetectHookData
	XXX_presence                [1]uint32
	unknownFields               protoimpl.UnknownFields
	sizeCache                   protoimpl.SizeCache
}

func (x *Network_Statistics) Reset() {
	*x = Network_Statistics{}
	mi := &file_api_nexus_v1_nexus_proto_msgTypes[61]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Network_Statistics) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Network_Statistics) ProtoMessage() {}

func (x *Network_Statistics) ProtoReflect() protoreflect.Message {
	mi := &file_api_nexus_v1_nexus_proto_msgTypes[61]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *Network_Statistics) GetAvailable() int64 {
	if x != nil {
		return x.xxx_hidden_Available
	}
	return 0
}

func (x *Network_Statistics) GetTotal() int64 {
	if x != nil {
		return x.xxx_hidden_Total
	}
	return 0
}

func (x *Network_Statistics) GetUsagePercent() string {
	if x != nil {
		if x.xxx_hidden_UsagePercent != nil {
			return *x.xxx_hidden_UsagePercent
		}
		return ""
	}
	return ""
}

func (x *Network_Statistics) GetAvailablePercent() string {
	if x != nil {
		if x.xxx_hidden_AvailablePercent != nil {
			return *x.xxx_hidden_AvailablePercent
		}
		return ""
	}
	return ""
}

func (x *Network_Statistics) SetAvailable(v int64) {
	x.xxx_hidden_Available = v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 0, 4)
}

func (x *Network_Statistics) SetTotal(v int64) {
	x.xxx_hidden_Total = v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 1, 4)
}

func (x *Network_Statistics) SetUsagePercent(v string) {
	x.xxx_hidden_UsagePercent = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 2, 4)
}

func (x *Network_Statistics) SetAvailablePercent(v string) {
	x.xxx_hidden_AvailablePercent = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 3, 4)
}

func (x *Network_Statistics) HasAvailable() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 0)
}

func (x *Network_Statistics) HasTotal() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 1)
}

func (x *Network_Statistics) HasUsagePercent() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 2)
}

func (x *Network_Statistics) HasAvailablePercent() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 3)
}

func (x *Network_Statistics) ClearAvailable() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 0)
	x.xxx_hidden_Available = 0
}

func (x *Network_Statistics) ClearTotal() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 1)
	x.xxx_hidden_Total = 0
}

func (x *Network_Statistics) ClearUsagePercent() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 2)
	x.xxx_hidden_UsagePercent = nil
}

func (x *Network_Statistics) ClearAvailablePercent() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 3)
	x.xxx_hidden_AvailablePercent = nil
}

type Network_Statistics_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	Available        *int64
	Total            *int64
	UsagePercent     *string
	AvailablePercent *string
}

func (b0 Network_Statistics_builder) Build() *Network_Statistics {
	m0 := &Network_Statistics{}
	b, x := &b0, m0
	_, _ = b, x
	if b.Available != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 0, 4)
		x.xxx_hidden_Available = *b.Available
	}
	if b.Total != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 1, 4)
		x.xxx_hidden_Total = *b.Total
	}
	if b.UsagePercent != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 2, 4)
		x.xxx_hidden_UsagePercent = b.UsagePercent
	}
	if b.AvailablePercent != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 3, 4)
		x.xxx_hidden_AvailablePercent = b.AvailablePercent
	}
	return m0
}

type Network_Fabric struct {
	state                  protoimpl.MessageState `protogen:"opaque.v1"`
	xxx_hidden_Id          int64                  `protobuf:"varint,1,opt,name=id"`
	xxx_hidden_Name        *string                `protobuf:"bytes,2,opt,name=name"`
	XXX_raceDetectHookData protoimpl.RaceDetectHookData
	XXX_presence           [1]uint32
	unknownFields          protoimpl.UnknownFields
	sizeCache              protoimpl.SizeCache
}

func (x *Network_Fabric) Reset() {
	*x = Network_Fabric{}
	mi := &file_api_nexus_v1_nexus_proto_msgTypes[62]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Network_Fabric) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Network_Fabric) ProtoMessage() {}

func (x *Network_Fabric) ProtoReflect() protoreflect.Message {
	mi := &file_api_nexus_v1_nexus_proto_msgTypes[62]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *Network_Fabric) GetId() int64 {
	if x != nil {
		return x.xxx_hidden_Id
	}
	return 0
}

func (x *Network_Fabric) GetName() string {
	if x != nil {
		if x.xxx_hidden_Name != nil {
			return *x.xxx_hidden_Name
		}
		return ""
	}
	return ""
}

func (x *Network_Fabric) SetId(v int64) {
	x.xxx_hidden_Id = v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 0, 2)
}

func (x *Network_Fabric) SetName(v string) {
	x.xxx_hidden_Name = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 1, 2)
}

func (x *Network_Fabric) HasId() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 0)
}

func (x *Network_Fabric) HasName() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 1)
}

func (x *Network_Fabric) ClearId() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 0)
	x.xxx_hidden_Id = 0
}

func (x *Network_Fabric) ClearName() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 1)
	x.xxx_hidden_Name = nil
}

type Network_Fabric_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	Id   *int64
	Name *string
}

func (b0 Network_Fabric_builder) Build() *Network_Fabric {
	m0 := &Network_Fabric{}
	b, x := &b0, m0
	_, _ = b, x
	if b.Id != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 0, 2)
		x.xxx_hidden_Id = *b.Id
	}
	if b.Name != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 1, 2)
		x.xxx_hidden_Name = b.Name
	}
	return m0
}

type Network_VLAN struct {
	state                  protoimpl.MessageState `protogen:"opaque.v1"`
	xxx_hidden_Id          int64                  `protobuf:"varint,1,opt,name=id"`
	xxx_hidden_Vid         int64                  `protobuf:"varint,2,opt,name=vid"`
	xxx_hidden_Name        *string                `protobuf:"bytes,3,opt,name=name"`
	xxx_hidden_Mtu         int64                  `protobuf:"varint,4,opt,name=mtu"`
	xxx_hidden_Description *string                `protobuf:"bytes,5,opt,name=description"`
	xxx_hidden_DhcpOn      bool                   `protobuf:"varint,6,opt,name=dhcp_on,json=dhcpOn"`
	XXX_raceDetectHookData protoimpl.RaceDetectHookData
	XXX_presence           [1]uint32
	unknownFields          protoimpl.UnknownFields
	sizeCache              protoimpl.SizeCache
}

func (x *Network_VLAN) Reset() {
	*x = Network_VLAN{}
	mi := &file_api_nexus_v1_nexus_proto_msgTypes[63]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Network_VLAN) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Network_VLAN) ProtoMessage() {}

func (x *Network_VLAN) ProtoReflect() protoreflect.Message {
	mi := &file_api_nexus_v1_nexus_proto_msgTypes[63]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *Network_VLAN) GetId() int64 {
	if x != nil {
		return x.xxx_hidden_Id
	}
	return 0
}

func (x *Network_VLAN) GetVid() int64 {
	if x != nil {
		return x.xxx_hidden_Vid
	}
	return 0
}

func (x *Network_VLAN) GetName() string {
	if x != nil {
		if x.xxx_hidden_Name != nil {
			return *x.xxx_hidden_Name
		}
		return ""
	}
	return ""
}

func (x *Network_VLAN) GetMtu() int64 {
	if x != nil {
		return x.xxx_hidden_Mtu
	}
	return 0
}

func (x *Network_VLAN) GetDescription() string {
	if x != nil {
		if x.xxx_hidden_Description != nil {
			return *x.xxx_hidden_Description
		}
		return ""
	}
	return ""
}

func (x *Network_VLAN) GetDhcpOn() bool {
	if x != nil {
		return x.xxx_hidden_DhcpOn
	}
	return false
}

func (x *Network_VLAN) SetId(v int64) {
	x.xxx_hidden_Id = v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 0, 6)
}

func (x *Network_VLAN) SetVid(v int64) {
	x.xxx_hidden_Vid = v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 1, 6)
}

func (x *Network_VLAN) SetName(v string) {
	x.xxx_hidden_Name = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 2, 6)
}

func (x *Network_VLAN) SetMtu(v int64) {
	x.xxx_hidden_Mtu = v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 3, 6)
}

func (x *Network_VLAN) SetDescription(v string) {
	x.xxx_hidden_Description = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 4, 6)
}

func (x *Network_VLAN) SetDhcpOn(v bool) {
	x.xxx_hidden_DhcpOn = v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 5, 6)
}

func (x *Network_VLAN) HasId() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 0)
}

func (x *Network_VLAN) HasVid() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 1)
}

func (x *Network_VLAN) HasName() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 2)
}

func (x *Network_VLAN) HasMtu() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 3)
}

func (x *Network_VLAN) HasDescription() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 4)
}

func (x *Network_VLAN) HasDhcpOn() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 5)
}

func (x *Network_VLAN) ClearId() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 0)
	x.xxx_hidden_Id = 0
}

func (x *Network_VLAN) ClearVid() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 1)
	x.xxx_hidden_Vid = 0
}

func (x *Network_VLAN) ClearName() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 2)
	x.xxx_hidden_Name = nil
}

func (x *Network_VLAN) ClearMtu() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 3)
	x.xxx_hidden_Mtu = 0
}

func (x *Network_VLAN) ClearDescription() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 4)
	x.xxx_hidden_Description = nil
}

func (x *Network_VLAN) ClearDhcpOn() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 5)
	x.xxx_hidden_DhcpOn = false
}

type Network_VLAN_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	Id          *int64
	Vid         *int64
	Name        *string
	Mtu         *int64
	Description *string
	DhcpOn      *bool
}

func (b0 Network_VLAN_builder) Build() *Network_VLAN {
	m0 := &Network_VLAN{}
	b, x := &b0, m0
	_, _ = b, x
	if b.Id != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 0, 6)
		x.xxx_hidden_Id = *b.Id
	}
	if b.Vid != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 1, 6)
		x.xxx_hidden_Vid = *b.Vid
	}
	if b.Name != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 2, 6)
		x.xxx_hidden_Name = b.Name
	}
	if b.Mtu != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 3, 6)
		x.xxx_hidden_Mtu = *b.Mtu
	}
	if b.Description != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 4, 6)
		x.xxx_hidden_Description = b.Description
	}
	if b.DhcpOn != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 5, 6)
		x.xxx_hidden_DhcpOn = *b.DhcpOn
	}
	return m0
}

type Network_Subnet struct {
	state                         protoimpl.MessageState `protogen:"opaque.v1"`
	xxx_hidden_Id                 int64                  `protobuf:"varint,1,opt,name=id"`
	xxx_hidden_Name               *string                `protobuf:"bytes,2,opt,name=name"`
	xxx_hidden_Cidr               *string                `protobuf:"bytes,3,opt,name=cidr"`
	xxx_hidden_GatewayIp          *string                `protobuf:"bytes,4,opt,name=gateway_ip,json=gatewayIp"`
	xxx_hidden_DnsServers         []string               `protobuf:"bytes,5,rep,name=dns_servers,json=dnsServers"`
	xxx_hidden_Description        *string                `protobuf:"bytes,6,opt,name=description"`
	xxx_hidden_ManagedAllocation  bool                   `protobuf:"varint,7,opt,name=managed_allocation,json=managedAllocation"`
	xxx_hidden_ActiveDiscovery    bool                   `protobuf:"varint,8,opt,name=active_discovery,json=activeDiscovery"`
	xxx_hidden_AllowProxyAccess   bool                   `protobuf:"varint,9,opt,name=allow_proxy_access,json=allowProxyAccess"`
	xxx_hidden_AllowDnsResolution bool                   `protobuf:"varint,10,opt,name=allow_dns_resolution,json=allowDnsResolution"`
	xxx_hidden_IpAddresses        *[]*Network_IPAddress  `protobuf:"bytes,11,rep,name=ip_addresses,json=ipAddresses"`
	xxx_hidden_IpRanges           *[]*Network_IPRange    `protobuf:"bytes,12,rep,name=ip_ranges,json=ipRanges"`
	xxx_hidden_Statistics         *Network_Statistics    `protobuf:"bytes,13,opt,name=statistics"`
	XXX_raceDetectHookData        protoimpl.RaceDetectHookData
	XXX_presence                  [1]uint32
	unknownFields                 protoimpl.UnknownFields
	sizeCache                     protoimpl.SizeCache
}

func (x *Network_Subnet) Reset() {
	*x = Network_Subnet{}
	mi := &file_api_nexus_v1_nexus_proto_msgTypes[64]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Network_Subnet) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Network_Subnet) ProtoMessage() {}

func (x *Network_Subnet) ProtoReflect() protoreflect.Message {
	mi := &file_api_nexus_v1_nexus_proto_msgTypes[64]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *Network_Subnet) GetId() int64 {
	if x != nil {
		return x.xxx_hidden_Id
	}
	return 0
}

func (x *Network_Subnet) GetName() string {
	if x != nil {
		if x.xxx_hidden_Name != nil {
			return *x.xxx_hidden_Name
		}
		return ""
	}
	return ""
}

func (x *Network_Subnet) GetCidr() string {
	if x != nil {
		if x.xxx_hidden_Cidr != nil {
			return *x.xxx_hidden_Cidr
		}
		return ""
	}
	return ""
}

func (x *Network_Subnet) GetGatewayIp() string {
	if x != nil {
		if x.xxx_hidden_GatewayIp != nil {
			return *x.xxx_hidden_GatewayIp
		}
		return ""
	}
	return ""
}

func (x *Network_Subnet) GetDnsServers() []string {
	if x != nil {
		return x.xxx_hidden_DnsServers
	}
	return nil
}

func (x *Network_Subnet) GetDescription() string {
	if x != nil {
		if x.xxx_hidden_Description != nil {
			return *x.xxx_hidden_Description
		}
		return ""
	}
	return ""
}

func (x *Network_Subnet) GetManagedAllocation() bool {
	if x != nil {
		return x.xxx_hidden_ManagedAllocation
	}
	return false
}

func (x *Network_Subnet) GetActiveDiscovery() bool {
	if x != nil {
		return x.xxx_hidden_ActiveDiscovery
	}
	return false
}

func (x *Network_Subnet) GetAllowProxyAccess() bool {
	if x != nil {
		return x.xxx_hidden_AllowProxyAccess
	}
	return false
}

func (x *Network_Subnet) GetAllowDnsResolution() bool {
	if x != nil {
		return x.xxx_hidden_AllowDnsResolution
	}
	return false
}

func (x *Network_Subnet) GetIpAddresses() []*Network_IPAddress {
	if x != nil {
		if x.xxx_hidden_IpAddresses != nil {
			return *x.xxx_hidden_IpAddresses
		}
	}
	return nil
}

func (x *Network_Subnet) GetIpRanges() []*Network_IPRange {
	if x != nil {
		if x.xxx_hidden_IpRanges != nil {
			return *x.xxx_hidden_IpRanges
		}
	}
	return nil
}

func (x *Network_Subnet) GetStatistics() *Network_Statistics {
	if x != nil {
		return x.xxx_hidden_Statistics
	}
	return nil
}

func (x *Network_Subnet) SetId(v int64) {
	x.xxx_hidden_Id = v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 0, 13)
}

func (x *Network_Subnet) SetName(v string) {
	x.xxx_hidden_Name = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 1, 13)
}

func (x *Network_Subnet) SetCidr(v string) {
	x.xxx_hidden_Cidr = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 2, 13)
}

func (x *Network_Subnet) SetGatewayIp(v string) {
	x.xxx_hidden_GatewayIp = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 3, 13)
}

func (x *Network_Subnet) SetDnsServers(v []string) {
	x.xxx_hidden_DnsServers = v
}

func (x *Network_Subnet) SetDescription(v string) {
	x.xxx_hidden_Description = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 5, 13)
}

func (x *Network_Subnet) SetManagedAllocation(v bool) {
	x.xxx_hidden_ManagedAllocation = v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 6, 13)
}

func (x *Network_Subnet) SetActiveDiscovery(v bool) {
	x.xxx_hidden_ActiveDiscovery = v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 7, 13)
}

func (x *Network_Subnet) SetAllowProxyAccess(v bool) {
	x.xxx_hidden_AllowProxyAccess = v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 8, 13)
}

func (x *Network_Subnet) SetAllowDnsResolution(v bool) {
	x.xxx_hidden_AllowDnsResolution = v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 9, 13)
}

func (x *Network_Subnet) SetIpAddresses(v []*Network_IPAddress) {
	x.xxx_hidden_IpAddresses = &v
}

func (x *Network_Subnet) SetIpRanges(v []*Network_IPRange) {
	x.xxx_hidden_IpRanges = &v
}

func (x *Network_Subnet) SetStatistics(v *Network_Statistics) {
	x.xxx_hidden_Statistics = v
}

func (x *Network_Subnet) HasId() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 0)
}

func (x *Network_Subnet) HasName() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 1)
}

func (x *Network_Subnet) HasCidr() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 2)
}

func (x *Network_Subnet) HasGatewayIp() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 3)
}

func (x *Network_Subnet) HasDescription() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 5)
}

func (x *Network_Subnet) HasManagedAllocation() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 6)
}

func (x *Network_Subnet) HasActiveDiscovery() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 7)
}

func (x *Network_Subnet) HasAllowProxyAccess() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 8)
}

func (x *Network_Subnet) HasAllowDnsResolution() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 9)
}

func (x *Network_Subnet) HasStatistics() bool {
	if x == nil {
		return false
	}
	return x.xxx_hidden_Statistics != nil
}

func (x *Network_Subnet) ClearId() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 0)
	x.xxx_hidden_Id = 0
}

func (x *Network_Subnet) ClearName() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 1)
	x.xxx_hidden_Name = nil
}

func (x *Network_Subnet) ClearCidr() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 2)
	x.xxx_hidden_Cidr = nil
}

func (x *Network_Subnet) ClearGatewayIp() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 3)
	x.xxx_hidden_GatewayIp = nil
}

func (x *Network_Subnet) ClearDescription() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 5)
	x.xxx_hidden_Description = nil
}

func (x *Network_Subnet) ClearManagedAllocation() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 6)
	x.xxx_hidden_ManagedAllocation = false
}

func (x *Network_Subnet) ClearActiveDiscovery() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 7)
	x.xxx_hidden_ActiveDiscovery = false
}

func (x *Network_Subnet) ClearAllowProxyAccess() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 8)
	x.xxx_hidden_AllowProxyAccess = false
}

func (x *Network_Subnet) ClearAllowDnsResolution() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 9)
	x.xxx_hidden_AllowDnsResolution = false
}

func (x *Network_Subnet) ClearStatistics() {
	x.xxx_hidden_Statistics = nil
}

type Network_Subnet_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	Id                 *int64
	Name               *string
	Cidr               *string
	GatewayIp          *string
	DnsServers         []string
	Description        *string
	ManagedAllocation  *bool
	ActiveDiscovery    *bool
	AllowProxyAccess   *bool
	AllowDnsResolution *bool
	IpAddresses        []*Network_IPAddress
	IpRanges           []*Network_IPRange
	Statistics         *Network_Statistics
}

func (b0 Network_Subnet_builder) Build() *Network_Subnet {
	m0 := &Network_Subnet{}
	b, x := &b0, m0
	_, _ = b, x
	if b.Id != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 0, 13)
		x.xxx_hidden_Id = *b.Id
	}
	if b.Name != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 1, 13)
		x.xxx_hidden_Name = b.Name
	}
	if b.Cidr != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 2, 13)
		x.xxx_hidden_Cidr = b.Cidr
	}
	if b.GatewayIp != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 3, 13)
		x.xxx_hidden_GatewayIp = b.GatewayIp
	}
	x.xxx_hidden_DnsServers = b.DnsServers
	if b.Description != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 5, 13)
		x.xxx_hidden_Description = b.Description
	}
	if b.ManagedAllocation != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 6, 13)
		x.xxx_hidden_ManagedAllocation = *b.ManagedAllocation
	}
	if b.ActiveDiscovery != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 7, 13)
		x.xxx_hidden_ActiveDiscovery = *b.ActiveDiscovery
	}
	if b.AllowProxyAccess != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 8, 13)
		x.xxx_hidden_AllowProxyAccess = *b.AllowProxyAccess
	}
	if b.AllowDnsResolution != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 9, 13)
		x.xxx_hidden_AllowDnsResolution = *b.AllowDnsResolution
	}
	x.xxx_hidden_IpAddresses = &b.IpAddresses
	x.xxx_hidden_IpRanges = &b.IpRanges
	x.xxx_hidden_Statistics = b.Statistics
	return m0
}

type Machine_Placement struct {
	state                  protoimpl.MessageState   `protogen:"opaque.v1"`
	xxx_hidden_Type        isMachine_Placement_Type `protobuf_oneof:"type"`
	xxx_hidden_MachineId   *string                  `protobuf:"bytes,11,opt,name=machine_id,json=machineId"`
	XXX_raceDetectHookData protoimpl.RaceDetectHookData
	XXX_presence           [1]uint32
	unknownFields          protoimpl.UnknownFields
	sizeCache              protoimpl.SizeCache
}

func (x *Machine_Placement) Reset() {
	*x = Machine_Placement{}
	mi := &file_api_nexus_v1_nexus_proto_msgTypes[65]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Machine_Placement) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Machine_Placement) ProtoMessage() {}

func (x *Machine_Placement) ProtoReflect() protoreflect.Message {
	mi := &file_api_nexus_v1_nexus_proto_msgTypes[65]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *Machine_Placement) GetLxd() bool {
	if x != nil {
		if x, ok := x.xxx_hidden_Type.(*machine_Placement_Lxd); ok {
			return x.Lxd
		}
	}
	return false
}

func (x *Machine_Placement) GetKvm() bool {
	if x != nil {
		if x, ok := x.xxx_hidden_Type.(*machine_Placement_Kvm); ok {
			return x.Kvm
		}
	}
	return false
}

func (x *Machine_Placement) GetMachine() bool {
	if x != nil {
		if x, ok := x.xxx_hidden_Type.(*machine_Placement_Machine); ok {
			return x.Machine
		}
	}
	return false
}

func (x *Machine_Placement) GetMachineId() string {
	if x != nil {
		if x.xxx_hidden_MachineId != nil {
			return *x.xxx_hidden_MachineId
		}
		return ""
	}
	return ""
}

func (x *Machine_Placement) SetLxd(v bool) {
	x.xxx_hidden_Type = &machine_Placement_Lxd{v}
}

func (x *Machine_Placement) SetKvm(v bool) {
	x.xxx_hidden_Type = &machine_Placement_Kvm{v}
}

func (x *Machine_Placement) SetMachine(v bool) {
	x.xxx_hidden_Type = &machine_Placement_Machine{v}
}

func (x *Machine_Placement) SetMachineId(v string) {
	x.xxx_hidden_MachineId = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 1, 2)
}

func (x *Machine_Placement) HasType() bool {
	if x == nil {
		return false
	}
	return x.xxx_hidden_Type != nil
}

func (x *Machine_Placement) HasLxd() bool {
	if x == nil {
		return false
	}
	_, ok := x.xxx_hidden_Type.(*machine_Placement_Lxd)
	return ok
}

func (x *Machine_Placement) HasKvm() bool {
	if x == nil {
		return false
	}
	_, ok := x.xxx_hidden_Type.(*machine_Placement_Kvm)
	return ok
}

func (x *Machine_Placement) HasMachine() bool {
	if x == nil {
		return false
	}
	_, ok := x.xxx_hidden_Type.(*machine_Placement_Machine)
	return ok
}

func (x *Machine_Placement) HasMachineId() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 1)
}

func (x *Machine_Placement) ClearType() {
	x.xxx_hidden_Type = nil
}

func (x *Machine_Placement) ClearLxd() {
	if _, ok := x.xxx_hidden_Type.(*machine_Placement_Lxd); ok {
		x.xxx_hidden_Type = nil
	}
}

func (x *Machine_Placement) ClearKvm() {
	if _, ok := x.xxx_hidden_Type.(*machine_Placement_Kvm); ok {
		x.xxx_hidden_Type = nil
	}
}

func (x *Machine_Placement) ClearMachine() {
	if _, ok := x.xxx_hidden_Type.(*machine_Placement_Machine); ok {
		x.xxx_hidden_Type = nil
	}
}

func (x *Machine_Placement) ClearMachineId() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 1)
	x.xxx_hidden_MachineId = nil
}

const Machine_Placement_Type_not_set_case case_Machine_Placement_Type = 0
const Machine_Placement_Lxd_case case_Machine_Placement_Type = 1
const Machine_Placement_Kvm_case case_Machine_Placement_Type = 2
const Machine_Placement_Machine_case case_Machine_Placement_Type = 3

func (x *Machine_Placement) WhichType() case_Machine_Placement_Type {
	if x == nil {
		return Machine_Placement_Type_not_set_case
	}
	switch x.xxx_hidden_Type.(type) {
	case *machine_Placement_Lxd:
		return Machine_Placement_Lxd_case
	case *machine_Placement_Kvm:
		return Machine_Placement_Kvm_case
	case *machine_Placement_Machine:
		return Machine_Placement_Machine_case
	default:
		return Machine_Placement_Type_not_set_case
	}
}

type Machine_Placement_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	// Fields of oneof xxx_hidden_Type:
	Lxd     *bool
	Kvm     *bool
	Machine *bool
	// -- end of xxx_hidden_Type
	MachineId *string
}

func (b0 Machine_Placement_builder) Build() *Machine_Placement {
	m0 := &Machine_Placement{}
	b, x := &b0, m0
	_, _ = b, x
	if b.Lxd != nil {
		x.xxx_hidden_Type = &machine_Placement_Lxd{*b.Lxd}
	}
	if b.Kvm != nil {
		x.xxx_hidden_Type = &machine_Placement_Kvm{*b.Kvm}
	}
	if b.Machine != nil {
		x.xxx_hidden_Type = &machine_Placement_Machine{*b.Machine}
	}
	if b.MachineId != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 1, 2)
		x.xxx_hidden_MachineId = b.MachineId
	}
	return m0
}

type case_Machine_Placement_Type protoreflect.FieldNumber

func (x case_Machine_Placement_Type) String() string {
	md := file_api_nexus_v1_nexus_proto_msgTypes[65].Descriptor()
	if x == 0 {
		return "not set"
	}
	return protoimpl.X.MessageFieldStringOf(md, protoreflect.FieldNumber(x))
}

type isMachine_Placement_Type interface {
	isMachine_Placement_Type()
}

type machine_Placement_Lxd struct {
	Lxd bool `protobuf:"varint,1,opt,name=lxd,oneof"`
}

type machine_Placement_Kvm struct {
	Kvm bool `protobuf:"varint,2,opt,name=kvm,oneof"`
}

type machine_Placement_Machine struct {
	Machine bool `protobuf:"varint,3,opt,name=machine,oneof"`
}

func (*machine_Placement_Lxd) isMachine_Placement_Type() {}

func (*machine_Placement_Kvm) isMachine_Placement_Type() {}

func (*machine_Placement_Machine) isMachine_Placement_Type() {}

type Machine_Constraint struct {
	state                   protoimpl.MessageState `protogen:"opaque.v1"`
	xxx_hidden_Architecture *string                `protobuf:"bytes,1,opt,name=architecture"`
	xxx_hidden_CpuCores     uint64                 `protobuf:"varint,2,opt,name=cpu_cores,json=cpuCores"`
	xxx_hidden_MemoryMb     uint64                 `protobuf:"varint,3,opt,name=memory_mb,json=memoryMb"`
	xxx_hidden_Tags         []string               `protobuf:"bytes,11,rep,name=tags"`
	XXX_raceDetectHookData  protoimpl.RaceDetectHookData
	XXX_presence            [1]uint32
	unknownFields           protoimpl.UnknownFields
	sizeCache               protoimpl.SizeCache
}

func (x *Machine_Constraint) Reset() {
	*x = Machine_Constraint{}
	mi := &file_api_nexus_v1_nexus_proto_msgTypes[66]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Machine_Constraint) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Machine_Constraint) ProtoMessage() {}

func (x *Machine_Constraint) ProtoReflect() protoreflect.Message {
	mi := &file_api_nexus_v1_nexus_proto_msgTypes[66]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *Machine_Constraint) GetArchitecture() string {
	if x != nil {
		if x.xxx_hidden_Architecture != nil {
			return *x.xxx_hidden_Architecture
		}
		return ""
	}
	return ""
}

func (x *Machine_Constraint) GetCpuCores() uint64 {
	if x != nil {
		return x.xxx_hidden_CpuCores
	}
	return 0
}

func (x *Machine_Constraint) GetMemoryMb() uint64 {
	if x != nil {
		return x.xxx_hidden_MemoryMb
	}
	return 0
}

func (x *Machine_Constraint) GetTags() []string {
	if x != nil {
		return x.xxx_hidden_Tags
	}
	return nil
}

func (x *Machine_Constraint) SetArchitecture(v string) {
	x.xxx_hidden_Architecture = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 0, 4)
}

func (x *Machine_Constraint) SetCpuCores(v uint64) {
	x.xxx_hidden_CpuCores = v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 1, 4)
}

func (x *Machine_Constraint) SetMemoryMb(v uint64) {
	x.xxx_hidden_MemoryMb = v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 2, 4)
}

func (x *Machine_Constraint) SetTags(v []string) {
	x.xxx_hidden_Tags = v
}

func (x *Machine_Constraint) HasArchitecture() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 0)
}

func (x *Machine_Constraint) HasCpuCores() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 1)
}

func (x *Machine_Constraint) HasMemoryMb() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 2)
}

func (x *Machine_Constraint) ClearArchitecture() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 0)
	x.xxx_hidden_Architecture = nil
}

func (x *Machine_Constraint) ClearCpuCores() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 1)
	x.xxx_hidden_CpuCores = 0
}

func (x *Machine_Constraint) ClearMemoryMb() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 2)
	x.xxx_hidden_MemoryMb = 0
}

type Machine_Constraint_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	Architecture *string
	CpuCores     *uint64
	MemoryMb     *uint64
	Tags         []string
}

func (b0 Machine_Constraint_builder) Build() *Machine_Constraint {
	m0 := &Machine_Constraint{}
	b, x := &b0, m0
	_, _ = b, x
	if b.Architecture != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 0, 4)
		x.xxx_hidden_Architecture = b.Architecture
	}
	if b.CpuCores != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 1, 4)
		x.xxx_hidden_CpuCores = *b.CpuCores
	}
	if b.MemoryMb != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 2, 4)
		x.xxx_hidden_MemoryMb = *b.MemoryMb
	}
	x.xxx_hidden_Tags = b.Tags
	return m0
}

type Machine_Factor struct {
	state                 protoimpl.MessageState `protogen:"opaque.v1"`
	xxx_hidden_Placement  *Machine_Placement     `protobuf:"bytes,1,opt,name=placement"`
	xxx_hidden_Constraint *Machine_Constraint    `protobuf:"bytes,2,opt,name=constraint"`
	unknownFields         protoimpl.UnknownFields
	sizeCache             protoimpl.SizeCache
}

func (x *Machine_Factor) Reset() {
	*x = Machine_Factor{}
	mi := &file_api_nexus_v1_nexus_proto_msgTypes[67]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Machine_Factor) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Machine_Factor) ProtoMessage() {}

func (x *Machine_Factor) ProtoReflect() protoreflect.Message {
	mi := &file_api_nexus_v1_nexus_proto_msgTypes[67]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *Machine_Factor) GetPlacement() *Machine_Placement {
	if x != nil {
		return x.xxx_hidden_Placement
	}
	return nil
}

func (x *Machine_Factor) GetConstraint() *Machine_Constraint {
	if x != nil {
		return x.xxx_hidden_Constraint
	}
	return nil
}

func (x *Machine_Factor) SetPlacement(v *Machine_Placement) {
	x.xxx_hidden_Placement = v
}

func (x *Machine_Factor) SetConstraint(v *Machine_Constraint) {
	x.xxx_hidden_Constraint = v
}

func (x *Machine_Factor) HasPlacement() bool {
	if x == nil {
		return false
	}
	return x.xxx_hidden_Placement != nil
}

func (x *Machine_Factor) HasConstraint() bool {
	if x == nil {
		return false
	}
	return x.xxx_hidden_Constraint != nil
}

func (x *Machine_Factor) ClearPlacement() {
	x.xxx_hidden_Placement = nil
}

func (x *Machine_Factor) ClearConstraint() {
	x.xxx_hidden_Constraint = nil
}

type Machine_Factor_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	Placement  *Machine_Placement
	Constraint *Machine_Constraint
}

func (b0 Machine_Factor_builder) Build() *Machine_Factor {
	m0 := &Machine_Factor{}
	b, x := &b0, m0
	_, _ = b, x
	x.xxx_hidden_Placement = b.Placement
	x.xxx_hidden_Constraint = b.Constraint
	return m0
}

type Machine_NUMANode struct {
	state                  protoimpl.MessageState `protogen:"opaque.v1"`
	xxx_hidden_Index       int64                  `protobuf:"varint,1,opt,name=index"`
	xxx_hidden_CpuCores    int64                  `protobuf:"varint,2,opt,name=cpu_cores,json=cpuCores"`
	xxx_hidden_MemoryMb    int64                  `protobuf:"varint,3,opt,name=memory_mb,json=memoryMb"`
	XXX_raceDetectHookData protoimpl.RaceDetectHookData
	XXX_presence           [1]uint32
	unknownFields          protoimpl.UnknownFields
	sizeCache              protoimpl.SizeCache
}

func (x *Machine_NUMANode) Reset() {
	*x = Machine_NUMANode{}
	mi := &file_api_nexus_v1_nexus_proto_msgTypes[68]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Machine_NUMANode) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Machine_NUMANode) ProtoMessage() {}

func (x *Machine_NUMANode) ProtoReflect() protoreflect.Message {
	mi := &file_api_nexus_v1_nexus_proto_msgTypes[68]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *Machine_NUMANode) GetIndex() int64 {
	if x != nil {
		return x.xxx_hidden_Index
	}
	return 0
}

func (x *Machine_NUMANode) GetCpuCores() int64 {
	if x != nil {
		return x.xxx_hidden_CpuCores
	}
	return 0
}

func (x *Machine_NUMANode) GetMemoryMb() int64 {
	if x != nil {
		return x.xxx_hidden_MemoryMb
	}
	return 0
}

func (x *Machine_NUMANode) SetIndex(v int64) {
	x.xxx_hidden_Index = v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 0, 3)
}

func (x *Machine_NUMANode) SetCpuCores(v int64) {
	x.xxx_hidden_CpuCores = v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 1, 3)
}

func (x *Machine_NUMANode) SetMemoryMb(v int64) {
	x.xxx_hidden_MemoryMb = v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 2, 3)
}

func (x *Machine_NUMANode) HasIndex() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 0)
}

func (x *Machine_NUMANode) HasCpuCores() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 1)
}

func (x *Machine_NUMANode) HasMemoryMb() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 2)
}

func (x *Machine_NUMANode) ClearIndex() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 0)
	x.xxx_hidden_Index = 0
}

func (x *Machine_NUMANode) ClearCpuCores() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 1)
	x.xxx_hidden_CpuCores = 0
}

func (x *Machine_NUMANode) ClearMemoryMb() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 2)
	x.xxx_hidden_MemoryMb = 0
}

type Machine_NUMANode_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	Index    *int64
	CpuCores *int64
	MemoryMb *int64
}

func (b0 Machine_NUMANode_builder) Build() *Machine_NUMANode {
	m0 := &Machine_NUMANode{}
	b, x := &b0, m0
	_, _ = b, x
	if b.Index != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 0, 3)
		x.xxx_hidden_Index = *b.Index
	}
	if b.CpuCores != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 1, 3)
		x.xxx_hidden_CpuCores = *b.CpuCores
	}
	if b.MemoryMb != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 2, 3)
		x.xxx_hidden_MemoryMb = *b.MemoryMb
	}
	return m0
}

type Machine_BlockDevice struct {
	state                      protoimpl.MessageState `protogen:"opaque.v1"`
	xxx_hidden_BootDisk        bool                   `protobuf:"varint,1,opt,name=boot_disk,json=bootDisk"`
	xxx_hidden_Name            *string                `protobuf:"bytes,11,opt,name=name"`
	xxx_hidden_Serial          *string                `protobuf:"bytes,12,opt,name=serial"`
	xxx_hidden_Model           *string                `protobuf:"bytes,21,opt,name=model"`
	xxx_hidden_FirmwareVersion *string                `protobuf:"bytes,22,opt,name=firmware_version,json=firmwareVersion"`
	xxx_hidden_StorageMb       float64                `protobuf:"fixed64,31,opt,name=storage_mb,json=storageMb"`
	xxx_hidden_Type            *string                `protobuf:"bytes,41,opt,name=type"`
	xxx_hidden_Tags            []string               `protobuf:"bytes,51,rep,name=tags"`
	xxx_hidden_UsedFor         *string                `protobuf:"bytes,61,opt,name=used_for,json=usedFor"`
	XXX_raceDetectHookData     protoimpl.RaceDetectHookData
	XXX_presence               [1]uint32
	unknownFields              protoimpl.UnknownFields
	sizeCache                  protoimpl.SizeCache
}

func (x *Machine_BlockDevice) Reset() {
	*x = Machine_BlockDevice{}
	mi := &file_api_nexus_v1_nexus_proto_msgTypes[69]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Machine_BlockDevice) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Machine_BlockDevice) ProtoMessage() {}

func (x *Machine_BlockDevice) ProtoReflect() protoreflect.Message {
	mi := &file_api_nexus_v1_nexus_proto_msgTypes[69]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *Machine_BlockDevice) GetBootDisk() bool {
	if x != nil {
		return x.xxx_hidden_BootDisk
	}
	return false
}

func (x *Machine_BlockDevice) GetName() string {
	if x != nil {
		if x.xxx_hidden_Name != nil {
			return *x.xxx_hidden_Name
		}
		return ""
	}
	return ""
}

func (x *Machine_BlockDevice) GetSerial() string {
	if x != nil {
		if x.xxx_hidden_Serial != nil {
			return *x.xxx_hidden_Serial
		}
		return ""
	}
	return ""
}

func (x *Machine_BlockDevice) GetModel() string {
	if x != nil {
		if x.xxx_hidden_Model != nil {
			return *x.xxx_hidden_Model
		}
		return ""
	}
	return ""
}

func (x *Machine_BlockDevice) GetFirmwareVersion() string {
	if x != nil {
		if x.xxx_hidden_FirmwareVersion != nil {
			return *x.xxx_hidden_FirmwareVersion
		}
		return ""
	}
	return ""
}

func (x *Machine_BlockDevice) GetStorageMb() float64 {
	if x != nil {
		return x.xxx_hidden_StorageMb
	}
	return 0
}

func (x *Machine_BlockDevice) GetType() string {
	if x != nil {
		if x.xxx_hidden_Type != nil {
			return *x.xxx_hidden_Type
		}
		return ""
	}
	return ""
}

func (x *Machine_BlockDevice) GetTags() []string {
	if x != nil {
		return x.xxx_hidden_Tags
	}
	return nil
}

func (x *Machine_BlockDevice) GetUsedFor() string {
	if x != nil {
		if x.xxx_hidden_UsedFor != nil {
			return *x.xxx_hidden_UsedFor
		}
		return ""
	}
	return ""
}

func (x *Machine_BlockDevice) SetBootDisk(v bool) {
	x.xxx_hidden_BootDisk = v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 0, 9)
}

func (x *Machine_BlockDevice) SetName(v string) {
	x.xxx_hidden_Name = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 1, 9)
}

func (x *Machine_BlockDevice) SetSerial(v string) {
	x.xxx_hidden_Serial = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 2, 9)
}

func (x *Machine_BlockDevice) SetModel(v string) {
	x.xxx_hidden_Model = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 3, 9)
}

func (x *Machine_BlockDevice) SetFirmwareVersion(v string) {
	x.xxx_hidden_FirmwareVersion = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 4, 9)
}

func (x *Machine_BlockDevice) SetStorageMb(v float64) {
	x.xxx_hidden_StorageMb = v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 5, 9)
}

func (x *Machine_BlockDevice) SetType(v string) {
	x.xxx_hidden_Type = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 6, 9)
}

func (x *Machine_BlockDevice) SetTags(v []string) {
	x.xxx_hidden_Tags = v
}

func (x *Machine_BlockDevice) SetUsedFor(v string) {
	x.xxx_hidden_UsedFor = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 8, 9)
}

func (x *Machine_BlockDevice) HasBootDisk() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 0)
}

func (x *Machine_BlockDevice) HasName() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 1)
}

func (x *Machine_BlockDevice) HasSerial() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 2)
}

func (x *Machine_BlockDevice) HasModel() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 3)
}

func (x *Machine_BlockDevice) HasFirmwareVersion() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 4)
}

func (x *Machine_BlockDevice) HasStorageMb() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 5)
}

func (x *Machine_BlockDevice) HasType() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 6)
}

func (x *Machine_BlockDevice) HasUsedFor() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 8)
}

func (x *Machine_BlockDevice) ClearBootDisk() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 0)
	x.xxx_hidden_BootDisk = false
}

func (x *Machine_BlockDevice) ClearName() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 1)
	x.xxx_hidden_Name = nil
}

func (x *Machine_BlockDevice) ClearSerial() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 2)
	x.xxx_hidden_Serial = nil
}

func (x *Machine_BlockDevice) ClearModel() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 3)
	x.xxx_hidden_Model = nil
}

func (x *Machine_BlockDevice) ClearFirmwareVersion() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 4)
	x.xxx_hidden_FirmwareVersion = nil
}

func (x *Machine_BlockDevice) ClearStorageMb() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 5)
	x.xxx_hidden_StorageMb = 0
}

func (x *Machine_BlockDevice) ClearType() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 6)
	x.xxx_hidden_Type = nil
}

func (x *Machine_BlockDevice) ClearUsedFor() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 8)
	x.xxx_hidden_UsedFor = nil
}

type Machine_BlockDevice_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	BootDisk        *bool
	Name            *string
	Serial          *string
	Model           *string
	FirmwareVersion *string
	StorageMb       *float64
	Type            *string
	Tags            []string
	UsedFor         *string
}

func (b0 Machine_BlockDevice_builder) Build() *Machine_BlockDevice {
	m0 := &Machine_BlockDevice{}
	b, x := &b0, m0
	_, _ = b, x
	if b.BootDisk != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 0, 9)
		x.xxx_hidden_BootDisk = *b.BootDisk
	}
	if b.Name != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 1, 9)
		x.xxx_hidden_Name = b.Name
	}
	if b.Serial != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 2, 9)
		x.xxx_hidden_Serial = b.Serial
	}
	if b.Model != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 3, 9)
		x.xxx_hidden_Model = b.Model
	}
	if b.FirmwareVersion != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 4, 9)
		x.xxx_hidden_FirmwareVersion = b.FirmwareVersion
	}
	if b.StorageMb != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 5, 9)
		x.xxx_hidden_StorageMb = *b.StorageMb
	}
	if b.Type != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 6, 9)
		x.xxx_hidden_Type = b.Type
	}
	x.xxx_hidden_Tags = b.Tags
	if b.UsedFor != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 8, 9)
		x.xxx_hidden_UsedFor = b.UsedFor
	}
	return m0
}

type Machine_NetworkInterface struct {
	state                     protoimpl.MessageState `protogen:"opaque.v1"`
	xxx_hidden_BootInterface  bool                   `protobuf:"varint,1,opt,name=boot_interface,json=bootInterface"`
	xxx_hidden_Name           *string                `protobuf:"bytes,11,opt,name=name"`
	xxx_hidden_MacAddress     *string                `protobuf:"bytes,12,opt,name=mac_address,json=macAddress"`
	xxx_hidden_LinkConnected  bool                   `protobuf:"varint,21,opt,name=link_connected,json=linkConnected"`
	xxx_hidden_LinkSpeed      int64                  `protobuf:"varint,22,opt,name=link_speed,json=linkSpeed"`
	xxx_hidden_InterfaceSpeed int64                  `protobuf:"varint,23,opt,name=interface_speed,json=interfaceSpeed"`
	xxx_hidden_Type           *string                `protobuf:"bytes,31,opt,name=type"`
	xxx_hidden_FabricName     *string                `protobuf:"bytes,41,opt,name=fabric_name,json=fabricName"`
	xxx_hidden_FabricId       int64                  `protobuf:"varint,42,opt,name=fabric_id,json=fabricId"`
	xxx_hidden_VlanName       *string                `protobuf:"bytes,43,opt,name=vlan_name,json=vlanName"`
	xxx_hidden_VlanId         int64                  `protobuf:"varint,44,opt,name=vlan_id,json=vlanId"`
	xxx_hidden_SubnetName     *string                `protobuf:"bytes,51,opt,name=subnet_name,json=subnetName"`
	xxx_hidden_SubnetId       int64                  `protobuf:"varint,52,opt,name=subnet_id,json=subnetId"`
	xxx_hidden_IpAddress      *string                `protobuf:"bytes,61,opt,name=ip_address,json=ipAddress"`
	xxx_hidden_DhcpOn         bool                   `protobuf:"varint,71,opt,name=dhcp_on,json=dhcpOn"`
	XXX_raceDetectHookData    protoimpl.RaceDetectHookData
	XXX_presence              [1]uint32
	unknownFields             protoimpl.UnknownFields
	sizeCache                 protoimpl.SizeCache
}

func (x *Machine_NetworkInterface) Reset() {
	*x = Machine_NetworkInterface{}
	mi := &file_api_nexus_v1_nexus_proto_msgTypes[70]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Machine_NetworkInterface) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Machine_NetworkInterface) ProtoMessage() {}

func (x *Machine_NetworkInterface) ProtoReflect() protoreflect.Message {
	mi := &file_api_nexus_v1_nexus_proto_msgTypes[70]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *Machine_NetworkInterface) GetBootInterface() bool {
	if x != nil {
		return x.xxx_hidden_BootInterface
	}
	return false
}

func (x *Machine_NetworkInterface) GetName() string {
	if x != nil {
		if x.xxx_hidden_Name != nil {
			return *x.xxx_hidden_Name
		}
		return ""
	}
	return ""
}

func (x *Machine_NetworkInterface) GetMacAddress() string {
	if x != nil {
		if x.xxx_hidden_MacAddress != nil {
			return *x.xxx_hidden_MacAddress
		}
		return ""
	}
	return ""
}

func (x *Machine_NetworkInterface) GetLinkConnected() bool {
	if x != nil {
		return x.xxx_hidden_LinkConnected
	}
	return false
}

func (x *Machine_NetworkInterface) GetLinkSpeed() int64 {
	if x != nil {
		return x.xxx_hidden_LinkSpeed
	}
	return 0
}

func (x *Machine_NetworkInterface) GetInterfaceSpeed() int64 {
	if x != nil {
		return x.xxx_hidden_InterfaceSpeed
	}
	return 0
}

func (x *Machine_NetworkInterface) GetType() string {
	if x != nil {
		if x.xxx_hidden_Type != nil {
			return *x.xxx_hidden_Type
		}
		return ""
	}
	return ""
}

func (x *Machine_NetworkInterface) GetFabricName() string {
	if x != nil {
		if x.xxx_hidden_FabricName != nil {
			return *x.xxx_hidden_FabricName
		}
		return ""
	}
	return ""
}

func (x *Machine_NetworkInterface) GetFabricId() int64 {
	if x != nil {
		return x.xxx_hidden_FabricId
	}
	return 0
}

func (x *Machine_NetworkInterface) GetVlanName() string {
	if x != nil {
		if x.xxx_hidden_VlanName != nil {
			return *x.xxx_hidden_VlanName
		}
		return ""
	}
	return ""
}

func (x *Machine_NetworkInterface) GetVlanId() int64 {
	if x != nil {
		return x.xxx_hidden_VlanId
	}
	return 0
}

func (x *Machine_NetworkInterface) GetSubnetName() string {
	if x != nil {
		if x.xxx_hidden_SubnetName != nil {
			return *x.xxx_hidden_SubnetName
		}
		return ""
	}
	return ""
}

func (x *Machine_NetworkInterface) GetSubnetId() int64 {
	if x != nil {
		return x.xxx_hidden_SubnetId
	}
	return 0
}

func (x *Machine_NetworkInterface) GetIpAddress() string {
	if x != nil {
		if x.xxx_hidden_IpAddress != nil {
			return *x.xxx_hidden_IpAddress
		}
		return ""
	}
	return ""
}

func (x *Machine_NetworkInterface) GetDhcpOn() bool {
	if x != nil {
		return x.xxx_hidden_DhcpOn
	}
	return false
}

func (x *Machine_NetworkInterface) SetBootInterface(v bool) {
	x.xxx_hidden_BootInterface = v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 0, 15)
}

func (x *Machine_NetworkInterface) SetName(v string) {
	x.xxx_hidden_Name = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 1, 15)
}

func (x *Machine_NetworkInterface) SetMacAddress(v string) {
	x.xxx_hidden_MacAddress = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 2, 15)
}

func (x *Machine_NetworkInterface) SetLinkConnected(v bool) {
	x.xxx_hidden_LinkConnected = v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 3, 15)
}

func (x *Machine_NetworkInterface) SetLinkSpeed(v int64) {
	x.xxx_hidden_LinkSpeed = v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 4, 15)
}

func (x *Machine_NetworkInterface) SetInterfaceSpeed(v int64) {
	x.xxx_hidden_InterfaceSpeed = v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 5, 15)
}

func (x *Machine_NetworkInterface) SetType(v string) {
	x.xxx_hidden_Type = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 6, 15)
}

func (x *Machine_NetworkInterface) SetFabricName(v string) {
	x.xxx_hidden_FabricName = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 7, 15)
}

func (x *Machine_NetworkInterface) SetFabricId(v int64) {
	x.xxx_hidden_FabricId = v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 8, 15)
}

func (x *Machine_NetworkInterface) SetVlanName(v string) {
	x.xxx_hidden_VlanName = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 9, 15)
}

func (x *Machine_NetworkInterface) SetVlanId(v int64) {
	x.xxx_hidden_VlanId = v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 10, 15)
}

func (x *Machine_NetworkInterface) SetSubnetName(v string) {
	x.xxx_hidden_SubnetName = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 11, 15)
}

func (x *Machine_NetworkInterface) SetSubnetId(v int64) {
	x.xxx_hidden_SubnetId = v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 12, 15)
}

func (x *Machine_NetworkInterface) SetIpAddress(v string) {
	x.xxx_hidden_IpAddress = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 13, 15)
}

func (x *Machine_NetworkInterface) SetDhcpOn(v bool) {
	x.xxx_hidden_DhcpOn = v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 14, 15)
}

func (x *Machine_NetworkInterface) HasBootInterface() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 0)
}

func (x *Machine_NetworkInterface) HasName() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 1)
}

func (x *Machine_NetworkInterface) HasMacAddress() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 2)
}

func (x *Machine_NetworkInterface) HasLinkConnected() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 3)
}

func (x *Machine_NetworkInterface) HasLinkSpeed() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 4)
}

func (x *Machine_NetworkInterface) HasInterfaceSpeed() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 5)
}

func (x *Machine_NetworkInterface) HasType() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 6)
}

func (x *Machine_NetworkInterface) HasFabricName() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 7)
}

func (x *Machine_NetworkInterface) HasFabricId() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 8)
}

func (x *Machine_NetworkInterface) HasVlanName() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 9)
}

func (x *Machine_NetworkInterface) HasVlanId() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 10)
}

func (x *Machine_NetworkInterface) HasSubnetName() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 11)
}

func (x *Machine_NetworkInterface) HasSubnetId() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 12)
}

func (x *Machine_NetworkInterface) HasIpAddress() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 13)
}

func (x *Machine_NetworkInterface) HasDhcpOn() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 14)
}

func (x *Machine_NetworkInterface) ClearBootInterface() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 0)
	x.xxx_hidden_BootInterface = false
}

func (x *Machine_NetworkInterface) ClearName() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 1)
	x.xxx_hidden_Name = nil
}

func (x *Machine_NetworkInterface) ClearMacAddress() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 2)
	x.xxx_hidden_MacAddress = nil
}

func (x *Machine_NetworkInterface) ClearLinkConnected() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 3)
	x.xxx_hidden_LinkConnected = false
}

func (x *Machine_NetworkInterface) ClearLinkSpeed() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 4)
	x.xxx_hidden_LinkSpeed = 0
}

func (x *Machine_NetworkInterface) ClearInterfaceSpeed() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 5)
	x.xxx_hidden_InterfaceSpeed = 0
}

func (x *Machine_NetworkInterface) ClearType() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 6)
	x.xxx_hidden_Type = nil
}

func (x *Machine_NetworkInterface) ClearFabricName() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 7)
	x.xxx_hidden_FabricName = nil
}

func (x *Machine_NetworkInterface) ClearFabricId() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 8)
	x.xxx_hidden_FabricId = 0
}

func (x *Machine_NetworkInterface) ClearVlanName() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 9)
	x.xxx_hidden_VlanName = nil
}

func (x *Machine_NetworkInterface) ClearVlanId() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 10)
	x.xxx_hidden_VlanId = 0
}

func (x *Machine_NetworkInterface) ClearSubnetName() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 11)
	x.xxx_hidden_SubnetName = nil
}

func (x *Machine_NetworkInterface) ClearSubnetId() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 12)
	x.xxx_hidden_SubnetId = 0
}

func (x *Machine_NetworkInterface) ClearIpAddress() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 13)
	x.xxx_hidden_IpAddress = nil
}

func (x *Machine_NetworkInterface) ClearDhcpOn() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 14)
	x.xxx_hidden_DhcpOn = false
}

type Machine_NetworkInterface_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	BootInterface  *bool
	Name           *string
	MacAddress     *string
	LinkConnected  *bool
	LinkSpeed      *int64
	InterfaceSpeed *int64
	Type           *string
	FabricName     *string
	FabricId       *int64
	VlanName       *string
	VlanId         *int64
	SubnetName     *string
	SubnetId       *int64
	IpAddress      *string
	DhcpOn         *bool
}

func (b0 Machine_NetworkInterface_builder) Build() *Machine_NetworkInterface {
	m0 := &Machine_NetworkInterface{}
	b, x := &b0, m0
	_, _ = b, x
	if b.BootInterface != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 0, 15)
		x.xxx_hidden_BootInterface = *b.BootInterface
	}
	if b.Name != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 1, 15)
		x.xxx_hidden_Name = b.Name
	}
	if b.MacAddress != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 2, 15)
		x.xxx_hidden_MacAddress = b.MacAddress
	}
	if b.LinkConnected != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 3, 15)
		x.xxx_hidden_LinkConnected = *b.LinkConnected
	}
	if b.LinkSpeed != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 4, 15)
		x.xxx_hidden_LinkSpeed = *b.LinkSpeed
	}
	if b.InterfaceSpeed != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 5, 15)
		x.xxx_hidden_InterfaceSpeed = *b.InterfaceSpeed
	}
	if b.Type != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 6, 15)
		x.xxx_hidden_Type = b.Type
	}
	if b.FabricName != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 7, 15)
		x.xxx_hidden_FabricName = b.FabricName
	}
	if b.FabricId != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 8, 15)
		x.xxx_hidden_FabricId = *b.FabricId
	}
	if b.VlanName != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 9, 15)
		x.xxx_hidden_VlanName = b.VlanName
	}
	if b.VlanId != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 10, 15)
		x.xxx_hidden_VlanId = *b.VlanId
	}
	if b.SubnetName != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 11, 15)
		x.xxx_hidden_SubnetName = b.SubnetName
	}
	if b.SubnetId != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 12, 15)
		x.xxx_hidden_SubnetId = *b.SubnetId
	}
	if b.IpAddress != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 13, 15)
		x.xxx_hidden_IpAddress = b.IpAddress
	}
	if b.DhcpOn != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 14, 15)
		x.xxx_hidden_DhcpOn = *b.DhcpOn
	}
	return m0
}

type Facility_Action struct {
	state         protoimpl.MessageState `protogen:"opaque.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Facility_Action) Reset() {
	*x = Facility_Action{}
	mi := &file_api_nexus_v1_nexus_proto_msgTypes[73]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Facility_Action) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Facility_Action) ProtoMessage() {}

func (x *Facility_Action) ProtoReflect() protoreflect.Message {
	mi := &file_api_nexus_v1_nexus_proto_msgTypes[73]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

type Facility_Action_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

}

func (b0 Facility_Action_builder) Build() *Facility_Action {
	m0 := &Facility_Action{}
	b, x := &b0, m0
	_, _ = b, x
	return m0
}

type Application_Release struct {
	state         protoimpl.MessageState `protogen:"opaque.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Application_Release) Reset() {
	*x = Application_Release{}
	mi := &file_api_nexus_v1_nexus_proto_msgTypes[74]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Application_Release) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Application_Release) ProtoMessage() {}

func (x *Application_Release) ProtoReflect() protoreflect.Message {
	mi := &file_api_nexus_v1_nexus_proto_msgTypes[74]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

type Application_Release_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

}

func (b0 Application_Release_builder) Build() *Application_Release {
	m0 := &Application_Release{}
	b, x := &b0, m0
	_, _ = b, x
	return m0
}

type Application_Release_Chart struct {
	state         protoimpl.MessageState `protogen:"opaque.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Application_Release_Chart) Reset() {
	*x = Application_Release_Chart{}
	mi := &file_api_nexus_v1_nexus_proto_msgTypes[75]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Application_Release_Chart) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Application_Release_Chart) ProtoMessage() {}

func (x *Application_Release_Chart) ProtoReflect() protoreflect.Message {
	mi := &file_api_nexus_v1_nexus_proto_msgTypes[75]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

type Application_Release_Chart_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

}

func (b0 Application_Release_Chart_builder) Build() *Application_Release_Chart {
	m0 := &Application_Release_Chart{}
	b, x := &b0, m0
	_, _ = b, x
	return m0
}

type Application_Release_Chart_Metadata struct {
	state         protoimpl.MessageState `protogen:"opaque.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Application_Release_Chart_Metadata) Reset() {
	*x = Application_Release_Chart_Metadata{}
	mi := &file_api_nexus_v1_nexus_proto_msgTypes[76]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Application_Release_Chart_Metadata) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Application_Release_Chart_Metadata) ProtoMessage() {}

func (x *Application_Release_Chart_Metadata) ProtoReflect() protoreflect.Message {
	mi := &file_api_nexus_v1_nexus_proto_msgTypes[76]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

type Application_Release_Chart_Metadata_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

}

func (b0 Application_Release_Chart_Metadata_builder) Build() *Application_Release_Chart_Metadata {
	m0 := &Application_Release_Chart_Metadata{}
	b, x := &b0, m0
	_, _ = b, x
	return m0
}

var File_api_nexus_v1_nexus_proto protoreflect.FileDescriptor

var file_api_nexus_v1_nexus_proto_rawDesc = string([]byte{
	0x0a, 0x18, 0x61, 0x70, 0x69, 0x2f, 0x6e, 0x65, 0x78, 0x75, 0x73, 0x2f, 0x76, 0x31, 0x2f, 0x6e,
	0x65, 0x78, 0x75, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x10, 0x6f, 0x70, 0x65, 0x6e,
	0x68, 0x64, 0x63, 0x2e, 0x6e, 0x65, 0x78, 0x75, 0x73, 0x2e, 0x76, 0x31, 0x1a, 0x1b, 0x67, 0x6f,
	0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x65, 0x6d,
	0x70, 0x74, 0x79, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1f, 0x67, 0x6f, 0x6f, 0x67, 0x6c,
	0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x74, 0x69, 0x6d, 0x65, 0x73,
	0x74, 0x61, 0x6d, 0x70, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0xc4, 0x04, 0x0a, 0x0d, 0x43,
	0x6f, 0x6e, 0x66, 0x69, 0x67, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x48, 0x0a, 0x0a,
	0x6e, 0x74, 0x70, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x29, 0x2e, 0x6f, 0x70, 0x65, 0x6e, 0x68, 0x64, 0x63, 0x2e, 0x6e, 0x65, 0x78, 0x75, 0x73,
	0x2e, 0x76, 0x31, 0x2e, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x2e, 0x4e, 0x54, 0x50, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x52, 0x09, 0x6e, 0x74, 0x70,
	0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x12, 0x64, 0x0a, 0x14, 0x70, 0x61, 0x63, 0x6b, 0x61, 0x67,
	0x65, 0x5f, 0x72, 0x65, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x6f, 0x72, 0x69, 0x65, 0x73, 0x18, 0x02,
	0x20, 0x03, 0x28, 0x0b, 0x32, 0x31, 0x2e, 0x6f, 0x70, 0x65, 0x6e, 0x68, 0x64, 0x63, 0x2e, 0x6e,
	0x65, 0x78, 0x75, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x75, 0x72,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x50, 0x61, 0x63, 0x6b, 0x61, 0x67, 0x65, 0x52, 0x65, 0x70,
	0x6f, 0x73, 0x69, 0x74, 0x6f, 0x72, 0x79, 0x52, 0x13, 0x70, 0x61, 0x63, 0x6b, 0x61, 0x67, 0x65,
	0x52, 0x65, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x6f, 0x72, 0x69, 0x65, 0x73, 0x12, 0x53, 0x0a, 0x0e,
	0x62, 0x6f, 0x6f, 0x74, 0x5f, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x73, 0x18, 0x03,
	0x20, 0x03, 0x28, 0x0b, 0x32, 0x2c, 0x2e, 0x6f, 0x70, 0x65, 0x6e, 0x68, 0x64, 0x63, 0x2e, 0x6e,
	0x65, 0x78, 0x75, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x75, 0x72,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x42, 0x6f, 0x6f, 0x74, 0x52, 0x65, 0x73, 0x6f, 0x75, 0x72,
	0x63, 0x65, 0x52, 0x0d, 0x62, 0x6f, 0x6f, 0x74, 0x52, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65,
	0x73, 0x1a, 0x29, 0x0a, 0x09, 0x4e, 0x54, 0x50, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x12, 0x1c,
	0x0a, 0x09, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x65, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28,
	0x09, 0x52, 0x09, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x65, 0x73, 0x1a, 0x63, 0x0a, 0x11,
	0x50, 0x61, 0x63, 0x6b, 0x61, 0x67, 0x65, 0x52, 0x65, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x6f, 0x72,
	0x79, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x69,
	0x64, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x75, 0x72, 0x6c, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x03, 0x75, 0x72, 0x6c, 0x12, 0x18, 0x0a, 0x07, 0x65, 0x6e, 0x61, 0x62, 0x6c,
	0x65, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x08, 0x52, 0x07, 0x65, 0x6e, 0x61, 0x62, 0x6c, 0x65,
	0x64, 0x1a, 0x9d, 0x01, 0x0a, 0x0c, 0x42, 0x6f, 0x6f, 0x74, 0x52, 0x65, 0x73, 0x6f, 0x75, 0x72,
	0x63, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x22, 0x0a, 0x0c, 0x61, 0x72, 0x63, 0x68, 0x69, 0x74,
	0x65, 0x63, 0x74, 0x75, 0x72, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x61, 0x72,
	0x63, 0x68, 0x69, 0x74, 0x65, 0x63, 0x74, 0x75, 0x72, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x74,
	0x61, 0x74, 0x75, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74,
	0x75, 0x73, 0x12, 0x18, 0x0a, 0x07, 0x64, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x18, 0x0b, 0x20,
	0x01, 0x28, 0x08, 0x52, 0x07, 0x64, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x12, 0x23, 0x0a, 0x0d,
	0x64, 0x69, 0x73, 0x74, 0x72, 0x6f, 0x5f, 0x73, 0x65, 0x72, 0x69, 0x65, 0x73, 0x18, 0x0c, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0c, 0x64, 0x69, 0x73, 0x74, 0x72, 0x6f, 0x53, 0x65, 0x72, 0x69, 0x65,
	0x73, 0x22, 0xc6, 0x0a, 0x0a, 0x07, 0x4e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x12, 0x38, 0x0a,
	0x06, 0x66, 0x61, 0x62, 0x72, 0x69, 0x63, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x20, 0x2e,
	0x6f, 0x70, 0x65, 0x6e, 0x68, 0x64, 0x63, 0x2e, 0x6e, 0x65, 0x78, 0x75, 0x73, 0x2e, 0x76, 0x31,
	0x2e, 0x4e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x2e, 0x46, 0x61, 0x62, 0x72, 0x69, 0x63, 0x52,
	0x06, 0x66, 0x61, 0x62, 0x72, 0x69, 0x63, 0x12, 0x32, 0x0a, 0x04, 0x76, 0x6c, 0x61, 0x6e, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1e, 0x2e, 0x6f, 0x70, 0x65, 0x6e, 0x68, 0x64, 0x63, 0x2e,
	0x6e, 0x65, 0x78, 0x75, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x4e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b,
	0x2e, 0x56, 0x4c, 0x41, 0x4e, 0x52, 0x04, 0x76, 0x6c, 0x61, 0x6e, 0x12, 0x38, 0x0a, 0x06, 0x73,
	0x75, 0x62, 0x6e, 0x65, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x20, 0x2e, 0x6f, 0x70,
	0x65, 0x6e, 0x68, 0x64, 0x63, 0x2e, 0x6e, 0x65, 0x78, 0x75, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x4e,
	0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x2e, 0x53, 0x75, 0x62, 0x6e, 0x65, 0x74, 0x52, 0x06, 0x73,
	0x75, 0x62, 0x6e, 0x65, 0x74, 0x1a, 0x9b, 0x01, 0x0a, 0x09, 0x49, 0x50, 0x41, 0x64, 0x64, 0x72,
	0x65, 0x73, 0x73, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x70, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x70, 0x12, 0x12, 0x0a, 0x04, 0x75, 0x73, 0x65, 0x72, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x75, 0x73, 0x65, 0x72, 0x12, 0x1d, 0x0a, 0x0a, 0x6d,
	0x61, 0x63, 0x68, 0x69, 0x6e, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x09, 0x6d, 0x61, 0x63, 0x68, 0x69, 0x6e, 0x65, 0x49, 0x64, 0x12, 0x1b, 0x0a, 0x09, 0x6e, 0x6f,
	0x64, 0x65, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x6e,
	0x6f, 0x64, 0x65, 0x54, 0x79, 0x70, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x68, 0x6f, 0x73, 0x74, 0x6e,
	0x61, 0x6d, 0x65, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x68, 0x6f, 0x73, 0x74, 0x6e,
	0x61, 0x6d, 0x65, 0x1a, 0x79, 0x0a, 0x07, 0x49, 0x50, 0x52, 0x61, 0x6e, 0x67, 0x65, 0x12, 0x0e,
	0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x69, 0x64, 0x12, 0x12,
	0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x74, 0x79,
	0x70, 0x65, 0x12, 0x19, 0x0a, 0x08, 0x73, 0x74, 0x61, 0x72, 0x74, 0x5f, 0x69, 0x70, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x73, 0x74, 0x61, 0x72, 0x74, 0x49, 0x70, 0x12, 0x15, 0x0a,
	0x06, 0x65, 0x6e, 0x64, 0x5f, 0x69, 0x70, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x65,
	0x6e, 0x64, 0x49, 0x70, 0x12, 0x18, 0x0a, 0x07, 0x63, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x18,
	0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x63, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x1a, 0x92,
	0x01, 0x0a, 0x0a, 0x53, 0x74, 0x61, 0x74, 0x69, 0x73, 0x74, 0x69, 0x63, 0x73, 0x12, 0x1c, 0x0a,
	0x09, 0x61, 0x76, 0x61, 0x69, 0x6c, 0x61, 0x62, 0x6c, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x09, 0x61, 0x76, 0x61, 0x69, 0x6c, 0x61, 0x62, 0x6c, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x74,
	0x6f, 0x74, 0x61, 0x6c, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x74, 0x6f, 0x74, 0x61,
	0x6c, 0x12, 0x23, 0x0a, 0x0d, 0x75, 0x73, 0x61, 0x67, 0x65, 0x5f, 0x70, 0x65, 0x72, 0x63, 0x65,
	0x6e, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x75, 0x73, 0x61, 0x67, 0x65, 0x50,
	0x65, 0x72, 0x63, 0x65, 0x6e, 0x74, 0x12, 0x2b, 0x0a, 0x11, 0x61, 0x76, 0x61, 0x69, 0x6c, 0x61,
	0x62, 0x6c, 0x65, 0x5f, 0x70, 0x65, 0x72, 0x63, 0x65, 0x6e, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x10, 0x61, 0x76, 0x61, 0x69, 0x6c, 0x61, 0x62, 0x6c, 0x65, 0x50, 0x65, 0x72, 0x63,
	0x65, 0x6e, 0x74, 0x1a, 0x2c, 0x0a, 0x06, 0x46, 0x61, 0x62, 0x72, 0x69, 0x63, 0x12, 0x0e, 0x0a,
	0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x69, 0x64, 0x12, 0x12, 0x0a,
	0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d,
	0x65, 0x1a, 0x89, 0x01, 0x0a, 0x04, 0x56, 0x4c, 0x41, 0x4e, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x69, 0x64, 0x12, 0x10, 0x0a, 0x03, 0x76, 0x69,
	0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x03, 0x76, 0x69, 0x64, 0x12, 0x12, 0x0a, 0x04,
	0x6e, 0x61, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65,
	0x12, 0x10, 0x0a, 0x03, 0x6d, 0x74, 0x75, 0x18, 0x04, 0x20, 0x01, 0x28, 0x03, 0x52, 0x03, 0x6d,
	0x74, 0x75, 0x12, 0x20, 0x0a, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f,
	0x6e, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70,
	0x74, 0x69, 0x6f, 0x6e, 0x12, 0x17, 0x0a, 0x07, 0x64, 0x68, 0x63, 0x70, 0x5f, 0x6f, 0x6e, 0x18,
	0x06, 0x20, 0x01, 0x28, 0x08, 0x52, 0x06, 0x64, 0x68, 0x63, 0x70, 0x4f, 0x6e, 0x1a, 0xaa, 0x04,
	0x0a, 0x06, 0x53, 0x75, 0x62, 0x6e, 0x65, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x69, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x12, 0x0a, 0x04,
	0x63, 0x69, 0x64, 0x72, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x63, 0x69, 0x64, 0x72,
	0x12, 0x1d, 0x0a, 0x0a, 0x67, 0x61, 0x74, 0x65, 0x77, 0x61, 0x79, 0x5f, 0x69, 0x70, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x67, 0x61, 0x74, 0x65, 0x77, 0x61, 0x79, 0x49, 0x70, 0x12,
	0x1f, 0x0a, 0x0b, 0x64, 0x6e, 0x73, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x73, 0x18, 0x05,
	0x20, 0x03, 0x28, 0x09, 0x52, 0x0a, 0x64, 0x6e, 0x73, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x73,
	0x12, 0x20, 0x0a, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18,
	0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69,
	0x6f, 0x6e, 0x12, 0x2d, 0x0a, 0x12, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x64, 0x5f, 0x61, 0x6c,
	0x6c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x07, 0x20, 0x01, 0x28, 0x08, 0x52, 0x11,
	0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x64, 0x41, 0x6c, 0x6c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x12, 0x29, 0x0a, 0x10, 0x61, 0x63, 0x74, 0x69, 0x76, 0x65, 0x5f, 0x64, 0x69, 0x73, 0x63,
	0x6f, 0x76, 0x65, 0x72, 0x79, 0x18, 0x08, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0f, 0x61, 0x63, 0x74,
	0x69, 0x76, 0x65, 0x44, 0x69, 0x73, 0x63, 0x6f, 0x76, 0x65, 0x72, 0x79, 0x12, 0x2c, 0x0a, 0x12,
	0x61, 0x6c, 0x6c, 0x6f, 0x77, 0x5f, 0x70, 0x72, 0x6f, 0x78, 0x79, 0x5f, 0x61, 0x63, 0x63, 0x65,
	0x73, 0x73, 0x18, 0x09, 0x20, 0x01, 0x28, 0x08, 0x52, 0x10, 0x61, 0x6c, 0x6c, 0x6f, 0x77, 0x50,
	0x72, 0x6f, 0x78, 0x79, 0x41, 0x63, 0x63, 0x65, 0x73, 0x73, 0x12, 0x30, 0x0a, 0x14, 0x61, 0x6c,
	0x6c, 0x6f, 0x77, 0x5f, 0x64, 0x6e, 0x73, 0x5f, 0x72, 0x65, 0x73, 0x6f, 0x6c, 0x75, 0x74, 0x69,
	0x6f, 0x6e, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x08, 0x52, 0x12, 0x61, 0x6c, 0x6c, 0x6f, 0x77, 0x44,
	0x6e, 0x73, 0x52, 0x65, 0x73, 0x6f, 0x6c, 0x75, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x46, 0x0a, 0x0c,
	0x69, 0x70, 0x5f, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x65, 0x73, 0x18, 0x0b, 0x20, 0x03,
	0x28, 0x0b, 0x32, 0x23, 0x2e, 0x6f, 0x70, 0x65, 0x6e, 0x68, 0x64, 0x63, 0x2e, 0x6e, 0x65, 0x78,
	0x75, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x4e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x2e, 0x49, 0x50,
	0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x52, 0x0b, 0x69, 0x70, 0x41, 0x64, 0x64, 0x72, 0x65,
	0x73, 0x73, 0x65, 0x73, 0x12, 0x3e, 0x0a, 0x09, 0x69, 0x70, 0x5f, 0x72, 0x61, 0x6e, 0x67, 0x65,
	0x73, 0x18, 0x0c, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x21, 0x2e, 0x6f, 0x70, 0x65, 0x6e, 0x68, 0x64,
	0x63, 0x2e, 0x6e, 0x65, 0x78, 0x75, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x4e, 0x65, 0x74, 0x77, 0x6f,
	0x72, 0x6b, 0x2e, 0x49, 0x50, 0x52, 0x61, 0x6e, 0x67, 0x65, 0x52, 0x08, 0x69, 0x70, 0x52, 0x61,
	0x6e, 0x67, 0x65, 0x73, 0x12, 0x44, 0x0a, 0x0a, 0x73, 0x74, 0x61, 0x74, 0x69, 0x73, 0x74, 0x69,
	0x63, 0x73, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x24, 0x2e, 0x6f, 0x70, 0x65, 0x6e, 0x68,
	0x64, 0x63, 0x2e, 0x6e, 0x65, 0x78, 0x75, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x4e, 0x65, 0x74, 0x77,
	0x6f, 0x72, 0x6b, 0x2e, 0x53, 0x74, 0x61, 0x74, 0x69, 0x73, 0x74, 0x69, 0x63, 0x73, 0x52, 0x0a,
	0x73, 0x74, 0x61, 0x74, 0x69, 0x73, 0x74, 0x69, 0x63, 0x73, 0x22, 0xdd, 0x12, 0x0a, 0x07, 0x4d,
	0x61, 0x63, 0x68, 0x69, 0x6e, 0x65, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x23, 0x0a, 0x0d, 0x68, 0x61, 0x72, 0x64, 0x77, 0x61,
	0x72, 0x65, 0x5f, 0x75, 0x75, 0x69, 0x64, 0x18, 0x65, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x68,
	0x61, 0x72, 0x64, 0x77, 0x61, 0x72, 0x65, 0x55, 0x75, 0x69, 0x64, 0x12, 0x1a, 0x0a, 0x08, 0x68,
	0x6f, 0x73, 0x74, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x66, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x68,
	0x6f, 0x73, 0x74, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x66, 0x71, 0x64, 0x6e, 0x18,
	0x67, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x66, 0x71, 0x64, 0x6e, 0x12, 0x12, 0x0a, 0x04, 0x74,
	0x61, 0x67, 0x73, 0x18, 0x68, 0x20, 0x03, 0x28, 0x09, 0x52, 0x04, 0x74, 0x61, 0x67, 0x73, 0x12,
	0x20, 0x0a, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x69,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f,
	0x6e, 0x12, 0x17, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0xc9, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x20, 0x0a, 0x0b, 0x70, 0x6f,
	0x77, 0x65, 0x72, 0x5f, 0x73, 0x74, 0x61, 0x74, 0x65, 0x18, 0xad, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0a, 0x70, 0x6f, 0x77, 0x65, 0x72, 0x53, 0x74, 0x61, 0x74, 0x65, 0x12, 0x1e, 0x0a, 0x0a,
	0x70, 0x6f, 0x77, 0x65, 0x72, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0xae, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x09, 0x70, 0x6f, 0x77, 0x65, 0x72, 0x54, 0x79, 0x70, 0x65, 0x12, 0x19, 0x0a, 0x07,
	0x6f, 0x73, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x18, 0x91, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07,
	0x6f, 0x73, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x12, 0x24, 0x0a, 0x0d, 0x64, 0x69, 0x73, 0x74, 0x72,
	0x6f, 0x5f, 0x73, 0x65, 0x72, 0x69, 0x65, 0x73, 0x18, 0x92, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0c, 0x64, 0x69, 0x73, 0x74, 0x72, 0x6f, 0x53, 0x65, 0x72, 0x69, 0x65, 0x73, 0x12, 0x1e, 0x0a,
	0x0a, 0x68, 0x77, 0x65, 0x5f, 0x6b, 0x65, 0x72, 0x6e, 0x65, 0x6c, 0x18, 0x93, 0x03, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x09, 0x68, 0x77, 0x65, 0x4b, 0x65, 0x72, 0x6e, 0x65, 0x6c, 0x12, 0x23, 0x0a,
	0x0c, 0x61, 0x72, 0x63, 0x68, 0x69, 0x74, 0x65, 0x63, 0x74, 0x75, 0x72, 0x65, 0x18, 0x94, 0x03,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x61, 0x72, 0x63, 0x68, 0x69, 0x74, 0x65, 0x63, 0x74, 0x75,
	0x72, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x63, 0x70, 0x75, 0x5f, 0x73, 0x70, 0x65, 0x65, 0x64, 0x18,
	0x95, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x63, 0x70, 0x75, 0x53, 0x70, 0x65, 0x65, 0x64,
	0x12, 0x1c, 0x0a, 0x09, 0x63, 0x70, 0x75, 0x5f, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x96, 0x03,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x63, 0x70, 0x75, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x1c,
	0x0a, 0x09, 0x6d, 0x65, 0x6d, 0x6f, 0x72, 0x79, 0x5f, 0x6d, 0x62, 0x18, 0x97, 0x03, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x08, 0x6d, 0x65, 0x6d, 0x6f, 0x72, 0x79, 0x4d, 0x62, 0x12, 0x1e, 0x0a, 0x0a,
	0x73, 0x74, 0x6f, 0x72, 0x61, 0x67, 0x65, 0x5f, 0x6d, 0x62, 0x18, 0x98, 0x03, 0x20, 0x01, 0x28,
	0x01, 0x52, 0x09, 0x73, 0x74, 0x6f, 0x72, 0x61, 0x67, 0x65, 0x4d, 0x62, 0x12, 0x22, 0x0a, 0x0c,
	0x69, 0x70, 0x5f, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x65, 0x73, 0x18, 0x99, 0x03, 0x20,
	0x03, 0x28, 0x09, 0x52, 0x0b, 0x69, 0x70, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x65, 0x73,
	0x12, 0x66, 0x0a, 0x14, 0x77, 0x6f, 0x72, 0x6b, 0x6c, 0x6f, 0x61, 0x64, 0x5f, 0x61, 0x6e, 0x6e,
	0x6f, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0xf5, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32,
	0x32, 0x2e, 0x6f, 0x70, 0x65, 0x6e, 0x68, 0x64, 0x63, 0x2e, 0x6e, 0x65, 0x78, 0x75, 0x73, 0x2e,
	0x76, 0x31, 0x2e, 0x4d, 0x61, 0x63, 0x68, 0x69, 0x6e, 0x65, 0x2e, 0x57, 0x6f, 0x72, 0x6b, 0x6c,
	0x6f, 0x61, 0x64, 0x41, 0x6e, 0x6e, 0x6f, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x45, 0x6e,
	0x74, 0x72, 0x79, 0x52, 0x13, 0x77, 0x6f, 0x72, 0x6b, 0x6c, 0x6f, 0x61, 0x64, 0x41, 0x6e, 0x6e,
	0x6f, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x12, 0x66, 0x0a, 0x14, 0x68, 0x61, 0x72, 0x64,
	0x77, 0x61, 0x72, 0x65, 0x5f, 0x69, 0x6e, 0x66, 0x6f, 0x72, 0x6d, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x18, 0xd9, 0x04, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x32, 0x2e, 0x6f, 0x70, 0x65, 0x6e, 0x68, 0x64,
	0x63, 0x2e, 0x6e, 0x65, 0x78, 0x75, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x4d, 0x61, 0x63, 0x68, 0x69,
	0x6e, 0x65, 0x2e, 0x48, 0x61, 0x72, 0x64, 0x77, 0x61, 0x72, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x72,
	0x6d, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x13, 0x68, 0x61, 0x72,
	0x64, 0x77, 0x61, 0x72, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x72, 0x6d, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x12, 0x29, 0x0a, 0x10, 0x62, 0x69, 0x6f, 0x73, 0x5f, 0x62, 0x6f, 0x6f, 0x74, 0x5f, 0x6d, 0x65,
	0x74, 0x68, 0x6f, 0x64, 0x18, 0xda, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0e, 0x62, 0x69, 0x6f,
	0x73, 0x42, 0x6f, 0x6f, 0x74, 0x4d, 0x65, 0x74, 0x68, 0x6f, 0x64, 0x12, 0x42, 0x0a, 0x0a, 0x6e,
	0x75, 0x6d, 0x61, 0x5f, 0x6e, 0x6f, 0x64, 0x65, 0x73, 0x18, 0xbd, 0x05, 0x20, 0x03, 0x28, 0x0b,
	0x32, 0x22, 0x2e, 0x6f, 0x70, 0x65, 0x6e, 0x68, 0x64, 0x63, 0x2e, 0x6e, 0x65, 0x78, 0x75, 0x73,
	0x2e, 0x76, 0x31, 0x2e, 0x4d, 0x61, 0x63, 0x68, 0x69, 0x6e, 0x65, 0x2e, 0x4e, 0x55, 0x4d, 0x41,
	0x4e, 0x6f, 0x64, 0x65, 0x52, 0x09, 0x6e, 0x75, 0x6d, 0x61, 0x4e, 0x6f, 0x64, 0x65, 0x73, 0x12,
	0x4b, 0x0a, 0x0d, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x5f, 0x64, 0x65, 0x76, 0x69, 0x63, 0x65, 0x73,
	0x18, 0xa1, 0x06, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x25, 0x2e, 0x6f, 0x70, 0x65, 0x6e, 0x68, 0x64,
	0x63, 0x2e, 0x6e, 0x65, 0x78, 0x75, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x4d, 0x61, 0x63, 0x68, 0x69,
	0x6e, 0x65, 0x2e, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x44, 0x65, 0x76, 0x69, 0x63, 0x65, 0x52, 0x0c,
	0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x44, 0x65, 0x76, 0x69, 0x63, 0x65, 0x73, 0x12, 0x5a, 0x0a, 0x12,
	0x6e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x5f, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x66, 0x61, 0x63,
	0x65, 0x73, 0x18, 0xa2, 0x06, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x2a, 0x2e, 0x6f, 0x70, 0x65, 0x6e,
	0x68, 0x64, 0x63, 0x2e, 0x6e, 0x65, 0x78, 0x75, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x4d, 0x61, 0x63,
	0x68, 0x69, 0x6e, 0x65, 0x2e, 0x4e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x49, 0x6e, 0x74, 0x65,
	0x72, 0x66, 0x61, 0x63, 0x65, 0x52, 0x11, 0x6e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x49, 0x6e,
	0x74, 0x65, 0x72, 0x66, 0x61, 0x63, 0x65, 0x73, 0x1a, 0x76, 0x0a, 0x09, 0x50, 0x6c, 0x61, 0x63,
	0x65, 0x6d, 0x65, 0x6e, 0x74, 0x12, 0x12, 0x0a, 0x03, 0x6c, 0x78, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x08, 0x48, 0x00, 0x52, 0x03, 0x6c, 0x78, 0x64, 0x12, 0x12, 0x0a, 0x03, 0x6b, 0x76, 0x6d,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x08, 0x48, 0x00, 0x52, 0x03, 0x6b, 0x76, 0x6d, 0x12, 0x1a, 0x0a,
	0x07, 0x6d, 0x61, 0x63, 0x68, 0x69, 0x6e, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x08, 0x48, 0x00,
	0x52, 0x07, 0x6d, 0x61, 0x63, 0x68, 0x69, 0x6e, 0x65, 0x12, 0x1d, 0x0a, 0x0a, 0x6d, 0x61, 0x63,
	0x68, 0x69, 0x6e, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x6d,
	0x61, 0x63, 0x68, 0x69, 0x6e, 0x65, 0x49, 0x64, 0x42, 0x06, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65,
	0x1a, 0x7e, 0x0a, 0x0a, 0x43, 0x6f, 0x6e, 0x73, 0x74, 0x72, 0x61, 0x69, 0x6e, 0x74, 0x12, 0x22,
	0x0a, 0x0c, 0x61, 0x72, 0x63, 0x68, 0x69, 0x74, 0x65, 0x63, 0x74, 0x75, 0x72, 0x65, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x61, 0x72, 0x63, 0x68, 0x69, 0x74, 0x65, 0x63, 0x74, 0x75,
	0x72, 0x65, 0x12, 0x1b, 0x0a, 0x09, 0x63, 0x70, 0x75, 0x5f, 0x63, 0x6f, 0x72, 0x65, 0x73, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x04, 0x52, 0x08, 0x63, 0x70, 0x75, 0x43, 0x6f, 0x72, 0x65, 0x73, 0x12,
	0x1b, 0x0a, 0x09, 0x6d, 0x65, 0x6d, 0x6f, 0x72, 0x79, 0x5f, 0x6d, 0x62, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x04, 0x52, 0x08, 0x6d, 0x65, 0x6d, 0x6f, 0x72, 0x79, 0x4d, 0x62, 0x12, 0x12, 0x0a, 0x04,
	0x74, 0x61, 0x67, 0x73, 0x18, 0x0b, 0x20, 0x03, 0x28, 0x09, 0x52, 0x04, 0x74, 0x61, 0x67, 0x73,
	0x1a, 0x91, 0x01, 0x0a, 0x06, 0x46, 0x61, 0x63, 0x74, 0x6f, 0x72, 0x12, 0x41, 0x0a, 0x09, 0x70,
	0x6c, 0x61, 0x63, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x23,
	0x2e, 0x6f, 0x70, 0x65, 0x6e, 0x68, 0x64, 0x63, 0x2e, 0x6e, 0x65, 0x78, 0x75, 0x73, 0x2e, 0x76,
	0x31, 0x2e, 0x4d, 0x61, 0x63, 0x68, 0x69, 0x6e, 0x65, 0x2e, 0x50, 0x6c, 0x61, 0x63, 0x65, 0x6d,
	0x65, 0x6e, 0x74, 0x52, 0x09, 0x70, 0x6c, 0x61, 0x63, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x12, 0x44,
	0x0a, 0x0a, 0x63, 0x6f, 0x6e, 0x73, 0x74, 0x72, 0x61, 0x69, 0x6e, 0x74, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x24, 0x2e, 0x6f, 0x70, 0x65, 0x6e, 0x68, 0x64, 0x63, 0x2e, 0x6e, 0x65, 0x78,
	0x75, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x4d, 0x61, 0x63, 0x68, 0x69, 0x6e, 0x65, 0x2e, 0x43, 0x6f,
	0x6e, 0x73, 0x74, 0x72, 0x61, 0x69, 0x6e, 0x74, 0x52, 0x0a, 0x63, 0x6f, 0x6e, 0x73, 0x74, 0x72,
	0x61, 0x69, 0x6e, 0x74, 0x1a, 0x5a, 0x0a, 0x08, 0x4e, 0x55, 0x4d, 0x41, 0x4e, 0x6f, 0x64, 0x65,
	0x12, 0x14, 0x0a, 0x05, 0x69, 0x6e, 0x64, 0x65, 0x78, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x05, 0x69, 0x6e, 0x64, 0x65, 0x78, 0x12, 0x1b, 0x0a, 0x09, 0x63, 0x70, 0x75, 0x5f, 0x63, 0x6f,
	0x72, 0x65, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x63, 0x70, 0x75, 0x43, 0x6f,
	0x72, 0x65, 0x73, 0x12, 0x1b, 0x0a, 0x09, 0x6d, 0x65, 0x6d, 0x6f, 0x72, 0x79, 0x5f, 0x6d, 0x62,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x6d, 0x65, 0x6d, 0x6f, 0x72, 0x79, 0x4d, 0x62,
	0x1a, 0xf9, 0x01, 0x0a, 0x0b, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x44, 0x65, 0x76, 0x69, 0x63, 0x65,
	0x12, 0x1b, 0x0a, 0x09, 0x62, 0x6f, 0x6f, 0x74, 0x5f, 0x64, 0x69, 0x73, 0x6b, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x08, 0x52, 0x08, 0x62, 0x6f, 0x6f, 0x74, 0x44, 0x69, 0x73, 0x6b, 0x12, 0x12, 0x0a,
	0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d,
	0x65, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x65, 0x72, 0x69, 0x61, 0x6c, 0x18, 0x0c, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x06, 0x73, 0x65, 0x72, 0x69, 0x61, 0x6c, 0x12, 0x14, 0x0a, 0x05, 0x6d, 0x6f, 0x64,
	0x65, 0x6c, 0x18, 0x15, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x12,
	0x29, 0x0a, 0x10, 0x66, 0x69, 0x72, 0x6d, 0x77, 0x61, 0x72, 0x65, 0x5f, 0x76, 0x65, 0x72, 0x73,
	0x69, 0x6f, 0x6e, 0x18, 0x16, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0f, 0x66, 0x69, 0x72, 0x6d, 0x77,
	0x61, 0x72, 0x65, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x1d, 0x0a, 0x0a, 0x73, 0x74,
	0x6f, 0x72, 0x61, 0x67, 0x65, 0x5f, 0x6d, 0x62, 0x18, 0x1f, 0x20, 0x01, 0x28, 0x01, 0x52, 0x09,
	0x73, 0x74, 0x6f, 0x72, 0x61, 0x67, 0x65, 0x4d, 0x62, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x79, 0x70,
	0x65, 0x18, 0x29, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x12, 0x12, 0x0a,
	0x04, 0x74, 0x61, 0x67, 0x73, 0x18, 0x33, 0x20, 0x03, 0x28, 0x09, 0x52, 0x04, 0x74, 0x61, 0x67,
	0x73, 0x12, 0x19, 0x0a, 0x08, 0x75, 0x73, 0x65, 0x64, 0x5f, 0x66, 0x6f, 0x72, 0x18, 0x3d, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x07, 0x75, 0x73, 0x65, 0x64, 0x46, 0x6f, 0x72, 0x1a, 0xdb, 0x03, 0x0a,
	0x10, 0x4e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x49, 0x6e, 0x74, 0x65, 0x72, 0x66, 0x61, 0x63,
	0x65, 0x12, 0x25, 0x0a, 0x0e, 0x62, 0x6f, 0x6f, 0x74, 0x5f, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x66,
	0x61, 0x63, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0d, 0x62, 0x6f, 0x6f, 0x74, 0x49,
	0x6e, 0x74, 0x65, 0x72, 0x66, 0x61, 0x63, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65,
	0x18, 0x0b, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x1f, 0x0a, 0x0b,
	0x6d, 0x61, 0x63, 0x5f, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x18, 0x0c, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0a, 0x6d, 0x61, 0x63, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x12, 0x25, 0x0a,
	0x0e, 0x6c, 0x69, 0x6e, 0x6b, 0x5f, 0x63, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x65, 0x64, 0x18,
	0x15, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0d, 0x6c, 0x69, 0x6e, 0x6b, 0x43, 0x6f, 0x6e, 0x6e, 0x65,
	0x63, 0x74, 0x65, 0x64, 0x12, 0x1d, 0x0a, 0x0a, 0x6c, 0x69, 0x6e, 0x6b, 0x5f, 0x73, 0x70, 0x65,
	0x65, 0x64, 0x18, 0x16, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x6c, 0x69, 0x6e, 0x6b, 0x53, 0x70,
	0x65, 0x65, 0x64, 0x12, 0x27, 0x0a, 0x0f, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x66, 0x61, 0x63, 0x65,
	0x5f, 0x73, 0x70, 0x65, 0x65, 0x64, 0x18, 0x17, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0e, 0x69, 0x6e,
	0x74, 0x65, 0x72, 0x66, 0x61, 0x63, 0x65, 0x53, 0x70, 0x65, 0x65, 0x64, 0x12, 0x12, 0x0a, 0x04,
	0x74, 0x79, 0x70, 0x65, 0x18, 0x1f, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65,
	0x12, 0x1f, 0x0a, 0x0b, 0x66, 0x61, 0x62, 0x72, 0x69, 0x63, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18,
	0x29, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x66, 0x61, 0x62, 0x72, 0x69, 0x63, 0x4e, 0x61, 0x6d,
	0x65, 0x12, 0x1b, 0x0a, 0x09, 0x66, 0x61, 0x62, 0x72, 0x69, 0x63, 0x5f, 0x69, 0x64, 0x18, 0x2a,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x66, 0x61, 0x62, 0x72, 0x69, 0x63, 0x49, 0x64, 0x12, 0x1b,
	0x0a, 0x09, 0x76, 0x6c, 0x61, 0x6e, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x2b, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x08, 0x76, 0x6c, 0x61, 0x6e, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x17, 0x0a, 0x07, 0x76,
	0x6c, 0x61, 0x6e, 0x5f, 0x69, 0x64, 0x18, 0x2c, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x76, 0x6c,
	0x61, 0x6e, 0x49, 0x64, 0x12, 0x1f, 0x0a, 0x0b, 0x73, 0x75, 0x62, 0x6e, 0x65, 0x74, 0x5f, 0x6e,
	0x61, 0x6d, 0x65, 0x18, 0x33, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x73, 0x75, 0x62, 0x6e, 0x65,
	0x74, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x1b, 0x0a, 0x09, 0x73, 0x75, 0x62, 0x6e, 0x65, 0x74, 0x5f,
	0x69, 0x64, 0x18, 0x34, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x73, 0x75, 0x62, 0x6e, 0x65, 0x74,
	0x49, 0x64, 0x12, 0x1d, 0x0a, 0x0a, 0x69, 0x70, 0x5f, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73,
	0x18, 0x3d, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x69, 0x70, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73,
	0x73, 0x12, 0x17, 0x0a, 0x07, 0x64, 0x68, 0x63, 0x70, 0x5f, 0x6f, 0x6e, 0x18, 0x47, 0x20, 0x01,
	0x28, 0x08, 0x52, 0x06, 0x64, 0x68, 0x63, 0x70, 0x4f, 0x6e, 0x1a, 0x46, 0x0a, 0x18, 0x57, 0x6f,
	0x72, 0x6b, 0x6c, 0x6f, 0x61, 0x64, 0x41, 0x6e, 0x6e, 0x6f, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75,
	0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02,
	0x38, 0x01, 0x1a, 0x46, 0x0a, 0x18, 0x48, 0x61, 0x72, 0x64, 0x77, 0x61, 0x72, 0x65, 0x49, 0x6e,
	0x66, 0x6f, 0x72, 0x6d, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10,
	0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79,
	0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x22, 0xc1, 0x02, 0x0a, 0x05, 0x53,
	0x63, 0x6f, 0x70, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x75, 0x75, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x04, 0x75, 0x75, 0x69, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x12, 0x0a, 0x04,
	0x74, 0x79, 0x70, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65,
	0x12, 0x23, 0x0a, 0x0d, 0x70, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x5f, 0x74, 0x79, 0x70,
	0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x70, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65,
	0x72, 0x54, 0x79, 0x70, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x6c, 0x69, 0x66, 0x65, 0x18, 0x05, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x04, 0x6c, 0x69, 0x66, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x74, 0x61,
	0x74, 0x75, 0x73, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75,
	0x73, 0x12, 0x23, 0x0a, 0x0d, 0x61, 0x67, 0x65, 0x6e, 0x74, 0x5f, 0x76, 0x65, 0x72, 0x73, 0x69,
	0x6f, 0x6e, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x61, 0x67, 0x65, 0x6e, 0x74, 0x56,
	0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x23, 0x0a, 0x0d, 0x69, 0x73, 0x5f, 0x63, 0x6f, 0x6e,
	0x74, 0x72, 0x6f, 0x6c, 0x6c, 0x65, 0x72, 0x18, 0x08, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0c, 0x69,
	0x73, 0x43, 0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x6c, 0x65, 0x72, 0x12, 0x23, 0x0a, 0x0d, 0x6d,
	0x61, 0x63, 0x68, 0x69, 0x6e, 0x65, 0x5f, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x15, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x0c, 0x6d, 0x61, 0x63, 0x68, 0x69, 0x6e, 0x65, 0x43, 0x6f, 0x75, 0x6e, 0x74,
	0x12, 0x1d, 0x0a, 0x0a, 0x63, 0x6f, 0x72, 0x65, 0x5f, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x16,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x63, 0x6f, 0x72, 0x65, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x12,
	0x1d, 0x0a, 0x0a, 0x75, 0x6e, 0x69, 0x74, 0x5f, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x17, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x09, 0x75, 0x6e, 0x69, 0x74, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x22, 0x14,
	0x0a, 0x08, 0x46, 0x61, 0x63, 0x69, 0x6c, 0x69, 0x74, 0x79, 0x1a, 0x08, 0x0a, 0x06, 0x41, 0x63,
	0x74, 0x69, 0x6f, 0x6e, 0x22, 0x2d, 0x0a, 0x0b, 0x41, 0x70, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x1a, 0x1e, 0x0a, 0x07, 0x52, 0x65, 0x6c, 0x65, 0x61, 0x73, 0x65, 0x1a, 0x13,
	0x0a, 0x05, 0x43, 0x68, 0x61, 0x72, 0x74, 0x1a, 0x0a, 0x0a, 0x08, 0x4d, 0x65, 0x74, 0x61, 0x64,
	0x61, 0x74, 0x61, 0x22, 0x19, 0x0a, 0x17, 0x47, 0x65, 0x74, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67,
	0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x22, 0x36,
	0x0a, 0x16, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x4e, 0x54, 0x50, 0x53, 0x65, 0x72, 0x76, 0x65,
	0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1c, 0x0a, 0x09, 0x61, 0x64, 0x64, 0x72,
	0x65, 0x73, 0x73, 0x65, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x09, 0x52, 0x09, 0x61, 0x64, 0x64,
	0x72, 0x65, 0x73, 0x73, 0x65, 0x73, 0x22, 0x5f, 0x0a, 0x1e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65,
	0x50, 0x61, 0x63, 0x6b, 0x61, 0x67, 0x65, 0x52, 0x65, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x6f, 0x72,
	0x79, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x69, 0x64, 0x12, 0x10, 0x0a, 0x03, 0x75, 0x72, 0x6c, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x75, 0x72, 0x6c, 0x12, 0x1b, 0x0a, 0x09, 0x73, 0x6b,
	0x69, 0x70, 0x5f, 0x6a, 0x75, 0x6a, 0x75, 0x18, 0x03, 0x20, 0x01, 0x28, 0x08, 0x52, 0x08, 0x73,
	0x6b, 0x69, 0x70, 0x4a, 0x75, 0x6a, 0x75, 0x22, 0x47, 0x0a, 0x20, 0x55, 0x70, 0x64, 0x61, 0x74,
	0x65, 0x44, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x42, 0x6f, 0x6f, 0x74, 0x52, 0x65, 0x73, 0x6f,
	0x75, 0x72, 0x63, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x23, 0x0a, 0x0d, 0x64,
	0x69, 0x73, 0x74, 0x72, 0x6f, 0x5f, 0x73, 0x65, 0x72, 0x69, 0x65, 0x73, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0c, 0x64, 0x69, 0x73, 0x74, 0x72, 0x6f, 0x53, 0x65, 0x72, 0x69, 0x65, 0x73,
	0x22, 0x1a, 0x0a, 0x18, 0x53, 0x79, 0x6e, 0x63, 0x42, 0x6f, 0x6f, 0x74, 0x52, 0x65, 0x73, 0x6f,
	0x75, 0x72, 0x63, 0x65, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x22, 0x15, 0x0a, 0x13,
	0x4c, 0x69, 0x73, 0x74, 0x4e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x73, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x22, 0x4d, 0x0a, 0x14, 0x4c, 0x69, 0x73, 0x74, 0x4e, 0x65, 0x74, 0x77, 0x6f,
	0x72, 0x6b, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x35, 0x0a, 0x08, 0x6e,
	0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x19, 0x2e,
	0x6f, 0x70, 0x65, 0x6e, 0x68, 0x64, 0x63, 0x2e, 0x6e, 0x65, 0x78, 0x75, 0x73, 0x2e, 0x76, 0x31,
	0x2e, 0x4e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x52, 0x08, 0x6e, 0x65, 0x74, 0x77, 0x6f, 0x72,
	0x6b, 0x73, 0x22, 0x83, 0x01, 0x0a, 0x14, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x4e, 0x65, 0x74,
	0x77, 0x6f, 0x72, 0x6b, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x63,
	0x69, 0x64, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x63, 0x69, 0x64, 0x72, 0x12,
	0x1d, 0x0a, 0x0a, 0x67, 0x61, 0x74, 0x65, 0x77, 0x61, 0x79, 0x5f, 0x69, 0x70, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x09, 0x67, 0x61, 0x74, 0x65, 0x77, 0x61, 0x79, 0x49, 0x70, 0x12, 0x1f,
	0x0a, 0x0b, 0x64, 0x6e, 0x73, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x73, 0x18, 0x03, 0x20,
	0x03, 0x28, 0x09, 0x52, 0x0a, 0x64, 0x6e, 0x73, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x73, 0x12,
	0x17, 0x0a, 0x07, 0x64, 0x68, 0x63, 0x70, 0x5f, 0x6f, 0x6e, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x08,
	0x52, 0x06, 0x64, 0x68, 0x63, 0x70, 0x4f, 0x6e, 0x22, 0x7f, 0x0a, 0x14, 0x43, 0x72, 0x65, 0x61,
	0x74, 0x65, 0x49, 0x50, 0x52, 0x61, 0x6e, 0x67, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x12, 0x1b, 0x0a, 0x09, 0x73, 0x75, 0x62, 0x6e, 0x65, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x08, 0x73, 0x75, 0x62, 0x6e, 0x65, 0x74, 0x49, 0x64, 0x12, 0x19, 0x0a,
	0x08, 0x73, 0x74, 0x61, 0x72, 0x74, 0x5f, 0x69, 0x70, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x07, 0x73, 0x74, 0x61, 0x72, 0x74, 0x49, 0x70, 0x12, 0x15, 0x0a, 0x06, 0x65, 0x6e, 0x64, 0x5f,
	0x69, 0x70, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x65, 0x6e, 0x64, 0x49, 0x70, 0x12,
	0x18, 0x0a, 0x07, 0x63, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x07, 0x63, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x22, 0x26, 0x0a, 0x14, 0x44, 0x65, 0x6c,
	0x65, 0x74, 0x65, 0x4e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x69,
	0x64, 0x22, 0x26, 0x0a, 0x14, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x49, 0x50, 0x52, 0x61, 0x6e,
	0x67, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x69, 0x64, 0x22, 0x39, 0x0a, 0x13, 0x55, 0x70, 0x64,
	0x61, 0x74, 0x65, 0x46, 0x61, 0x62, 0x72, 0x69, 0x63, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x69, 0x64,
	0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04,
	0x6e, 0x61, 0x6d, 0x65, 0x22, 0xa3, 0x01, 0x0a, 0x11, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x56,
	0x4c, 0x41, 0x4e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1b, 0x0a, 0x09, 0x66, 0x61,
	0x62, 0x72, 0x69, 0x63, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x66,
	0x61, 0x62, 0x72, 0x69, 0x63, 0x49, 0x64, 0x12, 0x10, 0x0a, 0x03, 0x76, 0x69, 0x64, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x03, 0x76, 0x69, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d,
	0x65, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x10, 0x0a,
	0x03, 0x6d, 0x74, 0x75, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x03, 0x52, 0x03, 0x6d, 0x74, 0x75, 0x12,
	0x20, 0x0a, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x0d,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f,
	0x6e, 0x12, 0x17, 0x0a, 0x07, 0x64, 0x68, 0x63, 0x70, 0x5f, 0x6f, 0x6e, 0x18, 0x0e, 0x20, 0x01,
	0x28, 0x08, 0x52, 0x06, 0x64, 0x68, 0x63, 0x70, 0x4f, 0x6e, 0x22, 0xe1, 0x01, 0x0a, 0x13, 0x55,
	0x70, 0x64, 0x61, 0x74, 0x65, 0x53, 0x75, 0x62, 0x6e, 0x65, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02,
	0x69, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x63, 0x69, 0x64, 0x72, 0x18, 0x0c,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x63, 0x69, 0x64, 0x72, 0x12, 0x1d, 0x0a, 0x0a, 0x67, 0x61,
	0x74, 0x65, 0x77, 0x61, 0x79, 0x5f, 0x69, 0x70, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09,
	0x67, 0x61, 0x74, 0x65, 0x77, 0x61, 0x79, 0x49, 0x70, 0x12, 0x1f, 0x0a, 0x0b, 0x64, 0x6e, 0x73,
	0x5f, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x73, 0x18, 0x0e, 0x20, 0x03, 0x28, 0x09, 0x52, 0x0a,
	0x64, 0x6e, 0x73, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x73, 0x12, 0x20, 0x0a, 0x0b, 0x64, 0x65,
	0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x0f, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x30, 0x0a, 0x14,
	0x61, 0x6c, 0x6c, 0x6f, 0x77, 0x5f, 0x64, 0x6e, 0x73, 0x5f, 0x72, 0x65, 0x73, 0x6f, 0x6c, 0x75,
	0x74, 0x69, 0x6f, 0x6e, 0x18, 0x10, 0x20, 0x01, 0x28, 0x08, 0x52, 0x12, 0x61, 0x6c, 0x6c, 0x6f,
	0x77, 0x44, 0x6e, 0x73, 0x52, 0x65, 0x73, 0x6f, 0x6c, 0x75, 0x74, 0x69, 0x6f, 0x6e, 0x22, 0x72,
	0x0a, 0x14, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x49, 0x50, 0x52, 0x61, 0x6e, 0x67, 0x65, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x02, 0x69, 0x64, 0x12, 0x19, 0x0a, 0x08, 0x73, 0x74, 0x61, 0x72, 0x74, 0x5f,
	0x69, 0x70, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x73, 0x74, 0x61, 0x72, 0x74, 0x49,
	0x70, 0x12, 0x15, 0x0a, 0x06, 0x65, 0x6e, 0x64, 0x5f, 0x69, 0x70, 0x18, 0x0c, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x05, 0x65, 0x6e, 0x64, 0x49, 0x70, 0x12, 0x18, 0x0a, 0x07, 0x63, 0x6f, 0x6d, 0x6d,
	0x65, 0x6e, 0x74, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x63, 0x6f, 0x6d, 0x6d, 0x65,
	0x6e, 0x74, 0x22, 0x15, 0x0a, 0x13, 0x4c, 0x69, 0x73, 0x74, 0x4d, 0x61, 0x63, 0x68, 0x69, 0x6e,
	0x65, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x22, 0x4d, 0x0a, 0x14, 0x4c, 0x69, 0x73,
	0x74, 0x4d, 0x61, 0x63, 0x68, 0x69, 0x6e, 0x65, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x12, 0x35, 0x0a, 0x08, 0x6d, 0x61, 0x63, 0x68, 0x69, 0x6e, 0x65, 0x73, 0x18, 0x01, 0x20,
	0x03, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x6f, 0x70, 0x65, 0x6e, 0x68, 0x64, 0x63, 0x2e, 0x6e, 0x65,
	0x78, 0x75, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x4d, 0x61, 0x63, 0x68, 0x69, 0x6e, 0x65, 0x52, 0x08,
	0x6d, 0x61, 0x63, 0x68, 0x69, 0x6e, 0x65, 0x73, 0x22, 0x23, 0x0a, 0x11, 0x47, 0x65, 0x74, 0x4d,
	0x61, 0x63, 0x68, 0x69, 0x6e, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x0e, 0x0a,
	0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x22, 0xbd, 0x01,
	0x0a, 0x18, 0x43, 0x6f, 0x6d, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x4d, 0x61, 0x63, 0x68,
	0x69, 0x6e, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x1d, 0x0a, 0x0a, 0x65, 0x6e,
	0x61, 0x62, 0x6c, 0x65, 0x5f, 0x73, 0x73, 0x68, 0x18, 0x02, 0x20, 0x01, 0x28, 0x08, 0x52, 0x09,
	0x65, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x53, 0x73, 0x68, 0x12, 0x26, 0x0a, 0x0f, 0x73, 0x6b, 0x69,
	0x70, 0x5f, 0x62, 0x6d, 0x63, 0x5f, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x08, 0x52, 0x0d, 0x73, 0x6b, 0x69, 0x70, 0x42, 0x6d, 0x63, 0x43, 0x6f, 0x6e, 0x66, 0x69,
	0x67, 0x12, 0x27, 0x0a, 0x0f, 0x73, 0x6b, 0x69, 0x70, 0x5f, 0x6e, 0x65, 0x74, 0x77, 0x6f, 0x72,
	0x6b, 0x69, 0x6e, 0x67, 0x18, 0x04, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0e, 0x73, 0x6b, 0x69, 0x70,
	0x4e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x69, 0x6e, 0x67, 0x12, 0x21, 0x0a, 0x0c, 0x73, 0x6b,
	0x69, 0x70, 0x5f, 0x73, 0x74, 0x6f, 0x72, 0x61, 0x67, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x08,
	0x52, 0x0b, 0x73, 0x6b, 0x69, 0x70, 0x53, 0x74, 0x6f, 0x72, 0x61, 0x67, 0x65, 0x22, 0x41, 0x0a,
	0x15, 0x50, 0x6f, 0x77, 0x65, 0x72, 0x4f, 0x6e, 0x4d, 0x61, 0x63, 0x68, 0x69, 0x6e, 0x65, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x18, 0x0a, 0x07, 0x63, 0x6f, 0x6d, 0x6d, 0x65, 0x6e,
	0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x63, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74,
	0x22, 0x42, 0x0a, 0x16, 0x50, 0x6f, 0x77, 0x65, 0x72, 0x4f, 0x66, 0x66, 0x4d, 0x61, 0x63, 0x68,
	0x69, 0x6e, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x18, 0x0a, 0x07, 0x63, 0x6f,
	0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x63, 0x6f, 0x6d,
	0x6d, 0x65, 0x6e, 0x74, 0x22, 0x6f, 0x0a, 0x12, 0x41, 0x64, 0x64, 0x4d, 0x61, 0x63, 0x68, 0x69,
	0x6e, 0x65, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1d, 0x0a, 0x0a, 0x73, 0x63,
	0x6f, 0x70, 0x65, 0x5f, 0x75, 0x75, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09,
	0x73, 0x63, 0x6f, 0x70, 0x65, 0x55, 0x75, 0x69, 0x64, 0x12, 0x3a, 0x0a, 0x07, 0x66, 0x61, 0x63,
	0x74, 0x6f, 0x72, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x20, 0x2e, 0x6f, 0x70, 0x65,
	0x6e, 0x68, 0x64, 0x63, 0x2e, 0x6e, 0x65, 0x78, 0x75, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x4d, 0x61,
	0x63, 0x68, 0x69, 0x6e, 0x65, 0x2e, 0x46, 0x61, 0x63, 0x74, 0x6f, 0x72, 0x52, 0x07, 0x66, 0x61,
	0x63, 0x74, 0x6f, 0x72, 0x73, 0x22, 0x31, 0x0a, 0x13, 0x41, 0x64, 0x64, 0x4d, 0x61, 0x63, 0x68,
	0x69, 0x6e, 0x65, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x1a, 0x0a, 0x08,
	0x6d, 0x61, 0x63, 0x68, 0x69, 0x6e, 0x65, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x09, 0x52, 0x08,
	0x6d, 0x61, 0x63, 0x68, 0x69, 0x6e, 0x65, 0x73, 0x22, 0x13, 0x0a, 0x11, 0x4c, 0x69, 0x73, 0x74,
	0x53, 0x63, 0x6f, 0x70, 0x65, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x22, 0x45, 0x0a,
	0x12, 0x4c, 0x69, 0x73, 0x74, 0x53, 0x63, 0x6f, 0x70, 0x65, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x12, 0x2f, 0x0a, 0x06, 0x73, 0x63, 0x6f, 0x70, 0x65, 0x73, 0x18, 0x01, 0x20,
	0x03, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x6f, 0x70, 0x65, 0x6e, 0x68, 0x64, 0x63, 0x2e, 0x6e, 0x65,
	0x78, 0x75, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x63, 0x6f, 0x70, 0x65, 0x52, 0x06, 0x73, 0x63,
	0x6f, 0x70, 0x65, 0x73, 0x22, 0x28, 0x0a, 0x12, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x53, 0x63,
	0x6f, 0x70, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61,
	0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x22, 0x17,
	0x0a, 0x15, 0x4c, 0x69, 0x73, 0x74, 0x46, 0x61, 0x63, 0x69, 0x6c, 0x69, 0x74, 0x69, 0x65, 0x73,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x22, 0x54, 0x0a, 0x16, 0x4c, 0x69, 0x73, 0x74, 0x46,
	0x61, 0x63, 0x69, 0x6c, 0x69, 0x74, 0x69, 0x65, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x12, 0x3a, 0x0a, 0x0a, 0x66, 0x61, 0x63, 0x69, 0x6c, 0x69, 0x74, 0x69, 0x65, 0x73, 0x18,
	0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x6f, 0x70, 0x65, 0x6e, 0x68, 0x64, 0x63, 0x2e,
	0x6e, 0x65, 0x78, 0x75, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x46, 0x61, 0x63, 0x69, 0x6c, 0x69, 0x74,
	0x79, 0x52, 0x0a, 0x66, 0x61, 0x63, 0x69, 0x6c, 0x69, 0x74, 0x69, 0x65, 0x73, 0x22, 0x14, 0x0a,
	0x12, 0x47, 0x65, 0x74, 0x46, 0x61, 0x63, 0x69, 0x6c, 0x69, 0x74, 0x79, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x22, 0x17, 0x0a, 0x15, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x46, 0x61, 0x63,
	0x69, 0x6c, 0x69, 0x74, 0x79, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x22, 0x17, 0x0a, 0x15,
	0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x46, 0x61, 0x63, 0x69, 0x6c, 0x69, 0x74, 0x79, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x22, 0x17, 0x0a, 0x15, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x46,
	0x61, 0x63, 0x69, 0x6c, 0x69, 0x74, 0x79, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x22, 0x17,
	0x0a, 0x15, 0x45, 0x78, 0x70, 0x6f, 0x73, 0x65, 0x46, 0x61, 0x63, 0x69, 0x6c, 0x69, 0x74, 0x79,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x22, 0x19, 0x0a, 0x17, 0x41, 0x64, 0x64, 0x46, 0x61,
	0x63, 0x69, 0x6c, 0x69, 0x74, 0x79, 0x55, 0x6e, 0x69, 0x74, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x22, 0x14, 0x0a, 0x12, 0x4c, 0x69, 0x73, 0x74, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e,
	0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x22, 0x52, 0x0a, 0x13, 0x4c, 0x69, 0x73, 0x74,
	0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12,
	0x3b, 0x0a, 0x07, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b,
	0x32, 0x21, 0x2e, 0x6f, 0x70, 0x65, 0x6e, 0x68, 0x64, 0x63, 0x2e, 0x6e, 0x65, 0x78, 0x75, 0x73,
	0x2e, 0x76, 0x31, 0x2e, 0x46, 0x61, 0x63, 0x69, 0x6c, 0x69, 0x74, 0x79, 0x2e, 0x41, 0x63, 0x74,
	0x69, 0x6f, 0x6e, 0x52, 0x07, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x22, 0x12, 0x0a, 0x10,
	0x52, 0x75, 0x6e, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x22, 0x19, 0x0a, 0x17, 0x4c, 0x69, 0x73, 0x74, 0x41, 0x70, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x22, 0x5d, 0x0a, 0x18, 0x4c,
	0x69, 0x73, 0x74, 0x41, 0x70, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x41, 0x0a, 0x0c, 0x61, 0x70, 0x70, 0x6c, 0x69,
	0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1d, 0x2e,
	0x6f, 0x70, 0x65, 0x6e, 0x68, 0x64, 0x63, 0x2e, 0x6e, 0x65, 0x78, 0x75, 0x73, 0x2e, 0x76, 0x31,
	0x2e, 0x41, 0x70, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x0c, 0x61, 0x70,
	0x70, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x22, 0x17, 0x0a, 0x15, 0x47, 0x65,
	0x74, 0x41, 0x70, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x22, 0x15, 0x0a, 0x13, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x6c, 0x65, 0x61,
	0x73, 0x65, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x22, 0x59, 0x0a, 0x14, 0x4c, 0x69,
	0x73, 0x74, 0x52, 0x65, 0x6c, 0x65, 0x61, 0x73, 0x65, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x12, 0x41, 0x0a, 0x08, 0x72, 0x65, 0x6c, 0x65, 0x61, 0x73, 0x65, 0x73, 0x18, 0x01,
	0x20, 0x03, 0x28, 0x0b, 0x32, 0x25, 0x2e, 0x6f, 0x70, 0x65, 0x6e, 0x68, 0x64, 0x63, 0x2e, 0x6e,
	0x65, 0x78, 0x75, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x41, 0x70, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x2e, 0x52, 0x65, 0x6c, 0x65, 0x61, 0x73, 0x65, 0x52, 0x08, 0x72, 0x65, 0x6c,
	0x65, 0x61, 0x73, 0x65, 0x73, 0x22, 0x16, 0x0a, 0x14, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x52,
	0x65, 0x6c, 0x65, 0x61, 0x73, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x22, 0x16, 0x0a,
	0x14, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x52, 0x65, 0x6c, 0x65, 0x61, 0x73, 0x65, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x22, 0x16, 0x0a, 0x14, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x52,
	0x65, 0x6c, 0x65, 0x61, 0x73, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x22, 0x18, 0x0a,
	0x16, 0x52, 0x6f, 0x6c, 0x6c, 0x62, 0x61, 0x63, 0x6b, 0x52, 0x65, 0x6c, 0x65, 0x61, 0x73, 0x65,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x22, 0x13, 0x0a, 0x11, 0x4c, 0x69, 0x73, 0x74, 0x43,
	0x68, 0x61, 0x72, 0x74, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x22, 0x59, 0x0a, 0x12,
	0x4c, 0x69, 0x73, 0x74, 0x43, 0x68, 0x61, 0x72, 0x74, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x12, 0x43, 0x0a, 0x06, 0x63, 0x68, 0x61, 0x72, 0x74, 0x73, 0x18, 0x01, 0x20, 0x03,
	0x28, 0x0b, 0x32, 0x2b, 0x2e, 0x6f, 0x70, 0x65, 0x6e, 0x68, 0x64, 0x63, 0x2e, 0x6e, 0x65, 0x78,
	0x75, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x41, 0x70, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x2e, 0x52, 0x65, 0x6c, 0x65, 0x61, 0x73, 0x65, 0x2e, 0x43, 0x68, 0x61, 0x72, 0x74, 0x52,
	0x06, 0x63, 0x68, 0x61, 0x72, 0x74, 0x73, 0x22, 0x11, 0x0a, 0x0f, 0x47, 0x65, 0x74, 0x43, 0x68,
	0x61, 0x72, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x22, 0x19, 0x0a, 0x17, 0x47, 0x65,
	0x74, 0x43, 0x68, 0x61, 0x72, 0x74, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x32, 0xad, 0x1d, 0x0a, 0x05, 0x4e, 0x65, 0x78, 0x75, 0x73, 0x12,
	0x5e, 0x0a, 0x10, 0x47, 0x65, 0x74, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x75, 0x72, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x12, 0x29, 0x2e, 0x6f, 0x70, 0x65, 0x6e, 0x68, 0x64, 0x63, 0x2e, 0x6e, 0x65,
	0x78, 0x75, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67,
	0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1f,
	0x2e, 0x6f, 0x70, 0x65, 0x6e, 0x68, 0x64, 0x63, 0x2e, 0x6e, 0x65, 0x78, 0x75, 0x73, 0x2e, 0x76,
	0x31, 0x2e, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12,
	0x66, 0x0a, 0x0f, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x4e, 0x54, 0x50, 0x53, 0x65, 0x72, 0x76,
	0x65, 0x72, 0x12, 0x28, 0x2e, 0x6f, 0x70, 0x65, 0x6e, 0x68, 0x64, 0x63, 0x2e, 0x6e, 0x65, 0x78,
	0x75, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x4e, 0x54, 0x50, 0x53,
	0x65, 0x72, 0x76, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x29, 0x2e, 0x6f,
	0x70, 0x65, 0x6e, 0x68, 0x64, 0x63, 0x2e, 0x6e, 0x65, 0x78, 0x75, 0x73, 0x2e, 0x76, 0x31, 0x2e,
	0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x4e, 0x54,
	0x50, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x12, 0x7e, 0x0a, 0x17, 0x55, 0x70, 0x64, 0x61, 0x74,
	0x65, 0x50, 0x61, 0x63, 0x6b, 0x61, 0x67, 0x65, 0x52, 0x65, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x6f,
	0x72, 0x79, 0x12, 0x30, 0x2e, 0x6f, 0x70, 0x65, 0x6e, 0x68, 0x64, 0x63, 0x2e, 0x6e, 0x65, 0x78,
	0x75, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x50, 0x61, 0x63, 0x6b,
	0x61, 0x67, 0x65, 0x52, 0x65, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x6f, 0x72, 0x79, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x1a, 0x31, 0x2e, 0x6f, 0x70, 0x65, 0x6e, 0x68, 0x64, 0x63, 0x2e, 0x6e,
	0x65, 0x78, 0x75, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x75, 0x72,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x50, 0x61, 0x63, 0x6b, 0x61, 0x67, 0x65, 0x52, 0x65, 0x70,
	0x6f, 0x73, 0x69, 0x74, 0x6f, 0x72, 0x79, 0x12, 0x7d, 0x0a, 0x19, 0x55, 0x70, 0x64, 0x61, 0x74,
	0x65, 0x44, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x42, 0x6f, 0x6f, 0x74, 0x52, 0x65, 0x73, 0x6f,
	0x75, 0x72, 0x63, 0x65, 0x12, 0x32, 0x2e, 0x6f, 0x70, 0x65, 0x6e, 0x68, 0x64, 0x63, 0x2e, 0x6e,
	0x65, 0x78, 0x75, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x44, 0x65,
	0x66, 0x61, 0x75, 0x6c, 0x74, 0x42, 0x6f, 0x6f, 0x74, 0x52, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63,
	0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x2c, 0x2e, 0x6f, 0x70, 0x65, 0x6e, 0x68,
	0x64, 0x63, 0x2e, 0x6e, 0x65, 0x78, 0x75, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x6f, 0x6e, 0x66,
	0x69, 0x67, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x42, 0x6f, 0x6f, 0x74, 0x52, 0x65,
	0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x12, 0x57, 0x0a, 0x11, 0x53, 0x79, 0x6e, 0x63, 0x42, 0x6f,
	0x6f, 0x74, 0x52, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x73, 0x12, 0x2a, 0x2e, 0x6f, 0x70,
	0x65, 0x6e, 0x68, 0x64, 0x63, 0x2e, 0x6e, 0x65, 0x78, 0x75, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x53,
	0x79, 0x6e, 0x63, 0x42, 0x6f, 0x6f, 0x74, 0x52, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x73,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x12,
	0x5d, 0x0a, 0x0c, 0x4c, 0x69, 0x73, 0x74, 0x4e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x73, 0x12,
	0x25, 0x2e, 0x6f, 0x70, 0x65, 0x6e, 0x68, 0x64, 0x63, 0x2e, 0x6e, 0x65, 0x78, 0x75, 0x73, 0x2e,
	0x76, 0x31, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x4e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x73, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x26, 0x2e, 0x6f, 0x70, 0x65, 0x6e, 0x68, 0x64, 0x63,
	0x2e, 0x6e, 0x65, 0x78, 0x75, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x4e, 0x65,
	0x74, 0x77, 0x6f, 0x72, 0x6b, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x52,
	0x0a, 0x0d, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x4e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x12,
	0x26, 0x2e, 0x6f, 0x70, 0x65, 0x6e, 0x68, 0x64, 0x63, 0x2e, 0x6e, 0x65, 0x78, 0x75, 0x73, 0x2e,
	0x76, 0x31, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x4e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x19, 0x2e, 0x6f, 0x70, 0x65, 0x6e, 0x68, 0x64,
	0x63, 0x2e, 0x6e, 0x65, 0x78, 0x75, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x4e, 0x65, 0x74, 0x77, 0x6f,
	0x72, 0x6b, 0x12, 0x5a, 0x0a, 0x0d, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x49, 0x50, 0x52, 0x61,
	0x6e, 0x67, 0x65, 0x12, 0x26, 0x2e, 0x6f, 0x70, 0x65, 0x6e, 0x68, 0x64, 0x63, 0x2e, 0x6e, 0x65,
	0x78, 0x75, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x49, 0x50, 0x52,
	0x61, 0x6e, 0x67, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x21, 0x2e, 0x6f, 0x70,
	0x65, 0x6e, 0x68, 0x64, 0x63, 0x2e, 0x6e, 0x65, 0x78, 0x75, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x4e,
	0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x2e, 0x49, 0x50, 0x52, 0x61, 0x6e, 0x67, 0x65, 0x12, 0x4f,
	0x0a, 0x0d, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x4e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x12,
	0x26, 0x2e, 0x6f, 0x70, 0x65, 0x6e, 0x68, 0x64, 0x63, 0x2e, 0x6e, 0x65, 0x78, 0x75, 0x73, 0x2e,
	0x76, 0x31, 0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x4e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x12,
	0x4f, 0x0a, 0x0d, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x49, 0x50, 0x52, 0x61, 0x6e, 0x67, 0x65,
	0x12, 0x26, 0x2e, 0x6f, 0x70, 0x65, 0x6e, 0x68, 0x64, 0x63, 0x2e, 0x6e, 0x65, 0x78, 0x75, 0x73,
	0x2e, 0x76, 0x31, 0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x49, 0x50, 0x52, 0x61, 0x6e, 0x67,
	0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c,
	0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79,
	0x12, 0x57, 0x0a, 0x0c, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x46, 0x61, 0x62, 0x72, 0x69, 0x63,
	0x12, 0x25, 0x2e, 0x6f, 0x70, 0x65, 0x6e, 0x68, 0x64, 0x63, 0x2e, 0x6e, 0x65, 0x78, 0x75, 0x73,
	0x2e, 0x76, 0x31, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x46, 0x61, 0x62, 0x72, 0x69, 0x63,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x20, 0x2e, 0x6f, 0x70, 0x65, 0x6e, 0x68, 0x64,
	0x63, 0x2e, 0x6e, 0x65, 0x78, 0x75, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x4e, 0x65, 0x74, 0x77, 0x6f,
	0x72, 0x6b, 0x2e, 0x46, 0x61, 0x62, 0x72, 0x69, 0x63, 0x12, 0x51, 0x0a, 0x0a, 0x55, 0x70, 0x64,
	0x61, 0x74, 0x65, 0x56, 0x4c, 0x41, 0x4e, 0x12, 0x23, 0x2e, 0x6f, 0x70, 0x65, 0x6e, 0x68, 0x64,
	0x63, 0x2e, 0x6e, 0x65, 0x78, 0x75, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74,
	0x65, 0x56, 0x4c, 0x41, 0x4e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1e, 0x2e, 0x6f,
	0x70, 0x65, 0x6e, 0x68, 0x64, 0x63, 0x2e, 0x6e, 0x65, 0x78, 0x75, 0x73, 0x2e, 0x76, 0x31, 0x2e,
	0x4e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x2e, 0x56, 0x4c, 0x41, 0x4e, 0x12, 0x57, 0x0a, 0x0c,
	0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x53, 0x75, 0x62, 0x6e, 0x65, 0x74, 0x12, 0x25, 0x2e, 0x6f,
	0x70, 0x65, 0x6e, 0x68, 0x64, 0x63, 0x2e, 0x6e, 0x65, 0x78, 0x75, 0x73, 0x2e, 0x76, 0x31, 0x2e,
	0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x53, 0x75, 0x62, 0x6e, 0x65, 0x74, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x1a, 0x20, 0x2e, 0x6f, 0x70, 0x65, 0x6e, 0x68, 0x64, 0x63, 0x2e, 0x6e, 0x65,
	0x78, 0x75, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x4e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x2e, 0x53,
	0x75, 0x62, 0x6e, 0x65, 0x74, 0x12, 0x5a, 0x0a, 0x0d, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x49,
	0x50, 0x52, 0x61, 0x6e, 0x67, 0x65, 0x12, 0x26, 0x2e, 0x6f, 0x70, 0x65, 0x6e, 0x68, 0x64, 0x63,
	0x2e, 0x6e, 0x65, 0x78, 0x75, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65,
	0x49, 0x50, 0x52, 0x61, 0x6e, 0x67, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x21,
	0x2e, 0x6f, 0x70, 0x65, 0x6e, 0x68, 0x64, 0x63, 0x2e, 0x6e, 0x65, 0x78, 0x75, 0x73, 0x2e, 0x76,
	0x31, 0x2e, 0x4e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x2e, 0x49, 0x50, 0x52, 0x61, 0x6e, 0x67,
	0x65, 0x12, 0x5d, 0x0a, 0x0c, 0x4c, 0x69, 0x73, 0x74, 0x4d, 0x61, 0x63, 0x68, 0x69, 0x6e, 0x65,
	0x73, 0x12, 0x25, 0x2e, 0x6f, 0x70, 0x65, 0x6e, 0x68, 0x64, 0x63, 0x2e, 0x6e, 0x65, 0x78, 0x75,
	0x73, 0x2e, 0x76, 0x31, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x4d, 0x61, 0x63, 0x68, 0x69, 0x6e, 0x65,
	0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x26, 0x2e, 0x6f, 0x70, 0x65, 0x6e, 0x68,
	0x64, 0x63, 0x2e, 0x6e, 0x65, 0x78, 0x75, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x4c, 0x69, 0x73, 0x74,
	0x4d, 0x61, 0x63, 0x68, 0x69, 0x6e, 0x65, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x12, 0x4c, 0x0a, 0x0a, 0x47, 0x65, 0x74, 0x4d, 0x61, 0x63, 0x68, 0x69, 0x6e, 0x65, 0x12, 0x23,
	0x2e, 0x6f, 0x70, 0x65, 0x6e, 0x68, 0x64, 0x63, 0x2e, 0x6e, 0x65, 0x78, 0x75, 0x73, 0x2e, 0x76,
	0x31, 0x2e, 0x47, 0x65, 0x74, 0x4d, 0x61, 0x63, 0x68, 0x69, 0x6e, 0x65, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x1a, 0x19, 0x2e, 0x6f, 0x70, 0x65, 0x6e, 0x68, 0x64, 0x63, 0x2e, 0x6e, 0x65,
	0x78, 0x75, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x4d, 0x61, 0x63, 0x68, 0x69, 0x6e, 0x65, 0x12, 0x5a,
	0x0a, 0x11, 0x43, 0x6f, 0x6d, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x4d, 0x61, 0x63, 0x68,
	0x69, 0x6e, 0x65, 0x12, 0x2a, 0x2e, 0x6f, 0x70, 0x65, 0x6e, 0x68, 0x64, 0x63, 0x2e, 0x6e, 0x65,
	0x78, 0x75, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x6f, 0x6d, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f,
	0x6e, 0x4d, 0x61, 0x63, 0x68, 0x69, 0x6e, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a,
	0x19, 0x2e, 0x6f, 0x70, 0x65, 0x6e, 0x68, 0x64, 0x63, 0x2e, 0x6e, 0x65, 0x78, 0x75, 0x73, 0x2e,
	0x76, 0x31, 0x2e, 0x4d, 0x61, 0x63, 0x68, 0x69, 0x6e, 0x65, 0x12, 0x54, 0x0a, 0x0e, 0x50, 0x6f,
	0x77, 0x65, 0x72, 0x4f, 0x6e, 0x4d, 0x61, 0x63, 0x68, 0x69, 0x6e, 0x65, 0x12, 0x27, 0x2e, 0x6f,
	0x70, 0x65, 0x6e, 0x68, 0x64, 0x63, 0x2e, 0x6e, 0x65, 0x78, 0x75, 0x73, 0x2e, 0x76, 0x31, 0x2e,
	0x50, 0x6f, 0x77, 0x65, 0x72, 0x4f, 0x6e, 0x4d, 0x61, 0x63, 0x68, 0x69, 0x6e, 0x65, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x19, 0x2e, 0x6f, 0x70, 0x65, 0x6e, 0x68, 0x64, 0x63, 0x2e,
	0x6e, 0x65, 0x78, 0x75, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x4d, 0x61, 0x63, 0x68, 0x69, 0x6e, 0x65,
	0x12, 0x56, 0x0a, 0x0f, 0x50, 0x6f, 0x77, 0x65, 0x72, 0x4f, 0x66, 0x66, 0x4d, 0x61, 0x63, 0x68,
	0x69, 0x6e, 0x65, 0x12, 0x28, 0x2e, 0x6f, 0x70, 0x65, 0x6e, 0x68, 0x64, 0x63, 0x2e, 0x6e, 0x65,
	0x78, 0x75, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x50, 0x6f, 0x77, 0x65, 0x72, 0x4f, 0x66, 0x66, 0x4d,
	0x61, 0x63, 0x68, 0x69, 0x6e, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x19, 0x2e,
	0x6f, 0x70, 0x65, 0x6e, 0x68, 0x64, 0x63, 0x2e, 0x6e, 0x65, 0x78, 0x75, 0x73, 0x2e, 0x76, 0x31,
	0x2e, 0x4d, 0x61, 0x63, 0x68, 0x69, 0x6e, 0x65, 0x12, 0x5a, 0x0a, 0x0b, 0x41, 0x64, 0x64, 0x4d,
	0x61, 0x63, 0x68, 0x69, 0x6e, 0x65, 0x73, 0x12, 0x24, 0x2e, 0x6f, 0x70, 0x65, 0x6e, 0x68, 0x64,
	0x63, 0x2e, 0x6e, 0x65, 0x78, 0x75, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x41, 0x64, 0x64, 0x4d, 0x61,
	0x63, 0x68, 0x69, 0x6e, 0x65, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x25, 0x2e,
	0x6f, 0x70, 0x65, 0x6e, 0x68, 0x64, 0x63, 0x2e, 0x6e, 0x65, 0x78, 0x75, 0x73, 0x2e, 0x76, 0x31,
	0x2e, 0x41, 0x64, 0x64, 0x4d, 0x61, 0x63, 0x68, 0x69, 0x6e, 0x65, 0x73, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x12, 0x57, 0x0a, 0x0a, 0x4c, 0x69, 0x73, 0x74, 0x53, 0x63, 0x6f, 0x70,
	0x65, 0x73, 0x12, 0x23, 0x2e, 0x6f, 0x70, 0x65, 0x6e, 0x68, 0x64, 0x63, 0x2e, 0x6e, 0x65, 0x78,
	0x75, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x53, 0x63, 0x6f, 0x70, 0x65, 0x73,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x24, 0x2e, 0x6f, 0x70, 0x65, 0x6e, 0x68, 0x64,
	0x63, 0x2e, 0x6e, 0x65, 0x78, 0x75, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x53,
	0x63, 0x6f, 0x70, 0x65, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x4c, 0x0a,
	0x0b, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x53, 0x63, 0x6f, 0x70, 0x65, 0x12, 0x24, 0x2e, 0x6f,
	0x70, 0x65, 0x6e, 0x68, 0x64, 0x63, 0x2e, 0x6e, 0x65, 0x78, 0x75, 0x73, 0x2e, 0x76, 0x31, 0x2e,
	0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x53, 0x63, 0x6f, 0x70, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x1a, 0x17, 0x2e, 0x6f, 0x70, 0x65, 0x6e, 0x68, 0x64, 0x63, 0x2e, 0x6e, 0x65, 0x78,
	0x75, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x63, 0x6f, 0x70, 0x65, 0x12, 0x63, 0x0a, 0x0e, 0x4c,
	0x69, 0x73, 0x74, 0x46, 0x61, 0x63, 0x69, 0x6c, 0x69, 0x74, 0x69, 0x65, 0x73, 0x12, 0x27, 0x2e,
	0x6f, 0x70, 0x65, 0x6e, 0x68, 0x64, 0x63, 0x2e, 0x6e, 0x65, 0x78, 0x75, 0x73, 0x2e, 0x76, 0x31,
	0x2e, 0x4c, 0x69, 0x73, 0x74, 0x46, 0x61, 0x63, 0x69, 0x6c, 0x69, 0x74, 0x69, 0x65, 0x73, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x28, 0x2e, 0x6f, 0x70, 0x65, 0x6e, 0x68, 0x64, 0x63,
	0x2e, 0x6e, 0x65, 0x78, 0x75, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x46, 0x61,
	0x63, 0x69, 0x6c, 0x69, 0x74, 0x69, 0x65, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x12, 0x4f, 0x0a, 0x0b, 0x47, 0x65, 0x74, 0x46, 0x61, 0x63, 0x69, 0x6c, 0x69, 0x74, 0x79, 0x12,
	0x24, 0x2e, 0x6f, 0x70, 0x65, 0x6e, 0x68, 0x64, 0x63, 0x2e, 0x6e, 0x65, 0x78, 0x75, 0x73, 0x2e,
	0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x46, 0x61, 0x63, 0x69, 0x6c, 0x69, 0x74, 0x79, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1a, 0x2e, 0x6f, 0x70, 0x65, 0x6e, 0x68, 0x64, 0x63, 0x2e,
	0x6e, 0x65, 0x78, 0x75, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x46, 0x61, 0x63, 0x69, 0x6c, 0x69, 0x74,
	0x79, 0x12, 0x55, 0x0a, 0x0e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x46, 0x61, 0x63, 0x69, 0x6c,
	0x69, 0x74, 0x79, 0x12, 0x27, 0x2e, 0x6f, 0x70, 0x65, 0x6e, 0x68, 0x64, 0x63, 0x2e, 0x6e, 0x65,
	0x78, 0x75, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x46, 0x61, 0x63,
	0x69, 0x6c, 0x69, 0x74, 0x79, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1a, 0x2e, 0x6f,
	0x70, 0x65, 0x6e, 0x68, 0x64, 0x63, 0x2e, 0x6e, 0x65, 0x78, 0x75, 0x73, 0x2e, 0x76, 0x31, 0x2e,
	0x46, 0x61, 0x63, 0x69, 0x6c, 0x69, 0x74, 0x79, 0x12, 0x55, 0x0a, 0x0e, 0x55, 0x70, 0x64, 0x61,
	0x74, 0x65, 0x46, 0x61, 0x63, 0x69, 0x6c, 0x69, 0x74, 0x79, 0x12, 0x27, 0x2e, 0x6f, 0x70, 0x65,
	0x6e, 0x68, 0x64, 0x63, 0x2e, 0x6e, 0x65, 0x78, 0x75, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x55, 0x70,
	0x64, 0x61, 0x74, 0x65, 0x46, 0x61, 0x63, 0x69, 0x6c, 0x69, 0x74, 0x79, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x1a, 0x1a, 0x2e, 0x6f, 0x70, 0x65, 0x6e, 0x68, 0x64, 0x63, 0x2e, 0x6e, 0x65,
	0x78, 0x75, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x46, 0x61, 0x63, 0x69, 0x6c, 0x69, 0x74, 0x79, 0x12,
	0x51, 0x0a, 0x0e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x46, 0x61, 0x63, 0x69, 0x6c, 0x69, 0x74,
	0x79, 0x12, 0x27, 0x2e, 0x6f, 0x70, 0x65, 0x6e, 0x68, 0x64, 0x63, 0x2e, 0x6e, 0x65, 0x78, 0x75,
	0x73, 0x2e, 0x76, 0x31, 0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x46, 0x61, 0x63, 0x69, 0x6c,
	0x69, 0x74, 0x79, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x16, 0x2e, 0x67, 0x6f, 0x6f,
	0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70,
	0x74, 0x79, 0x12, 0x51, 0x0a, 0x0e, 0x45, 0x78, 0x70, 0x6f, 0x73, 0x65, 0x46, 0x61, 0x63, 0x69,
	0x6c, 0x69, 0x74, 0x79, 0x12, 0x27, 0x2e, 0x6f, 0x70, 0x65, 0x6e, 0x68, 0x64, 0x63, 0x2e, 0x6e,
	0x65, 0x78, 0x75, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x45, 0x78, 0x70, 0x6f, 0x73, 0x65, 0x46, 0x61,
	0x63, 0x69, 0x6c, 0x69, 0x74, 0x79, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x16, 0x2e,
	0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e,
	0x45, 0x6d, 0x70, 0x74, 0x79, 0x12, 0x55, 0x0a, 0x10, 0x41, 0x64, 0x64, 0x46, 0x61, 0x63, 0x69,
	0x6c, 0x69, 0x74, 0x79, 0x55, 0x6e, 0x69, 0x74, 0x73, 0x12, 0x29, 0x2e, 0x6f, 0x70, 0x65, 0x6e,
	0x68, 0x64, 0x63, 0x2e, 0x6e, 0x65, 0x78, 0x75, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x41, 0x64, 0x64,
	0x46, 0x61, 0x63, 0x69, 0x6c, 0x69, 0x74, 0x79, 0x55, 0x6e, 0x69, 0x74, 0x73, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x1a, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x12, 0x5a, 0x0a, 0x0b,
	0x4c, 0x69, 0x73, 0x74, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x12, 0x24, 0x2e, 0x6f, 0x70,
	0x65, 0x6e, 0x68, 0x64, 0x63, 0x2e, 0x6e, 0x65, 0x78, 0x75, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x4c,
	0x69, 0x73, 0x74, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x1a, 0x25, 0x2e, 0x6f, 0x70, 0x65, 0x6e, 0x68, 0x64, 0x63, 0x2e, 0x6e, 0x65, 0x78, 0x75,
	0x73, 0x2e, 0x76, 0x31, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x73,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x47, 0x0a, 0x09, 0x52, 0x75, 0x6e, 0x41,
	0x63, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x22, 0x2e, 0x6f, 0x70, 0x65, 0x6e, 0x68, 0x64, 0x63, 0x2e,
	0x6e, 0x65, 0x78, 0x75, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x52, 0x75, 0x6e, 0x41, 0x63, 0x74, 0x69,
	0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67,
	0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74,
	0x79, 0x12, 0x69, 0x0a, 0x10, 0x4c, 0x69, 0x73, 0x74, 0x41, 0x70, 0x70, 0x6c, 0x69, 0x63, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x73, 0x12, 0x29, 0x2e, 0x6f, 0x70, 0x65, 0x6e, 0x68, 0x64, 0x63, 0x2e,
	0x6e, 0x65, 0x78, 0x75, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x41, 0x70, 0x70,
	0x6c, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x1a, 0x2a, 0x2e, 0x6f, 0x70, 0x65, 0x6e, 0x68, 0x64, 0x63, 0x2e, 0x6e, 0x65, 0x78, 0x75, 0x73,
	0x2e, 0x76, 0x31, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x41, 0x70, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x58, 0x0a, 0x0e,
	0x47, 0x65, 0x74, 0x41, 0x70, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x27,
	0x2e, 0x6f, 0x70, 0x65, 0x6e, 0x68, 0x64, 0x63, 0x2e, 0x6e, 0x65, 0x78, 0x75, 0x73, 0x2e, 0x76,
	0x31, 0x2e, 0x47, 0x65, 0x74, 0x41, 0x70, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1d, 0x2e, 0x6f, 0x70, 0x65, 0x6e, 0x68, 0x64,
	0x63, 0x2e, 0x6e, 0x65, 0x78, 0x75, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x41, 0x70, 0x70, 0x6c, 0x69,
	0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x5d, 0x0a, 0x0c, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65,
	0x6c, 0x65, 0x61, 0x73, 0x65, 0x73, 0x12, 0x25, 0x2e, 0x6f, 0x70, 0x65, 0x6e, 0x68, 0x64, 0x63,
	0x2e, 0x6e, 0x65, 0x78, 0x75, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65,
	0x6c, 0x65, 0x61, 0x73, 0x65, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x26, 0x2e,
	0x6f, 0x70, 0x65, 0x6e, 0x68, 0x64, 0x63, 0x2e, 0x6e, 0x65, 0x78, 0x75, 0x73, 0x2e, 0x76, 0x31,
	0x2e, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x6c, 0x65, 0x61, 0x73, 0x65, 0x73, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x5e, 0x0a, 0x0d, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x52,
	0x65, 0x6c, 0x65, 0x61, 0x73, 0x65, 0x12, 0x26, 0x2e, 0x6f, 0x70, 0x65, 0x6e, 0x68, 0x64, 0x63,
	0x2e, 0x6e, 0x65, 0x78, 0x75, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65,
	0x52, 0x65, 0x6c, 0x65, 0x61, 0x73, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x25,
	0x2e, 0x6f, 0x70, 0x65, 0x6e, 0x68, 0x64, 0x63, 0x2e, 0x6e, 0x65, 0x78, 0x75, 0x73, 0x2e, 0x76,
	0x31, 0x2e, 0x41, 0x70, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x52, 0x65,
	0x6c, 0x65, 0x61, 0x73, 0x65, 0x12, 0x5e, 0x0a, 0x0d, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x52,
	0x65, 0x6c, 0x65, 0x61, 0x73, 0x65, 0x12, 0x26, 0x2e, 0x6f, 0x70, 0x65, 0x6e, 0x68, 0x64, 0x63,
	0x2e, 0x6e, 0x65, 0x78, 0x75, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65,
	0x52, 0x65, 0x6c, 0x65, 0x61, 0x73, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x25,
	0x2e, 0x6f, 0x70, 0x65, 0x6e, 0x68, 0x64, 0x63, 0x2e, 0x6e, 0x65, 0x78, 0x75, 0x73, 0x2e, 0x76,
	0x31, 0x2e, 0x41, 0x70, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x52, 0x65,
	0x6c, 0x65, 0x61, 0x73, 0x65, 0x12, 0x4f, 0x0a, 0x0d, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x52,
	0x65, 0x6c, 0x65, 0x61, 0x73, 0x65, 0x12, 0x26, 0x2e, 0x6f, 0x70, 0x65, 0x6e, 0x68, 0x64, 0x63,
	0x2e, 0x6e, 0x65, 0x78, 0x75, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65,
	0x52, 0x65, 0x6c, 0x65, 0x61, 0x73, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x16,
	0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66,
	0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x12, 0x53, 0x0a, 0x0f, 0x52, 0x6f, 0x6c, 0x6c, 0x62, 0x61,
	0x63, 0x6b, 0x52, 0x65, 0x6c, 0x65, 0x61, 0x73, 0x65, 0x12, 0x28, 0x2e, 0x6f, 0x70, 0x65, 0x6e,
	0x68, 0x64, 0x63, 0x2e, 0x6e, 0x65, 0x78, 0x75, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x52, 0x6f, 0x6c,
	0x6c, 0x62, 0x61, 0x63, 0x6b, 0x52, 0x65, 0x6c, 0x65, 0x61, 0x73, 0x65, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x1a, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x12, 0x57, 0x0a, 0x0a, 0x4c,
	0x69, 0x73, 0x74, 0x43, 0x68, 0x61, 0x72, 0x74, 0x73, 0x12, 0x23, 0x2e, 0x6f, 0x70, 0x65, 0x6e,
	0x68, 0x64, 0x63, 0x2e, 0x6e, 0x65, 0x78, 0x75, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x4c, 0x69, 0x73,
	0x74, 0x43, 0x68, 0x61, 0x72, 0x74, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x24,
	0x2e, 0x6f, 0x70, 0x65, 0x6e, 0x68, 0x64, 0x63, 0x2e, 0x6e, 0x65, 0x78, 0x75, 0x73, 0x2e, 0x76,
	0x31, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x43, 0x68, 0x61, 0x72, 0x74, 0x73, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x12, 0x5a, 0x0a, 0x08, 0x47, 0x65, 0x74, 0x43, 0x68, 0x61, 0x72, 0x74,
	0x12, 0x21, 0x2e, 0x6f, 0x70, 0x65, 0x6e, 0x68, 0x64, 0x63, 0x2e, 0x6e, 0x65, 0x78, 0x75, 0x73,
	0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x43, 0x68, 0x61, 0x72, 0x74, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x1a, 0x2b, 0x2e, 0x6f, 0x70, 0x65, 0x6e, 0x68, 0x64, 0x63, 0x2e, 0x6e, 0x65,
	0x78, 0x75, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x41, 0x70, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x2e, 0x52, 0x65, 0x6c, 0x65, 0x61, 0x73, 0x65, 0x2e, 0x43, 0x68, 0x61, 0x72, 0x74,
	0x12, 0x73, 0x0a, 0x10, 0x47, 0x65, 0x74, 0x43, 0x68, 0x61, 0x72, 0x74, 0x4d, 0x65, 0x74, 0x61,
	0x64, 0x61, 0x74, 0x61, 0x12, 0x29, 0x2e, 0x6f, 0x70, 0x65, 0x6e, 0x68, 0x64, 0x63, 0x2e, 0x6e,
	0x65, 0x78, 0x75, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x43, 0x68, 0x61, 0x72, 0x74,
	0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a,
	0x34, 0x2e, 0x6f, 0x70, 0x65, 0x6e, 0x68, 0x64, 0x63, 0x2e, 0x6e, 0x65, 0x78, 0x75, 0x73, 0x2e,
	0x76, 0x31, 0x2e, 0x41, 0x70, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x52,
	0x65, 0x6c, 0x65, 0x61, 0x73, 0x65, 0x2e, 0x43, 0x68, 0x61, 0x72, 0x74, 0x2e, 0x4d, 0x65, 0x74,
	0x61, 0x64, 0x61, 0x74, 0x61, 0x42, 0x2c, 0x5a, 0x2a, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e,
	0x63, 0x6f, 0x6d, 0x2f, 0x6f, 0x70, 0x65, 0x6e, 0x68, 0x64, 0x63, 0x2f, 0x6f, 0x70, 0x65, 0x6e,
	0x68, 0x64, 0x63, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x6e, 0x65, 0x78, 0x75, 0x73, 0x2f, 0x76, 0x31,
	0x3b, 0x70, 0x62, 0x62, 0x08, 0x65, 0x64, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x70, 0xe8, 0x07,
})

var file_api_nexus_v1_nexus_proto_msgTypes = make([]protoimpl.MessageInfo, 77)
var file_api_nexus_v1_nexus_proto_goTypes = []any{
	(*Configuration)(nil),                      // 0: openhdc.nexus.v1.Configuration
	(*Network)(nil),                            // 1: openhdc.nexus.v1.Network
	(*Machine)(nil),                            // 2: openhdc.nexus.v1.Machine
	(*Scope)(nil),                              // 3: openhdc.nexus.v1.Scope
	(*Facility)(nil),                           // 4: openhdc.nexus.v1.Facility
	(*Application)(nil),                        // 5: openhdc.nexus.v1.Application
	(*GetConfigurationRequest)(nil),            // 6: openhdc.nexus.v1.GetConfigurationRequest
	(*UpdateNTPServerRequest)(nil),             // 7: openhdc.nexus.v1.UpdateNTPServerRequest
	(*UpdatePackageRepositoryRequest)(nil),     // 8: openhdc.nexus.v1.UpdatePackageRepositoryRequest
	(*UpdateDefaultBootResourceRequest)(nil),   // 9: openhdc.nexus.v1.UpdateDefaultBootResourceRequest
	(*SyncBootResourcesRequest)(nil),           // 10: openhdc.nexus.v1.SyncBootResourcesRequest
	(*ListNetworksRequest)(nil),                // 11: openhdc.nexus.v1.ListNetworksRequest
	(*ListNetworksResponse)(nil),               // 12: openhdc.nexus.v1.ListNetworksResponse
	(*CreateNetworkRequest)(nil),               // 13: openhdc.nexus.v1.CreateNetworkRequest
	(*CreateIPRangeRequest)(nil),               // 14: openhdc.nexus.v1.CreateIPRangeRequest
	(*DeleteNetworkRequest)(nil),               // 15: openhdc.nexus.v1.DeleteNetworkRequest
	(*DeleteIPRangeRequest)(nil),               // 16: openhdc.nexus.v1.DeleteIPRangeRequest
	(*UpdateFabricRequest)(nil),                // 17: openhdc.nexus.v1.UpdateFabricRequest
	(*UpdateVLANRequest)(nil),                  // 18: openhdc.nexus.v1.UpdateVLANRequest
	(*UpdateSubnetRequest)(nil),                // 19: openhdc.nexus.v1.UpdateSubnetRequest
	(*UpdateIPRangeRequest)(nil),               // 20: openhdc.nexus.v1.UpdateIPRangeRequest
	(*ListMachinesRequest)(nil),                // 21: openhdc.nexus.v1.ListMachinesRequest
	(*ListMachinesResponse)(nil),               // 22: openhdc.nexus.v1.ListMachinesResponse
	(*GetMachineRequest)(nil),                  // 23: openhdc.nexus.v1.GetMachineRequest
	(*CommissionMachineRequest)(nil),           // 24: openhdc.nexus.v1.CommissionMachineRequest
	(*PowerOnMachineRequest)(nil),              // 25: openhdc.nexus.v1.PowerOnMachineRequest
	(*PowerOffMachineRequest)(nil),             // 26: openhdc.nexus.v1.PowerOffMachineRequest
	(*AddMachinesRequest)(nil),                 // 27: openhdc.nexus.v1.AddMachinesRequest
	(*AddMachinesResponse)(nil),                // 28: openhdc.nexus.v1.AddMachinesResponse
	(*ListScopesRequest)(nil),                  // 29: openhdc.nexus.v1.ListScopesRequest
	(*ListScopesResponse)(nil),                 // 30: openhdc.nexus.v1.ListScopesResponse
	(*CreateScopeRequest)(nil),                 // 31: openhdc.nexus.v1.CreateScopeRequest
	(*ListFacilitiesRequest)(nil),              // 32: openhdc.nexus.v1.ListFacilitiesRequest
	(*ListFacilitiesResponse)(nil),             // 33: openhdc.nexus.v1.ListFacilitiesResponse
	(*GetFacilityRequest)(nil),                 // 34: openhdc.nexus.v1.GetFacilityRequest
	(*CreateFacilityRequest)(nil),              // 35: openhdc.nexus.v1.CreateFacilityRequest
	(*UpdateFacilityRequest)(nil),              // 36: openhdc.nexus.v1.UpdateFacilityRequest
	(*DeleteFacilityRequest)(nil),              // 37: openhdc.nexus.v1.DeleteFacilityRequest
	(*ExposeFacilityRequest)(nil),              // 38: openhdc.nexus.v1.ExposeFacilityRequest
	(*AddFacilityUnitsRequest)(nil),            // 39: openhdc.nexus.v1.AddFacilityUnitsRequest
	(*ListActionsRequest)(nil),                 // 40: openhdc.nexus.v1.ListActionsRequest
	(*ListActionsResponse)(nil),                // 41: openhdc.nexus.v1.ListActionsResponse
	(*RunActionRequest)(nil),                   // 42: openhdc.nexus.v1.RunActionRequest
	(*ListApplicationsRequest)(nil),            // 43: openhdc.nexus.v1.ListApplicationsRequest
	(*ListApplicationsResponse)(nil),           // 44: openhdc.nexus.v1.ListApplicationsResponse
	(*GetApplicationRequest)(nil),              // 45: openhdc.nexus.v1.GetApplicationRequest
	(*ListReleasesRequest)(nil),                // 46: openhdc.nexus.v1.ListReleasesRequest
	(*ListReleasesResponse)(nil),               // 47: openhdc.nexus.v1.ListReleasesResponse
	(*CreateReleaseRequest)(nil),               // 48: openhdc.nexus.v1.CreateReleaseRequest
	(*UpdateReleaseRequest)(nil),               // 49: openhdc.nexus.v1.UpdateReleaseRequest
	(*DeleteReleaseRequest)(nil),               // 50: openhdc.nexus.v1.DeleteReleaseRequest
	(*RollbackReleaseRequest)(nil),             // 51: openhdc.nexus.v1.RollbackReleaseRequest
	(*ListChartsRequest)(nil),                  // 52: openhdc.nexus.v1.ListChartsRequest
	(*ListChartsResponse)(nil),                 // 53: openhdc.nexus.v1.ListChartsResponse
	(*GetChartRequest)(nil),                    // 54: openhdc.nexus.v1.GetChartRequest
	(*GetChartMetadataRequest)(nil),            // 55: openhdc.nexus.v1.GetChartMetadataRequest
	(*Configuration_NTPServer)(nil),            // 56: openhdc.nexus.v1.Configuration.NTPServer
	(*Configuration_PackageRepository)(nil),    // 57: openhdc.nexus.v1.Configuration.PackageRepository
	(*Configuration_BootResource)(nil),         // 58: openhdc.nexus.v1.Configuration.BootResource
	(*Network_IPAddress)(nil),                  // 59: openhdc.nexus.v1.Network.IPAddress
	(*Network_IPRange)(nil),                    // 60: openhdc.nexus.v1.Network.IPRange
	(*Network_Statistics)(nil),                 // 61: openhdc.nexus.v1.Network.Statistics
	(*Network_Fabric)(nil),                     // 62: openhdc.nexus.v1.Network.Fabric
	(*Network_VLAN)(nil),                       // 63: openhdc.nexus.v1.Network.VLAN
	(*Network_Subnet)(nil),                     // 64: openhdc.nexus.v1.Network.Subnet
	(*Machine_Placement)(nil),                  // 65: openhdc.nexus.v1.Machine.Placement
	(*Machine_Constraint)(nil),                 // 66: openhdc.nexus.v1.Machine.Constraint
	(*Machine_Factor)(nil),                     // 67: openhdc.nexus.v1.Machine.Factor
	(*Machine_NUMANode)(nil),                   // 68: openhdc.nexus.v1.Machine.NUMANode
	(*Machine_BlockDevice)(nil),                // 69: openhdc.nexus.v1.Machine.BlockDevice
	(*Machine_NetworkInterface)(nil),           // 70: openhdc.nexus.v1.Machine.NetworkInterface
	nil,                                        // 71: openhdc.nexus.v1.Machine.WorkloadAnnotationsEntry
	nil,                                        // 72: openhdc.nexus.v1.Machine.HardwareInformationEntry
	(*Facility_Action)(nil),                    // 73: openhdc.nexus.v1.Facility.Action
	(*Application_Release)(nil),                // 74: openhdc.nexus.v1.Application.Release
	(*Application_Release_Chart)(nil),          // 75: openhdc.nexus.v1.Application.Release.Chart
	(*Application_Release_Chart_Metadata)(nil), // 76: openhdc.nexus.v1.Application.Release.Chart.Metadata
	(*emptypb.Empty)(nil),                      // 77: google.protobuf.Empty
}
var file_api_nexus_v1_nexus_proto_depIdxs = []int32{
	56, // 0: openhdc.nexus.v1.Configuration.ntp_server:type_name -> openhdc.nexus.v1.Configuration.NTPServer
	57, // 1: openhdc.nexus.v1.Configuration.package_repositories:type_name -> openhdc.nexus.v1.Configuration.PackageRepository
	58, // 2: openhdc.nexus.v1.Configuration.boot_resources:type_name -> openhdc.nexus.v1.Configuration.BootResource
	62, // 3: openhdc.nexus.v1.Network.fabric:type_name -> openhdc.nexus.v1.Network.Fabric
	63, // 4: openhdc.nexus.v1.Network.vlan:type_name -> openhdc.nexus.v1.Network.VLAN
	64, // 5: openhdc.nexus.v1.Network.subnet:type_name -> openhdc.nexus.v1.Network.Subnet
	71, // 6: openhdc.nexus.v1.Machine.workload_annotations:type_name -> openhdc.nexus.v1.Machine.WorkloadAnnotationsEntry
	72, // 7: openhdc.nexus.v1.Machine.hardware_information:type_name -> openhdc.nexus.v1.Machine.HardwareInformationEntry
	68, // 8: openhdc.nexus.v1.Machine.numa_nodes:type_name -> openhdc.nexus.v1.Machine.NUMANode
	69, // 9: openhdc.nexus.v1.Machine.block_devices:type_name -> openhdc.nexus.v1.Machine.BlockDevice
	70, // 10: openhdc.nexus.v1.Machine.network_interfaces:type_name -> openhdc.nexus.v1.Machine.NetworkInterface
	1,  // 11: openhdc.nexus.v1.ListNetworksResponse.networks:type_name -> openhdc.nexus.v1.Network
	2,  // 12: openhdc.nexus.v1.ListMachinesResponse.machines:type_name -> openhdc.nexus.v1.Machine
	67, // 13: openhdc.nexus.v1.AddMachinesRequest.factors:type_name -> openhdc.nexus.v1.Machine.Factor
	3,  // 14: openhdc.nexus.v1.ListScopesResponse.scopes:type_name -> openhdc.nexus.v1.Scope
	4,  // 15: openhdc.nexus.v1.ListFacilitiesResponse.facilities:type_name -> openhdc.nexus.v1.Facility
	73, // 16: openhdc.nexus.v1.ListActionsResponse.actions:type_name -> openhdc.nexus.v1.Facility.Action
	5,  // 17: openhdc.nexus.v1.ListApplicationsResponse.applications:type_name -> openhdc.nexus.v1.Application
	74, // 18: openhdc.nexus.v1.ListReleasesResponse.releases:type_name -> openhdc.nexus.v1.Application.Release
	75, // 19: openhdc.nexus.v1.ListChartsResponse.charts:type_name -> openhdc.nexus.v1.Application.Release.Chart
	59, // 20: openhdc.nexus.v1.Network.Subnet.ip_addresses:type_name -> openhdc.nexus.v1.Network.IPAddress
	60, // 21: openhdc.nexus.v1.Network.Subnet.ip_ranges:type_name -> openhdc.nexus.v1.Network.IPRange
	61, // 22: openhdc.nexus.v1.Network.Subnet.statistics:type_name -> openhdc.nexus.v1.Network.Statistics
	65, // 23: openhdc.nexus.v1.Machine.Factor.placement:type_name -> openhdc.nexus.v1.Machine.Placement
	66, // 24: openhdc.nexus.v1.Machine.Factor.constraint:type_name -> openhdc.nexus.v1.Machine.Constraint
	6,  // 25: openhdc.nexus.v1.Nexus.GetConfiguration:input_type -> openhdc.nexus.v1.GetConfigurationRequest
	7,  // 26: openhdc.nexus.v1.Nexus.UpdateNTPServer:input_type -> openhdc.nexus.v1.UpdateNTPServerRequest
	8,  // 27: openhdc.nexus.v1.Nexus.UpdatePackageRepository:input_type -> openhdc.nexus.v1.UpdatePackageRepositoryRequest
	9,  // 28: openhdc.nexus.v1.Nexus.UpdateDefaultBootResource:input_type -> openhdc.nexus.v1.UpdateDefaultBootResourceRequest
	10, // 29: openhdc.nexus.v1.Nexus.SyncBootResources:input_type -> openhdc.nexus.v1.SyncBootResourcesRequest
	11, // 30: openhdc.nexus.v1.Nexus.ListNetworks:input_type -> openhdc.nexus.v1.ListNetworksRequest
	13, // 31: openhdc.nexus.v1.Nexus.CreateNetwork:input_type -> openhdc.nexus.v1.CreateNetworkRequest
	14, // 32: openhdc.nexus.v1.Nexus.CreateIPRange:input_type -> openhdc.nexus.v1.CreateIPRangeRequest
	15, // 33: openhdc.nexus.v1.Nexus.DeleteNetwork:input_type -> openhdc.nexus.v1.DeleteNetworkRequest
	16, // 34: openhdc.nexus.v1.Nexus.DeleteIPRange:input_type -> openhdc.nexus.v1.DeleteIPRangeRequest
	17, // 35: openhdc.nexus.v1.Nexus.UpdateFabric:input_type -> openhdc.nexus.v1.UpdateFabricRequest
	18, // 36: openhdc.nexus.v1.Nexus.UpdateVLAN:input_type -> openhdc.nexus.v1.UpdateVLANRequest
	19, // 37: openhdc.nexus.v1.Nexus.UpdateSubnet:input_type -> openhdc.nexus.v1.UpdateSubnetRequest
	20, // 38: openhdc.nexus.v1.Nexus.UpdateIPRange:input_type -> openhdc.nexus.v1.UpdateIPRangeRequest
	21, // 39: openhdc.nexus.v1.Nexus.ListMachines:input_type -> openhdc.nexus.v1.ListMachinesRequest
	23, // 40: openhdc.nexus.v1.Nexus.GetMachine:input_type -> openhdc.nexus.v1.GetMachineRequest
	24, // 41: openhdc.nexus.v1.Nexus.CommissionMachine:input_type -> openhdc.nexus.v1.CommissionMachineRequest
	25, // 42: openhdc.nexus.v1.Nexus.PowerOnMachine:input_type -> openhdc.nexus.v1.PowerOnMachineRequest
	26, // 43: openhdc.nexus.v1.Nexus.PowerOffMachine:input_type -> openhdc.nexus.v1.PowerOffMachineRequest
	27, // 44: openhdc.nexus.v1.Nexus.AddMachines:input_type -> openhdc.nexus.v1.AddMachinesRequest
	29, // 45: openhdc.nexus.v1.Nexus.ListScopes:input_type -> openhdc.nexus.v1.ListScopesRequest
	31, // 46: openhdc.nexus.v1.Nexus.CreateScope:input_type -> openhdc.nexus.v1.CreateScopeRequest
	32, // 47: openhdc.nexus.v1.Nexus.ListFacilities:input_type -> openhdc.nexus.v1.ListFacilitiesRequest
	34, // 48: openhdc.nexus.v1.Nexus.GetFacility:input_type -> openhdc.nexus.v1.GetFacilityRequest
	35, // 49: openhdc.nexus.v1.Nexus.CreateFacility:input_type -> openhdc.nexus.v1.CreateFacilityRequest
	36, // 50: openhdc.nexus.v1.Nexus.UpdateFacility:input_type -> openhdc.nexus.v1.UpdateFacilityRequest
	37, // 51: openhdc.nexus.v1.Nexus.DeleteFacility:input_type -> openhdc.nexus.v1.DeleteFacilityRequest
	38, // 52: openhdc.nexus.v1.Nexus.ExposeFacility:input_type -> openhdc.nexus.v1.ExposeFacilityRequest
	39, // 53: openhdc.nexus.v1.Nexus.AddFacilityUnits:input_type -> openhdc.nexus.v1.AddFacilityUnitsRequest
	40, // 54: openhdc.nexus.v1.Nexus.ListActions:input_type -> openhdc.nexus.v1.ListActionsRequest
	42, // 55: openhdc.nexus.v1.Nexus.RunAction:input_type -> openhdc.nexus.v1.RunActionRequest
	43, // 56: openhdc.nexus.v1.Nexus.ListApplications:input_type -> openhdc.nexus.v1.ListApplicationsRequest
	45, // 57: openhdc.nexus.v1.Nexus.GetApplication:input_type -> openhdc.nexus.v1.GetApplicationRequest
	46, // 58: openhdc.nexus.v1.Nexus.ListReleases:input_type -> openhdc.nexus.v1.ListReleasesRequest
	48, // 59: openhdc.nexus.v1.Nexus.CreateRelease:input_type -> openhdc.nexus.v1.CreateReleaseRequest
	49, // 60: openhdc.nexus.v1.Nexus.UpdateRelease:input_type -> openhdc.nexus.v1.UpdateReleaseRequest
	50, // 61: openhdc.nexus.v1.Nexus.DeleteRelease:input_type -> openhdc.nexus.v1.DeleteReleaseRequest
	51, // 62: openhdc.nexus.v1.Nexus.RollbackRelease:input_type -> openhdc.nexus.v1.RollbackReleaseRequest
	52, // 63: openhdc.nexus.v1.Nexus.ListCharts:input_type -> openhdc.nexus.v1.ListChartsRequest
	54, // 64: openhdc.nexus.v1.Nexus.GetChart:input_type -> openhdc.nexus.v1.GetChartRequest
	55, // 65: openhdc.nexus.v1.Nexus.GetChartMetadata:input_type -> openhdc.nexus.v1.GetChartMetadataRequest
	0,  // 66: openhdc.nexus.v1.Nexus.GetConfiguration:output_type -> openhdc.nexus.v1.Configuration
	56, // 67: openhdc.nexus.v1.Nexus.UpdateNTPServer:output_type -> openhdc.nexus.v1.Configuration.NTPServer
	57, // 68: openhdc.nexus.v1.Nexus.UpdatePackageRepository:output_type -> openhdc.nexus.v1.Configuration.PackageRepository
	58, // 69: openhdc.nexus.v1.Nexus.UpdateDefaultBootResource:output_type -> openhdc.nexus.v1.Configuration.BootResource
	77, // 70: openhdc.nexus.v1.Nexus.SyncBootResources:output_type -> google.protobuf.Empty
	12, // 71: openhdc.nexus.v1.Nexus.ListNetworks:output_type -> openhdc.nexus.v1.ListNetworksResponse
	1,  // 72: openhdc.nexus.v1.Nexus.CreateNetwork:output_type -> openhdc.nexus.v1.Network
	60, // 73: openhdc.nexus.v1.Nexus.CreateIPRange:output_type -> openhdc.nexus.v1.Network.IPRange
	77, // 74: openhdc.nexus.v1.Nexus.DeleteNetwork:output_type -> google.protobuf.Empty
	77, // 75: openhdc.nexus.v1.Nexus.DeleteIPRange:output_type -> google.protobuf.Empty
	62, // 76: openhdc.nexus.v1.Nexus.UpdateFabric:output_type -> openhdc.nexus.v1.Network.Fabric
	63, // 77: openhdc.nexus.v1.Nexus.UpdateVLAN:output_type -> openhdc.nexus.v1.Network.VLAN
	64, // 78: openhdc.nexus.v1.Nexus.UpdateSubnet:output_type -> openhdc.nexus.v1.Network.Subnet
	60, // 79: openhdc.nexus.v1.Nexus.UpdateIPRange:output_type -> openhdc.nexus.v1.Network.IPRange
	22, // 80: openhdc.nexus.v1.Nexus.ListMachines:output_type -> openhdc.nexus.v1.ListMachinesResponse
	2,  // 81: openhdc.nexus.v1.Nexus.GetMachine:output_type -> openhdc.nexus.v1.Machine
	2,  // 82: openhdc.nexus.v1.Nexus.CommissionMachine:output_type -> openhdc.nexus.v1.Machine
	2,  // 83: openhdc.nexus.v1.Nexus.PowerOnMachine:output_type -> openhdc.nexus.v1.Machine
	2,  // 84: openhdc.nexus.v1.Nexus.PowerOffMachine:output_type -> openhdc.nexus.v1.Machine
	28, // 85: openhdc.nexus.v1.Nexus.AddMachines:output_type -> openhdc.nexus.v1.AddMachinesResponse
	30, // 86: openhdc.nexus.v1.Nexus.ListScopes:output_type -> openhdc.nexus.v1.ListScopesResponse
	3,  // 87: openhdc.nexus.v1.Nexus.CreateScope:output_type -> openhdc.nexus.v1.Scope
	33, // 88: openhdc.nexus.v1.Nexus.ListFacilities:output_type -> openhdc.nexus.v1.ListFacilitiesResponse
	4,  // 89: openhdc.nexus.v1.Nexus.GetFacility:output_type -> openhdc.nexus.v1.Facility
	4,  // 90: openhdc.nexus.v1.Nexus.CreateFacility:output_type -> openhdc.nexus.v1.Facility
	4,  // 91: openhdc.nexus.v1.Nexus.UpdateFacility:output_type -> openhdc.nexus.v1.Facility
	77, // 92: openhdc.nexus.v1.Nexus.DeleteFacility:output_type -> google.protobuf.Empty
	77, // 93: openhdc.nexus.v1.Nexus.ExposeFacility:output_type -> google.protobuf.Empty
	77, // 94: openhdc.nexus.v1.Nexus.AddFacilityUnits:output_type -> google.protobuf.Empty
	41, // 95: openhdc.nexus.v1.Nexus.ListActions:output_type -> openhdc.nexus.v1.ListActionsResponse
	77, // 96: openhdc.nexus.v1.Nexus.RunAction:output_type -> google.protobuf.Empty
	44, // 97: openhdc.nexus.v1.Nexus.ListApplications:output_type -> openhdc.nexus.v1.ListApplicationsResponse
	5,  // 98: openhdc.nexus.v1.Nexus.GetApplication:output_type -> openhdc.nexus.v1.Application
	47, // 99: openhdc.nexus.v1.Nexus.ListReleases:output_type -> openhdc.nexus.v1.ListReleasesResponse
	74, // 100: openhdc.nexus.v1.Nexus.CreateRelease:output_type -> openhdc.nexus.v1.Application.Release
	74, // 101: openhdc.nexus.v1.Nexus.UpdateRelease:output_type -> openhdc.nexus.v1.Application.Release
	77, // 102: openhdc.nexus.v1.Nexus.DeleteRelease:output_type -> google.protobuf.Empty
	77, // 103: openhdc.nexus.v1.Nexus.RollbackRelease:output_type -> google.protobuf.Empty
	53, // 104: openhdc.nexus.v1.Nexus.ListCharts:output_type -> openhdc.nexus.v1.ListChartsResponse
	75, // 105: openhdc.nexus.v1.Nexus.GetChart:output_type -> openhdc.nexus.v1.Application.Release.Chart
	76, // 106: openhdc.nexus.v1.Nexus.GetChartMetadata:output_type -> openhdc.nexus.v1.Application.Release.Chart.Metadata
	66, // [66:107] is the sub-list for method output_type
	25, // [25:66] is the sub-list for method input_type
	25, // [25:25] is the sub-list for extension type_name
	25, // [25:25] is the sub-list for extension extendee
	0,  // [0:25] is the sub-list for field type_name
}

func init() { file_api_nexus_v1_nexus_proto_init() }
func file_api_nexus_v1_nexus_proto_init() {
	if File_api_nexus_v1_nexus_proto != nil {
		return
	}
	file_api_nexus_v1_nexus_proto_msgTypes[65].OneofWrappers = []any{
		(*machine_Placement_Lxd)(nil),
		(*machine_Placement_Kvm)(nil),
		(*machine_Placement_Machine)(nil),
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_api_nexus_v1_nexus_proto_rawDesc), len(file_api_nexus_v1_nexus_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   77,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_api_nexus_v1_nexus_proto_goTypes,
		DependencyIndexes: file_api_nexus_v1_nexus_proto_depIdxs,
		MessageInfos:      file_api_nexus_v1_nexus_proto_msgTypes,
	}.Build()
	File_api_nexus_v1_nexus_proto = out.File
	file_api_nexus_v1_nexus_proto_goTypes = nil
	file_api_nexus_v1_nexus_proto_depIdxs = nil
}
