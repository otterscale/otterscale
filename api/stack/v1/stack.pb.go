// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.2
// 	protoc        v5.29.1
// source: api/stack/v1/stack.proto

package v1

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	_ "google.golang.org/protobuf/types/gofeaturespb"
	emptypb "google.golang.org/protobuf/types/known/emptypb"
	reflect "reflect"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type PackageRepository struct {
	state         protoimpl.MessageState `protogen:"opaque.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *PackageRepository) Reset() {
	*x = PackageRepository{}
	mi := &file_api_stack_v1_stack_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *PackageRepository) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PackageRepository) ProtoMessage() {}

func (x *PackageRepository) ProtoReflect() protoreflect.Message {
	mi := &file_api_stack_v1_stack_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

type PackageRepository_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

}

func (b0 PackageRepository_builder) Build() *PackageRepository {
	m0 := &PackageRepository{}
	b, x := &b0, m0
	_, _ = b, x
	return m0
}

type Network struct {
	state         protoimpl.MessageState `protogen:"opaque.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Network) Reset() {
	*x = Network{}
	mi := &file_api_stack_v1_stack_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Network) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Network) ProtoMessage() {}

func (x *Network) ProtoReflect() protoreflect.Message {
	mi := &file_api_stack_v1_stack_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

type Network_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

}

func (b0 Network_builder) Build() *Network {
	m0 := &Network{}
	b, x := &b0, m0
	_, _ = b, x
	return m0
}

type VLAN struct {
	state                  protoimpl.MessageState `protogen:"opaque.v1"`
	xxx_hidden_DhcpOn      bool                   `protobuf:"varint,1,opt,name=dhcp_on,json=dhcpOn" json:"dhcp_on,omitempty"`
	XXX_raceDetectHookData protoimpl.RaceDetectHookData
	XXX_presence           [1]uint32
	unknownFields          protoimpl.UnknownFields
	sizeCache              protoimpl.SizeCache
}

func (x *VLAN) Reset() {
	*x = VLAN{}
	mi := &file_api_stack_v1_stack_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *VLAN) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*VLAN) ProtoMessage() {}

func (x *VLAN) ProtoReflect() protoreflect.Message {
	mi := &file_api_stack_v1_stack_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *VLAN) GetDhcpOn() bool {
	if x != nil {
		return x.xxx_hidden_DhcpOn
	}
	return false
}

func (x *VLAN) SetDhcpOn(v bool) {
	x.xxx_hidden_DhcpOn = v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 0, 1)
}

func (x *VLAN) HasDhcpOn() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 0)
}

func (x *VLAN) ClearDhcpOn() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 0)
	x.xxx_hidden_DhcpOn = false
}

type VLAN_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	DhcpOn *bool
}

func (b0 VLAN_builder) Build() *VLAN {
	m0 := &VLAN{}
	b, x := &b0, m0
	_, _ = b, x
	if b.DhcpOn != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 0, 1)
		x.xxx_hidden_DhcpOn = *b.DhcpOn
	}
	return m0
}

type Fabric struct {
	state            protoimpl.MessageState `protogen:"opaque.v1"`
	xxx_hidden_Vlans *[]*VLAN               `protobuf:"bytes,1,rep,name=vlans" json:"vlans,omitempty"`
	unknownFields    protoimpl.UnknownFields
	sizeCache        protoimpl.SizeCache
}

func (x *Fabric) Reset() {
	*x = Fabric{}
	mi := &file_api_stack_v1_stack_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Fabric) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Fabric) ProtoMessage() {}

func (x *Fabric) ProtoReflect() protoreflect.Message {
	mi := &file_api_stack_v1_stack_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *Fabric) GetVlans() []*VLAN {
	if x != nil {
		if x.xxx_hidden_Vlans != nil {
			return *x.xxx_hidden_Vlans
		}
	}
	return nil
}

func (x *Fabric) SetVlans(v []*VLAN) {
	x.xxx_hidden_Vlans = &v
}

type Fabric_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	Vlans []*VLAN
}

func (b0 Fabric_builder) Build() *Fabric {
	m0 := &Fabric{}
	b, x := &b0, m0
	_, _ = b, x
	x.xxx_hidden_Vlans = &b.Vlans
	return m0
}

type Subnet struct {
	state         protoimpl.MessageState `protogen:"opaque.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Subnet) Reset() {
	*x = Subnet{}
	mi := &file_api_stack_v1_stack_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Subnet) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Subnet) ProtoMessage() {}

func (x *Subnet) ProtoReflect() protoreflect.Message {
	mi := &file_api_stack_v1_stack_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

type Subnet_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

}

func (b0 Subnet_builder) Build() *Subnet {
	m0 := &Subnet{}
	b, x := &b0, m0
	_, _ = b, x
	return m0
}

type Machine struct {
	state         protoimpl.MessageState `protogen:"opaque.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Machine) Reset() {
	*x = Machine{}
	mi := &file_api_stack_v1_stack_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Machine) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Machine) ProtoMessage() {}

func (x *Machine) ProtoReflect() protoreflect.Message {
	mi := &file_api_stack_v1_stack_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

type Machine_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

}

func (b0 Machine_builder) Build() *Machine {
	m0 := &Machine{}
	b, x := &b0, m0
	_, _ = b, x
	return m0
}

type IPRange struct {
	state         protoimpl.MessageState `protogen:"opaque.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *IPRange) Reset() {
	*x = IPRange{}
	mi := &file_api_stack_v1_stack_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *IPRange) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*IPRange) ProtoMessage() {}

func (x *IPRange) ProtoReflect() protoreflect.Message {
	mi := &file_api_stack_v1_stack_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

type IPRange_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

}

func (b0 IPRange_builder) Build() *IPRange {
	m0 := &IPRange{}
	b, x := &b0, m0
	_, _ = b, x
	return m0
}

type UpdateNTPServersRequest struct {
	state                  protoimpl.MessageState `protogen:"opaque.v1"`
	xxx_hidden_NtpServers  *string                `protobuf:"bytes,1,opt,name=ntp_servers,json=ntpServers" json:"ntp_servers,omitempty"`
	XXX_raceDetectHookData protoimpl.RaceDetectHookData
	XXX_presence           [1]uint32
	unknownFields          protoimpl.UnknownFields
	sizeCache              protoimpl.SizeCache
}

func (x *UpdateNTPServersRequest) Reset() {
	*x = UpdateNTPServersRequest{}
	mi := &file_api_stack_v1_stack_proto_msgTypes[7]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UpdateNTPServersRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateNTPServersRequest) ProtoMessage() {}

func (x *UpdateNTPServersRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_stack_v1_stack_proto_msgTypes[7]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *UpdateNTPServersRequest) GetNtpServers() string {
	if x != nil {
		if x.xxx_hidden_NtpServers != nil {
			return *x.xxx_hidden_NtpServers
		}
		return ""
	}
	return ""
}

func (x *UpdateNTPServersRequest) SetNtpServers(v string) {
	x.xxx_hidden_NtpServers = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 0, 1)
}

func (x *UpdateNTPServersRequest) HasNtpServers() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 0)
}

func (x *UpdateNTPServersRequest) ClearNtpServers() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 0)
	x.xxx_hidden_NtpServers = nil
}

type UpdateNTPServersRequest_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	NtpServers *string
}

func (b0 UpdateNTPServersRequest_builder) Build() *UpdateNTPServersRequest {
	m0 := &UpdateNTPServersRequest{}
	b, x := &b0, m0
	_, _ = b, x
	if b.NtpServers != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 0, 1)
		x.xxx_hidden_NtpServers = b.NtpServers
	}
	return m0
}

type UpdateNTPServersResponse struct {
	state                  protoimpl.MessageState `protogen:"opaque.v1"`
	xxx_hidden_NtpServers  *string                `protobuf:"bytes,1,opt,name=ntp_servers,json=ntpServers" json:"ntp_servers,omitempty"`
	XXX_raceDetectHookData protoimpl.RaceDetectHookData
	XXX_presence           [1]uint32
	unknownFields          protoimpl.UnknownFields
	sizeCache              protoimpl.SizeCache
}

func (x *UpdateNTPServersResponse) Reset() {
	*x = UpdateNTPServersResponse{}
	mi := &file_api_stack_v1_stack_proto_msgTypes[8]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UpdateNTPServersResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateNTPServersResponse) ProtoMessage() {}

func (x *UpdateNTPServersResponse) ProtoReflect() protoreflect.Message {
	mi := &file_api_stack_v1_stack_proto_msgTypes[8]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *UpdateNTPServersResponse) GetNtpServers() string {
	if x != nil {
		if x.xxx_hidden_NtpServers != nil {
			return *x.xxx_hidden_NtpServers
		}
		return ""
	}
	return ""
}

func (x *UpdateNTPServersResponse) SetNtpServers(v string) {
	x.xxx_hidden_NtpServers = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 0, 1)
}

func (x *UpdateNTPServersResponse) HasNtpServers() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 0)
}

func (x *UpdateNTPServersResponse) ClearNtpServers() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 0)
	x.xxx_hidden_NtpServers = nil
}

type UpdateNTPServersResponse_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	NtpServers *string
}

func (b0 UpdateNTPServersResponse_builder) Build() *UpdateNTPServersResponse {
	m0 := &UpdateNTPServersResponse{}
	b, x := &b0, m0
	_, _ = b, x
	if b.NtpServers != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 0, 1)
		x.xxx_hidden_NtpServers = b.NtpServers
	}
	return m0
}

type UpdatePackageRepositoryURLRequest struct {
	state                  protoimpl.MessageState `protogen:"opaque.v1"`
	xxx_hidden_Id          int32                  `protobuf:"varint,1,opt,name=id" json:"id,omitempty"`
	xxx_hidden_Url         *string                `protobuf:"bytes,2,opt,name=url" json:"url,omitempty"`
	XXX_raceDetectHookData protoimpl.RaceDetectHookData
	XXX_presence           [1]uint32
	unknownFields          protoimpl.UnknownFields
	sizeCache              protoimpl.SizeCache
}

func (x *UpdatePackageRepositoryURLRequest) Reset() {
	*x = UpdatePackageRepositoryURLRequest{}
	mi := &file_api_stack_v1_stack_proto_msgTypes[9]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UpdatePackageRepositoryURLRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdatePackageRepositoryURLRequest) ProtoMessage() {}

func (x *UpdatePackageRepositoryURLRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_stack_v1_stack_proto_msgTypes[9]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *UpdatePackageRepositoryURLRequest) GetId() int32 {
	if x != nil {
		return x.xxx_hidden_Id
	}
	return 0
}

func (x *UpdatePackageRepositoryURLRequest) GetUrl() string {
	if x != nil {
		if x.xxx_hidden_Url != nil {
			return *x.xxx_hidden_Url
		}
		return ""
	}
	return ""
}

func (x *UpdatePackageRepositoryURLRequest) SetId(v int32) {
	x.xxx_hidden_Id = v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 0, 2)
}

func (x *UpdatePackageRepositoryURLRequest) SetUrl(v string) {
	x.xxx_hidden_Url = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 1, 2)
}

func (x *UpdatePackageRepositoryURLRequest) HasId() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 0)
}

func (x *UpdatePackageRepositoryURLRequest) HasUrl() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 1)
}

func (x *UpdatePackageRepositoryURLRequest) ClearId() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 0)
	x.xxx_hidden_Id = 0
}

func (x *UpdatePackageRepositoryURLRequest) ClearUrl() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 1)
	x.xxx_hidden_Url = nil
}

type UpdatePackageRepositoryURLRequest_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	Id  *int32
	Url *string
}

func (b0 UpdatePackageRepositoryURLRequest_builder) Build() *UpdatePackageRepositoryURLRequest {
	m0 := &UpdatePackageRepositoryURLRequest{}
	b, x := &b0, m0
	_, _ = b, x
	if b.Id != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 0, 2)
		x.xxx_hidden_Id = *b.Id
	}
	if b.Url != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 1, 2)
		x.xxx_hidden_Url = b.Url
	}
	return m0
}

type ListPackageRepositoriesRequest struct {
	state                  protoimpl.MessageState `protogen:"opaque.v1"`
	xxx_hidden_PageSize    int32                  `protobuf:"varint,1,opt,name=page_size,json=pageSize" json:"page_size,omitempty"`
	xxx_hidden_PageToken   *string                `protobuf:"bytes,2,opt,name=page_token,json=pageToken" json:"page_token,omitempty"`
	XXX_raceDetectHookData protoimpl.RaceDetectHookData
	XXX_presence           [1]uint32
	unknownFields          protoimpl.UnknownFields
	sizeCache              protoimpl.SizeCache
}

func (x *ListPackageRepositoriesRequest) Reset() {
	*x = ListPackageRepositoriesRequest{}
	mi := &file_api_stack_v1_stack_proto_msgTypes[10]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListPackageRepositoriesRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListPackageRepositoriesRequest) ProtoMessage() {}

func (x *ListPackageRepositoriesRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_stack_v1_stack_proto_msgTypes[10]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *ListPackageRepositoriesRequest) GetPageSize() int32 {
	if x != nil {
		return x.xxx_hidden_PageSize
	}
	return 0
}

func (x *ListPackageRepositoriesRequest) GetPageToken() string {
	if x != nil {
		if x.xxx_hidden_PageToken != nil {
			return *x.xxx_hidden_PageToken
		}
		return ""
	}
	return ""
}

func (x *ListPackageRepositoriesRequest) SetPageSize(v int32) {
	x.xxx_hidden_PageSize = v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 0, 2)
}

func (x *ListPackageRepositoriesRequest) SetPageToken(v string) {
	x.xxx_hidden_PageToken = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 1, 2)
}

func (x *ListPackageRepositoriesRequest) HasPageSize() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 0)
}

func (x *ListPackageRepositoriesRequest) HasPageToken() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 1)
}

func (x *ListPackageRepositoriesRequest) ClearPageSize() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 0)
	x.xxx_hidden_PageSize = 0
}

func (x *ListPackageRepositoriesRequest) ClearPageToken() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 1)
	x.xxx_hidden_PageToken = nil
}

type ListPackageRepositoriesRequest_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	PageSize  *int32
	PageToken *string
}

func (b0 ListPackageRepositoriesRequest_builder) Build() *ListPackageRepositoriesRequest {
	m0 := &ListPackageRepositoriesRequest{}
	b, x := &b0, m0
	_, _ = b, x
	if b.PageSize != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 0, 2)
		x.xxx_hidden_PageSize = *b.PageSize
	}
	if b.PageToken != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 1, 2)
		x.xxx_hidden_PageToken = b.PageToken
	}
	return m0
}

type ListPackageRepositoriesResponse struct {
	state                          protoimpl.MessageState `protogen:"opaque.v1"`
	xxx_hidden_PackageRepositories *[]*PackageRepository  `protobuf:"bytes,1,rep,name=package_repositories,json=packageRepositories" json:"package_repositories,omitempty"`
	xxx_hidden_NextPageToken       *string                `protobuf:"bytes,2,opt,name=next_page_token,json=nextPageToken" json:"next_page_token,omitempty"`
	XXX_raceDetectHookData         protoimpl.RaceDetectHookData
	XXX_presence                   [1]uint32
	unknownFields                  protoimpl.UnknownFields
	sizeCache                      protoimpl.SizeCache
}

func (x *ListPackageRepositoriesResponse) Reset() {
	*x = ListPackageRepositoriesResponse{}
	mi := &file_api_stack_v1_stack_proto_msgTypes[11]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListPackageRepositoriesResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListPackageRepositoriesResponse) ProtoMessage() {}

func (x *ListPackageRepositoriesResponse) ProtoReflect() protoreflect.Message {
	mi := &file_api_stack_v1_stack_proto_msgTypes[11]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *ListPackageRepositoriesResponse) GetPackageRepositories() []*PackageRepository {
	if x != nil {
		if x.xxx_hidden_PackageRepositories != nil {
			return *x.xxx_hidden_PackageRepositories
		}
	}
	return nil
}

func (x *ListPackageRepositoriesResponse) GetNextPageToken() string {
	if x != nil {
		if x.xxx_hidden_NextPageToken != nil {
			return *x.xxx_hidden_NextPageToken
		}
		return ""
	}
	return ""
}

func (x *ListPackageRepositoriesResponse) SetPackageRepositories(v []*PackageRepository) {
	x.xxx_hidden_PackageRepositories = &v
}

func (x *ListPackageRepositoriesResponse) SetNextPageToken(v string) {
	x.xxx_hidden_NextPageToken = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 1, 2)
}

func (x *ListPackageRepositoriesResponse) HasNextPageToken() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 1)
}

func (x *ListPackageRepositoriesResponse) ClearNextPageToken() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 1)
	x.xxx_hidden_NextPageToken = nil
}

type ListPackageRepositoriesResponse_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	PackageRepositories []*PackageRepository
	NextPageToken       *string
}

func (b0 ListPackageRepositoriesResponse_builder) Build() *ListPackageRepositoriesResponse {
	m0 := &ListPackageRepositoriesResponse{}
	b, x := &b0, m0
	_, _ = b, x
	x.xxx_hidden_PackageRepositories = &b.PackageRepositories
	if b.NextPageToken != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 1, 2)
		x.xxx_hidden_NextPageToken = b.NextPageToken
	}
	return m0
}

type ListNetworksRequest struct {
	state                  protoimpl.MessageState `protogen:"opaque.v1"`
	xxx_hidden_PageSize    int32                  `protobuf:"varint,1,opt,name=page_size,json=pageSize" json:"page_size,omitempty"`
	xxx_hidden_PageToken   *string                `protobuf:"bytes,2,opt,name=page_token,json=pageToken" json:"page_token,omitempty"`
	XXX_raceDetectHookData protoimpl.RaceDetectHookData
	XXX_presence           [1]uint32
	unknownFields          protoimpl.UnknownFields
	sizeCache              protoimpl.SizeCache
}

func (x *ListNetworksRequest) Reset() {
	*x = ListNetworksRequest{}
	mi := &file_api_stack_v1_stack_proto_msgTypes[12]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListNetworksRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListNetworksRequest) ProtoMessage() {}

func (x *ListNetworksRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_stack_v1_stack_proto_msgTypes[12]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *ListNetworksRequest) GetPageSize() int32 {
	if x != nil {
		return x.xxx_hidden_PageSize
	}
	return 0
}

func (x *ListNetworksRequest) GetPageToken() string {
	if x != nil {
		if x.xxx_hidden_PageToken != nil {
			return *x.xxx_hidden_PageToken
		}
		return ""
	}
	return ""
}

func (x *ListNetworksRequest) SetPageSize(v int32) {
	x.xxx_hidden_PageSize = v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 0, 2)
}

func (x *ListNetworksRequest) SetPageToken(v string) {
	x.xxx_hidden_PageToken = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 1, 2)
}

func (x *ListNetworksRequest) HasPageSize() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 0)
}

func (x *ListNetworksRequest) HasPageToken() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 1)
}

func (x *ListNetworksRequest) ClearPageSize() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 0)
	x.xxx_hidden_PageSize = 0
}

func (x *ListNetworksRequest) ClearPageToken() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 1)
	x.xxx_hidden_PageToken = nil
}

type ListNetworksRequest_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	PageSize  *int32
	PageToken *string
}

func (b0 ListNetworksRequest_builder) Build() *ListNetworksRequest {
	m0 := &ListNetworksRequest{}
	b, x := &b0, m0
	_, _ = b, x
	if b.PageSize != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 0, 2)
		x.xxx_hidden_PageSize = *b.PageSize
	}
	if b.PageToken != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 1, 2)
		x.xxx_hidden_PageToken = b.PageToken
	}
	return m0
}

type ListNetworksResponse struct {
	state                    protoimpl.MessageState `protogen:"opaque.v1"`
	xxx_hidden_Networks      *[]*Network            `protobuf:"bytes,1,rep,name=networks" json:"networks,omitempty"`
	xxx_hidden_NextPageToken *string                `protobuf:"bytes,2,opt,name=next_page_token,json=nextPageToken" json:"next_page_token,omitempty"`
	XXX_raceDetectHookData   protoimpl.RaceDetectHookData
	XXX_presence             [1]uint32
	unknownFields            protoimpl.UnknownFields
	sizeCache                protoimpl.SizeCache
}

func (x *ListNetworksResponse) Reset() {
	*x = ListNetworksResponse{}
	mi := &file_api_stack_v1_stack_proto_msgTypes[13]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListNetworksResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListNetworksResponse) ProtoMessage() {}

func (x *ListNetworksResponse) ProtoReflect() protoreflect.Message {
	mi := &file_api_stack_v1_stack_proto_msgTypes[13]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *ListNetworksResponse) GetNetworks() []*Network {
	if x != nil {
		if x.xxx_hidden_Networks != nil {
			return *x.xxx_hidden_Networks
		}
	}
	return nil
}

func (x *ListNetworksResponse) GetNextPageToken() string {
	if x != nil {
		if x.xxx_hidden_NextPageToken != nil {
			return *x.xxx_hidden_NextPageToken
		}
		return ""
	}
	return ""
}

func (x *ListNetworksResponse) SetNetworks(v []*Network) {
	x.xxx_hidden_Networks = &v
}

func (x *ListNetworksResponse) SetNextPageToken(v string) {
	x.xxx_hidden_NextPageToken = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 1, 2)
}

func (x *ListNetworksResponse) HasNextPageToken() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 1)
}

func (x *ListNetworksResponse) ClearNextPageToken() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 1)
	x.xxx_hidden_NextPageToken = nil
}

type ListNetworksResponse_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	Networks      []*Network
	NextPageToken *string
}

func (b0 ListNetworksResponse_builder) Build() *ListNetworksResponse {
	m0 := &ListNetworksResponse{}
	b, x := &b0, m0
	_, _ = b, x
	x.xxx_hidden_Networks = &b.Networks
	if b.NextPageToken != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 1, 2)
		x.xxx_hidden_NextPageToken = b.NextPageToken
	}
	return m0
}

type CreateNetworkRequest struct {
	state         protoimpl.MessageState `protogen:"opaque.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CreateNetworkRequest) Reset() {
	*x = CreateNetworkRequest{}
	mi := &file_api_stack_v1_stack_proto_msgTypes[14]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CreateNetworkRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateNetworkRequest) ProtoMessage() {}

func (x *CreateNetworkRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_stack_v1_stack_proto_msgTypes[14]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

type CreateNetworkRequest_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

}

func (b0 CreateNetworkRequest_builder) Build() *CreateNetworkRequest {
	m0 := &CreateNetworkRequest{}
	b, x := &b0, m0
	_, _ = b, x
	return m0
}

type UpdateNetworkRequest struct {
	state         protoimpl.MessageState `protogen:"opaque.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *UpdateNetworkRequest) Reset() {
	*x = UpdateNetworkRequest{}
	mi := &file_api_stack_v1_stack_proto_msgTypes[15]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UpdateNetworkRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateNetworkRequest) ProtoMessage() {}

func (x *UpdateNetworkRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_stack_v1_stack_proto_msgTypes[15]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

type UpdateNetworkRequest_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

}

func (b0 UpdateNetworkRequest_builder) Build() *UpdateNetworkRequest {
	m0 := &UpdateNetworkRequest{}
	b, x := &b0, m0
	_, _ = b, x
	return m0
}

type DeleteNetworkRequest struct {
	state                  protoimpl.MessageState `protogen:"opaque.v1"`
	xxx_hidden_Id          int32                  `protobuf:"varint,1,opt,name=id" json:"id,omitempty"`
	XXX_raceDetectHookData protoimpl.RaceDetectHookData
	XXX_presence           [1]uint32
	unknownFields          protoimpl.UnknownFields
	sizeCache              protoimpl.SizeCache
}

func (x *DeleteNetworkRequest) Reset() {
	*x = DeleteNetworkRequest{}
	mi := &file_api_stack_v1_stack_proto_msgTypes[16]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DeleteNetworkRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteNetworkRequest) ProtoMessage() {}

func (x *DeleteNetworkRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_stack_v1_stack_proto_msgTypes[16]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *DeleteNetworkRequest) GetId() int32 {
	if x != nil {
		return x.xxx_hidden_Id
	}
	return 0
}

func (x *DeleteNetworkRequest) SetId(v int32) {
	x.xxx_hidden_Id = v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 0, 1)
}

func (x *DeleteNetworkRequest) HasId() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 0)
}

func (x *DeleteNetworkRequest) ClearId() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 0)
	x.xxx_hidden_Id = 0
}

type DeleteNetworkRequest_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	Id *int32
}

func (b0 DeleteNetworkRequest_builder) Build() *DeleteNetworkRequest {
	m0 := &DeleteNetworkRequest{}
	b, x := &b0, m0
	_, _ = b, x
	if b.Id != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 0, 1)
		x.xxx_hidden_Id = *b.Id
	}
	return m0
}

type UpdateFabricRequest struct {
	state                  protoimpl.MessageState `protogen:"opaque.v1"`
	xxx_hidden_Id          int32                  `protobuf:"varint,1,opt,name=id" json:"id,omitempty"`
	XXX_raceDetectHookData protoimpl.RaceDetectHookData
	XXX_presence           [1]uint32
	unknownFields          protoimpl.UnknownFields
	sizeCache              protoimpl.SizeCache
}

func (x *UpdateFabricRequest) Reset() {
	*x = UpdateFabricRequest{}
	mi := &file_api_stack_v1_stack_proto_msgTypes[17]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UpdateFabricRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateFabricRequest) ProtoMessage() {}

func (x *UpdateFabricRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_stack_v1_stack_proto_msgTypes[17]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *UpdateFabricRequest) GetId() int32 {
	if x != nil {
		return x.xxx_hidden_Id
	}
	return 0
}

func (x *UpdateFabricRequest) SetId(v int32) {
	x.xxx_hidden_Id = v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 0, 1)
}

func (x *UpdateFabricRequest) HasId() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 0)
}

func (x *UpdateFabricRequest) ClearId() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 0)
	x.xxx_hidden_Id = 0
}

type UpdateFabricRequest_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	Id *int32
}

func (b0 UpdateFabricRequest_builder) Build() *UpdateFabricRequest {
	m0 := &UpdateFabricRequest{}
	b, x := &b0, m0
	_, _ = b, x
	if b.Id != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 0, 1)
		x.xxx_hidden_Id = *b.Id
	}
	return m0
}

type UpdateVLANRequest struct {
	state                  protoimpl.MessageState `protogen:"opaque.v1"`
	xxx_hidden_FabricId    int32                  `protobuf:"varint,1,opt,name=fabric_id,json=fabricId" json:"fabric_id,omitempty"`
	xxx_hidden_Vid         int32                  `protobuf:"varint,2,opt,name=vid" json:"vid,omitempty"`
	XXX_raceDetectHookData protoimpl.RaceDetectHookData
	XXX_presence           [1]uint32
	unknownFields          protoimpl.UnknownFields
	sizeCache              protoimpl.SizeCache
}

func (x *UpdateVLANRequest) Reset() {
	*x = UpdateVLANRequest{}
	mi := &file_api_stack_v1_stack_proto_msgTypes[18]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UpdateVLANRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateVLANRequest) ProtoMessage() {}

func (x *UpdateVLANRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_stack_v1_stack_proto_msgTypes[18]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *UpdateVLANRequest) GetFabricId() int32 {
	if x != nil {
		return x.xxx_hidden_FabricId
	}
	return 0
}

func (x *UpdateVLANRequest) GetVid() int32 {
	if x != nil {
		return x.xxx_hidden_Vid
	}
	return 0
}

func (x *UpdateVLANRequest) SetFabricId(v int32) {
	x.xxx_hidden_FabricId = v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 0, 2)
}

func (x *UpdateVLANRequest) SetVid(v int32) {
	x.xxx_hidden_Vid = v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 1, 2)
}

func (x *UpdateVLANRequest) HasFabricId() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 0)
}

func (x *UpdateVLANRequest) HasVid() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 1)
}

func (x *UpdateVLANRequest) ClearFabricId() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 0)
	x.xxx_hidden_FabricId = 0
}

func (x *UpdateVLANRequest) ClearVid() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 1)
	x.xxx_hidden_Vid = 0
}

type UpdateVLANRequest_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	FabricId *int32
	Vid      *int32
}

func (b0 UpdateVLANRequest_builder) Build() *UpdateVLANRequest {
	m0 := &UpdateVLANRequest{}
	b, x := &b0, m0
	_, _ = b, x
	if b.FabricId != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 0, 2)
		x.xxx_hidden_FabricId = *b.FabricId
	}
	if b.Vid != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 1, 2)
		x.xxx_hidden_Vid = *b.Vid
	}
	return m0
}

type UpdateSubnetRequest struct {
	state                  protoimpl.MessageState `protogen:"opaque.v1"`
	xxx_hidden_Id          int32                  `protobuf:"varint,1,opt,name=id" json:"id,omitempty"`
	XXX_raceDetectHookData protoimpl.RaceDetectHookData
	XXX_presence           [1]uint32
	unknownFields          protoimpl.UnknownFields
	sizeCache              protoimpl.SizeCache
}

func (x *UpdateSubnetRequest) Reset() {
	*x = UpdateSubnetRequest{}
	mi := &file_api_stack_v1_stack_proto_msgTypes[19]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UpdateSubnetRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateSubnetRequest) ProtoMessage() {}

func (x *UpdateSubnetRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_stack_v1_stack_proto_msgTypes[19]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *UpdateSubnetRequest) GetId() int32 {
	if x != nil {
		return x.xxx_hidden_Id
	}
	return 0
}

func (x *UpdateSubnetRequest) SetId(v int32) {
	x.xxx_hidden_Id = v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 0, 1)
}

func (x *UpdateSubnetRequest) HasId() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 0)
}

func (x *UpdateSubnetRequest) ClearId() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 0)
	x.xxx_hidden_Id = 0
}

type UpdateSubnetRequest_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	Id *int32
}

func (b0 UpdateSubnetRequest_builder) Build() *UpdateSubnetRequest {
	m0 := &UpdateSubnetRequest{}
	b, x := &b0, m0
	_, _ = b, x
	if b.Id != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 0, 1)
		x.xxx_hidden_Id = *b.Id
	}
	return m0
}

type UpdateIPRangeRequest struct {
	state                  protoimpl.MessageState `protogen:"opaque.v1"`
	xxx_hidden_Id          int32                  `protobuf:"varint,1,opt,name=id" json:"id,omitempty"`
	XXX_raceDetectHookData protoimpl.RaceDetectHookData
	XXX_presence           [1]uint32
	unknownFields          protoimpl.UnknownFields
	sizeCache              protoimpl.SizeCache
}

func (x *UpdateIPRangeRequest) Reset() {
	*x = UpdateIPRangeRequest{}
	mi := &file_api_stack_v1_stack_proto_msgTypes[20]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UpdateIPRangeRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateIPRangeRequest) ProtoMessage() {}

func (x *UpdateIPRangeRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_stack_v1_stack_proto_msgTypes[20]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *UpdateIPRangeRequest) GetId() int32 {
	if x != nil {
		return x.xxx_hidden_Id
	}
	return 0
}

func (x *UpdateIPRangeRequest) SetId(v int32) {
	x.xxx_hidden_Id = v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 0, 1)
}

func (x *UpdateIPRangeRequest) HasId() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 0)
}

func (x *UpdateIPRangeRequest) ClearId() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 0)
	x.xxx_hidden_Id = 0
}

type UpdateIPRangeRequest_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	Id *int32
}

func (b0 UpdateIPRangeRequest_builder) Build() *UpdateIPRangeRequest {
	m0 := &UpdateIPRangeRequest{}
	b, x := &b0, m0
	_, _ = b, x
	if b.Id != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 0, 1)
		x.xxx_hidden_Id = *b.Id
	}
	return m0
}

type ImportBootResourcesRequest struct {
	state         protoimpl.MessageState `protogen:"opaque.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ImportBootResourcesRequest) Reset() {
	*x = ImportBootResourcesRequest{}
	mi := &file_api_stack_v1_stack_proto_msgTypes[21]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ImportBootResourcesRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ImportBootResourcesRequest) ProtoMessage() {}

func (x *ImportBootResourcesRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_stack_v1_stack_proto_msgTypes[21]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

type ImportBootResourcesRequest_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

}

func (b0 ImportBootResourcesRequest_builder) Build() *ImportBootResourcesRequest {
	m0 := &ImportBootResourcesRequest{}
	b, x := &b0, m0
	_, _ = b, x
	return m0
}

type PowerOnMachineRequest struct {
	state                  protoimpl.MessageState `protogen:"opaque.v1"`
	xxx_hidden_SystemId    *string                `protobuf:"bytes,1,opt,name=system_id,json=systemId" json:"system_id,omitempty"`
	XXX_raceDetectHookData protoimpl.RaceDetectHookData
	XXX_presence           [1]uint32
	unknownFields          protoimpl.UnknownFields
	sizeCache              protoimpl.SizeCache
}

func (x *PowerOnMachineRequest) Reset() {
	*x = PowerOnMachineRequest{}
	mi := &file_api_stack_v1_stack_proto_msgTypes[22]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *PowerOnMachineRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PowerOnMachineRequest) ProtoMessage() {}

func (x *PowerOnMachineRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_stack_v1_stack_proto_msgTypes[22]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *PowerOnMachineRequest) GetSystemId() string {
	if x != nil {
		if x.xxx_hidden_SystemId != nil {
			return *x.xxx_hidden_SystemId
		}
		return ""
	}
	return ""
}

func (x *PowerOnMachineRequest) SetSystemId(v string) {
	x.xxx_hidden_SystemId = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 0, 1)
}

func (x *PowerOnMachineRequest) HasSystemId() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 0)
}

func (x *PowerOnMachineRequest) ClearSystemId() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 0)
	x.xxx_hidden_SystemId = nil
}

type PowerOnMachineRequest_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	SystemId *string
}

func (b0 PowerOnMachineRequest_builder) Build() *PowerOnMachineRequest {
	m0 := &PowerOnMachineRequest{}
	b, x := &b0, m0
	_, _ = b, x
	if b.SystemId != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 0, 1)
		x.xxx_hidden_SystemId = b.SystemId
	}
	return m0
}

type PowerOffMachineRequest struct {
	state                  protoimpl.MessageState `protogen:"opaque.v1"`
	xxx_hidden_SystemId    *string                `protobuf:"bytes,1,opt,name=system_id,json=systemId" json:"system_id,omitempty"`
	XXX_raceDetectHookData protoimpl.RaceDetectHookData
	XXX_presence           [1]uint32
	unknownFields          protoimpl.UnknownFields
	sizeCache              protoimpl.SizeCache
}

func (x *PowerOffMachineRequest) Reset() {
	*x = PowerOffMachineRequest{}
	mi := &file_api_stack_v1_stack_proto_msgTypes[23]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *PowerOffMachineRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PowerOffMachineRequest) ProtoMessage() {}

func (x *PowerOffMachineRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_stack_v1_stack_proto_msgTypes[23]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *PowerOffMachineRequest) GetSystemId() string {
	if x != nil {
		if x.xxx_hidden_SystemId != nil {
			return *x.xxx_hidden_SystemId
		}
		return ""
	}
	return ""
}

func (x *PowerOffMachineRequest) SetSystemId(v string) {
	x.xxx_hidden_SystemId = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 0, 1)
}

func (x *PowerOffMachineRequest) HasSystemId() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 0)
}

func (x *PowerOffMachineRequest) ClearSystemId() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 0)
	x.xxx_hidden_SystemId = nil
}

type PowerOffMachineRequest_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	SystemId *string
}

func (b0 PowerOffMachineRequest_builder) Build() *PowerOffMachineRequest {
	m0 := &PowerOffMachineRequest{}
	b, x := &b0, m0
	_, _ = b, x
	if b.SystemId != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 0, 1)
		x.xxx_hidden_SystemId = b.SystemId
	}
	return m0
}

type CommissionMachineRequest struct {
	state                  protoimpl.MessageState `protogen:"opaque.v1"`
	xxx_hidden_SystemId    *string                `protobuf:"bytes,1,opt,name=system_id,json=systemId" json:"system_id,omitempty"`
	XXX_raceDetectHookData protoimpl.RaceDetectHookData
	XXX_presence           [1]uint32
	unknownFields          protoimpl.UnknownFields
	sizeCache              protoimpl.SizeCache
}

func (x *CommissionMachineRequest) Reset() {
	*x = CommissionMachineRequest{}
	mi := &file_api_stack_v1_stack_proto_msgTypes[24]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CommissionMachineRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CommissionMachineRequest) ProtoMessage() {}

func (x *CommissionMachineRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_stack_v1_stack_proto_msgTypes[24]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *CommissionMachineRequest) GetSystemId() string {
	if x != nil {
		if x.xxx_hidden_SystemId != nil {
			return *x.xxx_hidden_SystemId
		}
		return ""
	}
	return ""
}

func (x *CommissionMachineRequest) SetSystemId(v string) {
	x.xxx_hidden_SystemId = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 0, 1)
}

func (x *CommissionMachineRequest) HasSystemId() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 0)
}

func (x *CommissionMachineRequest) ClearSystemId() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 0)
	x.xxx_hidden_SystemId = nil
}

type CommissionMachineRequest_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	SystemId *string
}

func (b0 CommissionMachineRequest_builder) Build() *CommissionMachineRequest {
	m0 := &CommissionMachineRequest{}
	b, x := &b0, m0
	_, _ = b, x
	if b.SystemId != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 0, 1)
		x.xxx_hidden_SystemId = b.SystemId
	}
	return m0
}

var File_api_stack_v1_stack_proto protoreflect.FileDescriptor

var file_api_stack_v1_stack_proto_rawDesc = []byte{
	0x0a, 0x18, 0x61, 0x70, 0x69, 0x2f, 0x73, 0x74, 0x61, 0x63, 0x6b, 0x2f, 0x76, 0x31, 0x2f, 0x73,
	0x74, 0x61, 0x63, 0x6b, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x10, 0x6f, 0x70, 0x65, 0x6e,
	0x68, 0x64, 0x63, 0x2e, 0x73, 0x74, 0x61, 0x63, 0x6b, 0x2e, 0x76, 0x31, 0x1a, 0x1b, 0x67, 0x6f,
	0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x65, 0x6d,
	0x70, 0x74, 0x79, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x21, 0x67, 0x6f, 0x6f, 0x67, 0x6c,
	0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x67, 0x6f, 0x5f, 0x66, 0x65,
	0x61, 0x74, 0x75, 0x72, 0x65, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x13, 0x0a, 0x11,
	0x50, 0x61, 0x63, 0x6b, 0x61, 0x67, 0x65, 0x52, 0x65, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x6f, 0x72,
	0x79, 0x22, 0x09, 0x0a, 0x07, 0x4e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x22, 0x1f, 0x0a, 0x04,
	0x56, 0x4c, 0x41, 0x4e, 0x12, 0x17, 0x0a, 0x07, 0x64, 0x68, 0x63, 0x70, 0x5f, 0x6f, 0x6e, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x06, 0x64, 0x68, 0x63, 0x70, 0x4f, 0x6e, 0x22, 0x36, 0x0a,
	0x06, 0x46, 0x61, 0x62, 0x72, 0x69, 0x63, 0x12, 0x2c, 0x0a, 0x05, 0x76, 0x6c, 0x61, 0x6e, 0x73,
	0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x6f, 0x70, 0x65, 0x6e, 0x68, 0x64, 0x63,
	0x2e, 0x73, 0x74, 0x61, 0x63, 0x6b, 0x2e, 0x76, 0x31, 0x2e, 0x56, 0x4c, 0x41, 0x4e, 0x52, 0x05,
	0x76, 0x6c, 0x61, 0x6e, 0x73, 0x22, 0x08, 0x0a, 0x06, 0x53, 0x75, 0x62, 0x6e, 0x65, 0x74, 0x22,
	0x09, 0x0a, 0x07, 0x4d, 0x61, 0x63, 0x68, 0x69, 0x6e, 0x65, 0x22, 0x09, 0x0a, 0x07, 0x49, 0x50,
	0x52, 0x61, 0x6e, 0x67, 0x65, 0x22, 0x3a, 0x0a, 0x17, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x4e,
	0x54, 0x50, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x12, 0x1f, 0x0a, 0x0b, 0x6e, 0x74, 0x70, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x73, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x6e, 0x74, 0x70, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72,
	0x73, 0x22, 0x3b, 0x0a, 0x18, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x4e, 0x54, 0x50, 0x53, 0x65,
	0x72, 0x76, 0x65, 0x72, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x1f, 0x0a,
	0x0b, 0x6e, 0x74, 0x70, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x73, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0a, 0x6e, 0x74, 0x70, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x73, 0x22, 0x45,
	0x0a, 0x21, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x50, 0x61, 0x63, 0x6b, 0x61, 0x67, 0x65, 0x52,
	0x65, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x6f, 0x72, 0x79, 0x55, 0x52, 0x4c, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x02, 0x69, 0x64, 0x12, 0x10, 0x0a, 0x03, 0x75, 0x72, 0x6c, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x03, 0x75, 0x72, 0x6c, 0x22, 0x5c, 0x0a, 0x1e, 0x4c, 0x69, 0x73, 0x74, 0x50, 0x61, 0x63,
	0x6b, 0x61, 0x67, 0x65, 0x52, 0x65, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x6f, 0x72, 0x69, 0x65, 0x73,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1b, 0x0a, 0x09, 0x70, 0x61, 0x67, 0x65, 0x5f,
	0x73, 0x69, 0x7a, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x08, 0x70, 0x61, 0x67, 0x65,
	0x53, 0x69, 0x7a, 0x65, 0x12, 0x1d, 0x0a, 0x0a, 0x70, 0x61, 0x67, 0x65, 0x5f, 0x74, 0x6f, 0x6b,
	0x65, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x70, 0x61, 0x67, 0x65, 0x54, 0x6f,
	0x6b, 0x65, 0x6e, 0x22, 0xa1, 0x01, 0x0a, 0x1f, 0x4c, 0x69, 0x73, 0x74, 0x50, 0x61, 0x63, 0x6b,
	0x61, 0x67, 0x65, 0x52, 0x65, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x6f, 0x72, 0x69, 0x65, 0x73, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x56, 0x0a, 0x14, 0x70, 0x61, 0x63, 0x6b, 0x61,
	0x67, 0x65, 0x5f, 0x72, 0x65, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x6f, 0x72, 0x69, 0x65, 0x73, 0x18,
	0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x23, 0x2e, 0x6f, 0x70, 0x65, 0x6e, 0x68, 0x64, 0x63, 0x2e,
	0x73, 0x74, 0x61, 0x63, 0x6b, 0x2e, 0x76, 0x31, 0x2e, 0x50, 0x61, 0x63, 0x6b, 0x61, 0x67, 0x65,
	0x52, 0x65, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x6f, 0x72, 0x79, 0x52, 0x13, 0x70, 0x61, 0x63, 0x6b,
	0x61, 0x67, 0x65, 0x52, 0x65, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x6f, 0x72, 0x69, 0x65, 0x73, 0x12,
	0x26, 0x0a, 0x0f, 0x6e, 0x65, 0x78, 0x74, 0x5f, 0x70, 0x61, 0x67, 0x65, 0x5f, 0x74, 0x6f, 0x6b,
	0x65, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x6e, 0x65, 0x78, 0x74, 0x50, 0x61,
	0x67, 0x65, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x22, 0x51, 0x0a, 0x13, 0x4c, 0x69, 0x73, 0x74, 0x4e,
	0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1b,
	0x0a, 0x09, 0x70, 0x61, 0x67, 0x65, 0x5f, 0x73, 0x69, 0x7a, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x05, 0x52, 0x08, 0x70, 0x61, 0x67, 0x65, 0x53, 0x69, 0x7a, 0x65, 0x12, 0x1d, 0x0a, 0x0a, 0x70,
	0x61, 0x67, 0x65, 0x5f, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x09, 0x70, 0x61, 0x67, 0x65, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x22, 0x75, 0x0a, 0x14, 0x4c, 0x69,
	0x73, 0x74, 0x4e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x12, 0x35, 0x0a, 0x08, 0x6e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x73, 0x18, 0x01,
	0x20, 0x03, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x6f, 0x70, 0x65, 0x6e, 0x68, 0x64, 0x63, 0x2e, 0x73,
	0x74, 0x61, 0x63, 0x6b, 0x2e, 0x76, 0x31, 0x2e, 0x4e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x52,
	0x08, 0x6e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x73, 0x12, 0x26, 0x0a, 0x0f, 0x6e, 0x65, 0x78,
	0x74, 0x5f, 0x70, 0x61, 0x67, 0x65, 0x5f, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0d, 0x6e, 0x65, 0x78, 0x74, 0x50, 0x61, 0x67, 0x65, 0x54, 0x6f, 0x6b, 0x65,
	0x6e, 0x22, 0x16, 0x0a, 0x14, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x4e, 0x65, 0x74, 0x77, 0x6f,
	0x72, 0x6b, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x22, 0x16, 0x0a, 0x14, 0x55, 0x70, 0x64,
	0x61, 0x74, 0x65, 0x4e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x22, 0x26, 0x0a, 0x14, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x4e, 0x65, 0x74, 0x77, 0x6f,
	0x72, 0x6b, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x02, 0x69, 0x64, 0x22, 0x25, 0x0a, 0x13, 0x55, 0x70, 0x64,
	0x61, 0x74, 0x65, 0x46, 0x61, 0x62, 0x72, 0x69, 0x63, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x02, 0x69, 0x64,
	0x22, 0x42, 0x0a, 0x11, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x56, 0x4c, 0x41, 0x4e, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1b, 0x0a, 0x09, 0x66, 0x61, 0x62, 0x72, 0x69, 0x63, 0x5f,
	0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x08, 0x66, 0x61, 0x62, 0x72, 0x69, 0x63,
	0x49, 0x64, 0x12, 0x10, 0x0a, 0x03, 0x76, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x03, 0x76, 0x69, 0x64, 0x22, 0x25, 0x0a, 0x13, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x53, 0x75,
	0x62, 0x6e, 0x65, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x02, 0x69, 0x64, 0x22, 0x26, 0x0a, 0x14, 0x55,
	0x70, 0x64, 0x61, 0x74, 0x65, 0x49, 0x50, 0x52, 0x61, 0x6e, 0x67, 0x65, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x02, 0x69, 0x64, 0x22, 0x1c, 0x0a, 0x1a, 0x49, 0x6d, 0x70, 0x6f, 0x72, 0x74, 0x42, 0x6f, 0x6f,
	0x74, 0x52, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x22, 0x34, 0x0a, 0x15, 0x50, 0x6f, 0x77, 0x65, 0x72, 0x4f, 0x6e, 0x4d, 0x61, 0x63, 0x68,
	0x69, 0x6e, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1b, 0x0a, 0x09, 0x73, 0x79,
	0x73, 0x74, 0x65, 0x6d, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x73,
	0x79, 0x73, 0x74, 0x65, 0x6d, 0x49, 0x64, 0x22, 0x35, 0x0a, 0x16, 0x50, 0x6f, 0x77, 0x65, 0x72,
	0x4f, 0x66, 0x66, 0x4d, 0x61, 0x63, 0x68, 0x69, 0x6e, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x12, 0x1b, 0x0a, 0x09, 0x73, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x5f, 0x69, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x73, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x49, 0x64, 0x22, 0x37,
	0x0a, 0x18, 0x43, 0x6f, 0x6d, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x4d, 0x61, 0x63, 0x68,
	0x69, 0x6e, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1b, 0x0a, 0x09, 0x73, 0x79,
	0x73, 0x74, 0x65, 0x6d, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x73,
	0x79, 0x73, 0x74, 0x65, 0x6d, 0x49, 0x64, 0x32, 0x89, 0x0a, 0x0a, 0x0c, 0x53, 0x74, 0x61, 0x63,
	0x6b, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x55, 0x0a, 0x10, 0x55, 0x70, 0x64, 0x61,
	0x74, 0x65, 0x4e, 0x54, 0x50, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x73, 0x12, 0x29, 0x2e, 0x6f,
	0x70, 0x65, 0x6e, 0x68, 0x64, 0x63, 0x2e, 0x73, 0x74, 0x61, 0x63, 0x6b, 0x2e, 0x76, 0x31, 0x2e,
	0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x4e, 0x54, 0x50, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x73,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x12,
	0x7e, 0x0a, 0x17, 0x4c, 0x69, 0x73, 0x74, 0x50, 0x61, 0x63, 0x6b, 0x61, 0x67, 0x65, 0x52, 0x65,
	0x70, 0x6f, 0x73, 0x69, 0x74, 0x6f, 0x72, 0x69, 0x65, 0x73, 0x12, 0x30, 0x2e, 0x6f, 0x70, 0x65,
	0x6e, 0x68, 0x64, 0x63, 0x2e, 0x73, 0x74, 0x61, 0x63, 0x6b, 0x2e, 0x76, 0x31, 0x2e, 0x4c, 0x69,
	0x73, 0x74, 0x50, 0x61, 0x63, 0x6b, 0x61, 0x67, 0x65, 0x52, 0x65, 0x70, 0x6f, 0x73, 0x69, 0x74,
	0x6f, 0x72, 0x69, 0x65, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x31, 0x2e, 0x6f,
	0x70, 0x65, 0x6e, 0x68, 0x64, 0x63, 0x2e, 0x73, 0x74, 0x61, 0x63, 0x6b, 0x2e, 0x76, 0x31, 0x2e,
	0x4c, 0x69, 0x73, 0x74, 0x50, 0x61, 0x63, 0x6b, 0x61, 0x67, 0x65, 0x52, 0x65, 0x70, 0x6f, 0x73,
	0x69, 0x74, 0x6f, 0x72, 0x69, 0x65, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12,
	0x76, 0x0a, 0x1a, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x50, 0x61, 0x63, 0x6b, 0x61, 0x67, 0x65,
	0x52, 0x65, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x6f, 0x72, 0x79, 0x55, 0x52, 0x4c, 0x12, 0x33, 0x2e,
	0x6f, 0x70, 0x65, 0x6e, 0x68, 0x64, 0x63, 0x2e, 0x73, 0x74, 0x61, 0x63, 0x6b, 0x2e, 0x76, 0x31,
	0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x50, 0x61, 0x63, 0x6b, 0x61, 0x67, 0x65, 0x52, 0x65,
	0x70, 0x6f, 0x73, 0x69, 0x74, 0x6f, 0x72, 0x79, 0x55, 0x52, 0x4c, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x1a, 0x23, 0x2e, 0x6f, 0x70, 0x65, 0x6e, 0x68, 0x64, 0x63, 0x2e, 0x73, 0x74, 0x61,
	0x63, 0x6b, 0x2e, 0x76, 0x31, 0x2e, 0x50, 0x61, 0x63, 0x6b, 0x61, 0x67, 0x65, 0x52, 0x65, 0x70,
	0x6f, 0x73, 0x69, 0x74, 0x6f, 0x72, 0x79, 0x12, 0x5d, 0x0a, 0x0c, 0x4c, 0x69, 0x73, 0x74, 0x4e,
	0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x73, 0x12, 0x25, 0x2e, 0x6f, 0x70, 0x65, 0x6e, 0x68, 0x64,
	0x63, 0x2e, 0x73, 0x74, 0x61, 0x63, 0x6b, 0x2e, 0x76, 0x31, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x4e,
	0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x26,
	0x2e, 0x6f, 0x70, 0x65, 0x6e, 0x68, 0x64, 0x63, 0x2e, 0x73, 0x74, 0x61, 0x63, 0x6b, 0x2e, 0x76,
	0x31, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x4e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x73, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x52, 0x0a, 0x0d, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65,
	0x4e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x12, 0x26, 0x2e, 0x6f, 0x70, 0x65, 0x6e, 0x68, 0x64,
	0x63, 0x2e, 0x73, 0x74, 0x61, 0x63, 0x6b, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74,
	0x65, 0x4e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a,
	0x19, 0x2e, 0x6f, 0x70, 0x65, 0x6e, 0x68, 0x64, 0x63, 0x2e, 0x73, 0x74, 0x61, 0x63, 0x6b, 0x2e,
	0x76, 0x31, 0x2e, 0x4e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x12, 0x4f, 0x0a, 0x0d, 0x44, 0x65,
	0x6c, 0x65, 0x74, 0x65, 0x4e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x12, 0x26, 0x2e, 0x6f, 0x70,
	0x65, 0x6e, 0x68, 0x64, 0x63, 0x2e, 0x73, 0x74, 0x61, 0x63, 0x6b, 0x2e, 0x76, 0x31, 0x2e, 0x44,
	0x65, 0x6c, 0x65, 0x74, 0x65, 0x4e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x1a, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x12, 0x4f, 0x0a, 0x0c, 0x55,
	0x70, 0x64, 0x61, 0x74, 0x65, 0x46, 0x61, 0x62, 0x72, 0x69, 0x63, 0x12, 0x25, 0x2e, 0x6f, 0x70,
	0x65, 0x6e, 0x68, 0x64, 0x63, 0x2e, 0x73, 0x74, 0x61, 0x63, 0x6b, 0x2e, 0x76, 0x31, 0x2e, 0x55,
	0x70, 0x64, 0x61, 0x74, 0x65, 0x46, 0x61, 0x62, 0x72, 0x69, 0x63, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x1a, 0x18, 0x2e, 0x6f, 0x70, 0x65, 0x6e, 0x68, 0x64, 0x63, 0x2e, 0x73, 0x74, 0x61,
	0x63, 0x6b, 0x2e, 0x76, 0x31, 0x2e, 0x46, 0x61, 0x62, 0x72, 0x69, 0x63, 0x12, 0x49, 0x0a, 0x0a,
	0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x56, 0x4c, 0x41, 0x4e, 0x12, 0x23, 0x2e, 0x6f, 0x70, 0x65,
	0x6e, 0x68, 0x64, 0x63, 0x2e, 0x73, 0x74, 0x61, 0x63, 0x6b, 0x2e, 0x76, 0x31, 0x2e, 0x55, 0x70,
	0x64, 0x61, 0x74, 0x65, 0x56, 0x4c, 0x41, 0x4e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a,
	0x16, 0x2e, 0x6f, 0x70, 0x65, 0x6e, 0x68, 0x64, 0x63, 0x2e, 0x73, 0x74, 0x61, 0x63, 0x6b, 0x2e,
	0x76, 0x31, 0x2e, 0x56, 0x4c, 0x41, 0x4e, 0x12, 0x4f, 0x0a, 0x0c, 0x55, 0x70, 0x64, 0x61, 0x74,
	0x65, 0x53, 0x75, 0x62, 0x6e, 0x65, 0x74, 0x12, 0x25, 0x2e, 0x6f, 0x70, 0x65, 0x6e, 0x68, 0x64,
	0x63, 0x2e, 0x73, 0x74, 0x61, 0x63, 0x6b, 0x2e, 0x76, 0x31, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74,
	0x65, 0x53, 0x75, 0x62, 0x6e, 0x65, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x18,
	0x2e, 0x6f, 0x70, 0x65, 0x6e, 0x68, 0x64, 0x63, 0x2e, 0x73, 0x74, 0x61, 0x63, 0x6b, 0x2e, 0x76,
	0x31, 0x2e, 0x53, 0x75, 0x62, 0x6e, 0x65, 0x74, 0x12, 0x52, 0x0a, 0x0d, 0x55, 0x70, 0x64, 0x61,
	0x74, 0x65, 0x49, 0x50, 0x52, 0x61, 0x6e, 0x67, 0x65, 0x12, 0x26, 0x2e, 0x6f, 0x70, 0x65, 0x6e,
	0x68, 0x64, 0x63, 0x2e, 0x73, 0x74, 0x61, 0x63, 0x6b, 0x2e, 0x76, 0x31, 0x2e, 0x55, 0x70, 0x64,
	0x61, 0x74, 0x65, 0x49, 0x50, 0x52, 0x61, 0x6e, 0x67, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x1a, 0x19, 0x2e, 0x6f, 0x70, 0x65, 0x6e, 0x68, 0x64, 0x63, 0x2e, 0x73, 0x74, 0x61, 0x63,
	0x6b, 0x2e, 0x76, 0x31, 0x2e, 0x49, 0x50, 0x52, 0x61, 0x6e, 0x67, 0x65, 0x12, 0x5b, 0x0a, 0x13,
	0x49, 0x6d, 0x70, 0x6f, 0x72, 0x74, 0x42, 0x6f, 0x6f, 0x74, 0x52, 0x65, 0x73, 0x6f, 0x75, 0x72,
	0x63, 0x65, 0x73, 0x12, 0x2c, 0x2e, 0x6f, 0x70, 0x65, 0x6e, 0x68, 0x64, 0x63, 0x2e, 0x73, 0x74,
	0x61, 0x63, 0x6b, 0x2e, 0x76, 0x31, 0x2e, 0x49, 0x6d, 0x70, 0x6f, 0x72, 0x74, 0x42, 0x6f, 0x6f,
	0x74, 0x52, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x1a, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x12, 0x54, 0x0a, 0x0e, 0x50, 0x6f, 0x77,
	0x65, 0x72, 0x4f, 0x6e, 0x4d, 0x61, 0x63, 0x68, 0x69, 0x6e, 0x65, 0x12, 0x27, 0x2e, 0x6f, 0x70,
	0x65, 0x6e, 0x68, 0x64, 0x63, 0x2e, 0x73, 0x74, 0x61, 0x63, 0x6b, 0x2e, 0x76, 0x31, 0x2e, 0x50,
	0x6f, 0x77, 0x65, 0x72, 0x4f, 0x6e, 0x4d, 0x61, 0x63, 0x68, 0x69, 0x6e, 0x65, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x1a, 0x19, 0x2e, 0x6f, 0x70, 0x65, 0x6e, 0x68, 0x64, 0x63, 0x2e, 0x73,
	0x74, 0x61, 0x63, 0x6b, 0x2e, 0x76, 0x31, 0x2e, 0x4d, 0x61, 0x63, 0x68, 0x69, 0x6e, 0x65, 0x12,
	0x56, 0x0a, 0x0f, 0x50, 0x6f, 0x77, 0x65, 0x72, 0x4f, 0x66, 0x66, 0x4d, 0x61, 0x63, 0x68, 0x69,
	0x6e, 0x65, 0x12, 0x28, 0x2e, 0x6f, 0x70, 0x65, 0x6e, 0x68, 0x64, 0x63, 0x2e, 0x73, 0x74, 0x61,
	0x63, 0x6b, 0x2e, 0x76, 0x31, 0x2e, 0x50, 0x6f, 0x77, 0x65, 0x72, 0x4f, 0x66, 0x66, 0x4d, 0x61,
	0x63, 0x68, 0x69, 0x6e, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x19, 0x2e, 0x6f,
	0x70, 0x65, 0x6e, 0x68, 0x64, 0x63, 0x2e, 0x73, 0x74, 0x61, 0x63, 0x6b, 0x2e, 0x76, 0x31, 0x2e,
	0x4d, 0x61, 0x63, 0x68, 0x69, 0x6e, 0x65, 0x12, 0x5a, 0x0a, 0x11, 0x43, 0x6f, 0x6d, 0x6d, 0x69,
	0x73, 0x73, 0x69, 0x6f, 0x6e, 0x4d, 0x61, 0x63, 0x68, 0x69, 0x6e, 0x65, 0x12, 0x2a, 0x2e, 0x6f,
	0x70, 0x65, 0x6e, 0x68, 0x64, 0x63, 0x2e, 0x73, 0x74, 0x61, 0x63, 0x6b, 0x2e, 0x76, 0x31, 0x2e,
	0x43, 0x6f, 0x6d, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x4d, 0x61, 0x63, 0x68, 0x69, 0x6e,
	0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x19, 0x2e, 0x6f, 0x70, 0x65, 0x6e, 0x68,
	0x64, 0x63, 0x2e, 0x73, 0x74, 0x61, 0x63, 0x6b, 0x2e, 0x76, 0x31, 0x2e, 0x4d, 0x61, 0x63, 0x68,
	0x69, 0x6e, 0x65, 0x42, 0x34, 0x5a, 0x2a, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f,
	0x6d, 0x2f, 0x6f, 0x70, 0x65, 0x6e, 0x68, 0x64, 0x63, 0x2f, 0x6f, 0x70, 0x65, 0x6e, 0x68, 0x64,
	0x63, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x73, 0x74, 0x61, 0x63, 0x6b, 0x2f, 0x76, 0x31, 0x3b, 0x76,
	0x31, 0x92, 0x03, 0x05, 0xd2, 0x3e, 0x02, 0x10, 0x03, 0x62, 0x08, 0x65, 0x64, 0x69, 0x74, 0x69,
	0x6f, 0x6e, 0x73, 0x70, 0xe8, 0x07,
}

var file_api_stack_v1_stack_proto_msgTypes = make([]protoimpl.MessageInfo, 25)
var file_api_stack_v1_stack_proto_goTypes = []any{
	(*PackageRepository)(nil),                 // 0: openhdc.stack.v1.PackageRepository
	(*Network)(nil),                           // 1: openhdc.stack.v1.Network
	(*VLAN)(nil),                              // 2: openhdc.stack.v1.VLAN
	(*Fabric)(nil),                            // 3: openhdc.stack.v1.Fabric
	(*Subnet)(nil),                            // 4: openhdc.stack.v1.Subnet
	(*Machine)(nil),                           // 5: openhdc.stack.v1.Machine
	(*IPRange)(nil),                           // 6: openhdc.stack.v1.IPRange
	(*UpdateNTPServersRequest)(nil),           // 7: openhdc.stack.v1.UpdateNTPServersRequest
	(*UpdateNTPServersResponse)(nil),          // 8: openhdc.stack.v1.UpdateNTPServersResponse
	(*UpdatePackageRepositoryURLRequest)(nil), // 9: openhdc.stack.v1.UpdatePackageRepositoryURLRequest
	(*ListPackageRepositoriesRequest)(nil),    // 10: openhdc.stack.v1.ListPackageRepositoriesRequest
	(*ListPackageRepositoriesResponse)(nil),   // 11: openhdc.stack.v1.ListPackageRepositoriesResponse
	(*ListNetworksRequest)(nil),               // 12: openhdc.stack.v1.ListNetworksRequest
	(*ListNetworksResponse)(nil),              // 13: openhdc.stack.v1.ListNetworksResponse
	(*CreateNetworkRequest)(nil),              // 14: openhdc.stack.v1.CreateNetworkRequest
	(*UpdateNetworkRequest)(nil),              // 15: openhdc.stack.v1.UpdateNetworkRequest
	(*DeleteNetworkRequest)(nil),              // 16: openhdc.stack.v1.DeleteNetworkRequest
	(*UpdateFabricRequest)(nil),               // 17: openhdc.stack.v1.UpdateFabricRequest
	(*UpdateVLANRequest)(nil),                 // 18: openhdc.stack.v1.UpdateVLANRequest
	(*UpdateSubnetRequest)(nil),               // 19: openhdc.stack.v1.UpdateSubnetRequest
	(*UpdateIPRangeRequest)(nil),              // 20: openhdc.stack.v1.UpdateIPRangeRequest
	(*ImportBootResourcesRequest)(nil),        // 21: openhdc.stack.v1.ImportBootResourcesRequest
	(*PowerOnMachineRequest)(nil),             // 22: openhdc.stack.v1.PowerOnMachineRequest
	(*PowerOffMachineRequest)(nil),            // 23: openhdc.stack.v1.PowerOffMachineRequest
	(*CommissionMachineRequest)(nil),          // 24: openhdc.stack.v1.CommissionMachineRequest
	(*emptypb.Empty)(nil),                     // 25: google.protobuf.Empty
}
var file_api_stack_v1_stack_proto_depIdxs = []int32{
	2,  // 0: openhdc.stack.v1.Fabric.vlans:type_name -> openhdc.stack.v1.VLAN
	0,  // 1: openhdc.stack.v1.ListPackageRepositoriesResponse.package_repositories:type_name -> openhdc.stack.v1.PackageRepository
	1,  // 2: openhdc.stack.v1.ListNetworksResponse.networks:type_name -> openhdc.stack.v1.Network
	7,  // 3: openhdc.stack.v1.StackService.UpdateNTPServers:input_type -> openhdc.stack.v1.UpdateNTPServersRequest
	10, // 4: openhdc.stack.v1.StackService.ListPackageRepositories:input_type -> openhdc.stack.v1.ListPackageRepositoriesRequest
	9,  // 5: openhdc.stack.v1.StackService.UpdatePackageRepositoryURL:input_type -> openhdc.stack.v1.UpdatePackageRepositoryURLRequest
	12, // 6: openhdc.stack.v1.StackService.ListNetworks:input_type -> openhdc.stack.v1.ListNetworksRequest
	14, // 7: openhdc.stack.v1.StackService.CreateNetwork:input_type -> openhdc.stack.v1.CreateNetworkRequest
	16, // 8: openhdc.stack.v1.StackService.DeleteNetwork:input_type -> openhdc.stack.v1.DeleteNetworkRequest
	17, // 9: openhdc.stack.v1.StackService.UpdateFabric:input_type -> openhdc.stack.v1.UpdateFabricRequest
	18, // 10: openhdc.stack.v1.StackService.UpdateVLAN:input_type -> openhdc.stack.v1.UpdateVLANRequest
	19, // 11: openhdc.stack.v1.StackService.UpdateSubnet:input_type -> openhdc.stack.v1.UpdateSubnetRequest
	20, // 12: openhdc.stack.v1.StackService.UpdateIPRange:input_type -> openhdc.stack.v1.UpdateIPRangeRequest
	21, // 13: openhdc.stack.v1.StackService.ImportBootResources:input_type -> openhdc.stack.v1.ImportBootResourcesRequest
	22, // 14: openhdc.stack.v1.StackService.PowerOnMachine:input_type -> openhdc.stack.v1.PowerOnMachineRequest
	23, // 15: openhdc.stack.v1.StackService.PowerOffMachine:input_type -> openhdc.stack.v1.PowerOffMachineRequest
	24, // 16: openhdc.stack.v1.StackService.CommissionMachine:input_type -> openhdc.stack.v1.CommissionMachineRequest
	25, // 17: openhdc.stack.v1.StackService.UpdateNTPServers:output_type -> google.protobuf.Empty
	11, // 18: openhdc.stack.v1.StackService.ListPackageRepositories:output_type -> openhdc.stack.v1.ListPackageRepositoriesResponse
	0,  // 19: openhdc.stack.v1.StackService.UpdatePackageRepositoryURL:output_type -> openhdc.stack.v1.PackageRepository
	13, // 20: openhdc.stack.v1.StackService.ListNetworks:output_type -> openhdc.stack.v1.ListNetworksResponse
	1,  // 21: openhdc.stack.v1.StackService.CreateNetwork:output_type -> openhdc.stack.v1.Network
	25, // 22: openhdc.stack.v1.StackService.DeleteNetwork:output_type -> google.protobuf.Empty
	3,  // 23: openhdc.stack.v1.StackService.UpdateFabric:output_type -> openhdc.stack.v1.Fabric
	2,  // 24: openhdc.stack.v1.StackService.UpdateVLAN:output_type -> openhdc.stack.v1.VLAN
	4,  // 25: openhdc.stack.v1.StackService.UpdateSubnet:output_type -> openhdc.stack.v1.Subnet
	6,  // 26: openhdc.stack.v1.StackService.UpdateIPRange:output_type -> openhdc.stack.v1.IPRange
	25, // 27: openhdc.stack.v1.StackService.ImportBootResources:output_type -> google.protobuf.Empty
	5,  // 28: openhdc.stack.v1.StackService.PowerOnMachine:output_type -> openhdc.stack.v1.Machine
	5,  // 29: openhdc.stack.v1.StackService.PowerOffMachine:output_type -> openhdc.stack.v1.Machine
	5,  // 30: openhdc.stack.v1.StackService.CommissionMachine:output_type -> openhdc.stack.v1.Machine
	17, // [17:31] is the sub-list for method output_type
	3,  // [3:17] is the sub-list for method input_type
	3,  // [3:3] is the sub-list for extension type_name
	3,  // [3:3] is the sub-list for extension extendee
	0,  // [0:3] is the sub-list for field type_name
}

func init() { file_api_stack_v1_stack_proto_init() }
func file_api_stack_v1_stack_proto_init() {
	if File_api_stack_v1_stack_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_api_stack_v1_stack_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   25,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_api_stack_v1_stack_proto_goTypes,
		DependencyIndexes: file_api_stack_v1_stack_proto_depIdxs,
		MessageInfos:      file_api_stack_v1_stack_proto_msgTypes,
	}.Build()
	File_api_stack_v1_stack_proto = out.File
	file_api_stack_v1_stack_proto_rawDesc = nil
	file_api_stack_v1_stack_proto_goTypes = nil
	file_api_stack_v1_stack_proto_depIdxs = nil
}
