// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.6
// 	protoc        v6.31.0
// source: api/network/v1/network.proto

package pb

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	emptypb "google.golang.org/protobuf/types/known/emptypb"
	reflect "reflect"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type Network struct {
	state             protoimpl.MessageState `protogen:"opaque.v1"`
	xxx_hidden_Fabric *Network_Fabric        `protobuf:"bytes,1,opt,name=fabric"`
	xxx_hidden_Vlan   *Network_VLAN          `protobuf:"bytes,2,opt,name=vlan"`
	xxx_hidden_Subnet *Network_Subnet        `protobuf:"bytes,3,opt,name=subnet"`
	unknownFields     protoimpl.UnknownFields
	sizeCache         protoimpl.SizeCache
}

func (x *Network) Reset() {
	*x = Network{}
	mi := &file_api_network_v1_network_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Network) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Network) ProtoMessage() {}

func (x *Network) ProtoReflect() protoreflect.Message {
	mi := &file_api_network_v1_network_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *Network) GetFabric() *Network_Fabric {
	if x != nil {
		return x.xxx_hidden_Fabric
	}
	return nil
}

func (x *Network) GetVlan() *Network_VLAN {
	if x != nil {
		return x.xxx_hidden_Vlan
	}
	return nil
}

func (x *Network) GetSubnet() *Network_Subnet {
	if x != nil {
		return x.xxx_hidden_Subnet
	}
	return nil
}

func (x *Network) SetFabric(v *Network_Fabric) {
	x.xxx_hidden_Fabric = v
}

func (x *Network) SetVlan(v *Network_VLAN) {
	x.xxx_hidden_Vlan = v
}

func (x *Network) SetSubnet(v *Network_Subnet) {
	x.xxx_hidden_Subnet = v
}

func (x *Network) HasFabric() bool {
	if x == nil {
		return false
	}
	return x.xxx_hidden_Fabric != nil
}

func (x *Network) HasVlan() bool {
	if x == nil {
		return false
	}
	return x.xxx_hidden_Vlan != nil
}

func (x *Network) HasSubnet() bool {
	if x == nil {
		return false
	}
	return x.xxx_hidden_Subnet != nil
}

func (x *Network) ClearFabric() {
	x.xxx_hidden_Fabric = nil
}

func (x *Network) ClearVlan() {
	x.xxx_hidden_Vlan = nil
}

func (x *Network) ClearSubnet() {
	x.xxx_hidden_Subnet = nil
}

type Network_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	Fabric *Network_Fabric
	Vlan   *Network_VLAN
	Subnet *Network_Subnet
}

func (b0 Network_builder) Build() *Network {
	m0 := &Network{}
	b, x := &b0, m0
	_, _ = b, x
	x.xxx_hidden_Fabric = b.Fabric
	x.xxx_hidden_Vlan = b.Vlan
	x.xxx_hidden_Subnet = b.Subnet
	return m0
}

type ListNetworksRequest struct {
	state         protoimpl.MessageState `protogen:"opaque.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ListNetworksRequest) Reset() {
	*x = ListNetworksRequest{}
	mi := &file_api_network_v1_network_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListNetworksRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListNetworksRequest) ProtoMessage() {}

func (x *ListNetworksRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_network_v1_network_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

type ListNetworksRequest_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

}

func (b0 ListNetworksRequest_builder) Build() *ListNetworksRequest {
	m0 := &ListNetworksRequest{}
	b, x := &b0, m0
	_, _ = b, x
	return m0
}

type ListNetworksResponse struct {
	state               protoimpl.MessageState `protogen:"opaque.v1"`
	xxx_hidden_Networks *[]*Network            `protobuf:"bytes,1,rep,name=networks"`
	unknownFields       protoimpl.UnknownFields
	sizeCache           protoimpl.SizeCache
}

func (x *ListNetworksResponse) Reset() {
	*x = ListNetworksResponse{}
	mi := &file_api_network_v1_network_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListNetworksResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListNetworksResponse) ProtoMessage() {}

func (x *ListNetworksResponse) ProtoReflect() protoreflect.Message {
	mi := &file_api_network_v1_network_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *ListNetworksResponse) GetNetworks() []*Network {
	if x != nil {
		if x.xxx_hidden_Networks != nil {
			return *x.xxx_hidden_Networks
		}
	}
	return nil
}

func (x *ListNetworksResponse) SetNetworks(v []*Network) {
	x.xxx_hidden_Networks = &v
}

type ListNetworksResponse_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	Networks []*Network
}

func (b0 ListNetworksResponse_builder) Build() *ListNetworksResponse {
	m0 := &ListNetworksResponse{}
	b, x := &b0, m0
	_, _ = b, x
	x.xxx_hidden_Networks = &b.Networks
	return m0
}

type CreateNetworkRequest struct {
	state                  protoimpl.MessageState `protogen:"opaque.v1"`
	xxx_hidden_Cidr        *string                `protobuf:"bytes,1,opt,name=cidr"`
	xxx_hidden_GatewayIp   *string                `protobuf:"bytes,2,opt,name=gateway_ip,json=gatewayIp"`
	xxx_hidden_DnsServers  []string               `protobuf:"bytes,3,rep,name=dns_servers,json=dnsServers"`
	xxx_hidden_DhcpOn      bool                   `protobuf:"varint,11,opt,name=dhcp_on,json=dhcpOn"`
	XXX_raceDetectHookData protoimpl.RaceDetectHookData
	XXX_presence           [1]uint32
	unknownFields          protoimpl.UnknownFields
	sizeCache              protoimpl.SizeCache
}

func (x *CreateNetworkRequest) Reset() {
	*x = CreateNetworkRequest{}
	mi := &file_api_network_v1_network_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CreateNetworkRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateNetworkRequest) ProtoMessage() {}

func (x *CreateNetworkRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_network_v1_network_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *CreateNetworkRequest) GetCidr() string {
	if x != nil {
		if x.xxx_hidden_Cidr != nil {
			return *x.xxx_hidden_Cidr
		}
		return ""
	}
	return ""
}

func (x *CreateNetworkRequest) GetGatewayIp() string {
	if x != nil {
		if x.xxx_hidden_GatewayIp != nil {
			return *x.xxx_hidden_GatewayIp
		}
		return ""
	}
	return ""
}

func (x *CreateNetworkRequest) GetDnsServers() []string {
	if x != nil {
		return x.xxx_hidden_DnsServers
	}
	return nil
}

func (x *CreateNetworkRequest) GetDhcpOn() bool {
	if x != nil {
		return x.xxx_hidden_DhcpOn
	}
	return false
}

func (x *CreateNetworkRequest) SetCidr(v string) {
	x.xxx_hidden_Cidr = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 0, 4)
}

func (x *CreateNetworkRequest) SetGatewayIp(v string) {
	x.xxx_hidden_GatewayIp = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 1, 4)
}

func (x *CreateNetworkRequest) SetDnsServers(v []string) {
	x.xxx_hidden_DnsServers = v
}

func (x *CreateNetworkRequest) SetDhcpOn(v bool) {
	x.xxx_hidden_DhcpOn = v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 3, 4)
}

func (x *CreateNetworkRequest) HasCidr() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 0)
}

func (x *CreateNetworkRequest) HasGatewayIp() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 1)
}

func (x *CreateNetworkRequest) HasDhcpOn() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 3)
}

func (x *CreateNetworkRequest) ClearCidr() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 0)
	x.xxx_hidden_Cidr = nil
}

func (x *CreateNetworkRequest) ClearGatewayIp() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 1)
	x.xxx_hidden_GatewayIp = nil
}

func (x *CreateNetworkRequest) ClearDhcpOn() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 3)
	x.xxx_hidden_DhcpOn = false
}

type CreateNetworkRequest_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	Cidr       *string
	GatewayIp  *string
	DnsServers []string
	DhcpOn     *bool
}

func (b0 CreateNetworkRequest_builder) Build() *CreateNetworkRequest {
	m0 := &CreateNetworkRequest{}
	b, x := &b0, m0
	_, _ = b, x
	if b.Cidr != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 0, 4)
		x.xxx_hidden_Cidr = b.Cidr
	}
	if b.GatewayIp != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 1, 4)
		x.xxx_hidden_GatewayIp = b.GatewayIp
	}
	x.xxx_hidden_DnsServers = b.DnsServers
	if b.DhcpOn != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 3, 4)
		x.xxx_hidden_DhcpOn = *b.DhcpOn
	}
	return m0
}

type CreateIPRangeRequest struct {
	state                  protoimpl.MessageState `protogen:"opaque.v1"`
	xxx_hidden_SubnetId    int64                  `protobuf:"varint,1,opt,name=subnet_id,json=subnetId"`
	xxx_hidden_StartIp     *string                `protobuf:"bytes,11,opt,name=start_ip,json=startIp"`
	xxx_hidden_EndIp       *string                `protobuf:"bytes,12,opt,name=end_ip,json=endIp"`
	xxx_hidden_Comment     *string                `protobuf:"bytes,13,opt,name=comment"`
	XXX_raceDetectHookData protoimpl.RaceDetectHookData
	XXX_presence           [1]uint32
	unknownFields          protoimpl.UnknownFields
	sizeCache              protoimpl.SizeCache
}

func (x *CreateIPRangeRequest) Reset() {
	*x = CreateIPRangeRequest{}
	mi := &file_api_network_v1_network_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CreateIPRangeRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateIPRangeRequest) ProtoMessage() {}

func (x *CreateIPRangeRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_network_v1_network_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *CreateIPRangeRequest) GetSubnetId() int64 {
	if x != nil {
		return x.xxx_hidden_SubnetId
	}
	return 0
}

func (x *CreateIPRangeRequest) GetStartIp() string {
	if x != nil {
		if x.xxx_hidden_StartIp != nil {
			return *x.xxx_hidden_StartIp
		}
		return ""
	}
	return ""
}

func (x *CreateIPRangeRequest) GetEndIp() string {
	if x != nil {
		if x.xxx_hidden_EndIp != nil {
			return *x.xxx_hidden_EndIp
		}
		return ""
	}
	return ""
}

func (x *CreateIPRangeRequest) GetComment() string {
	if x != nil {
		if x.xxx_hidden_Comment != nil {
			return *x.xxx_hidden_Comment
		}
		return ""
	}
	return ""
}

func (x *CreateIPRangeRequest) SetSubnetId(v int64) {
	x.xxx_hidden_SubnetId = v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 0, 4)
}

func (x *CreateIPRangeRequest) SetStartIp(v string) {
	x.xxx_hidden_StartIp = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 1, 4)
}

func (x *CreateIPRangeRequest) SetEndIp(v string) {
	x.xxx_hidden_EndIp = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 2, 4)
}

func (x *CreateIPRangeRequest) SetComment(v string) {
	x.xxx_hidden_Comment = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 3, 4)
}

func (x *CreateIPRangeRequest) HasSubnetId() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 0)
}

func (x *CreateIPRangeRequest) HasStartIp() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 1)
}

func (x *CreateIPRangeRequest) HasEndIp() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 2)
}

func (x *CreateIPRangeRequest) HasComment() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 3)
}

func (x *CreateIPRangeRequest) ClearSubnetId() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 0)
	x.xxx_hidden_SubnetId = 0
}

func (x *CreateIPRangeRequest) ClearStartIp() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 1)
	x.xxx_hidden_StartIp = nil
}

func (x *CreateIPRangeRequest) ClearEndIp() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 2)
	x.xxx_hidden_EndIp = nil
}

func (x *CreateIPRangeRequest) ClearComment() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 3)
	x.xxx_hidden_Comment = nil
}

type CreateIPRangeRequest_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	SubnetId *int64
	StartIp  *string
	EndIp    *string
	Comment  *string
}

func (b0 CreateIPRangeRequest_builder) Build() *CreateIPRangeRequest {
	m0 := &CreateIPRangeRequest{}
	b, x := &b0, m0
	_, _ = b, x
	if b.SubnetId != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 0, 4)
		x.xxx_hidden_SubnetId = *b.SubnetId
	}
	if b.StartIp != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 1, 4)
		x.xxx_hidden_StartIp = b.StartIp
	}
	if b.EndIp != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 2, 4)
		x.xxx_hidden_EndIp = b.EndIp
	}
	if b.Comment != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 3, 4)
		x.xxx_hidden_Comment = b.Comment
	}
	return m0
}

type DeleteNetworkRequest struct {
	state                  protoimpl.MessageState `protogen:"opaque.v1"`
	xxx_hidden_Id          int64                  `protobuf:"varint,1,opt,name=id"`
	XXX_raceDetectHookData protoimpl.RaceDetectHookData
	XXX_presence           [1]uint32
	unknownFields          protoimpl.UnknownFields
	sizeCache              protoimpl.SizeCache
}

func (x *DeleteNetworkRequest) Reset() {
	*x = DeleteNetworkRequest{}
	mi := &file_api_network_v1_network_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DeleteNetworkRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteNetworkRequest) ProtoMessage() {}

func (x *DeleteNetworkRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_network_v1_network_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *DeleteNetworkRequest) GetId() int64 {
	if x != nil {
		return x.xxx_hidden_Id
	}
	return 0
}

func (x *DeleteNetworkRequest) SetId(v int64) {
	x.xxx_hidden_Id = v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 0, 1)
}

func (x *DeleteNetworkRequest) HasId() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 0)
}

func (x *DeleteNetworkRequest) ClearId() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 0)
	x.xxx_hidden_Id = 0
}

type DeleteNetworkRequest_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	Id *int64
}

func (b0 DeleteNetworkRequest_builder) Build() *DeleteNetworkRequest {
	m0 := &DeleteNetworkRequest{}
	b, x := &b0, m0
	_, _ = b, x
	if b.Id != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 0, 1)
		x.xxx_hidden_Id = *b.Id
	}
	return m0
}

type DeleteIPRangeRequest struct {
	state                  protoimpl.MessageState `protogen:"opaque.v1"`
	xxx_hidden_Id          int64                  `protobuf:"varint,1,opt,name=id"`
	XXX_raceDetectHookData protoimpl.RaceDetectHookData
	XXX_presence           [1]uint32
	unknownFields          protoimpl.UnknownFields
	sizeCache              protoimpl.SizeCache
}

func (x *DeleteIPRangeRequest) Reset() {
	*x = DeleteIPRangeRequest{}
	mi := &file_api_network_v1_network_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DeleteIPRangeRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteIPRangeRequest) ProtoMessage() {}

func (x *DeleteIPRangeRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_network_v1_network_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *DeleteIPRangeRequest) GetId() int64 {
	if x != nil {
		return x.xxx_hidden_Id
	}
	return 0
}

func (x *DeleteIPRangeRequest) SetId(v int64) {
	x.xxx_hidden_Id = v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 0, 1)
}

func (x *DeleteIPRangeRequest) HasId() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 0)
}

func (x *DeleteIPRangeRequest) ClearId() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 0)
	x.xxx_hidden_Id = 0
}

type DeleteIPRangeRequest_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	Id *int64
}

func (b0 DeleteIPRangeRequest_builder) Build() *DeleteIPRangeRequest {
	m0 := &DeleteIPRangeRequest{}
	b, x := &b0, m0
	_, _ = b, x
	if b.Id != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 0, 1)
		x.xxx_hidden_Id = *b.Id
	}
	return m0
}

type UpdateFabricRequest struct {
	state                  protoimpl.MessageState `protogen:"opaque.v1"`
	xxx_hidden_Id          int64                  `protobuf:"varint,1,opt,name=id"`
	xxx_hidden_Name        *string                `protobuf:"bytes,11,opt,name=name"`
	XXX_raceDetectHookData protoimpl.RaceDetectHookData
	XXX_presence           [1]uint32
	unknownFields          protoimpl.UnknownFields
	sizeCache              protoimpl.SizeCache
}

func (x *UpdateFabricRequest) Reset() {
	*x = UpdateFabricRequest{}
	mi := &file_api_network_v1_network_proto_msgTypes[7]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UpdateFabricRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateFabricRequest) ProtoMessage() {}

func (x *UpdateFabricRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_network_v1_network_proto_msgTypes[7]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *UpdateFabricRequest) GetId() int64 {
	if x != nil {
		return x.xxx_hidden_Id
	}
	return 0
}

func (x *UpdateFabricRequest) GetName() string {
	if x != nil {
		if x.xxx_hidden_Name != nil {
			return *x.xxx_hidden_Name
		}
		return ""
	}
	return ""
}

func (x *UpdateFabricRequest) SetId(v int64) {
	x.xxx_hidden_Id = v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 0, 2)
}

func (x *UpdateFabricRequest) SetName(v string) {
	x.xxx_hidden_Name = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 1, 2)
}

func (x *UpdateFabricRequest) HasId() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 0)
}

func (x *UpdateFabricRequest) HasName() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 1)
}

func (x *UpdateFabricRequest) ClearId() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 0)
	x.xxx_hidden_Id = 0
}

func (x *UpdateFabricRequest) ClearName() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 1)
	x.xxx_hidden_Name = nil
}

type UpdateFabricRequest_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	Id   *int64
	Name *string
}

func (b0 UpdateFabricRequest_builder) Build() *UpdateFabricRequest {
	m0 := &UpdateFabricRequest{}
	b, x := &b0, m0
	_, _ = b, x
	if b.Id != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 0, 2)
		x.xxx_hidden_Id = *b.Id
	}
	if b.Name != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 1, 2)
		x.xxx_hidden_Name = b.Name
	}
	return m0
}

type UpdateVLANRequest struct {
	state                  protoimpl.MessageState `protogen:"opaque.v1"`
	xxx_hidden_FabricId    int64                  `protobuf:"varint,1,opt,name=fabric_id,json=fabricId"`
	xxx_hidden_Vid         int64                  `protobuf:"varint,2,opt,name=vid"`
	xxx_hidden_Name        *string                `protobuf:"bytes,11,opt,name=name"`
	xxx_hidden_Mtu         int64                  `protobuf:"varint,12,opt,name=mtu"`
	xxx_hidden_Description *string                `protobuf:"bytes,13,opt,name=description"`
	xxx_hidden_DhcpOn      bool                   `protobuf:"varint,14,opt,name=dhcp_on,json=dhcpOn"`
	XXX_raceDetectHookData protoimpl.RaceDetectHookData
	XXX_presence           [1]uint32
	unknownFields          protoimpl.UnknownFields
	sizeCache              protoimpl.SizeCache
}

func (x *UpdateVLANRequest) Reset() {
	*x = UpdateVLANRequest{}
	mi := &file_api_network_v1_network_proto_msgTypes[8]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UpdateVLANRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateVLANRequest) ProtoMessage() {}

func (x *UpdateVLANRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_network_v1_network_proto_msgTypes[8]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *UpdateVLANRequest) GetFabricId() int64 {
	if x != nil {
		return x.xxx_hidden_FabricId
	}
	return 0
}

func (x *UpdateVLANRequest) GetVid() int64 {
	if x != nil {
		return x.xxx_hidden_Vid
	}
	return 0
}

func (x *UpdateVLANRequest) GetName() string {
	if x != nil {
		if x.xxx_hidden_Name != nil {
			return *x.xxx_hidden_Name
		}
		return ""
	}
	return ""
}

func (x *UpdateVLANRequest) GetMtu() int64 {
	if x != nil {
		return x.xxx_hidden_Mtu
	}
	return 0
}

func (x *UpdateVLANRequest) GetDescription() string {
	if x != nil {
		if x.xxx_hidden_Description != nil {
			return *x.xxx_hidden_Description
		}
		return ""
	}
	return ""
}

func (x *UpdateVLANRequest) GetDhcpOn() bool {
	if x != nil {
		return x.xxx_hidden_DhcpOn
	}
	return false
}

func (x *UpdateVLANRequest) SetFabricId(v int64) {
	x.xxx_hidden_FabricId = v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 0, 6)
}

func (x *UpdateVLANRequest) SetVid(v int64) {
	x.xxx_hidden_Vid = v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 1, 6)
}

func (x *UpdateVLANRequest) SetName(v string) {
	x.xxx_hidden_Name = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 2, 6)
}

func (x *UpdateVLANRequest) SetMtu(v int64) {
	x.xxx_hidden_Mtu = v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 3, 6)
}

func (x *UpdateVLANRequest) SetDescription(v string) {
	x.xxx_hidden_Description = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 4, 6)
}

func (x *UpdateVLANRequest) SetDhcpOn(v bool) {
	x.xxx_hidden_DhcpOn = v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 5, 6)
}

func (x *UpdateVLANRequest) HasFabricId() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 0)
}

func (x *UpdateVLANRequest) HasVid() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 1)
}

func (x *UpdateVLANRequest) HasName() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 2)
}

func (x *UpdateVLANRequest) HasMtu() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 3)
}

func (x *UpdateVLANRequest) HasDescription() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 4)
}

func (x *UpdateVLANRequest) HasDhcpOn() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 5)
}

func (x *UpdateVLANRequest) ClearFabricId() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 0)
	x.xxx_hidden_FabricId = 0
}

func (x *UpdateVLANRequest) ClearVid() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 1)
	x.xxx_hidden_Vid = 0
}

func (x *UpdateVLANRequest) ClearName() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 2)
	x.xxx_hidden_Name = nil
}

func (x *UpdateVLANRequest) ClearMtu() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 3)
	x.xxx_hidden_Mtu = 0
}

func (x *UpdateVLANRequest) ClearDescription() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 4)
	x.xxx_hidden_Description = nil
}

func (x *UpdateVLANRequest) ClearDhcpOn() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 5)
	x.xxx_hidden_DhcpOn = false
}

type UpdateVLANRequest_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	FabricId    *int64
	Vid         *int64
	Name        *string
	Mtu         *int64
	Description *string
	DhcpOn      *bool
}

func (b0 UpdateVLANRequest_builder) Build() *UpdateVLANRequest {
	m0 := &UpdateVLANRequest{}
	b, x := &b0, m0
	_, _ = b, x
	if b.FabricId != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 0, 6)
		x.xxx_hidden_FabricId = *b.FabricId
	}
	if b.Vid != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 1, 6)
		x.xxx_hidden_Vid = *b.Vid
	}
	if b.Name != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 2, 6)
		x.xxx_hidden_Name = b.Name
	}
	if b.Mtu != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 3, 6)
		x.xxx_hidden_Mtu = *b.Mtu
	}
	if b.Description != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 4, 6)
		x.xxx_hidden_Description = b.Description
	}
	if b.DhcpOn != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 5, 6)
		x.xxx_hidden_DhcpOn = *b.DhcpOn
	}
	return m0
}

type UpdateSubnetRequest struct {
	state                         protoimpl.MessageState `protogen:"opaque.v1"`
	xxx_hidden_Id                 int64                  `protobuf:"varint,1,opt,name=id"`
	xxx_hidden_Name               *string                `protobuf:"bytes,11,opt,name=name"`
	xxx_hidden_Cidr               *string                `protobuf:"bytes,12,opt,name=cidr"`
	xxx_hidden_GatewayIp          *string                `protobuf:"bytes,13,opt,name=gateway_ip,json=gatewayIp"`
	xxx_hidden_DnsServers         []string               `protobuf:"bytes,14,rep,name=dns_servers,json=dnsServers"`
	xxx_hidden_Description        *string                `protobuf:"bytes,15,opt,name=description"`
	xxx_hidden_AllowDnsResolution bool                   `protobuf:"varint,16,opt,name=allow_dns_resolution,json=allowDnsResolution"`
	XXX_raceDetectHookData        protoimpl.RaceDetectHookData
	XXX_presence                  [1]uint32
	unknownFields                 protoimpl.UnknownFields
	sizeCache                     protoimpl.SizeCache
}

func (x *UpdateSubnetRequest) Reset() {
	*x = UpdateSubnetRequest{}
	mi := &file_api_network_v1_network_proto_msgTypes[9]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UpdateSubnetRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateSubnetRequest) ProtoMessage() {}

func (x *UpdateSubnetRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_network_v1_network_proto_msgTypes[9]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *UpdateSubnetRequest) GetId() int64 {
	if x != nil {
		return x.xxx_hidden_Id
	}
	return 0
}

func (x *UpdateSubnetRequest) GetName() string {
	if x != nil {
		if x.xxx_hidden_Name != nil {
			return *x.xxx_hidden_Name
		}
		return ""
	}
	return ""
}

func (x *UpdateSubnetRequest) GetCidr() string {
	if x != nil {
		if x.xxx_hidden_Cidr != nil {
			return *x.xxx_hidden_Cidr
		}
		return ""
	}
	return ""
}

func (x *UpdateSubnetRequest) GetGatewayIp() string {
	if x != nil {
		if x.xxx_hidden_GatewayIp != nil {
			return *x.xxx_hidden_GatewayIp
		}
		return ""
	}
	return ""
}

func (x *UpdateSubnetRequest) GetDnsServers() []string {
	if x != nil {
		return x.xxx_hidden_DnsServers
	}
	return nil
}

func (x *UpdateSubnetRequest) GetDescription() string {
	if x != nil {
		if x.xxx_hidden_Description != nil {
			return *x.xxx_hidden_Description
		}
		return ""
	}
	return ""
}

func (x *UpdateSubnetRequest) GetAllowDnsResolution() bool {
	if x != nil {
		return x.xxx_hidden_AllowDnsResolution
	}
	return false
}

func (x *UpdateSubnetRequest) SetId(v int64) {
	x.xxx_hidden_Id = v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 0, 7)
}

func (x *UpdateSubnetRequest) SetName(v string) {
	x.xxx_hidden_Name = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 1, 7)
}

func (x *UpdateSubnetRequest) SetCidr(v string) {
	x.xxx_hidden_Cidr = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 2, 7)
}

func (x *UpdateSubnetRequest) SetGatewayIp(v string) {
	x.xxx_hidden_GatewayIp = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 3, 7)
}

func (x *UpdateSubnetRequest) SetDnsServers(v []string) {
	x.xxx_hidden_DnsServers = v
}

func (x *UpdateSubnetRequest) SetDescription(v string) {
	x.xxx_hidden_Description = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 5, 7)
}

func (x *UpdateSubnetRequest) SetAllowDnsResolution(v bool) {
	x.xxx_hidden_AllowDnsResolution = v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 6, 7)
}

func (x *UpdateSubnetRequest) HasId() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 0)
}

func (x *UpdateSubnetRequest) HasName() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 1)
}

func (x *UpdateSubnetRequest) HasCidr() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 2)
}

func (x *UpdateSubnetRequest) HasGatewayIp() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 3)
}

func (x *UpdateSubnetRequest) HasDescription() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 5)
}

func (x *UpdateSubnetRequest) HasAllowDnsResolution() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 6)
}

func (x *UpdateSubnetRequest) ClearId() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 0)
	x.xxx_hidden_Id = 0
}

func (x *UpdateSubnetRequest) ClearName() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 1)
	x.xxx_hidden_Name = nil
}

func (x *UpdateSubnetRequest) ClearCidr() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 2)
	x.xxx_hidden_Cidr = nil
}

func (x *UpdateSubnetRequest) ClearGatewayIp() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 3)
	x.xxx_hidden_GatewayIp = nil
}

func (x *UpdateSubnetRequest) ClearDescription() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 5)
	x.xxx_hidden_Description = nil
}

func (x *UpdateSubnetRequest) ClearAllowDnsResolution() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 6)
	x.xxx_hidden_AllowDnsResolution = false
}

type UpdateSubnetRequest_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	Id                 *int64
	Name               *string
	Cidr               *string
	GatewayIp          *string
	DnsServers         []string
	Description        *string
	AllowDnsResolution *bool
}

func (b0 UpdateSubnetRequest_builder) Build() *UpdateSubnetRequest {
	m0 := &UpdateSubnetRequest{}
	b, x := &b0, m0
	_, _ = b, x
	if b.Id != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 0, 7)
		x.xxx_hidden_Id = *b.Id
	}
	if b.Name != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 1, 7)
		x.xxx_hidden_Name = b.Name
	}
	if b.Cidr != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 2, 7)
		x.xxx_hidden_Cidr = b.Cidr
	}
	if b.GatewayIp != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 3, 7)
		x.xxx_hidden_GatewayIp = b.GatewayIp
	}
	x.xxx_hidden_DnsServers = b.DnsServers
	if b.Description != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 5, 7)
		x.xxx_hidden_Description = b.Description
	}
	if b.AllowDnsResolution != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 6, 7)
		x.xxx_hidden_AllowDnsResolution = *b.AllowDnsResolution
	}
	return m0
}

type UpdateIPRangeRequest struct {
	state                  protoimpl.MessageState `protogen:"opaque.v1"`
	xxx_hidden_Id          int64                  `protobuf:"varint,1,opt,name=id"`
	xxx_hidden_StartIp     *string                `protobuf:"bytes,11,opt,name=start_ip,json=startIp"`
	xxx_hidden_EndIp       *string                `protobuf:"bytes,12,opt,name=end_ip,json=endIp"`
	xxx_hidden_Comment     *string                `protobuf:"bytes,13,opt,name=comment"`
	XXX_raceDetectHookData protoimpl.RaceDetectHookData
	XXX_presence           [1]uint32
	unknownFields          protoimpl.UnknownFields
	sizeCache              protoimpl.SizeCache
}

func (x *UpdateIPRangeRequest) Reset() {
	*x = UpdateIPRangeRequest{}
	mi := &file_api_network_v1_network_proto_msgTypes[10]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UpdateIPRangeRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateIPRangeRequest) ProtoMessage() {}

func (x *UpdateIPRangeRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_network_v1_network_proto_msgTypes[10]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *UpdateIPRangeRequest) GetId() int64 {
	if x != nil {
		return x.xxx_hidden_Id
	}
	return 0
}

func (x *UpdateIPRangeRequest) GetStartIp() string {
	if x != nil {
		if x.xxx_hidden_StartIp != nil {
			return *x.xxx_hidden_StartIp
		}
		return ""
	}
	return ""
}

func (x *UpdateIPRangeRequest) GetEndIp() string {
	if x != nil {
		if x.xxx_hidden_EndIp != nil {
			return *x.xxx_hidden_EndIp
		}
		return ""
	}
	return ""
}

func (x *UpdateIPRangeRequest) GetComment() string {
	if x != nil {
		if x.xxx_hidden_Comment != nil {
			return *x.xxx_hidden_Comment
		}
		return ""
	}
	return ""
}

func (x *UpdateIPRangeRequest) SetId(v int64) {
	x.xxx_hidden_Id = v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 0, 4)
}

func (x *UpdateIPRangeRequest) SetStartIp(v string) {
	x.xxx_hidden_StartIp = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 1, 4)
}

func (x *UpdateIPRangeRequest) SetEndIp(v string) {
	x.xxx_hidden_EndIp = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 2, 4)
}

func (x *UpdateIPRangeRequest) SetComment(v string) {
	x.xxx_hidden_Comment = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 3, 4)
}

func (x *UpdateIPRangeRequest) HasId() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 0)
}

func (x *UpdateIPRangeRequest) HasStartIp() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 1)
}

func (x *UpdateIPRangeRequest) HasEndIp() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 2)
}

func (x *UpdateIPRangeRequest) HasComment() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 3)
}

func (x *UpdateIPRangeRequest) ClearId() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 0)
	x.xxx_hidden_Id = 0
}

func (x *UpdateIPRangeRequest) ClearStartIp() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 1)
	x.xxx_hidden_StartIp = nil
}

func (x *UpdateIPRangeRequest) ClearEndIp() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 2)
	x.xxx_hidden_EndIp = nil
}

func (x *UpdateIPRangeRequest) ClearComment() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 3)
	x.xxx_hidden_Comment = nil
}

type UpdateIPRangeRequest_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	Id      *int64
	StartIp *string
	EndIp   *string
	Comment *string
}

func (b0 UpdateIPRangeRequest_builder) Build() *UpdateIPRangeRequest {
	m0 := &UpdateIPRangeRequest{}
	b, x := &b0, m0
	_, _ = b, x
	if b.Id != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 0, 4)
		x.xxx_hidden_Id = *b.Id
	}
	if b.StartIp != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 1, 4)
		x.xxx_hidden_StartIp = b.StartIp
	}
	if b.EndIp != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 2, 4)
		x.xxx_hidden_EndIp = b.EndIp
	}
	if b.Comment != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 3, 4)
		x.xxx_hidden_Comment = b.Comment
	}
	return m0
}

type Network_IPAddress struct {
	state                  protoimpl.MessageState `protogen:"opaque.v1"`
	xxx_hidden_Type        *string                `protobuf:"bytes,1,opt,name=type"`
	xxx_hidden_Ip          *string                `protobuf:"bytes,2,opt,name=ip"`
	xxx_hidden_User        *string                `protobuf:"bytes,3,opt,name=user"`
	xxx_hidden_MachineId   *string                `protobuf:"bytes,11,opt,name=machine_id,json=machineId"`
	xxx_hidden_NodeType    *string                `protobuf:"bytes,12,opt,name=node_type,json=nodeType"`
	xxx_hidden_Hostname    *string                `protobuf:"bytes,13,opt,name=hostname"`
	XXX_raceDetectHookData protoimpl.RaceDetectHookData
	XXX_presence           [1]uint32
	unknownFields          protoimpl.UnknownFields
	sizeCache              protoimpl.SizeCache
}

func (x *Network_IPAddress) Reset() {
	*x = Network_IPAddress{}
	mi := &file_api_network_v1_network_proto_msgTypes[11]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Network_IPAddress) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Network_IPAddress) ProtoMessage() {}

func (x *Network_IPAddress) ProtoReflect() protoreflect.Message {
	mi := &file_api_network_v1_network_proto_msgTypes[11]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *Network_IPAddress) GetType() string {
	if x != nil {
		if x.xxx_hidden_Type != nil {
			return *x.xxx_hidden_Type
		}
		return ""
	}
	return ""
}

func (x *Network_IPAddress) GetIp() string {
	if x != nil {
		if x.xxx_hidden_Ip != nil {
			return *x.xxx_hidden_Ip
		}
		return ""
	}
	return ""
}

func (x *Network_IPAddress) GetUser() string {
	if x != nil {
		if x.xxx_hidden_User != nil {
			return *x.xxx_hidden_User
		}
		return ""
	}
	return ""
}

func (x *Network_IPAddress) GetMachineId() string {
	if x != nil {
		if x.xxx_hidden_MachineId != nil {
			return *x.xxx_hidden_MachineId
		}
		return ""
	}
	return ""
}

func (x *Network_IPAddress) GetNodeType() string {
	if x != nil {
		if x.xxx_hidden_NodeType != nil {
			return *x.xxx_hidden_NodeType
		}
		return ""
	}
	return ""
}

func (x *Network_IPAddress) GetHostname() string {
	if x != nil {
		if x.xxx_hidden_Hostname != nil {
			return *x.xxx_hidden_Hostname
		}
		return ""
	}
	return ""
}

func (x *Network_IPAddress) SetType(v string) {
	x.xxx_hidden_Type = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 0, 6)
}

func (x *Network_IPAddress) SetIp(v string) {
	x.xxx_hidden_Ip = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 1, 6)
}

func (x *Network_IPAddress) SetUser(v string) {
	x.xxx_hidden_User = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 2, 6)
}

func (x *Network_IPAddress) SetMachineId(v string) {
	x.xxx_hidden_MachineId = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 3, 6)
}

func (x *Network_IPAddress) SetNodeType(v string) {
	x.xxx_hidden_NodeType = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 4, 6)
}

func (x *Network_IPAddress) SetHostname(v string) {
	x.xxx_hidden_Hostname = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 5, 6)
}

func (x *Network_IPAddress) HasType() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 0)
}

func (x *Network_IPAddress) HasIp() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 1)
}

func (x *Network_IPAddress) HasUser() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 2)
}

func (x *Network_IPAddress) HasMachineId() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 3)
}

func (x *Network_IPAddress) HasNodeType() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 4)
}

func (x *Network_IPAddress) HasHostname() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 5)
}

func (x *Network_IPAddress) ClearType() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 0)
	x.xxx_hidden_Type = nil
}

func (x *Network_IPAddress) ClearIp() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 1)
	x.xxx_hidden_Ip = nil
}

func (x *Network_IPAddress) ClearUser() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 2)
	x.xxx_hidden_User = nil
}

func (x *Network_IPAddress) ClearMachineId() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 3)
	x.xxx_hidden_MachineId = nil
}

func (x *Network_IPAddress) ClearNodeType() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 4)
	x.xxx_hidden_NodeType = nil
}

func (x *Network_IPAddress) ClearHostname() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 5)
	x.xxx_hidden_Hostname = nil
}

type Network_IPAddress_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	Type      *string
	Ip        *string
	User      *string
	MachineId *string
	NodeType  *string
	Hostname  *string
}

func (b0 Network_IPAddress_builder) Build() *Network_IPAddress {
	m0 := &Network_IPAddress{}
	b, x := &b0, m0
	_, _ = b, x
	if b.Type != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 0, 6)
		x.xxx_hidden_Type = b.Type
	}
	if b.Ip != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 1, 6)
		x.xxx_hidden_Ip = b.Ip
	}
	if b.User != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 2, 6)
		x.xxx_hidden_User = b.User
	}
	if b.MachineId != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 3, 6)
		x.xxx_hidden_MachineId = b.MachineId
	}
	if b.NodeType != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 4, 6)
		x.xxx_hidden_NodeType = b.NodeType
	}
	if b.Hostname != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 5, 6)
		x.xxx_hidden_Hostname = b.Hostname
	}
	return m0
}

type Network_IPRange struct {
	state                  protoimpl.MessageState `protogen:"opaque.v1"`
	xxx_hidden_Id          int64                  `protobuf:"varint,1,opt,name=id"`
	xxx_hidden_Type        *string                `protobuf:"bytes,2,opt,name=type"`
	xxx_hidden_StartIp     *string                `protobuf:"bytes,3,opt,name=start_ip,json=startIp"`
	xxx_hidden_EndIp       *string                `protobuf:"bytes,4,opt,name=end_ip,json=endIp"`
	xxx_hidden_Comment     *string                `protobuf:"bytes,5,opt,name=comment"`
	XXX_raceDetectHookData protoimpl.RaceDetectHookData
	XXX_presence           [1]uint32
	unknownFields          protoimpl.UnknownFields
	sizeCache              protoimpl.SizeCache
}

func (x *Network_IPRange) Reset() {
	*x = Network_IPRange{}
	mi := &file_api_network_v1_network_proto_msgTypes[12]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Network_IPRange) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Network_IPRange) ProtoMessage() {}

func (x *Network_IPRange) ProtoReflect() protoreflect.Message {
	mi := &file_api_network_v1_network_proto_msgTypes[12]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *Network_IPRange) GetId() int64 {
	if x != nil {
		return x.xxx_hidden_Id
	}
	return 0
}

func (x *Network_IPRange) GetType() string {
	if x != nil {
		if x.xxx_hidden_Type != nil {
			return *x.xxx_hidden_Type
		}
		return ""
	}
	return ""
}

func (x *Network_IPRange) GetStartIp() string {
	if x != nil {
		if x.xxx_hidden_StartIp != nil {
			return *x.xxx_hidden_StartIp
		}
		return ""
	}
	return ""
}

func (x *Network_IPRange) GetEndIp() string {
	if x != nil {
		if x.xxx_hidden_EndIp != nil {
			return *x.xxx_hidden_EndIp
		}
		return ""
	}
	return ""
}

func (x *Network_IPRange) GetComment() string {
	if x != nil {
		if x.xxx_hidden_Comment != nil {
			return *x.xxx_hidden_Comment
		}
		return ""
	}
	return ""
}

func (x *Network_IPRange) SetId(v int64) {
	x.xxx_hidden_Id = v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 0, 5)
}

func (x *Network_IPRange) SetType(v string) {
	x.xxx_hidden_Type = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 1, 5)
}

func (x *Network_IPRange) SetStartIp(v string) {
	x.xxx_hidden_StartIp = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 2, 5)
}

func (x *Network_IPRange) SetEndIp(v string) {
	x.xxx_hidden_EndIp = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 3, 5)
}

func (x *Network_IPRange) SetComment(v string) {
	x.xxx_hidden_Comment = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 4, 5)
}

func (x *Network_IPRange) HasId() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 0)
}

func (x *Network_IPRange) HasType() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 1)
}

func (x *Network_IPRange) HasStartIp() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 2)
}

func (x *Network_IPRange) HasEndIp() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 3)
}

func (x *Network_IPRange) HasComment() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 4)
}

func (x *Network_IPRange) ClearId() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 0)
	x.xxx_hidden_Id = 0
}

func (x *Network_IPRange) ClearType() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 1)
	x.xxx_hidden_Type = nil
}

func (x *Network_IPRange) ClearStartIp() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 2)
	x.xxx_hidden_StartIp = nil
}

func (x *Network_IPRange) ClearEndIp() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 3)
	x.xxx_hidden_EndIp = nil
}

func (x *Network_IPRange) ClearComment() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 4)
	x.xxx_hidden_Comment = nil
}

type Network_IPRange_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	Id      *int64
	Type    *string
	StartIp *string
	EndIp   *string
	Comment *string
}

func (b0 Network_IPRange_builder) Build() *Network_IPRange {
	m0 := &Network_IPRange{}
	b, x := &b0, m0
	_, _ = b, x
	if b.Id != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 0, 5)
		x.xxx_hidden_Id = *b.Id
	}
	if b.Type != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 1, 5)
		x.xxx_hidden_Type = b.Type
	}
	if b.StartIp != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 2, 5)
		x.xxx_hidden_StartIp = b.StartIp
	}
	if b.EndIp != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 3, 5)
		x.xxx_hidden_EndIp = b.EndIp
	}
	if b.Comment != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 4, 5)
		x.xxx_hidden_Comment = b.Comment
	}
	return m0
}

type Network_Statistics struct {
	state                       protoimpl.MessageState `protogen:"opaque.v1"`
	xxx_hidden_Available        int64                  `protobuf:"varint,1,opt,name=available"`
	xxx_hidden_Total            int64                  `protobuf:"varint,2,opt,name=total"`
	xxx_hidden_UsagePercent     *string                `protobuf:"bytes,3,opt,name=usage_percent,json=usagePercent"`
	xxx_hidden_AvailablePercent *string                `protobuf:"bytes,4,opt,name=available_percent,json=availablePercent"`
	XXX_raceDetectHookData      protoimpl.RaceDetectHookData
	XXX_presence                [1]uint32
	unknownFields               protoimpl.UnknownFields
	sizeCache                   protoimpl.SizeCache
}

func (x *Network_Statistics) Reset() {
	*x = Network_Statistics{}
	mi := &file_api_network_v1_network_proto_msgTypes[13]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Network_Statistics) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Network_Statistics) ProtoMessage() {}

func (x *Network_Statistics) ProtoReflect() protoreflect.Message {
	mi := &file_api_network_v1_network_proto_msgTypes[13]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *Network_Statistics) GetAvailable() int64 {
	if x != nil {
		return x.xxx_hidden_Available
	}
	return 0
}

func (x *Network_Statistics) GetTotal() int64 {
	if x != nil {
		return x.xxx_hidden_Total
	}
	return 0
}

func (x *Network_Statistics) GetUsagePercent() string {
	if x != nil {
		if x.xxx_hidden_UsagePercent != nil {
			return *x.xxx_hidden_UsagePercent
		}
		return ""
	}
	return ""
}

func (x *Network_Statistics) GetAvailablePercent() string {
	if x != nil {
		if x.xxx_hidden_AvailablePercent != nil {
			return *x.xxx_hidden_AvailablePercent
		}
		return ""
	}
	return ""
}

func (x *Network_Statistics) SetAvailable(v int64) {
	x.xxx_hidden_Available = v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 0, 4)
}

func (x *Network_Statistics) SetTotal(v int64) {
	x.xxx_hidden_Total = v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 1, 4)
}

func (x *Network_Statistics) SetUsagePercent(v string) {
	x.xxx_hidden_UsagePercent = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 2, 4)
}

func (x *Network_Statistics) SetAvailablePercent(v string) {
	x.xxx_hidden_AvailablePercent = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 3, 4)
}

func (x *Network_Statistics) HasAvailable() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 0)
}

func (x *Network_Statistics) HasTotal() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 1)
}

func (x *Network_Statistics) HasUsagePercent() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 2)
}

func (x *Network_Statistics) HasAvailablePercent() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 3)
}

func (x *Network_Statistics) ClearAvailable() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 0)
	x.xxx_hidden_Available = 0
}

func (x *Network_Statistics) ClearTotal() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 1)
	x.xxx_hidden_Total = 0
}

func (x *Network_Statistics) ClearUsagePercent() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 2)
	x.xxx_hidden_UsagePercent = nil
}

func (x *Network_Statistics) ClearAvailablePercent() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 3)
	x.xxx_hidden_AvailablePercent = nil
}

type Network_Statistics_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	Available        *int64
	Total            *int64
	UsagePercent     *string
	AvailablePercent *string
}

func (b0 Network_Statistics_builder) Build() *Network_Statistics {
	m0 := &Network_Statistics{}
	b, x := &b0, m0
	_, _ = b, x
	if b.Available != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 0, 4)
		x.xxx_hidden_Available = *b.Available
	}
	if b.Total != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 1, 4)
		x.xxx_hidden_Total = *b.Total
	}
	if b.UsagePercent != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 2, 4)
		x.xxx_hidden_UsagePercent = b.UsagePercent
	}
	if b.AvailablePercent != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 3, 4)
		x.xxx_hidden_AvailablePercent = b.AvailablePercent
	}
	return m0
}

type Network_Fabric struct {
	state                  protoimpl.MessageState `protogen:"opaque.v1"`
	xxx_hidden_Id          int64                  `protobuf:"varint,1,opt,name=id"`
	xxx_hidden_Name        *string                `protobuf:"bytes,2,opt,name=name"`
	XXX_raceDetectHookData protoimpl.RaceDetectHookData
	XXX_presence           [1]uint32
	unknownFields          protoimpl.UnknownFields
	sizeCache              protoimpl.SizeCache
}

func (x *Network_Fabric) Reset() {
	*x = Network_Fabric{}
	mi := &file_api_network_v1_network_proto_msgTypes[14]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Network_Fabric) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Network_Fabric) ProtoMessage() {}

func (x *Network_Fabric) ProtoReflect() protoreflect.Message {
	mi := &file_api_network_v1_network_proto_msgTypes[14]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *Network_Fabric) GetId() int64 {
	if x != nil {
		return x.xxx_hidden_Id
	}
	return 0
}

func (x *Network_Fabric) GetName() string {
	if x != nil {
		if x.xxx_hidden_Name != nil {
			return *x.xxx_hidden_Name
		}
		return ""
	}
	return ""
}

func (x *Network_Fabric) SetId(v int64) {
	x.xxx_hidden_Id = v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 0, 2)
}

func (x *Network_Fabric) SetName(v string) {
	x.xxx_hidden_Name = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 1, 2)
}

func (x *Network_Fabric) HasId() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 0)
}

func (x *Network_Fabric) HasName() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 1)
}

func (x *Network_Fabric) ClearId() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 0)
	x.xxx_hidden_Id = 0
}

func (x *Network_Fabric) ClearName() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 1)
	x.xxx_hidden_Name = nil
}

type Network_Fabric_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	Id   *int64
	Name *string
}

func (b0 Network_Fabric_builder) Build() *Network_Fabric {
	m0 := &Network_Fabric{}
	b, x := &b0, m0
	_, _ = b, x
	if b.Id != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 0, 2)
		x.xxx_hidden_Id = *b.Id
	}
	if b.Name != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 1, 2)
		x.xxx_hidden_Name = b.Name
	}
	return m0
}

type Network_VLAN struct {
	state                  protoimpl.MessageState `protogen:"opaque.v1"`
	xxx_hidden_Id          int64                  `protobuf:"varint,1,opt,name=id"`
	xxx_hidden_Vid         int64                  `protobuf:"varint,2,opt,name=vid"`
	xxx_hidden_Name        *string                `protobuf:"bytes,3,opt,name=name"`
	xxx_hidden_Mtu         int64                  `protobuf:"varint,4,opt,name=mtu"`
	xxx_hidden_Description *string                `protobuf:"bytes,5,opt,name=description"`
	xxx_hidden_DhcpOn      bool                   `protobuf:"varint,6,opt,name=dhcp_on,json=dhcpOn"`
	XXX_raceDetectHookData protoimpl.RaceDetectHookData
	XXX_presence           [1]uint32
	unknownFields          protoimpl.UnknownFields
	sizeCache              protoimpl.SizeCache
}

func (x *Network_VLAN) Reset() {
	*x = Network_VLAN{}
	mi := &file_api_network_v1_network_proto_msgTypes[15]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Network_VLAN) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Network_VLAN) ProtoMessage() {}

func (x *Network_VLAN) ProtoReflect() protoreflect.Message {
	mi := &file_api_network_v1_network_proto_msgTypes[15]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *Network_VLAN) GetId() int64 {
	if x != nil {
		return x.xxx_hidden_Id
	}
	return 0
}

func (x *Network_VLAN) GetVid() int64 {
	if x != nil {
		return x.xxx_hidden_Vid
	}
	return 0
}

func (x *Network_VLAN) GetName() string {
	if x != nil {
		if x.xxx_hidden_Name != nil {
			return *x.xxx_hidden_Name
		}
		return ""
	}
	return ""
}

func (x *Network_VLAN) GetMtu() int64 {
	if x != nil {
		return x.xxx_hidden_Mtu
	}
	return 0
}

func (x *Network_VLAN) GetDescription() string {
	if x != nil {
		if x.xxx_hidden_Description != nil {
			return *x.xxx_hidden_Description
		}
		return ""
	}
	return ""
}

func (x *Network_VLAN) GetDhcpOn() bool {
	if x != nil {
		return x.xxx_hidden_DhcpOn
	}
	return false
}

func (x *Network_VLAN) SetId(v int64) {
	x.xxx_hidden_Id = v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 0, 6)
}

func (x *Network_VLAN) SetVid(v int64) {
	x.xxx_hidden_Vid = v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 1, 6)
}

func (x *Network_VLAN) SetName(v string) {
	x.xxx_hidden_Name = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 2, 6)
}

func (x *Network_VLAN) SetMtu(v int64) {
	x.xxx_hidden_Mtu = v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 3, 6)
}

func (x *Network_VLAN) SetDescription(v string) {
	x.xxx_hidden_Description = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 4, 6)
}

func (x *Network_VLAN) SetDhcpOn(v bool) {
	x.xxx_hidden_DhcpOn = v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 5, 6)
}

func (x *Network_VLAN) HasId() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 0)
}

func (x *Network_VLAN) HasVid() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 1)
}

func (x *Network_VLAN) HasName() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 2)
}

func (x *Network_VLAN) HasMtu() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 3)
}

func (x *Network_VLAN) HasDescription() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 4)
}

func (x *Network_VLAN) HasDhcpOn() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 5)
}

func (x *Network_VLAN) ClearId() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 0)
	x.xxx_hidden_Id = 0
}

func (x *Network_VLAN) ClearVid() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 1)
	x.xxx_hidden_Vid = 0
}

func (x *Network_VLAN) ClearName() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 2)
	x.xxx_hidden_Name = nil
}

func (x *Network_VLAN) ClearMtu() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 3)
	x.xxx_hidden_Mtu = 0
}

func (x *Network_VLAN) ClearDescription() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 4)
	x.xxx_hidden_Description = nil
}

func (x *Network_VLAN) ClearDhcpOn() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 5)
	x.xxx_hidden_DhcpOn = false
}

type Network_VLAN_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	Id          *int64
	Vid         *int64
	Name        *string
	Mtu         *int64
	Description *string
	DhcpOn      *bool
}

func (b0 Network_VLAN_builder) Build() *Network_VLAN {
	m0 := &Network_VLAN{}
	b, x := &b0, m0
	_, _ = b, x
	if b.Id != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 0, 6)
		x.xxx_hidden_Id = *b.Id
	}
	if b.Vid != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 1, 6)
		x.xxx_hidden_Vid = *b.Vid
	}
	if b.Name != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 2, 6)
		x.xxx_hidden_Name = b.Name
	}
	if b.Mtu != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 3, 6)
		x.xxx_hidden_Mtu = *b.Mtu
	}
	if b.Description != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 4, 6)
		x.xxx_hidden_Description = b.Description
	}
	if b.DhcpOn != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 5, 6)
		x.xxx_hidden_DhcpOn = *b.DhcpOn
	}
	return m0
}

type Network_Subnet struct {
	state                         protoimpl.MessageState `protogen:"opaque.v1"`
	xxx_hidden_Id                 int64                  `protobuf:"varint,1,opt,name=id"`
	xxx_hidden_Name               *string                `protobuf:"bytes,2,opt,name=name"`
	xxx_hidden_Cidr               *string                `protobuf:"bytes,3,opt,name=cidr"`
	xxx_hidden_GatewayIp          *string                `protobuf:"bytes,4,opt,name=gateway_ip,json=gatewayIp"`
	xxx_hidden_DnsServers         []string               `protobuf:"bytes,5,rep,name=dns_servers,json=dnsServers"`
	xxx_hidden_Description        *string                `protobuf:"bytes,6,opt,name=description"`
	xxx_hidden_ManagedAllocation  bool                   `protobuf:"varint,7,opt,name=managed_allocation,json=managedAllocation"`
	xxx_hidden_ActiveDiscovery    bool                   `protobuf:"varint,8,opt,name=active_discovery,json=activeDiscovery"`
	xxx_hidden_AllowProxyAccess   bool                   `protobuf:"varint,9,opt,name=allow_proxy_access,json=allowProxyAccess"`
	xxx_hidden_AllowDnsResolution bool                   `protobuf:"varint,10,opt,name=allow_dns_resolution,json=allowDnsResolution"`
	xxx_hidden_IpAddresses        *[]*Network_IPAddress  `protobuf:"bytes,11,rep,name=ip_addresses,json=ipAddresses"`
	xxx_hidden_IpRanges           *[]*Network_IPRange    `protobuf:"bytes,12,rep,name=ip_ranges,json=ipRanges"`
	xxx_hidden_Statistics         *Network_Statistics    `protobuf:"bytes,13,opt,name=statistics"`
	XXX_raceDetectHookData        protoimpl.RaceDetectHookData
	XXX_presence                  [1]uint32
	unknownFields                 protoimpl.UnknownFields
	sizeCache                     protoimpl.SizeCache
}

func (x *Network_Subnet) Reset() {
	*x = Network_Subnet{}
	mi := &file_api_network_v1_network_proto_msgTypes[16]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Network_Subnet) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Network_Subnet) ProtoMessage() {}

func (x *Network_Subnet) ProtoReflect() protoreflect.Message {
	mi := &file_api_network_v1_network_proto_msgTypes[16]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *Network_Subnet) GetId() int64 {
	if x != nil {
		return x.xxx_hidden_Id
	}
	return 0
}

func (x *Network_Subnet) GetName() string {
	if x != nil {
		if x.xxx_hidden_Name != nil {
			return *x.xxx_hidden_Name
		}
		return ""
	}
	return ""
}

func (x *Network_Subnet) GetCidr() string {
	if x != nil {
		if x.xxx_hidden_Cidr != nil {
			return *x.xxx_hidden_Cidr
		}
		return ""
	}
	return ""
}

func (x *Network_Subnet) GetGatewayIp() string {
	if x != nil {
		if x.xxx_hidden_GatewayIp != nil {
			return *x.xxx_hidden_GatewayIp
		}
		return ""
	}
	return ""
}

func (x *Network_Subnet) GetDnsServers() []string {
	if x != nil {
		return x.xxx_hidden_DnsServers
	}
	return nil
}

func (x *Network_Subnet) GetDescription() string {
	if x != nil {
		if x.xxx_hidden_Description != nil {
			return *x.xxx_hidden_Description
		}
		return ""
	}
	return ""
}

func (x *Network_Subnet) GetManagedAllocation() bool {
	if x != nil {
		return x.xxx_hidden_ManagedAllocation
	}
	return false
}

func (x *Network_Subnet) GetActiveDiscovery() bool {
	if x != nil {
		return x.xxx_hidden_ActiveDiscovery
	}
	return false
}

func (x *Network_Subnet) GetAllowProxyAccess() bool {
	if x != nil {
		return x.xxx_hidden_AllowProxyAccess
	}
	return false
}

func (x *Network_Subnet) GetAllowDnsResolution() bool {
	if x != nil {
		return x.xxx_hidden_AllowDnsResolution
	}
	return false
}

func (x *Network_Subnet) GetIpAddresses() []*Network_IPAddress {
	if x != nil {
		if x.xxx_hidden_IpAddresses != nil {
			return *x.xxx_hidden_IpAddresses
		}
	}
	return nil
}

func (x *Network_Subnet) GetIpRanges() []*Network_IPRange {
	if x != nil {
		if x.xxx_hidden_IpRanges != nil {
			return *x.xxx_hidden_IpRanges
		}
	}
	return nil
}

func (x *Network_Subnet) GetStatistics() *Network_Statistics {
	if x != nil {
		return x.xxx_hidden_Statistics
	}
	return nil
}

func (x *Network_Subnet) SetId(v int64) {
	x.xxx_hidden_Id = v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 0, 13)
}

func (x *Network_Subnet) SetName(v string) {
	x.xxx_hidden_Name = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 1, 13)
}

func (x *Network_Subnet) SetCidr(v string) {
	x.xxx_hidden_Cidr = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 2, 13)
}

func (x *Network_Subnet) SetGatewayIp(v string) {
	x.xxx_hidden_GatewayIp = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 3, 13)
}

func (x *Network_Subnet) SetDnsServers(v []string) {
	x.xxx_hidden_DnsServers = v
}

func (x *Network_Subnet) SetDescription(v string) {
	x.xxx_hidden_Description = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 5, 13)
}

func (x *Network_Subnet) SetManagedAllocation(v bool) {
	x.xxx_hidden_ManagedAllocation = v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 6, 13)
}

func (x *Network_Subnet) SetActiveDiscovery(v bool) {
	x.xxx_hidden_ActiveDiscovery = v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 7, 13)
}

func (x *Network_Subnet) SetAllowProxyAccess(v bool) {
	x.xxx_hidden_AllowProxyAccess = v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 8, 13)
}

func (x *Network_Subnet) SetAllowDnsResolution(v bool) {
	x.xxx_hidden_AllowDnsResolution = v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 9, 13)
}

func (x *Network_Subnet) SetIpAddresses(v []*Network_IPAddress) {
	x.xxx_hidden_IpAddresses = &v
}

func (x *Network_Subnet) SetIpRanges(v []*Network_IPRange) {
	x.xxx_hidden_IpRanges = &v
}

func (x *Network_Subnet) SetStatistics(v *Network_Statistics) {
	x.xxx_hidden_Statistics = v
}

func (x *Network_Subnet) HasId() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 0)
}

func (x *Network_Subnet) HasName() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 1)
}

func (x *Network_Subnet) HasCidr() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 2)
}

func (x *Network_Subnet) HasGatewayIp() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 3)
}

func (x *Network_Subnet) HasDescription() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 5)
}

func (x *Network_Subnet) HasManagedAllocation() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 6)
}

func (x *Network_Subnet) HasActiveDiscovery() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 7)
}

func (x *Network_Subnet) HasAllowProxyAccess() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 8)
}

func (x *Network_Subnet) HasAllowDnsResolution() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 9)
}

func (x *Network_Subnet) HasStatistics() bool {
	if x == nil {
		return false
	}
	return x.xxx_hidden_Statistics != nil
}

func (x *Network_Subnet) ClearId() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 0)
	x.xxx_hidden_Id = 0
}

func (x *Network_Subnet) ClearName() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 1)
	x.xxx_hidden_Name = nil
}

func (x *Network_Subnet) ClearCidr() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 2)
	x.xxx_hidden_Cidr = nil
}

func (x *Network_Subnet) ClearGatewayIp() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 3)
	x.xxx_hidden_GatewayIp = nil
}

func (x *Network_Subnet) ClearDescription() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 5)
	x.xxx_hidden_Description = nil
}

func (x *Network_Subnet) ClearManagedAllocation() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 6)
	x.xxx_hidden_ManagedAllocation = false
}

func (x *Network_Subnet) ClearActiveDiscovery() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 7)
	x.xxx_hidden_ActiveDiscovery = false
}

func (x *Network_Subnet) ClearAllowProxyAccess() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 8)
	x.xxx_hidden_AllowProxyAccess = false
}

func (x *Network_Subnet) ClearAllowDnsResolution() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 9)
	x.xxx_hidden_AllowDnsResolution = false
}

func (x *Network_Subnet) ClearStatistics() {
	x.xxx_hidden_Statistics = nil
}

type Network_Subnet_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	Id                 *int64
	Name               *string
	Cidr               *string
	GatewayIp          *string
	DnsServers         []string
	Description        *string
	ManagedAllocation  *bool
	ActiveDiscovery    *bool
	AllowProxyAccess   *bool
	AllowDnsResolution *bool
	IpAddresses        []*Network_IPAddress
	IpRanges           []*Network_IPRange
	Statistics         *Network_Statistics
}

func (b0 Network_Subnet_builder) Build() *Network_Subnet {
	m0 := &Network_Subnet{}
	b, x := &b0, m0
	_, _ = b, x
	if b.Id != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 0, 13)
		x.xxx_hidden_Id = *b.Id
	}
	if b.Name != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 1, 13)
		x.xxx_hidden_Name = b.Name
	}
	if b.Cidr != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 2, 13)
		x.xxx_hidden_Cidr = b.Cidr
	}
	if b.GatewayIp != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 3, 13)
		x.xxx_hidden_GatewayIp = b.GatewayIp
	}
	x.xxx_hidden_DnsServers = b.DnsServers
	if b.Description != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 5, 13)
		x.xxx_hidden_Description = b.Description
	}
	if b.ManagedAllocation != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 6, 13)
		x.xxx_hidden_ManagedAllocation = *b.ManagedAllocation
	}
	if b.ActiveDiscovery != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 7, 13)
		x.xxx_hidden_ActiveDiscovery = *b.ActiveDiscovery
	}
	if b.AllowProxyAccess != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 8, 13)
		x.xxx_hidden_AllowProxyAccess = *b.AllowProxyAccess
	}
	if b.AllowDnsResolution != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 9, 13)
		x.xxx_hidden_AllowDnsResolution = *b.AllowDnsResolution
	}
	x.xxx_hidden_IpAddresses = &b.IpAddresses
	x.xxx_hidden_IpRanges = &b.IpRanges
	x.xxx_hidden_Statistics = b.Statistics
	return m0
}

var File_api_network_v1_network_proto protoreflect.FileDescriptor

const file_api_network_v1_network_proto_rawDesc = "" +
	"\n" +
	"\x1capi/network/v1/network.proto\x12\x15otterscale.network.v1\x1a\x1bgoogle/protobuf/empty.proto\"\xe4\n" +
	"\n" +
	"\aNetwork\x12=\n" +
	"\x06fabric\x18\x01 \x01(\v2%.otterscale.network.v1.Network.FabricR\x06fabric\x127\n" +
	"\x04vlan\x18\x02 \x01(\v2#.otterscale.network.v1.Network.VLANR\x04vlan\x12=\n" +
	"\x06subnet\x18\x03 \x01(\v2%.otterscale.network.v1.Network.SubnetR\x06subnet\x1a\x9b\x01\n" +
	"\tIPAddress\x12\x12\n" +
	"\x04type\x18\x01 \x01(\tR\x04type\x12\x0e\n" +
	"\x02ip\x18\x02 \x01(\tR\x02ip\x12\x12\n" +
	"\x04user\x18\x03 \x01(\tR\x04user\x12\x1d\n" +
	"\n" +
	"machine_id\x18\v \x01(\tR\tmachineId\x12\x1b\n" +
	"\tnode_type\x18\f \x01(\tR\bnodeType\x12\x1a\n" +
	"\bhostname\x18\r \x01(\tR\bhostname\x1ay\n" +
	"\aIPRange\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\x03R\x02id\x12\x12\n" +
	"\x04type\x18\x02 \x01(\tR\x04type\x12\x19\n" +
	"\bstart_ip\x18\x03 \x01(\tR\astartIp\x12\x15\n" +
	"\x06end_ip\x18\x04 \x01(\tR\x05endIp\x12\x18\n" +
	"\acomment\x18\x05 \x01(\tR\acomment\x1a\x92\x01\n" +
	"\n" +
	"Statistics\x12\x1c\n" +
	"\tavailable\x18\x01 \x01(\x03R\tavailable\x12\x14\n" +
	"\x05total\x18\x02 \x01(\x03R\x05total\x12#\n" +
	"\rusage_percent\x18\x03 \x01(\tR\fusagePercent\x12+\n" +
	"\x11available_percent\x18\x04 \x01(\tR\x10availablePercent\x1a,\n" +
	"\x06Fabric\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\x03R\x02id\x12\x12\n" +
	"\x04name\x18\x02 \x01(\tR\x04name\x1a\x89\x01\n" +
	"\x04VLAN\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\x03R\x02id\x12\x10\n" +
	"\x03vid\x18\x02 \x01(\x03R\x03vid\x12\x12\n" +
	"\x04name\x18\x03 \x01(\tR\x04name\x12\x10\n" +
	"\x03mtu\x18\x04 \x01(\x03R\x03mtu\x12 \n" +
	"\vdescription\x18\x05 \x01(\tR\vdescription\x12\x17\n" +
	"\adhcp_on\x18\x06 \x01(\bR\x06dhcpOn\x1a\xb9\x04\n" +
	"\x06Subnet\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\x03R\x02id\x12\x12\n" +
	"\x04name\x18\x02 \x01(\tR\x04name\x12\x12\n" +
	"\x04cidr\x18\x03 \x01(\tR\x04cidr\x12\x1d\n" +
	"\n" +
	"gateway_ip\x18\x04 \x01(\tR\tgatewayIp\x12\x1f\n" +
	"\vdns_servers\x18\x05 \x03(\tR\n" +
	"dnsServers\x12 \n" +
	"\vdescription\x18\x06 \x01(\tR\vdescription\x12-\n" +
	"\x12managed_allocation\x18\a \x01(\bR\x11managedAllocation\x12)\n" +
	"\x10active_discovery\x18\b \x01(\bR\x0factiveDiscovery\x12,\n" +
	"\x12allow_proxy_access\x18\t \x01(\bR\x10allowProxyAccess\x120\n" +
	"\x14allow_dns_resolution\x18\n" +
	" \x01(\bR\x12allowDnsResolution\x12K\n" +
	"\fip_addresses\x18\v \x03(\v2(.otterscale.network.v1.Network.IPAddressR\vipAddresses\x12C\n" +
	"\tip_ranges\x18\f \x03(\v2&.otterscale.network.v1.Network.IPRangeR\bipRanges\x12I\n" +
	"\n" +
	"statistics\x18\r \x01(\v2).otterscale.network.v1.Network.StatisticsR\n" +
	"statistics\"\x15\n" +
	"\x13ListNetworksRequest\"R\n" +
	"\x14ListNetworksResponse\x12:\n" +
	"\bnetworks\x18\x01 \x03(\v2\x1e.otterscale.network.v1.NetworkR\bnetworks\"\x83\x01\n" +
	"\x14CreateNetworkRequest\x12\x12\n" +
	"\x04cidr\x18\x01 \x01(\tR\x04cidr\x12\x1d\n" +
	"\n" +
	"gateway_ip\x18\x02 \x01(\tR\tgatewayIp\x12\x1f\n" +
	"\vdns_servers\x18\x03 \x03(\tR\n" +
	"dnsServers\x12\x17\n" +
	"\adhcp_on\x18\v \x01(\bR\x06dhcpOn\"\x7f\n" +
	"\x14CreateIPRangeRequest\x12\x1b\n" +
	"\tsubnet_id\x18\x01 \x01(\x03R\bsubnetId\x12\x19\n" +
	"\bstart_ip\x18\v \x01(\tR\astartIp\x12\x15\n" +
	"\x06end_ip\x18\f \x01(\tR\x05endIp\x12\x18\n" +
	"\acomment\x18\r \x01(\tR\acomment\"&\n" +
	"\x14DeleteNetworkRequest\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\x03R\x02id\"&\n" +
	"\x14DeleteIPRangeRequest\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\x03R\x02id\"9\n" +
	"\x13UpdateFabricRequest\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\x03R\x02id\x12\x12\n" +
	"\x04name\x18\v \x01(\tR\x04name\"\xa3\x01\n" +
	"\x11UpdateVLANRequest\x12\x1b\n" +
	"\tfabric_id\x18\x01 \x01(\x03R\bfabricId\x12\x10\n" +
	"\x03vid\x18\x02 \x01(\x03R\x03vid\x12\x12\n" +
	"\x04name\x18\v \x01(\tR\x04name\x12\x10\n" +
	"\x03mtu\x18\f \x01(\x03R\x03mtu\x12 \n" +
	"\vdescription\x18\r \x01(\tR\vdescription\x12\x17\n" +
	"\adhcp_on\x18\x0e \x01(\bR\x06dhcpOn\"\xe1\x01\n" +
	"\x13UpdateSubnetRequest\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\x03R\x02id\x12\x12\n" +
	"\x04name\x18\v \x01(\tR\x04name\x12\x12\n" +
	"\x04cidr\x18\f \x01(\tR\x04cidr\x12\x1d\n" +
	"\n" +
	"gateway_ip\x18\r \x01(\tR\tgatewayIp\x12\x1f\n" +
	"\vdns_servers\x18\x0e \x03(\tR\n" +
	"dnsServers\x12 \n" +
	"\vdescription\x18\x0f \x01(\tR\vdescription\x120\n" +
	"\x14allow_dns_resolution\x18\x10 \x01(\bR\x12allowDnsResolution\"r\n" +
	"\x14UpdateIPRangeRequest\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\x03R\x02id\x12\x19\n" +
	"\bstart_ip\x18\v \x01(\tR\astartIp\x12\x15\n" +
	"\x06end_ip\x18\f \x01(\tR\x05endIp\x12\x18\n" +
	"\acomment\x18\r \x01(\tR\acomment2\xf2\x06\n" +
	"\x0eNetworkService\x12g\n" +
	"\fListNetworks\x12*.otterscale.network.v1.ListNetworksRequest\x1a+.otterscale.network.v1.ListNetworksResponse\x12\\\n" +
	"\rCreateNetwork\x12+.otterscale.network.v1.CreateNetworkRequest\x1a\x1e.otterscale.network.v1.Network\x12d\n" +
	"\rCreateIPRange\x12+.otterscale.network.v1.CreateIPRangeRequest\x1a&.otterscale.network.v1.Network.IPRange\x12T\n" +
	"\rDeleteNetwork\x12+.otterscale.network.v1.DeleteNetworkRequest\x1a\x16.google.protobuf.Empty\x12T\n" +
	"\rDeleteIPRange\x12+.otterscale.network.v1.DeleteIPRangeRequest\x1a\x16.google.protobuf.Empty\x12a\n" +
	"\fUpdateFabric\x12*.otterscale.network.v1.UpdateFabricRequest\x1a%.otterscale.network.v1.Network.Fabric\x12[\n" +
	"\n" +
	"UpdateVLAN\x12(.otterscale.network.v1.UpdateVLANRequest\x1a#.otterscale.network.v1.Network.VLAN\x12a\n" +
	"\fUpdateSubnet\x12*.otterscale.network.v1.UpdateSubnetRequest\x1a%.otterscale.network.v1.Network.Subnet\x12d\n" +
	"\rUpdateIPRange\x12+.otterscale.network.v1.UpdateIPRangeRequest\x1a&.otterscale.network.v1.Network.IPRangeB1Z/github.com/openhdc/otterscale/api/network/v1;pbb\beditionsp\xe8\a"

var file_api_network_v1_network_proto_msgTypes = make([]protoimpl.MessageInfo, 17)
var file_api_network_v1_network_proto_goTypes = []any{
	(*Network)(nil),              // 0: otterscale.network.v1.Network
	(*ListNetworksRequest)(nil),  // 1: otterscale.network.v1.ListNetworksRequest
	(*ListNetworksResponse)(nil), // 2: otterscale.network.v1.ListNetworksResponse
	(*CreateNetworkRequest)(nil), // 3: otterscale.network.v1.CreateNetworkRequest
	(*CreateIPRangeRequest)(nil), // 4: otterscale.network.v1.CreateIPRangeRequest
	(*DeleteNetworkRequest)(nil), // 5: otterscale.network.v1.DeleteNetworkRequest
	(*DeleteIPRangeRequest)(nil), // 6: otterscale.network.v1.DeleteIPRangeRequest
	(*UpdateFabricRequest)(nil),  // 7: otterscale.network.v1.UpdateFabricRequest
	(*UpdateVLANRequest)(nil),    // 8: otterscale.network.v1.UpdateVLANRequest
	(*UpdateSubnetRequest)(nil),  // 9: otterscale.network.v1.UpdateSubnetRequest
	(*UpdateIPRangeRequest)(nil), // 10: otterscale.network.v1.UpdateIPRangeRequest
	(*Network_IPAddress)(nil),    // 11: otterscale.network.v1.Network.IPAddress
	(*Network_IPRange)(nil),      // 12: otterscale.network.v1.Network.IPRange
	(*Network_Statistics)(nil),   // 13: otterscale.network.v1.Network.Statistics
	(*Network_Fabric)(nil),       // 14: otterscale.network.v1.Network.Fabric
	(*Network_VLAN)(nil),         // 15: otterscale.network.v1.Network.VLAN
	(*Network_Subnet)(nil),       // 16: otterscale.network.v1.Network.Subnet
	(*emptypb.Empty)(nil),        // 17: google.protobuf.Empty
}
var file_api_network_v1_network_proto_depIdxs = []int32{
	14, // 0: otterscale.network.v1.Network.fabric:type_name -> otterscale.network.v1.Network.Fabric
	15, // 1: otterscale.network.v1.Network.vlan:type_name -> otterscale.network.v1.Network.VLAN
	16, // 2: otterscale.network.v1.Network.subnet:type_name -> otterscale.network.v1.Network.Subnet
	0,  // 3: otterscale.network.v1.ListNetworksResponse.networks:type_name -> otterscale.network.v1.Network
	11, // 4: otterscale.network.v1.Network.Subnet.ip_addresses:type_name -> otterscale.network.v1.Network.IPAddress
	12, // 5: otterscale.network.v1.Network.Subnet.ip_ranges:type_name -> otterscale.network.v1.Network.IPRange
	13, // 6: otterscale.network.v1.Network.Subnet.statistics:type_name -> otterscale.network.v1.Network.Statistics
	1,  // 7: otterscale.network.v1.NetworkService.ListNetworks:input_type -> otterscale.network.v1.ListNetworksRequest
	3,  // 8: otterscale.network.v1.NetworkService.CreateNetwork:input_type -> otterscale.network.v1.CreateNetworkRequest
	4,  // 9: otterscale.network.v1.NetworkService.CreateIPRange:input_type -> otterscale.network.v1.CreateIPRangeRequest
	5,  // 10: otterscale.network.v1.NetworkService.DeleteNetwork:input_type -> otterscale.network.v1.DeleteNetworkRequest
	6,  // 11: otterscale.network.v1.NetworkService.DeleteIPRange:input_type -> otterscale.network.v1.DeleteIPRangeRequest
	7,  // 12: otterscale.network.v1.NetworkService.UpdateFabric:input_type -> otterscale.network.v1.UpdateFabricRequest
	8,  // 13: otterscale.network.v1.NetworkService.UpdateVLAN:input_type -> otterscale.network.v1.UpdateVLANRequest
	9,  // 14: otterscale.network.v1.NetworkService.UpdateSubnet:input_type -> otterscale.network.v1.UpdateSubnetRequest
	10, // 15: otterscale.network.v1.NetworkService.UpdateIPRange:input_type -> otterscale.network.v1.UpdateIPRangeRequest
	2,  // 16: otterscale.network.v1.NetworkService.ListNetworks:output_type -> otterscale.network.v1.ListNetworksResponse
	0,  // 17: otterscale.network.v1.NetworkService.CreateNetwork:output_type -> otterscale.network.v1.Network
	12, // 18: otterscale.network.v1.NetworkService.CreateIPRange:output_type -> otterscale.network.v1.Network.IPRange
	17, // 19: otterscale.network.v1.NetworkService.DeleteNetwork:output_type -> google.protobuf.Empty
	17, // 20: otterscale.network.v1.NetworkService.DeleteIPRange:output_type -> google.protobuf.Empty
	14, // 21: otterscale.network.v1.NetworkService.UpdateFabric:output_type -> otterscale.network.v1.Network.Fabric
	15, // 22: otterscale.network.v1.NetworkService.UpdateVLAN:output_type -> otterscale.network.v1.Network.VLAN
	16, // 23: otterscale.network.v1.NetworkService.UpdateSubnet:output_type -> otterscale.network.v1.Network.Subnet
	12, // 24: otterscale.network.v1.NetworkService.UpdateIPRange:output_type -> otterscale.network.v1.Network.IPRange
	16, // [16:25] is the sub-list for method output_type
	7,  // [7:16] is the sub-list for method input_type
	7,  // [7:7] is the sub-list for extension type_name
	7,  // [7:7] is the sub-list for extension extendee
	0,  // [0:7] is the sub-list for field type_name
}

func init() { file_api_network_v1_network_proto_init() }
func file_api_network_v1_network_proto_init() {
	if File_api_network_v1_network_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_api_network_v1_network_proto_rawDesc), len(file_api_network_v1_network_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   17,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_api_network_v1_network_proto_goTypes,
		DependencyIndexes: file_api_network_v1_network_proto_depIdxs,
		MessageInfos:      file_api_network_v1_network_proto_msgTypes,
	}.Build()
	File_api_network_v1_network_proto = out.File
	file_api_network_v1_network_proto_goTypes = nil
	file_api_network_v1_network_proto_depIdxs = nil
}
