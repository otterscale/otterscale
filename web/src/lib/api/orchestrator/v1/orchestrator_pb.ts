// @generated by protoc-gen-es v2.9.0 with parameter "target=ts"
// @generated from file api/orchestrator/v1/orchestrator.proto (package otterscale.orchestrator.v1, edition 2023)
/* eslint-disable */

import type { GenEnum, GenFile, GenMessage, GenService } from "@bufbuild/protobuf/codegenv2";
import { enumDesc, fileDesc, messageDesc, serviceDesc } from "@bufbuild/protobuf/codegenv2";
import { file_api_annotations } from "../../annotations_pb";
import type { EmptySchema, Timestamp } from "@bufbuild/protobuf/wkt";
import { file_google_protobuf_empty, file_google_protobuf_timestamp } from "@bufbuild/protobuf/wkt";
import type { Message } from "@bufbuild/protobuf";

/**
 * Describes the file api/orchestrator/v1/orchestrator.proto.
 */
export const file_api_orchestrator_v1_orchestrator: GenFile = /*@__PURE__*/
  fileDesc("CiZhcGkvb3JjaGVzdHJhdG9yL3YxL29yY2hlc3RyYXRvci5wcm90bxIab3R0ZXJzY2FsZS5vcmNoZXN0cmF0b3IudjEi9QEKCUVzc2VudGlhbBI4CgR0eXBlGAEgASgOMioub3R0ZXJzY2FsZS5vcmNoZXN0cmF0b3IudjEuRXNzZW50aWFsLlR5cGUSDAoEbmFtZRgCIAEoCRINCgVzY29wZRgLIAEoCRI5CgV1bml0cxgVIAMoCzIqLm90dGVyc2NhbGUub3JjaGVzdHJhdG9yLnYxLkVzc2VudGlhbC5Vbml0GicKBFVuaXQSDAoEbmFtZRgBIAEoCRIRCglkaXJlY3RpdmUYAiABKAkiLQoEVHlwZRILCgdVTktOT1dOEAASDgoKS1VCRVJORVRFUxABEggKBENFUEgQAiJgChVMaXN0RXNzZW50aWFsc1JlcXVlc3QSOAoEdHlwZRgBIAEoDjIqLm90dGVyc2NhbGUub3JjaGVzdHJhdG9yLnYxLkVzc2VudGlhbC5UeXBlEg0KBXNjb3BlGAIgASgJIlMKFkxpc3RFc3NlbnRpYWxzUmVzcG9uc2USOQoKZXNzZW50aWFscxgBIAMoCzIlLm90dGVyc2NhbGUub3JjaGVzdHJhdG9yLnYxLkVzc2VudGlhbCKKAQoRQ3JlYXRlTm9kZVJlcXVlc3QSDQoFc2NvcGUYASABKAkSEgoKbWFjaGluZV9pZBgCIAEoCRITCgtwcmVmaXhfbmFtZRgDIAEoCRITCgt2aXJ0dWFsX2lwcxgLIAMoCRITCgtjYWxpY29fY2lkchgMIAEoCRITCgtvc2RfZGV2aWNlcxgVIAMoCSKNAQoUQ3JlYXRlQ2x1c3RlclJlcXVlc3QSDQoFc2NvcGUYASABKAkSEgoKbWFjaGluZV9pZBgCIAEoCRITCgtwcmVmaXhfbmFtZRgDIAEoCRITCgt2aXJ0dWFsX2lwcxgLIAMoCRITCgtjYWxpY29fY2lkchgMIAEoCRITCgtvc2RfZGV2aWNlcxgVIAMoCSKjAQoWQWRkQ2x1c3RlclVuaXRzUmVxdWVzdBI4CgR0eXBlGAEgASgOMioub3R0ZXJzY2FsZS5vcmNoZXN0cmF0b3IudjEuRXNzZW50aWFsLlR5cGUSDQoFc2NvcGUYAiABKAkSDAoEbmFtZRgDIAEoCRIOCgZudW1iZXIYBCABKAUSEwoLbWFjaGluZV9pZHMYBSADKAkSDQoFZm9yY2UYCyABKAgiYQofTGlzdEt1YmVybmV0ZXNOb2RlTGFiZWxzUmVxdWVzdBINCgVzY29wZRgBIAEoCRIQCghmYWNpbGl0eRgCIAEoCRIQCghob3N0bmFtZRgDIAEoCRILCgNhbGwYCyABKAgiqwEKIExpc3RLdWJlcm5ldGVzTm9kZUxhYmVsc1Jlc3BvbnNlElgKBmxhYmVscxgBIAMoCzJILm90dGVyc2NhbGUub3JjaGVzdHJhdG9yLnYxLkxpc3RLdWJlcm5ldGVzTm9kZUxhYmVsc1Jlc3BvbnNlLkxhYmVsc0VudHJ5Gi0KC0xhYmVsc0VudHJ5EgsKA2tleRgBIAEoCRINCgV2YWx1ZRgCIAEoCToCOAEi4AEKIVVwZGF0ZUt1YmVybmV0ZXNOb2RlTGFiZWxzUmVxdWVzdBINCgVzY29wZRgBIAEoCRIQCghmYWNpbGl0eRgCIAEoCRIQCghob3N0bmFtZRgDIAEoCRJZCgZsYWJlbHMYBCADKAsySS5vdHRlcnNjYWxlLm9yY2hlc3RyYXRvci52MS5VcGRhdGVLdWJlcm5ldGVzTm9kZUxhYmVsc1JlcXVlc3QuTGFiZWxzRW50cnkaLQoLTGFiZWxzRW50cnkSCwoDa2V5GAEgASgJEg0KBXZhbHVlGAIgASgJOgI4ASKvAQoiVXBkYXRlS3ViZXJuZXRlc05vZGVMYWJlbHNSZXNwb25zZRJaCgZsYWJlbHMYASADKAsySi5vdHRlcnNjYWxlLm9yY2hlc3RyYXRvci52MS5VcGRhdGVLdWJlcm5ldGVzTm9kZUxhYmVsc1Jlc3BvbnNlLkxhYmVsc0VudHJ5Gi0KC0xhYmVsc0VudHJ5EgsKA2tleRgBIAEoCRINCgV2YWx1ZRgCIAEoCToCOAEilQUKC0dQVVJlbGF0aW9uEjoKA3BvZBgBIAEoCzIrLm90dGVyc2NhbGUub3JjaGVzdHJhdG9yLnYxLkdQVVJlbGF0aW9uLlBvZEgAEjoKA2dwdRgCIAEoCzIrLm90dGVyc2NhbGUub3JjaGVzdHJhdG9yLnYxLkdQVVJlbGF0aW9uLkdQVUgAEkIKB21hY2hpbmUYAyABKAsyLy5vdHRlcnNjYWxlLm9yY2hlc3RyYXRvci52MS5HUFVSZWxhdGlvbi5NYWNoaW5lSAAajQIKA1BvZBIMCgRuYW1lGAEgASgJEhEKCW5hbWVzcGFjZRgCIAEoCRISCgptb2RlbF9uYW1lGAMgASgJEhUKDWJpbmRpbmdfcGhhc2UYCyABKAkSLAoIYm91bmRfYXQYDCABKAsyGi5nb29nbGUucHJvdG9idWYuVGltZXN0YW1wEkMKB2RldmljZXMYFSADKAsyMi5vdHRlcnNjYWxlLm9yY2hlc3RyYXRvci52MS5HUFVSZWxhdGlvbi5Qb2QuRGV2aWNlGkcKBkRldmljZRIOCgZncHVfaWQYASABKAkSEgoKdXNlZF9jb3JlcxgCIAEoBRIZChF1c2VkX21lbW9yeV9ieXRlcxgDIAEoAxqGAQoDR1BVEgoKAmlkGAEgASgJEg0KBWluZGV4GAIgASgNEg0KBWNvdW50GAMgASgFEg0KBWNvcmVzGAQgASgFEhQKDG1lbW9yeV9ieXRlcxgFIAEoAxIMCgR0eXBlGAYgASgJEg4KBmhlYWx0aBgHIAEoCBISCgptYWNoaW5lX2lkGGUgASgJGicKB01hY2hpbmUSCgoCaWQYASABKAkSEAoIaG9zdG5hbWUYAiABKAlCCAoGZW50aXR5IlcKIExpc3RHUFVSZWxhdGlvbnNCeU1hY2hpbmVSZXF1ZXN0Eg0KBXNjb3BlGAEgASgJEhAKCGZhY2lsaXR5GAIgASgJEhIKCm1hY2hpbmVfaWQYAyABKAkiYwohTGlzdEdQVVJlbGF0aW9uc0J5TWFjaGluZVJlc3BvbnNlEj4KDWdwdV9yZWxhdGlvbnMYASADKAsyJy5vdHRlcnNjYWxlLm9yY2hlc3RyYXRvci52MS5HUFVSZWxhdGlvbiJoCh5MaXN0R1BVUmVsYXRpb25zQnlNb2RlbFJlcXVlc3QSDQoFc2NvcGUYASABKAkSEAoIZmFjaWxpdHkYAiABKAkSEQoJbmFtZXNwYWNlGAMgASgJEhIKCm1vZGVsX25hbWUYBCABKAkiYQofTGlzdEdQVVJlbGF0aW9uc0J5TW9kZWxSZXNwb25zZRI+Cg1ncHVfcmVsYXRpb25zGAEgAygLMicub3R0ZXJzY2FsZS5vcmNoZXN0cmF0b3IudjEuR1BVUmVsYXRpb24ihAMKBlBsdWdpbhIMCgRuYW1lGAEgASgJEhEKCW5hbWVzcGFjZRgCIAEoCRIOCgZzdGF0dXMYAyABKAkSEwoLZGVzY3JpcHRpb24YBCABKAkSNQoRZmlyc3RfZGVwbG95ZWRfYXQYBSABKAsyGi5nb29nbGUucHJvdG9idWYuVGltZXN0YW1wEjQKEGxhc3RfZGVwbG95ZWRfYXQYBiABKAsyGi5nb29nbGUucHJvdG9idWYuVGltZXN0YW1wEi4KCmRlbGV0ZWRfYXQYByABKAsyGi5nb29nbGUucHJvdG9idWYuVGltZXN0YW1wEjcKBWNoYXJ0GAsgASgLMigub3R0ZXJzY2FsZS5vcmNoZXN0cmF0b3IudjEuUGx1Z2luLkNoYXJ0Gl4KBUNoYXJ0EgwKBG5hbWUYASABKAkSDwoHdmVyc2lvbhgCIAEoCRITCgthcHBfdmVyc2lvbhgDIAEoCRITCgtkZXNjcmlwdGlvbhgEIAEoCRIMCgRpY29uGAUgASgJIjUKEkxpc3RQbHVnaW5zUmVxdWVzdBINCgVzY29wZRgBIAEoCRIQCghmYWNpbGl0eRgCIAEoCSJKChNMaXN0UGx1Z2luc1Jlc3BvbnNlEjMKB3BsdWdpbnMYASADKAsyIi5vdHRlcnNjYWxlLm9yY2hlc3RyYXRvci52MS5QbHVnaW4yoQoKE09yY2hlc3RyYXRvclNlcnZpY2USjAEKDkxpc3RFc3NlbnRpYWxzEjEub3R0ZXJzY2FsZS5vcmNoZXN0cmF0b3IudjEuTGlzdEVzc2VudGlhbHNSZXF1ZXN0GjIub3R0ZXJzY2FsZS5vcmNoZXN0cmF0b3IudjEuTGlzdEVzc2VudGlhbHNSZXNwb25zZSITit/VHQ4KDG9yY2gtZ2VuZXJhbBJoCgpDcmVhdGVOb2RlEi0ub3R0ZXJzY2FsZS5vcmNoZXN0cmF0b3IudjEuQ3JlYXRlTm9kZVJlcXVlc3QaFi5nb29nbGUucHJvdG9idWYuRW1wdHkiE4rf1R0OCgxvcmNoLWdlbmVyYWwSbgoNQ3JlYXRlQ2x1c3RlchIwLm90dGVyc2NhbGUub3JjaGVzdHJhdG9yLnYxLkNyZWF0ZUNsdXN0ZXJSZXF1ZXN0GhYuZ29vZ2xlLnByb3RvYnVmLkVtcHR5IhOK39UdDgoMb3JjaC1nZW5lcmFsEnIKD0FkZENsdXN0ZXJVbml0cxIyLm90dGVyc2NhbGUub3JjaGVzdHJhdG9yLnYxLkFkZENsdXN0ZXJVbml0c1JlcXVlc3QaFi5nb29nbGUucHJvdG9idWYuRW1wdHkiE4rf1R0OCgxvcmNoLWdlbmVyYWwSpgEKGExpc3RLdWJlcm5ldGVzTm9kZUxhYmVscxI7Lm90dGVyc2NhbGUub3JjaGVzdHJhdG9yLnYxLkxpc3RLdWJlcm5ldGVzTm9kZUxhYmVsc1JlcXVlc3QaPC5vdHRlcnNjYWxlLm9yY2hlc3RyYXRvci52MS5MaXN0S3ViZXJuZXRlc05vZGVMYWJlbHNSZXNwb25zZSIPit/VHQoKCG9yY2gtZ3B1EqwBChpVcGRhdGVLdWJlcm5ldGVzTm9kZUxhYmVscxI9Lm90dGVyc2NhbGUub3JjaGVzdHJhdG9yLnYxLlVwZGF0ZUt1YmVybmV0ZXNOb2RlTGFiZWxzUmVxdWVzdBo+Lm90dGVyc2NhbGUub3JjaGVzdHJhdG9yLnYxLlVwZGF0ZUt1YmVybmV0ZXNOb2RlTGFiZWxzUmVzcG9uc2UiD4rf1R0KCghvcmNoLWdwdRKpAQoZTGlzdEdQVVJlbGF0aW9uc0J5TWFjaGluZRI8Lm90dGVyc2NhbGUub3JjaGVzdHJhdG9yLnYxLkxpc3RHUFVSZWxhdGlvbnNCeU1hY2hpbmVSZXF1ZXN0Gj0ub3R0ZXJzY2FsZS5vcmNoZXN0cmF0b3IudjEuTGlzdEdQVVJlbGF0aW9uc0J5TWFjaGluZVJlc3BvbnNlIg+K39UdCgoIb3JjaC1ncHUSowEKF0xpc3RHUFVSZWxhdGlvbnNCeU1vZGVsEjoub3R0ZXJzY2FsZS5vcmNoZXN0cmF0b3IudjEuTGlzdEdQVVJlbGF0aW9uc0J5TW9kZWxSZXF1ZXN0Gjsub3R0ZXJzY2FsZS5vcmNoZXN0cmF0b3IudjEuTGlzdEdQVVJlbGF0aW9uc0J5TW9kZWxSZXNwb25zZSIPit/VHQoKCG9yY2gtZ3B1EoIBCgtMaXN0UGx1Z2lucxIuLm90dGVyc2NhbGUub3JjaGVzdHJhdG9yLnYxLkxpc3RQbHVnaW5zUmVxdWVzdBovLm90dGVyc2NhbGUub3JjaGVzdHJhdG9yLnYxLkxpc3RQbHVnaW5zUmVzcG9uc2UiEorf1R0NCgtvcmNoLXBsdWdpbkI5WjdnaXRodWIuY29tL290dGVyc2NhbGUvb3R0ZXJzY2FsZS9hcGkvb3JjaGVzdHJhdG9yL3YxO3BiYghlZGl0aW9uc3DoBw", [file_api_annotations, file_google_protobuf_empty, file_google_protobuf_timestamp]);

/**
 * @generated from message otterscale.orchestrator.v1.Essential
 */
export type Essential = Message<"otterscale.orchestrator.v1.Essential"> & {
  /**
   * @generated from field: otterscale.orchestrator.v1.Essential.Type type = 1;
   */
  type: Essential_Type;

  /**
   * @generated from field: string name = 2;
   */
  name: string;

  /**
   * @generated from field: string scope = 11;
   */
  scope: string;

  /**
   * @generated from field: repeated otterscale.orchestrator.v1.Essential.Unit units = 21;
   */
  units: Essential_Unit[];
};

/**
 * Describes the message otterscale.orchestrator.v1.Essential.
 * Use `create(EssentialSchema)` to create a new message.
 */
export const EssentialSchema: GenMessage<Essential> = /*@__PURE__*/
  messageDesc(file_api_orchestrator_v1_orchestrator, 0);

/**
 * @generated from message otterscale.orchestrator.v1.Essential.Unit
 */
export type Essential_Unit = Message<"otterscale.orchestrator.v1.Essential.Unit"> & {
  /**
   * @generated from field: string name = 1;
   */
  name: string;

  /**
   * @generated from field: string directive = 2;
   */
  directive: string;
};

/**
 * Describes the message otterscale.orchestrator.v1.Essential.Unit.
 * Use `create(Essential_UnitSchema)` to create a new message.
 */
export const Essential_UnitSchema: GenMessage<Essential_Unit> = /*@__PURE__*/
  messageDesc(file_api_orchestrator_v1_orchestrator, 0, 0);

/**
 * @generated from enum otterscale.orchestrator.v1.Essential.Type
 */
export enum Essential_Type {
  /**
   * @generated from enum value: UNKNOWN = 0;
   */
  UNKNOWN = 0,

  /**
   * @generated from enum value: KUBERNETES = 1;
   */
  KUBERNETES = 1,

  /**
   * @generated from enum value: CEPH = 2;
   */
  CEPH = 2,
}

/**
 * Describes the enum otterscale.orchestrator.v1.Essential.Type.
 */
export const Essential_TypeSchema: GenEnum<Essential_Type> = /*@__PURE__*/
  enumDesc(file_api_orchestrator_v1_orchestrator, 0, 0);

/**
 * @generated from message otterscale.orchestrator.v1.ListEssentialsRequest
 */
export type ListEssentialsRequest = Message<"otterscale.orchestrator.v1.ListEssentialsRequest"> & {
  /**
   * @generated from field: otterscale.orchestrator.v1.Essential.Type type = 1;
   */
  type: Essential_Type;

  /**
   * @generated from field: string scope = 2;
   */
  scope: string;
};

/**
 * Describes the message otterscale.orchestrator.v1.ListEssentialsRequest.
 * Use `create(ListEssentialsRequestSchema)` to create a new message.
 */
export const ListEssentialsRequestSchema: GenMessage<ListEssentialsRequest> = /*@__PURE__*/
  messageDesc(file_api_orchestrator_v1_orchestrator, 1);

/**
 * @generated from message otterscale.orchestrator.v1.ListEssentialsResponse
 */
export type ListEssentialsResponse = Message<"otterscale.orchestrator.v1.ListEssentialsResponse"> & {
  /**
   * @generated from field: repeated otterscale.orchestrator.v1.Essential essentials = 1;
   */
  essentials: Essential[];
};

/**
 * Describes the message otterscale.orchestrator.v1.ListEssentialsResponse.
 * Use `create(ListEssentialsResponseSchema)` to create a new message.
 */
export const ListEssentialsResponseSchema: GenMessage<ListEssentialsResponse> = /*@__PURE__*/
  messageDesc(file_api_orchestrator_v1_orchestrator, 2);

/**
 * @generated from message otterscale.orchestrator.v1.CreateNodeRequest
 */
export type CreateNodeRequest = Message<"otterscale.orchestrator.v1.CreateNodeRequest"> & {
  /**
   * @generated from field: string scope = 1;
   */
  scope: string;

  /**
   * @generated from field: string machine_id = 2;
   */
  machineId: string;

  /**
   * @generated from field: string prefix_name = 3;
   */
  prefixName: string;

  /**
   * @generated from field: repeated string virtual_ips = 11;
   */
  virtualIps: string[];

  /**
   * @generated from field: string calico_cidr = 12;
   */
  calicoCidr: string;

  /**
   * @generated from field: repeated string osd_devices = 21;
   */
  osdDevices: string[];
};

/**
 * Describes the message otterscale.orchestrator.v1.CreateNodeRequest.
 * Use `create(CreateNodeRequestSchema)` to create a new message.
 */
export const CreateNodeRequestSchema: GenMessage<CreateNodeRequest> = /*@__PURE__*/
  messageDesc(file_api_orchestrator_v1_orchestrator, 3);

/**
 * @generated from message otterscale.orchestrator.v1.CreateClusterRequest
 */
export type CreateClusterRequest = Message<"otterscale.orchestrator.v1.CreateClusterRequest"> & {
  /**
   * @generated from field: string scope = 1;
   */
  scope: string;

  /**
   * @generated from field: string machine_id = 2;
   */
  machineId: string;

  /**
   * @generated from field: string prefix_name = 3;
   */
  prefixName: string;

  /**
   * @generated from field: repeated string virtual_ips = 11;
   */
  virtualIps: string[];

  /**
   * @generated from field: string calico_cidr = 12;
   */
  calicoCidr: string;

  /**
   * @generated from field: repeated string osd_devices = 21;
   */
  osdDevices: string[];
};

/**
 * Describes the message otterscale.orchestrator.v1.CreateClusterRequest.
 * Use `create(CreateClusterRequestSchema)` to create a new message.
 */
export const CreateClusterRequestSchema: GenMessage<CreateClusterRequest> = /*@__PURE__*/
  messageDesc(file_api_orchestrator_v1_orchestrator, 4);

/**
 * @generated from message otterscale.orchestrator.v1.AddClusterUnitsRequest
 */
export type AddClusterUnitsRequest = Message<"otterscale.orchestrator.v1.AddClusterUnitsRequest"> & {
  /**
   * @generated from field: otterscale.orchestrator.v1.Essential.Type type = 1;
   */
  type: Essential_Type;

  /**
   * @generated from field: string scope = 2;
   */
  scope: string;

  /**
   * @generated from field: string name = 3;
   */
  name: string;

  /**
   * @generated from field: int32 number = 4;
   */
  number: number;

  /**
   * @generated from field: repeated string machine_ids = 5;
   */
  machineIds: string[];

  /**
   * @generated from field: bool force = 11;
   */
  force: boolean;
};

/**
 * Describes the message otterscale.orchestrator.v1.AddClusterUnitsRequest.
 * Use `create(AddClusterUnitsRequestSchema)` to create a new message.
 */
export const AddClusterUnitsRequestSchema: GenMessage<AddClusterUnitsRequest> = /*@__PURE__*/
  messageDesc(file_api_orchestrator_v1_orchestrator, 5);

/**
 * @generated from message otterscale.orchestrator.v1.ListKubernetesNodeLabelsRequest
 */
export type ListKubernetesNodeLabelsRequest = Message<"otterscale.orchestrator.v1.ListKubernetesNodeLabelsRequest"> & {
  /**
   * @generated from field: string scope = 1;
   */
  scope: string;

  /**
   * @generated from field: string facility = 2;
   */
  facility: string;

  /**
   * @generated from field: string hostname = 3;
   */
  hostname: string;

  /**
   * @generated from field: bool all = 11;
   */
  all: boolean;
};

/**
 * Describes the message otterscale.orchestrator.v1.ListKubernetesNodeLabelsRequest.
 * Use `create(ListKubernetesNodeLabelsRequestSchema)` to create a new message.
 */
export const ListKubernetesNodeLabelsRequestSchema: GenMessage<ListKubernetesNodeLabelsRequest> = /*@__PURE__*/
  messageDesc(file_api_orchestrator_v1_orchestrator, 6);

/**
 * @generated from message otterscale.orchestrator.v1.ListKubernetesNodeLabelsResponse
 */
export type ListKubernetesNodeLabelsResponse = Message<"otterscale.orchestrator.v1.ListKubernetesNodeLabelsResponse"> & {
  /**
   * @generated from field: map<string, string> labels = 1;
   */
  labels: { [key: string]: string };
};

/**
 * Describes the message otterscale.orchestrator.v1.ListKubernetesNodeLabelsResponse.
 * Use `create(ListKubernetesNodeLabelsResponseSchema)` to create a new message.
 */
export const ListKubernetesNodeLabelsResponseSchema: GenMessage<ListKubernetesNodeLabelsResponse> = /*@__PURE__*/
  messageDesc(file_api_orchestrator_v1_orchestrator, 7);

/**
 * @generated from message otterscale.orchestrator.v1.UpdateKubernetesNodeLabelsRequest
 */
export type UpdateKubernetesNodeLabelsRequest = Message<"otterscale.orchestrator.v1.UpdateKubernetesNodeLabelsRequest"> & {
  /**
   * @generated from field: string scope = 1;
   */
  scope: string;

  /**
   * @generated from field: string facility = 2;
   */
  facility: string;

  /**
   * @generated from field: string hostname = 3;
   */
  hostname: string;

  /**
   * @generated from field: map<string, string> labels = 4;
   */
  labels: { [key: string]: string };
};

/**
 * Describes the message otterscale.orchestrator.v1.UpdateKubernetesNodeLabelsRequest.
 * Use `create(UpdateKubernetesNodeLabelsRequestSchema)` to create a new message.
 */
export const UpdateKubernetesNodeLabelsRequestSchema: GenMessage<UpdateKubernetesNodeLabelsRequest> = /*@__PURE__*/
  messageDesc(file_api_orchestrator_v1_orchestrator, 8);

/**
 * @generated from message otterscale.orchestrator.v1.UpdateKubernetesNodeLabelsResponse
 */
export type UpdateKubernetesNodeLabelsResponse = Message<"otterscale.orchestrator.v1.UpdateKubernetesNodeLabelsResponse"> & {
  /**
   * @generated from field: map<string, string> labels = 1;
   */
  labels: { [key: string]: string };
};

/**
 * Describes the message otterscale.orchestrator.v1.UpdateKubernetesNodeLabelsResponse.
 * Use `create(UpdateKubernetesNodeLabelsResponseSchema)` to create a new message.
 */
export const UpdateKubernetesNodeLabelsResponseSchema: GenMessage<UpdateKubernetesNodeLabelsResponse> = /*@__PURE__*/
  messageDesc(file_api_orchestrator_v1_orchestrator, 9);

/**
 * @generated from message otterscale.orchestrator.v1.GPURelation
 */
export type GPURelation = Message<"otterscale.orchestrator.v1.GPURelation"> & {
  /**
   * @generated from oneof otterscale.orchestrator.v1.GPURelation.entity
   */
  entity: {
    /**
     * @generated from field: otterscale.orchestrator.v1.GPURelation.Pod pod = 1;
     */
    value: GPURelation_Pod;
    case: "pod";
  } | {
    /**
     * @generated from field: otterscale.orchestrator.v1.GPURelation.GPU gpu = 2;
     */
    value: GPURelation_GPU;
    case: "gpu";
  } | {
    /**
     * @generated from field: otterscale.orchestrator.v1.GPURelation.Machine machine = 3;
     */
    value: GPURelation_Machine;
    case: "machine";
  } | { case: undefined; value?: undefined };
};

/**
 * Describes the message otterscale.orchestrator.v1.GPURelation.
 * Use `create(GPURelationSchema)` to create a new message.
 */
export const GPURelationSchema: GenMessage<GPURelation> = /*@__PURE__*/
  messageDesc(file_api_orchestrator_v1_orchestrator, 10);

/**
 * @generated from message otterscale.orchestrator.v1.GPURelation.Pod
 */
export type GPURelation_Pod = Message<"otterscale.orchestrator.v1.GPURelation.Pod"> & {
  /**
   * @generated from field: string name = 1;
   */
  name: string;

  /**
   * @generated from field: string namespace = 2;
   */
  namespace: string;

  /**
   * @generated from field: string model_name = 3;
   */
  modelName: string;

  /**
   * @generated from field: string binding_phase = 11;
   */
  bindingPhase: string;

  /**
   * @generated from field: google.protobuf.Timestamp bound_at = 12;
   */
  boundAt?: Timestamp;

  /**
   * @generated from field: repeated otterscale.orchestrator.v1.GPURelation.Pod.Device devices = 21;
   */
  devices: GPURelation_Pod_Device[];
};

/**
 * Describes the message otterscale.orchestrator.v1.GPURelation.Pod.
 * Use `create(GPURelation_PodSchema)` to create a new message.
 */
export const GPURelation_PodSchema: GenMessage<GPURelation_Pod> = /*@__PURE__*/
  messageDesc(file_api_orchestrator_v1_orchestrator, 10, 0);

/**
 * @generated from message otterscale.orchestrator.v1.GPURelation.Pod.Device
 */
export type GPURelation_Pod_Device = Message<"otterscale.orchestrator.v1.GPURelation.Pod.Device"> & {
  /**
   * @generated from field: string gpu_id = 1;
   */
  gpuId: string;

  /**
   * @generated from field: int32 used_cores = 2;
   */
  usedCores: number;

  /**
   * @generated from field: int64 used_memory_bytes = 3;
   */
  usedMemoryBytes: bigint;
};

/**
 * Describes the message otterscale.orchestrator.v1.GPURelation.Pod.Device.
 * Use `create(GPURelation_Pod_DeviceSchema)` to create a new message.
 */
export const GPURelation_Pod_DeviceSchema: GenMessage<GPURelation_Pod_Device> = /*@__PURE__*/
  messageDesc(file_api_orchestrator_v1_orchestrator, 10, 0, 0);

/**
 * @generated from message otterscale.orchestrator.v1.GPURelation.GPU
 */
export type GPURelation_GPU = Message<"otterscale.orchestrator.v1.GPURelation.GPU"> & {
  /**
   * @generated from field: string id = 1;
   */
  id: string;

  /**
   * @generated from field: uint32 index = 2;
   */
  index: number;

  /**
   * @generated from field: int32 count = 3;
   */
  count: number;

  /**
   * @generated from field: int32 cores = 4;
   */
  cores: number;

  /**
   * @generated from field: int64 memory_bytes = 5;
   */
  memoryBytes: bigint;

  /**
   * @generated from field: string type = 6;
   */
  type: string;

  /**
   * @generated from field: bool health = 7;
   */
  health: boolean;

  /**
   * @generated from field: string machine_id = 101;
   */
  machineId: string;
};

/**
 * Describes the message otterscale.orchestrator.v1.GPURelation.GPU.
 * Use `create(GPURelation_GPUSchema)` to create a new message.
 */
export const GPURelation_GPUSchema: GenMessage<GPURelation_GPU> = /*@__PURE__*/
  messageDesc(file_api_orchestrator_v1_orchestrator, 10, 1);

/**
 * @generated from message otterscale.orchestrator.v1.GPURelation.Machine
 */
export type GPURelation_Machine = Message<"otterscale.orchestrator.v1.GPURelation.Machine"> & {
  /**
   * @generated from field: string id = 1;
   */
  id: string;

  /**
   * @generated from field: string hostname = 2;
   */
  hostname: string;
};

/**
 * Describes the message otterscale.orchestrator.v1.GPURelation.Machine.
 * Use `create(GPURelation_MachineSchema)` to create a new message.
 */
export const GPURelation_MachineSchema: GenMessage<GPURelation_Machine> = /*@__PURE__*/
  messageDesc(file_api_orchestrator_v1_orchestrator, 10, 2);

/**
 * @generated from message otterscale.orchestrator.v1.ListGPURelationsByMachineRequest
 */
export type ListGPURelationsByMachineRequest = Message<"otterscale.orchestrator.v1.ListGPURelationsByMachineRequest"> & {
  /**
   * @generated from field: string scope = 1;
   */
  scope: string;

  /**
   * @generated from field: string facility = 2;
   */
  facility: string;

  /**
   * @generated from field: string machine_id = 3;
   */
  machineId: string;
};

/**
 * Describes the message otterscale.orchestrator.v1.ListGPURelationsByMachineRequest.
 * Use `create(ListGPURelationsByMachineRequestSchema)` to create a new message.
 */
export const ListGPURelationsByMachineRequestSchema: GenMessage<ListGPURelationsByMachineRequest> = /*@__PURE__*/
  messageDesc(file_api_orchestrator_v1_orchestrator, 11);

/**
 * @generated from message otterscale.orchestrator.v1.ListGPURelationsByMachineResponse
 */
export type ListGPURelationsByMachineResponse = Message<"otterscale.orchestrator.v1.ListGPURelationsByMachineResponse"> & {
  /**
   * @generated from field: repeated otterscale.orchestrator.v1.GPURelation gpu_relations = 1;
   */
  gpuRelations: GPURelation[];
};

/**
 * Describes the message otterscale.orchestrator.v1.ListGPURelationsByMachineResponse.
 * Use `create(ListGPURelationsByMachineResponseSchema)` to create a new message.
 */
export const ListGPURelationsByMachineResponseSchema: GenMessage<ListGPURelationsByMachineResponse> = /*@__PURE__*/
  messageDesc(file_api_orchestrator_v1_orchestrator, 12);

/**
 * @generated from message otterscale.orchestrator.v1.ListGPURelationsByModelRequest
 */
export type ListGPURelationsByModelRequest = Message<"otterscale.orchestrator.v1.ListGPURelationsByModelRequest"> & {
  /**
   * @generated from field: string scope = 1;
   */
  scope: string;

  /**
   * @generated from field: string facility = 2;
   */
  facility: string;

  /**
   * @generated from field: string namespace = 3;
   */
  namespace: string;

  /**
   * @generated from field: string model_name = 4;
   */
  modelName: string;
};

/**
 * Describes the message otterscale.orchestrator.v1.ListGPURelationsByModelRequest.
 * Use `create(ListGPURelationsByModelRequestSchema)` to create a new message.
 */
export const ListGPURelationsByModelRequestSchema: GenMessage<ListGPURelationsByModelRequest> = /*@__PURE__*/
  messageDesc(file_api_orchestrator_v1_orchestrator, 13);

/**
 * @generated from message otterscale.orchestrator.v1.ListGPURelationsByModelResponse
 */
export type ListGPURelationsByModelResponse = Message<"otterscale.orchestrator.v1.ListGPURelationsByModelResponse"> & {
  /**
   * @generated from field: repeated otterscale.orchestrator.v1.GPURelation gpu_relations = 1;
   */
  gpuRelations: GPURelation[];
};

/**
 * Describes the message otterscale.orchestrator.v1.ListGPURelationsByModelResponse.
 * Use `create(ListGPURelationsByModelResponseSchema)` to create a new message.
 */
export const ListGPURelationsByModelResponseSchema: GenMessage<ListGPURelationsByModelResponse> = /*@__PURE__*/
  messageDesc(file_api_orchestrator_v1_orchestrator, 14);

/**
 * @generated from message otterscale.orchestrator.v1.Plugin
 */
export type Plugin = Message<"otterscale.orchestrator.v1.Plugin"> & {
  /**
   * @generated from field: string name = 1;
   */
  name: string;

  /**
   * @generated from field: string namespace = 2;
   */
  namespace: string;

  /**
   * @generated from field: string status = 3;
   */
  status: string;

  /**
   * @generated from field: string description = 4;
   */
  description: string;

  /**
   * @generated from field: google.protobuf.Timestamp first_deployed_at = 5;
   */
  firstDeployedAt?: Timestamp;

  /**
   * @generated from field: google.protobuf.Timestamp last_deployed_at = 6;
   */
  lastDeployedAt?: Timestamp;

  /**
   * @generated from field: google.protobuf.Timestamp deleted_at = 7;
   */
  deletedAt?: Timestamp;

  /**
   * @generated from field: otterscale.orchestrator.v1.Plugin.Chart chart = 11;
   */
  chart?: Plugin_Chart;
};

/**
 * Describes the message otterscale.orchestrator.v1.Plugin.
 * Use `create(PluginSchema)` to create a new message.
 */
export const PluginSchema: GenMessage<Plugin> = /*@__PURE__*/
  messageDesc(file_api_orchestrator_v1_orchestrator, 15);

/**
 * @generated from message otterscale.orchestrator.v1.Plugin.Chart
 */
export type Plugin_Chart = Message<"otterscale.orchestrator.v1.Plugin.Chart"> & {
  /**
   * @generated from field: string name = 1;
   */
  name: string;

  /**
   * @generated from field: string version = 2;
   */
  version: string;

  /**
   * @generated from field: string app_version = 3;
   */
  appVersion: string;

  /**
   * @generated from field: string description = 4;
   */
  description: string;

  /**
   * @generated from field: string icon = 5;
   */
  icon: string;
};

/**
 * Describes the message otterscale.orchestrator.v1.Plugin.Chart.
 * Use `create(Plugin_ChartSchema)` to create a new message.
 */
export const Plugin_ChartSchema: GenMessage<Plugin_Chart> = /*@__PURE__*/
  messageDesc(file_api_orchestrator_v1_orchestrator, 15, 0);

/**
 * @generated from message otterscale.orchestrator.v1.ListPluginsRequest
 */
export type ListPluginsRequest = Message<"otterscale.orchestrator.v1.ListPluginsRequest"> & {
  /**
   * @generated from field: string scope = 1;
   */
  scope: string;

  /**
   * @generated from field: string facility = 2;
   */
  facility: string;
};

/**
 * Describes the message otterscale.orchestrator.v1.ListPluginsRequest.
 * Use `create(ListPluginsRequestSchema)` to create a new message.
 */
export const ListPluginsRequestSchema: GenMessage<ListPluginsRequest> = /*@__PURE__*/
  messageDesc(file_api_orchestrator_v1_orchestrator, 16);

/**
 * @generated from message otterscale.orchestrator.v1.ListPluginsResponse
 */
export type ListPluginsResponse = Message<"otterscale.orchestrator.v1.ListPluginsResponse"> & {
  /**
   * @generated from field: repeated otterscale.orchestrator.v1.Plugin plugins = 1;
   */
  plugins: Plugin[];
};

/**
 * Describes the message otterscale.orchestrator.v1.ListPluginsResponse.
 * Use `create(ListPluginsResponseSchema)` to create a new message.
 */
export const ListPluginsResponseSchema: GenMessage<ListPluginsResponse> = /*@__PURE__*/
  messageDesc(file_api_orchestrator_v1_orchestrator, 17);

/**
 * @generated from service otterscale.orchestrator.v1.OrchestratorService
 */
export const OrchestratorService: GenService<{
  /**
   * @generated from rpc otterscale.orchestrator.v1.OrchestratorService.ListEssentials
   */
  listEssentials: {
    methodKind: "unary";
    input: typeof ListEssentialsRequestSchema;
    output: typeof ListEssentialsResponseSchema;
  },
  /**
   * @generated from rpc otterscale.orchestrator.v1.OrchestratorService.CreateNode
   */
  createNode: {
    methodKind: "unary";
    input: typeof CreateNodeRequestSchema;
    output: typeof EmptySchema;
  },
  /**
   * @generated from rpc otterscale.orchestrator.v1.OrchestratorService.CreateCluster
   */
  createCluster: {
    methodKind: "unary";
    input: typeof CreateClusterRequestSchema;
    output: typeof EmptySchema;
  },
  /**
   * @generated from rpc otterscale.orchestrator.v1.OrchestratorService.AddClusterUnits
   */
  addClusterUnits: {
    methodKind: "unary";
    input: typeof AddClusterUnitsRequestSchema;
    output: typeof EmptySchema;
  },
  /**
   * @generated from rpc otterscale.orchestrator.v1.OrchestratorService.ListKubernetesNodeLabels
   */
  listKubernetesNodeLabels: {
    methodKind: "unary";
    input: typeof ListKubernetesNodeLabelsRequestSchema;
    output: typeof ListKubernetesNodeLabelsResponseSchema;
  },
  /**
   * @generated from rpc otterscale.orchestrator.v1.OrchestratorService.UpdateKubernetesNodeLabels
   */
  updateKubernetesNodeLabels: {
    methodKind: "unary";
    input: typeof UpdateKubernetesNodeLabelsRequestSchema;
    output: typeof UpdateKubernetesNodeLabelsResponseSchema;
  },
  /**
   * @generated from rpc otterscale.orchestrator.v1.OrchestratorService.ListGPURelationsByMachine
   */
  listGPURelationsByMachine: {
    methodKind: "unary";
    input: typeof ListGPURelationsByMachineRequestSchema;
    output: typeof ListGPURelationsByMachineResponseSchema;
  },
  /**
   * @generated from rpc otterscale.orchestrator.v1.OrchestratorService.ListGPURelationsByModel
   */
  listGPURelationsByModel: {
    methodKind: "unary";
    input: typeof ListGPURelationsByModelRequestSchema;
    output: typeof ListGPURelationsByModelResponseSchema;
  },
  /**
   * @generated from rpc otterscale.orchestrator.v1.OrchestratorService.ListPlugins
   */
  listPlugins: {
    methodKind: "unary";
    input: typeof ListPluginsRequestSchema;
    output: typeof ListPluginsResponseSchema;
  },
}> = /*@__PURE__*/
  serviceDesc(file_api_orchestrator_v1_orchestrator, 0);

